{"version":3,"sources":["../../src/utils/general.utils.js","../../src/utils/url.webreports.js","../../src/mixins/webreports.view.mixin.js","../../src/models/run.webreport.pre/run.webreport.pre.model.js","../../src/utils/contexts/factories/run.webreport.pre.factory.js","../../src/utils/commands/open.classic.webreport.js","../../src/models/run.webreport/run.webreport.model.js","../../src/utils/contexts/factories/run.webreport.factory.js","../../src/controls/run.webreport.pre/impl/nls/lang.js","../../src/controls/run.webreport.pre/impl/nls/root/lang.js","../../src/controls/run.webreport.pre/impl/nls/lang!i18n","../../src/utils/commands/execute.webreport.js","../../src/controls/run.webreport.pre/run.webreport.pre.controller.js","../../src/utils/contexts/factories/run.webreport.pre.controller.factory.js","../../src/controls/parameter.prompt/impl/parameter.prompt.footer!hbs","../../src/controls/parameter.prompt/impl/nls/parameter.prompt.lang.js","../../src/controls/parameter.prompt/impl/nls/root/parameter.prompt.lang.js","../../src/controls/parameter.prompt/impl/parameter.prompt!css","../../src/controls/parameter.prompt/impl/parameter.prompt.footer.view.js","../../src/controls/parameter.prompt/impl/parameter.prompt!hbs","../../src/controls/parameter.prompt/parameter.prompt.view.js","../../src/controls/parameter.prompt/impl/parameter.prompt.tile.view!hbs","../../src/controls/parameter.prompt/parameter.prompt.tile.view.js","../../src/controls/parameter.prompt/impl/widget.prompt.wrapper!hbs","../../src/controls/parameter.prompt/widget.prompt.wrapper.view.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/expanding.behavior.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count.button.view.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count!hbs","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count!css","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count.footer.view.js","../../src/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/client.collection/nls/lang.js","../../src/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/client.collection/nls/root/lang.js","../../src/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/client.collection/nls/lang!i18n","../../src/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/client.collection/chart.collection.client.mixin.js","../../src/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/filterable/nls/lang.js","../../src/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/filterable/nls/root/lang.js","../../src/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/filterable/nls/lang!i18n","../../src/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/filterable/filterable.mixin.js","../../src/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/postable/postable.mixin.js","../../src/widgets/visual.data.filtered.count/impl/models/visual.count/chart.collection/nls/lang.js","../../src/widgets/visual.data.filtered.count/impl/models/visual.count/chart.collection/nls/root/lang.js","../../src/widgets/visual.data.filtered.count/impl/models/visual.count/chart.collection/nls/lang!i18n","../../src/widgets/visual.data.filtered.count/impl/models/visual.count/chart.collection/chart.collection.js","../../src/widgets/visual.data.filtered.count/impl/models/visual.count/column.collection/column.model.js","../../src/widgets/visual.data.filtered.count/impl/models/visual.count/column.collection/column.collection.js","../../src/widgets/visual.data.filtered.count/impl/utils/contexts/factories/visual.count.collection.factory.js","../../src/widgets/visual.data.filtered.count/impl/models/visual.count/chart.controls/chart.controls.model.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/control.options.view.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/controls.select.view.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/controls.list.item!hbs","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/controls.list.item.view.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/controls.list.view.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/nls/lang.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/nls/root/lang.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/visual.count.controls!hbs","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/visual.count.controls!css","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/visual.count.controls.view.js","../../src/widgets/visual.data.filtered.count/impl/mixins/nls/lang.js","../../src/widgets/visual.data.filtered.count/impl/mixins/visual.count.view.mixin.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/nls/lang.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/nls/root/lang.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/nls/lang!i18n","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count/visual.count.view.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/nls/lang.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/nls/root/lang.js","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/visual.count.tile!hbs","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/visual.count.tile!css","../../src/style/webreports!css","../../src/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.tile.view.js","../../src/widgets/visual.data.filtered.count/impl/visual.count.content.view.js","../../src/widgets/visual.data.filtered.count/visual.data.filtered.count.view.js","../../src/widgets/visual.data.filtered.count/visual.data.filtered.count.manifest.json!json","../../src/widgets/visual.data.filtered.count/impl/nls/visual.data.filtered.count.manifest.js","../../src/widgets/visual.data.filtered.count/impl/nls/root/visual.data.filtered.count.manifest.js","../../src/widgets/visual.count.full.page/impl/visual.count.full.page!hbs","../../src/widgets/visual.count.full.page/impl/nls/lang.js","../../src/widgets/visual.count.full.page/impl/nls/root/lang.js","../../src/widgets/visual.count.full.page/impl/visual.count.full.page!css","../../src/widgets/visual.count.full.page/impl/visual.count.full.page.content.view.js","../../src/widgets/visual.count.full.page/visual.count.full.page.view.js","../../src/widgets/visual.count.full.page/visual.count.full.page.manifest.json!json","../../src/widgets/visual.count.full.page/impl/nls/visual.count.full.page.manifest.js","../../src/widgets/visual.count.full.page/impl/nls/root/visual.count.full.page.manifest.js","webreports-visdata.js"],"names":["csui","define","_","NodeModelFactory","extend","getCaseInsensitiveProperty","obj","name","find","keys","key","toLowerCase","getCurrentNode","context","getModel","isWebReportNodeContext","currentNode","this","get","Url","appendWebReportParameters","query","parameters","isUndefined","isArray","combineQueryString","_serializeWebReportParameters","appendCurrentContainer","csuiContainerID","getCurrentContainerID","appendSWRCellID","options","subWebReportCellID","data","swrLaunchCell","id","parseInt","isNaN","node","serializedParms","each","parmPair","value","undefined","length","getWebReportParametersAsData","parmsObject","isObject","getDataAsWebReportParameters","parmsArray","mapObject","val","push","$","mixin","prototype","setCommonModelOptions","modelOptions","setModelParameters","has","getWidgetFactory","WidgetFactory","factory","getFactory","attributes","_factory","setFactory","Backbone","base","FormModel","ConnectableMixin","FetchableMixin","RunWRPreModel","parametersModel","destinationModel","constructor","Model","apply","arguments","makeConnectable","makeFetchable","url","connector","params","resource","path","param","combine","connection","parse","response","parameters_data","destination_data","forms","ModelFactory","ConnectorFactory","propertyPrefix","getObject","property","CommandHelper","OpenClassicPageCommand","defaults","signature","scope","enabled","status","getJustOneNode","getUrlQueryParameters","baseParms","func","objAction","objId","nexturl","location","href","RunWebReportModel","parms","resp","set","clearParameters","RunWRModel","root","en-us","en","WebReportParameters","RunWebReport","Cancel","WebReportExecutedSuccessfully","WebReportExecutingInBackground","anErrorOccurredExecutingTheWebReport","okLabel","MissingNodeModelForThisAction","CommandModel","GlobalMessage","RunWRModelFactory","lang","convertParametersToFormData","list","parm","encodeURI","execute","executeWRModel","requestAttrs","crud_method","deferred","Deferred","http_method","lower_http_method","runInBackground","executeOptions","hasParameters","sync","success","serverAttrs","resolve","error","request","statusText","errorThrown","Error","showMessage","message","errorDetails","reject","promise","require","NodeCollection","CommandError","RunWRPreModelFactory","OpenClassicWebReport","ExecuteWebReportCommand","RunWebReportPreController","runWRPreModel","promptCheckPromise","_getCommandStatus","commandStatus","nodes","switchToPromptView","initialStatus","originatingView","self","selected","Marionette","PromptView","DialogView","NextNodeFactory","PreviousNodeFactory","NodeFactory","NodesTableWidget","promptView","previousNode","nextNode","thisNode","promptViewOptions","RunWRController","model","showCloseIcon","showBackIcon","clear","silent","_showOriginatingView","$wrPrompts","$originatingView","$el","width","parent","append","hide","render","triggerMethodOn","el","direction","complete","show","done","isDisplayed","triggerMethod","collection","requireSwitched","destroy","remove","listenTo","bind","dialog","className","largeSize","view","ui","header","_getAtLeastOneNode","checkForPromptParameters","showPrompts","suppressPromptView","_blockParentActions","getRunWRPreModel","_checkPrompts","fail","_unblockParentActions","_cleanupFactory","getPromptCheckPromise","getFormView","formView","WRRunModel","promptModel","FormView","mode","executeWR","executeWRCommand","executionMethod","outputDestination","_checkExecutionRoute","openInClassic","prompting","_showOutputPerspective","results","executeModel","statusScreenOptions","showStatusScreen","console","OpenClassic","openInNewTab","getRunWrPreFactory","fetch","jqxhr","jqXHR","textStatus","unique","additionalModelMap","primary","secondary","version","workflow","_getStatusScreenModels","outputData","WorkItemModelFactory","primaryID","secondaryID","primaryFactory","primaryNode","secondaryNode","secondaryFactory","promises","target","output_destination","destination_specific","eval","workflow_attach_output","process_id","subprocess_id","task_id","whenAll","then","dataPackages","attachmentsID","wfAttachmentsNode","attachment_folder_id","_renderStatusScreen","warn","dialogTitle","statusScreenDialog","statusScreenView","specifics","StatusScreen","title","buttons","label","close","click","_onCloseStatusScreen","dialogView","on","rib","toJSON","executionRoute","currentSchema","currentOptions","formSchema","formOptions","promptRoute","promptFileId","fullPageWidget","properties","hasOwnProperty","fields","hidden","type","origView","blockActions","tableView","unblockActions","ObjectFactory","RunWRPreController","module","hbs","Handlebars","t","template","1","container","depth0","helpers","partials","helper","lookupProperty","propertyName","Object","call","escapeExpression","hooks","helperMissing","nullContext","hash","loc","start","line","column","end","compiler","main","stack1","fn","program","inverse","noop","registerPartial","runReport","cancel","noFormFields","defaultPromptTitle","ariaLabel","View","templateContext","showCancelButton","submitPrompt","cancelPrompt","events","click @ui.submitPrompt","click @ui.cancelPrompt","parentView","getChildView","formValues","getValues","eventArgs","validate","trigger","PerfectScrollingBehavior","FooterView","wrapTemplate","regions","promptForm","replaceElement","footer","behaviors","PerfectScrolling","behaviorClass","contentParent","suppressScrollX","scrollYMarginOffset","onRender","errorWithForm","footerView","errorView","contentView","showChildView","3","4","TileView","ParameterPromptView","templateHelpers","originatingViewOptions","titleObj","iconClass","titleBarIcon","getClosestLocalizedString","icon","contentViewOptions","NodeModel","BlockingView","ViewEventsPropagationMixin","generalUtils","UrlWebreports","WebReportsViewMixin","RunWrPreControllerFactory","ParameterPromptTileView","WidgetPromptWrapperView","content","showParametersBtn","tileHeader","click @ui.showParametersBtn","keyup @ui.showParametersBtn","keydown .cs-go-back","click .cs-go-back","promptOptions","thisView","showPrompt","parameterPrompt","widgetView","_getPromptView","onPromptFormSubmitted","_showParameterPromptView","_showWidgetView","_fetchWidgetFactory","_showParameterBtn","onShowParameterPromptView","event","keyCode","stopPropagation","parameterPromptTileView","propagateEventsToViews","_createWidgetView","contentOptions","ContentView","factoryFetchPromise","getContentViewFactory","factoryOptions","detached","runWRController","promptParameters","when","_mergeParametersIntoOptions","editParameterBtn","removeClass","onKeyInView","onBackButton","viewStateModel","restoreLastFragment","TileExpandingBehavior","getOption","isFunction","triggers","click .cs-more","_expand","chartCollection","isEmpty","expandedViewValue","expandedViewClass","requiredModules","isString","expandedViewOptions","expandedView","_dialog","iconLeft","imageLeftUrl","imageLeftClass","iconRight","overlayVisible","toggleSettings","attr","TabableRegion","tagName","isTabable","is","currentlyFocusedElement","prop","button","text","addClass","toolTip","separate","updateButton","$button","disabled","commands","VisualCountButtonView","CollectionView","childView","_createCommandCollection","commandCollection","toolbarItems","disabledToolItem","findWhere","Collection","onChildviewClickButton","other","noValue","d3","nest","dataset","activeColumn","index","count","nestedData","initialNestedItem","nestedItem","countColumn","columnCollection","getCountColumn","activeColumnFormatted","countColumnFormatted","row","_removeEmptyValues","findIndex","nestedRow","toString","filterBy","filters","dataFiltered","d","filtered","currentValue","operator","indexOf","item","filter","sortNest","sortOptions","sortBy","sortDir","getActiveColumn","sorted","sortOrder","sort","a","b","ascending","reverse","groupOutlyingValues","maxItems","d1","slice","d2","oValue","pluck","oTotal","reduce","memo","others","FacetCollection","FacetTopicCollection","makeFilterable","facetCollection","setFacetData","filteredData","availableValues","facets","active_column","activeColumnName","facetModel","facetModelInCollection","filterStillApplied","activeFacet","facetObj","map","groupedItem","activeColumnFormattedValue","activeColumnValue","valueNative","total","percentage","getPercentageOfTotal","facet","topics","name_formatted","total_displayable","items_to_show","_setAsSelected","reset","otherFilteredFacets","_getOtherFilteredFacets","getFCFilters","unMapFilterData","getFacetFilters","setFacetFilters","mapFilterData","filtersToMap","values","fcFilters","columnModel","resolveToActualValues","unMappedFilter","getTotalCount","getActualColumnName","formattedColumnName","actualColumnName","onFiltersUpdated","grouped_on_server","sortGroupAndFilter","formattedValues","facetTopicModel","actualValues","facetTopicCollection","_getFacetTopicCollection","formattedValue","newTopics","topic","facetModelFilter","UrlWebReports","originalFetch","requestExtensions","format","method","chartQueryParms","getFilteredCountQuery","postData","wrParameters","parameterData","getFilteredCountParms","filterable","expandable","chartControlsModel","sort_by","fc_filters","JSON","stringify","total_count","invalidActiveColumn","ModalAlert","ChartCollectionClientMixin","FilterableMixin","PostableMixin","VisualCountChartCollection","models","sorted_on_server","setColumns","columns","_isResponseValid","groupedData","rawCollection","ok","_isActiveColumnValid","showError","first","getSortOptions","getGroupAfter","count_column","_checkGroupedCategory","groupedCategory","_findGroupedCategory","grouped_category","findObj","onChartOptionsUpdated","args","clientOnlyChanges","omit","goToServer","updateActiveColumn","client_format","column_key","data_type","tag_format","VisualCountColumnModel","activeColumnModel","getActiveColumnFormatted","countColumnName","countColumnModel","getCountColumnFormatted","columnModels","CollectionFactory","VisualCountColumnCollection","webreportsVisualCount","config","autoreset","headers","X-OriginParams","search","active_column_formatted","theme_name","column_names","column_names_formatted","sort_order","view_value_as_percentage","group_after","updateColumnData","columnsExcludingCount","count_column_formatted","VisualCountOptionsView","change","onOptionChanged","selectModel","optionCollection","VisualCountControlsSelectView","selectList","VisualCountControlsListItemView","childViewOptions","asc","desc","showValuesAs","groupAfter","actual","theme","OTPrimary","OTSecondary","OTTertiary","DataClarity","DataClarityPatterned","OTNavy","OTTeal","OTIndigo","OTPlum","OTMagenta","VisualCountControlsListView","VisualCountChartControlsModel","vis_type","themeName","viewValueAsPercentage","onColumnsChanged","leftControls","rightControls","lhsOptionsCollection","_getLHSOptionsCollection","rhsOptionsCollection","_getRHSOptionsCollection","onDomRefresh","_reFocus","columnNames","_getSelectID","themeOptions","uniqueId","that","setTimeout","lastRegion","focus","updateControlsModel","document","querySelector","optionModel","changedAttributes","split","ToolItemsFactory","VisualCountCollectionFactory","VisualCountControlsView","groupAfterBar","groupAfterPie","animate","showAsPercentage","showLegend","commandRowLimit","commandHardRowLimit","groupAfterIsValid","getGroupAfterDefault","chartType","validateVisualCountOptions","launchButtonConfig","isBoolean","rowLimit","isNumber","validateCollections","chartOptionsModel","getToolbarItems","toolbarItemsModels","launchButtons","chain","launchButton","launchButtonID","buttonNode","launchButtonLabel","launchReport","launchButtonTooltip","launchReportTooltip","right","getToolbarItemNodes","toolbarItemsFooter","toolbarItemsFooterCollection","nodePromises","toolbarItemNodes","toolbarItemsFooterModel","at","toolbarItemNode","successFunc","debug","failureFunc","log","setVisualCountWidgetOptions","visualCountWidgetOptions","deepClone","visType","getCollection","listenToOnce","createChartControlsView","chartControlOptions","chartControlsView","tooManyRows","FacetBarView","FacetPanelView","VisualCountChartView","VisualCountFooterView","VisualCountViewMixin","VisualCountView","facetBar","facetPanel","chartControls","chart","_createViews","imbue","_renderFooter","_renderFacetBar","_renderFacetPanel","_renderChartControls","_renderChart","_clearFilters","clearFilter","_addToFacetFilter","$chartEl","getRegion","addFilter","$offsetParent","chartContentView","chartView","chartRegion","offsetParent","isNull","height","facetBarView","facetPanelView","$footerEl","_createChartView","_createFacetPanelView","_createFacetBarView","_createFooterView","chartOptions","enableCheckBoxes","blockingLocal","_removeFacetFilter","_removeAll","_onButtonClicked","removeFilter","commandPromise","filteredRowCount","command","handleExecutionResults","suppressSuccessMessage","6","8","ExpandingBehavior","VisualDataExpanded","VisualCountTileView","overlayClip","overlay","expandButton","_isTileWidget","_setContentViewOptions","Expanding","dialogTitleIconRight","dialogClassName","visualizationControls","click @ui.toggleSettings","keyup @ui.toggleSettings","keyup @ui.expandButton","keyboardExpand","preventDefault","showParameterEditBtn","_showControls","expandButtonContext","parentElement","widgetCollection","isTileWidget","perspective","widgets","widget","kind","every","VisualCountContentView","tileOptions","$schema","description","supportedKinds","schema","enum","default","items","required","type_control","select_types","optionLabels","widgetTitle","widgetDescription","tileTitle","tileDescription","typeTitle","typeDescription","themeTitle","themeDescription","sourceTitle","sourceDescription","activeTitle","activeDescription","optionsTitle","optionsDescription","expandedTitle","expandedDescription","percentTitle","percentDescription","pieLegendTitle","pieLegendDescription","animateTitle","animateDescription","groupTitle","groupDescription","sortTitle","sortDescription","directionTitle","directionDescription","buttonTitle","buttonDescription","maxTitle","maxDescription","customButtonTitle","customButtonDescription","addButtonTitle","addButtonDescription","reportButtonTitle","reportButtonDescription","labelButtonTitle","labelButtonDescription","buttonToolTitle","buttonToolDescription","parameterPromptTitle","parameterPromptDescription","parmsIgnored","enabledShowPromptForm","paramSourceTitle","paramSourceDescription","paramPairTitle","paramPairDescription","paramNameTitle","paramNameDescription","paramValueTitle","paramValueDescription","optionsTypeBar","optionsTypeHorizontalBar","optionsTypeDonut","optionsTypePie","optionsTypeOTPrimary","optionsTypeOTSecondary","optionsTypeOTTertiary","optionsTypeDataClarity","optionsTypeDataClarityPatterned","optionsTypeOTNavy","optionsTypeOTTeal","optionsTypeOTIndigo","optionsTypeOTPlum","optionsTypeOTMagenta","optionsGroupAfterDefault","optionsPieDonutDefault","optionsBarDefault","optionsSortByActive","optionsSortByCount","optionsSortOrderDsc","optionsSortOrderAsc","2","7","visualCount","VisualCountFullPageContentView","_createVisualCountView","wrNode","visualCountView","css","styleLoad"],"mappings":"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","file":"webreports-visdata.js","sourcesContent":["csui.define('webreports/utils/general.utils',[\r\n    'csui/lib/underscore',\r\n    'csui/utils/contexts/factories/node'\r\n], function (_, NodeModelFactory) {\r\n\r\n    var generalUtils = _.extend({\r\n\r\n        getCaseInsensitiveProperty: function(obj, name) {\r\n            if (obj && name){\r\n                return obj[name] || obj[_.find(_.keys(obj), function(key){\r\n                    return key.toLowerCase() === name.toLowerCase();\r\n                })];\r\n            } else {\r\n                return undefined;\r\n            }\r\n        },\r\n\r\n        getCurrentNode: function(context){\r\n            return context.getModel(NodeModelFactory);\r\n        },\r\n\r\n        isWebReportNodeContext: function(context){\r\n            var currentNode = this.getCurrentNode(context);\r\n            return currentNode && ( currentNode.get(\"type\") === 30303 );\r\n        }\r\n\r\n    });\r\n\r\n    return generalUtils;\r\n});\r\n\n","csui.define('webreports/utils/url.webreports',['csui/lib/underscore','csui/utils/url','csui/utils/contexts/factories/node'], function (_,Url, NodeModelFactory) {\r\n\r\n    var UrlWebReports = _.extend({\r\n\r\n        appendWebReportParameters: function (query, parameters) {\r\n\r\n            // Append any WebReport parameters to the RestURL if present\r\n            if (!_.isUndefined(parameters)) {\r\n                // Currently supported array format generated by the Perspective Manager\r\n                if (_.isArray(parameters)) {\r\n                    query = this.combineQueryString(query, this._serializeWebReportParameters(parameters));\r\n                } else {\r\n                    // Support parameters in legacy format\r\n                    query = this.combineQueryString(query, parameters);\r\n                }\r\n            }\r\n\r\n            return query;\r\n        },\r\n\r\n        appendCurrentContainer: function (query, context) {\r\n\r\n            var csuiContainerID;\r\n\r\n            // Append the containerID parameter to the RestURL if present\r\n            if (!_.isUndefined(context)) {\r\n                csuiContainerID = this.getCurrentContainerID(context);\r\n\r\n                if (csuiContainerID){\r\n                    query = this.combineQueryString(query, 'csuiContainerID='+ csuiContainerID );\r\n                }\r\n            }\r\n\r\n            return query;\r\n        },\r\n\r\n        appendSWRCellID: function (query, options) {\r\n\r\n            var subWebReportCellID;\r\n\r\n            // Append the containerID parameter to the RestURL if present\r\n            if (options && options.data && options.data.swrLaunchCell && options.data.swrLaunchCell.id) {\r\n\r\n                subWebReportCellID = parseInt(options.data.swrLaunchCell.id, 10);\r\n\r\n                if (typeof subWebReportCellID === \"number\" && !isNaN(subWebReportCellID)){\r\n                    query = this.combineQueryString(query, 'subwebreport_id='+ subWebReportCellID );\r\n                }\r\n            }\r\n\r\n            return query;\r\n        },\r\n\r\n        getCurrentContainerID: function (context) {\r\n            var csuiContainerID,\r\n                node = context.getModel(NodeModelFactory);\r\n\r\n            if (!_.isUndefined(node)){\r\n                csuiContainerID = node.get('id');\r\n            }\r\n            return csuiContainerID;\r\n        },\r\n\r\n        _serializeWebReportParameters: function(parameters){\r\n            var serializedParms = '';\r\n\r\n            _.each(parameters, function (parmPair) {\r\n                if (parmPair.value === null || parmPair.value === undefined){\r\n                    parmPair.value = \"\";\r\n                }\r\n                if ( parmPair.name !== '' ) {\r\n                    if (serializedParms.length) {\r\n                        serializedParms += '&' + parmPair.name + '=' + parmPair.value;\r\n                    } else {\r\n                        serializedParms += parmPair.name + '=' + parmPair.value;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return serializedParms;\r\n        },\r\n\r\n        /* Converts parameters in the format:\r\n                parameters: [\r\n                    {\r\n                        name: 'myparm1',\r\n                        value: 'val1'\r\n                    },\r\n                    {\r\n                        name: 'myparm2',\r\n                        value: 'val2'\r\n                    }\r\n                ]\r\n\r\n           To the format:\r\n\r\n                {\r\n                    myparm1: 'val1',\r\n                    myparm2: 'val2'\r\n                }\r\n\r\n           This is used to generate an object to pass in as data to a POST API.\r\n        */\r\n\r\n        getWebReportParametersAsData: function(parameters){\r\n\r\n            var parmsObject = {};\r\n\r\n            if (_.isArray(parameters)) {\r\n                _.each(parameters, function (parmPair) {\r\n                    if ( parmPair.name !== '' ) {\r\n                        parmsObject[parmPair.name] = parmPair.value;\r\n                    }\r\n                });\r\n            } else if (_.isObject(parameters)) {\r\n                parmsObject = parameters;\r\n            }\r\n\r\n\r\n            return parmsObject;\r\n        },\r\n\r\n        /*  The inverse of getWebReportParametersAsData( parameters ).\r\n\r\n         Converts parameters in the format:\r\n             {\r\n             myparm1: 'val1',\r\n             myparm2: 'val2'\r\n             }\r\n\r\n         To the format:\r\n             [\r\n                 {\r\n                     name: 'myparm1',\r\n                     value: 'val1'\r\n                 },\r\n                 {\r\n                     name: 'myparm2',\r\n                     value: 'val2'\r\n                 }\r\n             ]\r\n\r\n         Used to pass parameters from the prompt screen into a WR using Widget destinations.\r\n        */\r\n        getDataAsWebReportParameters: function(parameters){\r\n\r\n            var parmsArray = [];\r\n\r\n            if ( _.isObject(parameters) ) {\r\n                _.mapObject(parameters, function (val, key){\r\n                        parmsArray.push({\"name\": key, \"value\": val});\r\n                });\r\n            }\r\n\r\n            return parmsArray;\r\n        }\r\n\r\n\r\n\r\n    }, Url);\r\n\r\n    return UrlWebReports;\r\n\r\n});\r\n\n","csui.define('webreports/mixins/webreports.view.mixin',[\r\n    'csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    'webreports/utils/url.webreports'\r\n], function ($, _, Url) {\r\n    \"use strict\";\r\n\r\n    var WebReportsViewMixin = {\r\n\r\n        mixin: function (prototype) {\r\n            return _.extend(prototype, {\r\n\r\n                setCommonModelOptions: function(options){\r\n                    var modelOptions = {};\r\n\r\n                    if (options && options.data) {\r\n\r\n                        this.setModelParameters(options, modelOptions);\r\n\r\n                        // Add the id to the modelOptions\r\n                        if (options.data.id) {\r\n                            _.extend(modelOptions,{id: options.data.id});\r\n                        }\r\n\r\n                        // If the widget is loaded in a container context then we can get the id\r\n                        // from the page context\r\n                        if (options.context) {\r\n                            _.extend(modelOptions,{context: options.context});\r\n                        }\r\n\r\n                    }\r\n\r\n                    return modelOptions;\r\n                },\r\n\r\n                setModelParameters: function(options, modelOptions){\r\n                    var parameters;\r\n                    // Widgets can pass in WebReport parameters to append to the URL\r\n                    if (_.has(options.data, 'parameters')) {\r\n                        parameters = options.data.parameters;\r\n                        if(!_.isUndefined(parameters) && typeof parameters === \"object\") {\r\n                            _.extend(modelOptions,{parameters: parameters});\r\n\r\n                            // Flatten the parameters and add them directly to the modelOptions\r\n                            // This is needed so that the unique key generated for the collection in the context takes the parameters into account\r\n                            // Nested objects don't get taken into account.\r\n                            _.extend( modelOptions, Url.getWebReportParametersAsData(parameters));\r\n                        }\r\n                    }\r\n                },\r\n\r\n                getWidgetFactory: function(options, WidgetFactory, modelOptions) {\r\n                    // returns a factory using the supplied args\r\n                    var factory;\r\n\r\n                    if (options && options.context && WidgetFactory && modelOptions) {\r\n                        factory = options.context.getFactory(WidgetFactory, { attributes: modelOptions } );\r\n                    }\r\n\r\n                    return factory;\r\n                },\r\n\r\n                getFactory: function(){\r\n                    return this._factory;\r\n                },\r\n\r\n                setFactory: function(factory){\r\n                    this._factory = factory;\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return WebReportsViewMixin;\r\n});\r\n\n","csui.define('webreports/models/run.webreport.pre/run.webreport.pre.model',[\r\n    'csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/base',\r\n    'csui/models/form',\r\n    'csui/models/mixins/connectable/connectable.mixin',\r\n    'csui/models/mixins/fetchable/fetchable.mixin'\r\n], function ($, _, Backbone, base, FormModel, ConnectableMixin, FetchableMixin) {\r\n    'use strict';\r\n\r\n    var RunWRPreModel = FormModel.extend({\r\n\r\n        parametersModel: undefined,\r\n        destinationModel: undefined,\r\n\r\n        constructor: function RunWRPreModel(attributes, options) {\r\n\r\n            this.options = options || (options = {});\r\n\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            this.makeConnectable(options);\r\n            this.makeFetchable(options);\r\n        },\r\n\r\n        url: function () {\r\n            var path = \"forms/nodes/run\",\r\n                connector = this.connector,\r\n                params = {\r\n                    id: this.options.id\r\n                },\r\n                resource = path + '?' + $.param(params);\r\n            return base.Url.combine( connector.connection.url, resource);\r\n        },\r\n\r\n        parse: function (response) {\r\n            this.parametersModel = new Backbone.Model( response.data.parameters_data );\r\n            this.destinationModel = new Backbone.Model( response.data.destination_data );\r\n            return response.forms[0];\r\n        }\r\n\r\n    });\r\n\r\n    ConnectableMixin.mixin(RunWRPreModel.prototype);\r\n    FetchableMixin.mixin(RunWRPreModel.prototype);\r\n\r\n    return RunWRPreModel;\r\n\r\n});\r\n\n","csui.define('webreports/utils/contexts/factories/run.webreport.pre.factory',[\r\n\t'csui/lib/underscore',\r\n\t'csui/utils/contexts/factories/factory',\r\n\t'csui/utils/contexts/factories/connector',\r\n\t'webreports/models/run.webreport.pre/run.webreport.pre.model'\r\n], function (_,ModelFactory, ConnectorFactory, RunWRPreModel) {\r\n\r\n\tvar runWebReportPreFactory = ModelFactory.extend({\r\n\r\n\t\t// Unique prefix of the default model instance, when this model is assigned\r\n\t\t// to a context it can be shared by multiple widgets\r\n\t\tpropertyPrefix: 'runwebreportpre',\r\n\r\n\t\tconstructor: function runWebReportPreFactory(context, options) {\r\n\r\n\t\t\t// Don't pass the attributes into the model:\r\n\t\t\tif (_.has(options,\"attributes\")){\r\n\t\t\t\tdelete options.attributes;\r\n\t\t\t}\r\n\t\t\tif (_.has(options, this.propertyPrefix) && _.has(options[this.propertyPrefix], \"attributes\")){\r\n\t\t\t\tdelete options[this.propertyPrefix].attributes;\r\n\t\t\t}\r\n\r\n\t\t\tModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n\t\t\t// Obtain the server connector from the application context to share\r\n\t\t\t// the server connection with the rest of the application; include\r\n\t\t\t// the options, which can contain settings for dependent factories\r\n\t\t\tvar connector = context.getObject(ConnectorFactory, options),\r\n\t\t\t\tmodelOptions = _.extend( options.options, {\r\n\t\t\t\tconnector: connector\r\n\t\t\t});\r\n\r\n\t\t\t// Expose the model instance in the `property` key on this factory\r\n\t\t\t// instance to be used by the context\r\n\t\t\tthis.property = new RunWRPreModel( {}, modelOptions );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn runWebReportPreFactory;\r\n\r\n});\n","csui.define('webreports/utils/commands/open.classic.webreport',['csui/lib/underscore', 'csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (_, CommandHelper, OpenClassicPageCommand) {\r\n\r\n    var OpenClassicWebReportCommand = OpenClassicPageCommand.extend({\r\n\r\n        defaults: {\r\n            signature: 'OpenClassicWebReport',\r\n            scope: \"single\"\r\n        },\r\n        \r\n        enabled: function (status) {\r\n            var node = CommandHelper.getJustOneNode(status);\r\n            return node && node.get('type') === 30303;\r\n        },\r\n\r\n        getUrlQueryParameters: function (node, options) {\r\n            var additionalParms,\r\n                baseParms = {\r\n                func: 'll',\r\n                objAction: 'RunReport',\r\n                objId: node.get('id'),\r\n                nexturl: location.href\r\n            };\r\n\r\n            if ( _.has(options, \"parameters\") ) {\r\n                // blend any parms entered in the prompt forms:\r\n                baseParms = _.extend( baseParms, options.parameters );\r\n            }\r\n\r\n            return baseParms;\r\n        }\r\n\r\n    });\r\n\r\n    return OpenClassicWebReportCommand;\r\n\r\n});\n","csui.define('webreports/models/run.webreport/run.webreport.model',[\r\n\t'csui/lib/underscore',\r\n\t'csui/lib/backbone',\r\n\t'csui/utils/base',\r\n\t'csui/models/mixins/connectable/connectable.mixin'\r\n], function (_, Backbone, base, ConnectableMixin ) {\r\n\r\n\tvar RunWebReportModel = Backbone.Model.extend({\r\n\r\n\t\tconstructor: function RunWebReportModel(attributes, options) {\r\n\t\t\tthis.options = options || {};\r\n\t\t\tBackbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n\t\t\tthis.makeConnectable(this.options);\r\n\t\t},\r\n\r\n\t\turl: function () {\r\n\t\t\tvar parms,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tid = options.id,\r\n\t\t\t\tconnector = this.connector,\r\n\t\t\t\tpath = \"nodes/\"+ id +\"/output\";\r\n\r\n\t\t\t// Add in any prompt parameter values to the query:\r\n\t\t\tif (_.has(options, \"parameters\")) {\r\n\r\n\t\t\t\t// Support for name/value pairs in a single object only, not an array of objects:\r\n\t\t\t\tif ( !_.isArray(options.parameters) && _.isObject(options.parameters)){\r\n\t\t\t\t\tparms = options.parameters;\r\n\t\t\t\t\tpath = path + \"?\" + base.Url.combineQueryString(parms);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn base.Url.combine( connector.connection.url, path );\r\n\r\n\t\t},\r\n\r\n\t\tparse: function(resp, options) {\r\n\t\t\t// update the destinationModel with the resolved/current destination_data:\r\n\t\t\tif (_.has(options, \"destinationModel\")){\r\n\t\t\t\toptions.destinationModel.set( resp.data.destination_data, options);\r\n\t\t\t} else {\r\n\t\t\t\toptions.destinationModel = new Backbone.Model(resp.data.destination_data);\r\n\t\t\t}\r\n\r\n\t\t\treturn resp;\r\n\t\t},\r\n\r\n\t\t// Removes any parameters passed on the model:\r\n\t\tclearParameters: function () {\r\n\t\t\tif ( _.has(this, \"options\") && _.has(this.options, \"parameters\") ) {\r\n\t\t\t\tdelete( this.options.parameters);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t});\r\n\r\n\tConnectableMixin.mixin(RunWebReportModel.prototype);\r\n\r\n\treturn RunWebReportModel;\r\n\r\n});\n","csui.define('webreports/utils/contexts/factories/run.webreport.factory',[\r\n\t'csui/lib/underscore',\r\n\t'csui/utils/contexts/factories/factory',\r\n\t'csui/utils/contexts/factories/connector',\r\n\t'webreports/models/run.webreport/run.webreport.model'\r\n], function (_,ModelFactory, ConnectorFactory, RunWRModel) {\r\n\r\n\tvar RunWRModelFactory = ModelFactory.extend({\r\n\r\n\t\t// Unique prefix of the default model instance, when this model is assigned\r\n\t\t// to a context it can be shared by multiple widgets\r\n\t\tpropertyPrefix: 'runwrmodel',\r\n\r\n\t\tconstructor: function RunWRModelFactory(context, options) {\r\n\t\t\t\r\n\t\t\t// Don't pass the attributes into the model:\r\n\t\t\tif (_.has(options,\"attributes\")){\r\n\t\t\t\tdelete options.attributes;\r\n\t\t\t}\r\n\t\t\tif (_.has(options, this.propertyPrefix) && _.has(options[this.propertyPrefix], \"attributes\")){\r\n\t\t\t\tdelete options[this.propertyPrefix].attributes;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n\t\t\tvar connector = context.getObject(ConnectorFactory, options),\r\n\t\t\t\tmodelOptions = _.extend( options.options, {\r\n\t\t\t\t\tconnector: connector\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t// Pass through any populated parameters:\r\n\t\t\tif (_.has(options,\"parameters\") ) {\r\n\t\t\t\tmodelOptions = _.extend( modelOptions, {\r\n\t\t\t\t\tparameters: options.parameters\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Expose the model instance in the `property` key on this factory\r\n\t\t\t// instance to be used by the context\r\n\t\t\tthis.property = new RunWRModel({}, modelOptions);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn RunWRModelFactory;\r\n\r\n});\r\n\n","csui.define('webreports/controls/run.webreport.pre/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('webreports/controls/run.webreport.pre/impl/nls/root/lang',{\r\n  WebReportParameters: \"WebReport Parameters\",\r\n  RunWebReport: \"Run WebReport\",\r\n  Cancel: \"Cancel\",\r\n  WebReportExecutedSuccessfully: \"WebReport executed successfully\",\r\n  WebReportExecutingInBackground: \"WebReport is executing in background\",\r\n  anErrorOccurredExecutingTheWebReport: \"An error occurred executing the WebReport\",\r\n  okLabel: \"OK\",\r\n  MissingNodeModelForThisAction: \"Missing node model for this action\"\r\n});\r\n\n","\n","csui.define('webreports/utils/commands/execute.webreport',['csui/lib/underscore', 'csui/lib/jquery',\r\n\t'csui/utils/base',\r\n\t'csui/utils/commandhelper', 'csui/models/command',\r\n\t'csui/controls/globalmessage/globalmessage',\r\n\t'webreports/utils/contexts/factories/run.webreport.factory',\r\n\t'i18n!webreports/controls/run.webreport.pre/impl/nls/lang'\r\n], function (_, $,\r\n\t\t\t base,\r\n\t\t\t CommandHelper, CommandModel,\r\n\t\t\t GlobalMessage,\r\n\t\t\t RunWRModelFactory,\r\n\t\t\t lang ){\r\n\r\n\tvar ExecuteWebReport = CommandModel.extend({\r\n\r\n\t\tdefaults: {\r\n\t\t\tsignature: 'ExecuteWebReport',\r\n\t\t\tscope: \"single\"\r\n\t\t},\r\n\r\n\t\tenabled: function (status) {\r\n\t\t\tvar node = CommandHelper.getJustOneNode(status);\r\n\t\t\treturn node && node.get('type') === 30303;\r\n\t\t},\r\n\r\n\t\t// Converts a json object of parameters into form data for POSTing:\r\n\t\tconvertParametersToFormData: function(parameters){\r\n\t\t\t\r\n\t\t\tvar serializedParms = '';\r\n\t\t\t\r\n\t\t\tif ( _.isObject( parameters ) && !_.isArray( parameters) ){\r\n\r\n\t\t\t\t_.each( parameters, function(value, key, list){\r\n\r\n\t\t\t\t\tvar parm,\r\n\t\t\t\t\t\tval;\r\n\r\n\t\t\t\t\tparm = encodeURI(key);\r\n\t\t\t\t\tval = encodeURI(value);\r\n\r\n\t\t\t\t\tif (serializedParms.length) {\r\n\r\n\t\t\t\t\t\tserializedParms += '&' + parm + '=' + val;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tserializedParms += parm + '=' + val;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn serializedParms;\r\n\t\t},\r\n\r\n\t\texecute: function (status, options) {\r\n\r\n\t\t\t// Generate a request to execute the WebReport on the server:\r\n\t\t\tvar executeWRModel,\r\n\t\t\t\trequestAttrs,\r\n\t\t\t\tcrud_method = \"read\", // GET default\r\n\t\t\t\tdeferred = $.Deferred(),\r\n\t\t\t\tdestinationModel = options.destinationModel,\r\n\t\t\t\thttp_method = destinationModel.get(\"http_method\"),\r\n\t\t\t\tlower_http_method = http_method.toLowerCase(),\r\n\t\t\t\trunInBackground = destinationModel.get(\"run_in_background\"),\r\n\t\t\t\texecuteOptions = {\r\n\t\t\t\t\tattributes: {\r\n\t\t\t\t\t\tid: options.node.get(\"id\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptions: {\r\n\t\t\t\t\t\tid: options.node.get(\"id\")\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\thasParameters = ( _.has( options, \"parameters\" ) );\r\n\r\n\r\n\t\t\texecuteWRModel = options.context.getModel( RunWRModelFactory, executeOptions );\r\n\r\n\r\n\t\t\tif (lower_http_method === \"get\") {\r\n\r\n\t\t\t\t// Set the CRUD value:\r\n\t\t\t\tcrud_method = \"read\";\r\n\r\n\t\t\t\t// Pass the current parameters through the model, which are added as query parameters:\r\n\t\t\t\tif ( hasParameters && _.has(executeWRModel, \"options\" ) ) {\r\n\t\t\t\t\texecuteWRModel.options =  _.extend( executeWRModel.options, {\r\n\t\t\t\t\t\tparameters: options.parameters\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Set the CRUD value:\r\n\t\t\t\tswitch ( lower_http_method ) {\r\n\r\n\t\t\t\t\tcase \"post\":\r\n\t\t\t\t\t\tcrud_method = \"create\";\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"put\":\r\n\t\t\t\t\t\tcrud_method = \"update\";\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"patch\":\r\n\t\t\t\t\t\tcrud_method = \"patch\";\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"delete\":\r\n\t\t\t\t\t\tcrud_method = \"delete\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasParameters ) {\r\n\t\t\t\t\t// Convert the parameters object into form data for the POST:\r\n\t\t\t\t\trequestAttrs = this.convertParametersToFormData( options.parameters );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Make a request that will execute the WR:\r\n\t\t\t// \t\t- The success functions stores the response data as attrs, similar to the Backbone.save().\r\n\t\t\texecuteWRModel\r\n\t\t\t\t.sync( crud_method, executeWRModel, {\r\n\t\t\t\t\tdata: requestAttrs,\r\n\t\t\t\t\tsuccess: function(resp) {\r\n\t\t\t\t\t\t // store the response as the model's attrs:\r\n\t\t\t\t\t\t if (resp) {\r\n\t\t\t\t\t\t\t var serverAttrs = executeWRModel.parse(resp, options);\r\n\t\t\t\t\t\t\t executeWRModel.set(serverAttrs, options);\r\n\t\t\t\t\t\t }\r\n\t\t\t\t\t\t// Clear out the passed parms so they don't linger in the context:\r\n\t\t\t\t\t\texecuteWRModel.clearParameters();\r\n\t\t\t\t\t\tdeferred.resolve( arguments, executeWRModel );\r\n\t\t\t\t\t },\r\n\t\t\t\t\terror: function(request, statusText, errorThrown ){\r\n\t\t\t\t\t\tvar error = new base.Error(request);\r\n\t\t\t\t\t\tGlobalMessage.showMessage(\"error\", error.message, error.errorDetails);\r\n\t\t\t\t\t\texecuteWRModel.clearParameters();\r\n\t\t\t\t\t\tdeferred.reject();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\tif (runInBackground){\r\n\t\t\t\t// resolve right away in order to show the Status Screen now instead of after the WR has executed:\r\n\t\t\t\tdeferred.resolve( [{}, \"success\"], executeWRModel, true );\r\n\t\t\t}\r\n\r\n\t\t\treturn deferred.promise();\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn ExecuteWebReport;\r\n\r\n});\n","csui.define('webreports/controls/run.webreport.pre/run.webreport.pre.controller',['require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n    'csui/models/nodes',\r\n    'csui/utils/command.error',\r\n    'webreports/utils/contexts/factories/run.webreport.pre.factory',\r\n    'webreports/utils/commands/open.classic.webreport',\r\n    'webreports/utils/commands/execute.webreport',\r\n    'i18n!webreports/controls/run.webreport.pre/impl/nls/lang'\r\n], function (require, _, $,\r\n             NodeCollection,\r\n             CommandError,\r\n             RunWRPreModelFactory,\r\n             OpenClassicWebReport,\r\n             ExecuteWebReportCommand,\r\n             lang) {\r\n    'use strict';\r\n\r\n    function RunWebReportPreController() {\r\n    }\r\n\r\n    _.extend(RunWebReportPreController.prototype, {\r\n\r\n        runWRPreModel: undefined,\r\n        destinationModel: undefined,\r\n        parametersModel: undefined,\r\n        promptCheckPromise: undefined,\r\n\r\n        _getCommandStatus: function () {\r\n            var status;\r\n            if (typeof this.commandStatus === \"undefined\") {\r\n                status = {\r\n                    nodes: new NodeCollection(this.options.node)\r\n                };\r\n            } else {\r\n                status = this.commandStatus;\r\n            }\r\n\r\n            return status;\r\n        },\r\n\r\n        /////////////////////////////////\r\n        // Moved from OpenWebReport cmd\r\n        //////////////////////////////////\r\n        switchToPromptView: function (initialStatus, options) {\r\n            var context,\r\n                originatingView,\r\n                self = this,\r\n                deferred = $.Deferred(),\r\n                status = this._getCommandStatus(),\r\n                selected = status.nodes;\r\n\r\n            context = status.context || options && options.context;\r\n\r\n            originatingView = status.originatingView || options.originatingView;\r\n\r\n            // WR node executed from a list view.\r\n            // Render the prompt view in situ:\r\n            require(['csui/lib/marionette', 'csui/lib/backbone',\r\n                'webreports/widgets/parameter.prompt.form/parameter.prompt.form.view',\r\n                'csui/controls/dialog/dialog.view',\r\n                'csui/utils/contexts/factories/next.node',\r\n                'csui/utils/contexts/factories/previous.node',\r\n                'csui/utils/contexts/factories/node',\r\n                'csui/widgets/nodestable/nodestable.view'\r\n            ], function (Marionette, Backbone, PromptView, DialogView, NextNodeFactory, PreviousNodeFactory, NodeFactory, NodesTableWidget) {\r\n\r\n                var attrs,\r\n                    parm,\r\n                    promptView,\r\n                    newAttrs = {},\r\n                    previousNode = context.getModel(PreviousNodeFactory),\r\n                    nextNode = context.getModel(NextNodeFactory),\r\n                    thisNode = context.getModel(NodeFactory),\r\n                    promptViewOptions = {\r\n                        RunWRController: self,\r\n                        model: selected,\r\n                        originatingView: originatingView,\r\n                        context: context,\r\n                        showCloseIcon: originatingView ? false : true,\r\n                        showBackIcon: originatingView ? true : false\r\n                    };\r\n\r\n                // Set the previousNode to the current node so we come back here:\r\n                previousNode.clear({silent: true});\r\n                previousNode.set(thisNode.attributes);\r\n\r\n                // Clear out the nextNode, as the user might hit the back button to Cancel:\r\n                nextNode.clear({silent: true});\r\n\r\n                promptView = new PromptView(promptViewOptions);\r\n\r\n                // replace the originatingView with sliding left/right animation if it's coming from a NodesTable widget:\r\n                if (originatingView instanceof NodesTableWidget) {\r\n\r\n                    var _showOriginatingView,\r\n                        $wrPrompts,\r\n                        $originatingView = originatingView.$el,\r\n                        ntWidthVal = $originatingView.width(),\r\n                        ntWidth = ntWidthVal + 'px';\r\n\r\n                    $originatingView.parent().append(\"<div class='wr-prompt-parameters-wrapper'></div>\");\r\n                    $wrPrompts = $($originatingView.parent().find('.wr-prompt-parameters-wrapper')[0]);\r\n                    $wrPrompts.hide();\r\n\r\n                    promptView.render();\r\n                    Marionette.triggerMethodOn(promptView, 'before:show');\r\n                    $wrPrompts.append(promptView.el);\r\n\r\n                    $originatingView.hide('blind', {\r\n                        direction: 'left',\r\n                        complete: function () {\r\n                            $wrPrompts.show('blind',\r\n                                {\r\n                                    direction: 'right',\r\n                                    complete: function () {\r\n                                        Marionette.triggerMethodOn(promptView, 'show');\r\n                                    }\r\n                                },\r\n                                100);\r\n                        }\r\n                    }, 100);\r\n\r\n                    $originatingView.promise().done(function () {\r\n                        originatingView.isDisplayed = false;\r\n                        deferred.resolve();\r\n                    });\r\n\r\n                    _showOriginatingView = function () {\r\n                        $wrPrompts.hide('blind', {\r\n                            direction: 'right',\r\n                            complete: function () {\r\n                                $originatingView.show('blind',\r\n                                    {\r\n                                        direction: 'left',\r\n                                        complete: function () {\r\n                                            originatingView.triggerMethod('dom:refresh');\r\n                                            originatingView.isDisplayed = true;\r\n                                            //reset required switch to default.\r\n                                            !!status.collection && (status.collection.requireSwitched = false);\r\n                                        }\r\n                                    },\r\n                                    100);\r\n                                promptView.destroy();\r\n                                $wrPrompts.remove();\r\n                                deferred.resolve();\r\n                            }\r\n                        }, 100);\r\n\r\n                    };\r\n\r\n                    Backbone.listenTo(promptView, 'promptView:close', _.bind(_showOriginatingView, self));\r\n                    Backbone.listenTo(promptView, 'promptView:close:without:animation', function () {\r\n                        $originatingView.show('blind',\r\n                            {\r\n                                direction: 'left',\r\n                                complete: function () {\r\n                                    originatingView.triggerMethod('dom:refresh');\r\n\r\n                                    //reset required switch to default.\r\n                                    !!status.collection && (status.collection.requireSwitched = false);\r\n                                }\r\n                            },\r\n                            100);\r\n                        promptView.destroy();\r\n                        $wrPrompts.remove();\r\n                        deferred.resolve();\r\n                    });\r\n\r\n                } else {  // show PromptView in a modal dialog\r\n\r\n                    self.dialog = new DialogView({\r\n                        className: 'wr-prompt-parameters',\r\n                        largeSize: true,\r\n                        view: promptView\r\n                    });\r\n\r\n                    self.dialog.show();\r\n\r\n                    // UX specs does not have header bar\r\n                    self.dialog.ui.header.hide();\r\n                    self.dialog.listenTo(promptView, 'promptView:close', function () {\r\n                        self.dialog.destroy();\r\n                        deferred.resolve();\r\n                    });\r\n\r\n                    self.dialog.listenTo(promptView, 'promptView:close:without:animation', function () {\r\n                        self.dialog.destroy();\r\n                        deferred.resolve();\r\n                    });\r\n\r\n                }\r\n            }, function (error) { // error require-ing;\r\n                deferred.reject(new CommandError(error));\r\n            });\r\n            return deferred.promise();\r\n        },\r\n\r\n        // Modified version of CommandHelper.getAtLeastOneNode:\r\n        _getAtLeastOneNode: function (status) {\r\n            if (!status.nodes) {\r\n                return new NodeCollection();\r\n            }\r\n\r\n            if (status.nodes.length === 1 && status.collection) {\r\n                return status.collection;\r\n            } else {\r\n                return status.nodes;\r\n            }\r\n\r\n        },\r\n\r\n        //////////////////////////////////////\r\n        //  end Moved from OpenWebReport cmd\r\n        //////////////////////////////////////\r\n\r\n        // Entry point for checking if a WR has prompt parms:\r\n        checkForPromptParameters: function (options) {\r\n            var showPrompts,\r\n                promptCheckPromise,\r\n                self = this,\r\n                deferred = $.Deferred(),\r\n                suppressPromptView = (options && _.has(options, 'suppressPromptView')) ? options.suppressPromptView : false;\r\n            // default behavior is to invoke a prompt view as a modal\r\n\r\n\r\n            this.options = options;\r\n            this._blockParentActions();\r\n\r\n            this.getRunWRPreModel(options)\r\n                .done(function () {\r\n                    showPrompts = self._checkPrompts(suppressPromptView);\r\n                    deferred.resolve(showPrompts);\r\n                })\r\n                .fail(function () {\r\n                    self._unblockParentActions();\r\n                    self._cleanupFactory();\r\n                    deferred.reject();\r\n                });\r\n\r\n            promptCheckPromise = deferred.promise();\r\n            this.promptCheckPromise = promptCheckPromise;\r\n\r\n            return promptCheckPromise;\r\n\r\n        },\r\n\r\n        getPromptCheckPromise: function(){\r\n            return this.promptCheckPromise;\r\n        },\r\n\r\n        // Returns a form view for the WR that can be shown in a number of places:\r\n        getFormView: function (options) {\r\n            var formView,\r\n                WRRunModel = (_.has(this, \"runWRPreModel\")) ? this.runWRPreModel : (_.has(options, \"promptModel\")) ? options.promptModel : undefined, // 2nd case is for special scenarios like test pages\r\n                deferred = $.Deferred();\r\n\r\n            // Check if we still don't have a model:\r\n            if (typeof WRRunModel !== \"undefined\") {\r\n\r\n                require([\r\n                    'csui/controls/form/form.view'\r\n                ], function (FormView) {\r\n                    // Create a FormView using the WR Prompt parameters model:\r\n                    formView = new FormView({\r\n                        context: options.context,\r\n                        model: WRRunModel,\r\n                        mode: 'create'\r\n                    });\r\n\r\n                    deferred.resolve(formView);\r\n\r\n                }, function (error) {\r\n                    deferred.reject();\r\n                });\r\n\r\n            } else {\r\n                // No model to use:\r\n                deferred.reject();\r\n            }\r\n\r\n            return deferred.promise();\r\n        },\r\n\r\n        // Invoke to actually execute the WR:\r\n        executeWR: function (parms) {\r\n            var executeWRCommand,\r\n                executionMethod,\r\n                status,\r\n                self = this,\r\n                options = _.extend(this.options, {\r\n                    destinationModel: this.destinationModel\r\n                }),\r\n                destinationModel = this.destinationModel,\r\n                outputDestination = destinationModel.get(\"output_destination\");\r\n\r\n            // Check where we need to send the user:\r\n            executionMethod = this._checkExecutionRoute();\r\n\r\n            if (executionMethod === \"classic\") {\r\n\r\n                // Need to open the WR in classic:\r\n                this.openInClassic(parms);\r\n                this._unblockParentActions();\r\n\r\n            } else {\r\n                // Add the entered parameters into the query and make sure the originatingView is still blocked:\r\n                if (typeof parms !== \"undefined\") {\r\n                    _.extend(parms, {\"prompting\": \"done\"}); // let the server know that prompting is complete.\r\n                    this.options.parameters = parms;\r\n\r\n                    this._blockParentActions();\r\n                }\r\n\r\n                // Only execute the executeWRcommand cmd for non-smartUI destinations.\r\n                // In non-SmartUI Destination, the WR execution is handled by the widget within the perspective.\r\n                // Other Destinations we want to explicitly execute a WR via restAPI.\r\n                if (outputDestination === \"fullpagewidget\") {\r\n                    // For widget destinations, the widget that is loaded in the new perspective\r\n                    // will execute the WR itself:\r\n                    self._showOutputPerspective();\r\n                } else {\r\n\r\n                    executeWRCommand = new ExecuteWebReportCommand();\r\n\r\n                    // If there's a status, it's invoked via a Command\r\n                    // If we don't have one, make one using the nodeCollection and existing node model.\r\n                    if (typeof this.commandStatus === \"undefined\") {\r\n                        status = {\r\n                            nodes: new NodeCollection(options.node)\r\n                        };\r\n                    } else {\r\n                        status = this.commandStatus;\r\n                    }\r\n\r\n                    // Make sure the command is enabled:\r\n                    if (executeWRCommand.enabled(status)) {\r\n\r\n                        // Execute the WR so we can render the status screen:\r\n                        executeWRCommand\r\n                            .execute(status, this.options)\r\n                            .done(function (results, executeModel, runInBackground) {\r\n\r\n                                if (self.destinationModel.get(\"show_status_screen\") === true) {\r\n                                    self.statusScreenOptions = _.extend(self.options, {\r\n                                        executeModel: executeModel,\r\n                                        runInBackground: runInBackground\r\n                                    });\r\n\r\n                                    // Show the status screen right away:\r\n                                    self.showStatusScreen();\r\n                                } else {\r\n                                    // WR is configured NOT to show the Status Screen\r\n                                    self._unblockParentActions();\r\n                                }\r\n                            })\r\n                            .fail(function () {\r\n                                self._unblockParentActions();\r\n                            });\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n\r\n        // Opens the output in a new perspective:\r\n        _showOutputPerspective: function () {\r\n            var self = this,\r\n                options = this.options,\r\n                node = options && options.node,\r\n                id = node && node.get(\"id\");\r\n\r\n            if (id) {\r\n\r\n                // Trigger the Perspective switch to show the WebReport by setting the next node\r\n                require([\r\n                    'csui/utils/contexts/factories/next.node',\r\n                    'csui/utils/contexts/factories/previous.node',\r\n                    'csui/utils/contexts/factories/node'\r\n                ], function (NextNodeFactory, PreviousNodeFactory, NodeFactory) {\r\n\r\n                    self.previousNode = self.options.context.getModel(PreviousNodeFactory);\r\n                    self.nextNode = self.options.context.getModel(NextNodeFactory);\r\n                    self.node = self.options.context.getModel(NodeFactory);\r\n\r\n                    // Set the previousNode to the current node:\r\n                    self.previousNode.clear({silent: true});\r\n                    self.previousNode.set(self.node.attributes);\r\n\r\n                    // Set the nextNode, which will trigger loading the perspective for the WebReport Node:\r\n                    self.nextNode.clear({silent: true});\r\n                    self.nextNode.set({id: id});\r\n\r\n                    self._unblockParentActions();\r\n                });\r\n            } else {\r\n                console.error(\"Unable to get node ID for WebReport\");\r\n            }\r\n\r\n        },\r\n\r\n        // Handoff to the classic WR opener:\r\n        openInClassic: function (parms) {\r\n            var status,\r\n                OpenClassic = new OpenClassicWebReport();\r\n\r\n            // Add the entered parameters into the query:\r\n            if (typeof parms !== \"undefined\") {\r\n                _.extend(parms, {\"prompting\": \"done\"}); // let the classic UI know that prompting is complete.\r\n                this.options.parameters = parms;\r\n            }\r\n\r\n            // If there's a status, it's invoked via a Command:\r\n            if (typeof this.commandStatus !== \"undefined\") {\r\n                status = this.commandStatus;\r\n            } else {\r\n                // Not launched from a command, mostly hit the /output URL directly.\r\n                // In this case, we want to open the classic URL but in the same tab:\r\n                OpenClassic.openInNewTab = false;\r\n\r\n                // Create a status collection using the WR node model we already have:\r\n                status = {\r\n                    nodes: new NodeCollection(this.options.node)\r\n                };\r\n            }\r\n\r\n            // Execute the WR in classic:\r\n            OpenClassic.execute(status, this.options);\r\n\r\n        },\r\n\r\n        // Gets the RunWRPre model:\r\n        getRunWRPreModel: function (options) {\r\n            var self = this,\r\n                deferred = $.Deferred();\r\n\r\n            this.runWRPreModel = this.getRunWrPreFactory(options);\r\n\r\n            this.runWRPreModel\r\n                .fetch()\r\n                .done(function (data, status, jqxhr) {\r\n                    self.destinationModel = self.runWRPreModel.destinationModel;\r\n                    self.parametersModel = self.runWRPreModel.parametersModel;\r\n                    deferred.resolve();\r\n                })\r\n                .fail(function (jqXHR, textStatus, errorThrown) {\r\n                    deferred.reject();\r\n                });\r\n\r\n            return deferred.promise();\r\n        },\r\n\r\n        getRunWrPreFactory: function(options){\r\n            return options.context.getModel(RunWRPreModelFactory, {\r\n                        // If we're suppressing the prompt view then we don't want to reuse the prompt params\r\n                        // This causes more than one widget that points to the same WebReport to sync parm views.\r\n                        unique: true,\r\n                        attributes: {\r\n                            id: options.node.get(\"id\")\r\n                        },\r\n                        options: {\r\n                            id: options.node.get(\"id\")\r\n                        }\r\n                    });\r\n        },\r\n\r\n        // Map to the additional models we need to lookup for the status screen for each destination type:\r\n        additionalModelMap: {\r\n            node: {\r\n                primary: \"outputData.node_id\",\r\n                secondary: \"destination_data.destination_specific.create_in_id\"\r\n            },\r\n\r\n            version: {\r\n                primary: \"destination_data.destination_specific.add_version_to_id\"\r\n                //secondary: undefined // todo:  LLWR-10682\r\n            },\r\n\r\n            workflow: {\r\n                primary: \"destination_data.destination_specific.workflow_map_id\",\r\n                secondary: \"outputData.work_id\"\r\n            }\r\n        },\r\n\r\n        // Pre-populate the models required for the status screen:\r\n        _getStatusScreenModels: function () {\r\n            var options = this.statusScreenOptions,\r\n                outputData = options.executeModel.get(\"data\"),\r\n                destination_data = outputData.destination_data,\r\n                self = this,\r\n                deferred = $.Deferred();\r\n\r\n            // Get a new node model so we can show the icon/name/default action/etc:\r\n            require([\"csui/utils/contexts/factories/node\",\r\n                    \"workflow/models/workitem/workitem.model.factory\"],\r\n                function (NodeFactory, WorkItemModelFactory) {\r\n                    var primaryID,\r\n                        secondaryID,\r\n                        primaryFactory,\r\n                        primaryNode,\r\n                        secondaryNode,\r\n                        secondaryFactory,\r\n                        promises = [],\r\n                        target = destination_data.output_destination;\r\n\r\n                    // If it's a node destination, is this a Version destination or a Node destination with the Add Version option?\r\n                    if (target === \"node\") {\r\n                        if (_.has(destination_data.destination_specific, \"add_version_to_id\")) {\r\n                            // this is really the version destination:\r\n                            target = \"version\";\r\n                        }\r\n                    }\r\n\r\n                    primaryFactory = NodeFactory;\r\n                    secondaryFactory = NodeFactory;\r\n\r\n                    // Always get the primary node model:\r\n                    primaryID = eval(self.additionalModelMap[target].primary);\r\n\r\n                    // Get the right model for the corresponding Destination type:\r\n                    if (destination_data.output_destination === 'workflow') {\r\n                        // The WF Attachments id is returned on the WorkItem model.\r\n                        // We use the WFMap as the node model so we can get a general WF icon, and get the workItem model so we can get the attachmentsID.\r\n                        if (destination_data.destination_specific.workflow_attach_output === true) {\r\n                            secondaryFactory = WorkItemModelFactory;\r\n                            secondaryID = eval(self.additionalModelMap[target].secondary);\r\n                        } else {\r\n                            secondaryID = undefined;\r\n                        }\r\n                    } else {\r\n                        secondaryID = eval(self.additionalModelMap[target].secondary);\r\n                    }\r\n\r\n                    ////////////////////////////////\r\n                    // Get the primary model:\r\n                    ////////////////////////////////\r\n                    primaryNode = options.context.getModel(primaryFactory, {\r\n                        attributes: {\r\n                            id: primaryID\r\n                        }\r\n                    });\r\n\r\n                    promises.push(primaryNode.fetch());\r\n\r\n                    /////////////////////////////////////////\r\n                    // Get the secondary model if needed:\r\n                    /////////////////////////////////////////\r\n                    if (typeof secondaryID !== \"undefined\") {\r\n\r\n                        secondaryNode = options.context.getModel(secondaryFactory, {\r\n                            attributes: {\r\n                                id: secondaryID\r\n                            }\r\n                        });\r\n\r\n                        if (destination_data.output_destination === 'workflow' && destination_data.destination_specific.workflow_attach_output === true) {\r\n\r\n                            // For WorkItem models we have to set the attributes after, they can't be passed in during construction:\r\n                            secondaryNode.set({\r\n                                process_id: secondaryID,\r\n                                subprocess_id: secondaryID,\r\n                                task_id: 1\r\n                            }, {\r\n                                silent: true  // prevent any of the callbacks from running and changing the perspective\r\n                            });\r\n                        }\r\n\r\n                        promises.push(secondaryNode.fetch());\r\n\r\n                    }\r\n\r\n                    $.whenAll.apply($, promises).then(function (results) {\r\n\r\n                        var dataPackages,\r\n                            attachmentsID,\r\n                            wfAttachmentsNode;\r\n\r\n                        options.primaryNode = primaryNode;\r\n                        options.secondaryNode = secondaryNode;\r\n\r\n                        if (destination_data.output_destination === \"workflow\" && destination_data.destination_specific.workflow_attach_output === true) {\r\n\r\n                            // For WF Destinations where the output was attached to the WF, also look up the WF attachments model so we can get its ID:\r\n                            if (secondaryNode.has(\"data_packages\")) {\r\n\r\n                                dataPackages = secondaryNode.get(\"data_packages\");\r\n\r\n                                if (_.isArray(dataPackages)\r\n                                    && dataPackages.length > 0\r\n                                    && _.has(dataPackages[0], \"data\")\r\n                                    && _.has(dataPackages[0].data, \"attachment_folder_id\")\r\n                                ) {\r\n\r\n                                    attachmentsID = dataPackages[0].data.attachment_folder_id;\r\n\r\n                                    wfAttachmentsNode = options.context.getModel(NodeFactory, {\r\n                                        attributes: {\r\n                                            id: attachmentsID\r\n                                        }\r\n                                    });\r\n\r\n                                    wfAttachmentsNode\r\n                                        .fetch()\r\n                                        .then(function () {\r\n                                            self.options.wfAttachmentsNode = wfAttachmentsNode;\r\n                                            self._renderStatusScreen();\r\n                                        });\r\n\r\n                                } else {\r\n                                    console.warn(\"The dataID for the Workflow Attachments is not available.\");\r\n                                    self._unblockParentActions();\r\n                                }\r\n\r\n                            } else {\r\n                                console.warn(\"Could not get data packages from Workflow model.\");\r\n                                self._unblockParentActions();\r\n                            }\r\n\r\n                        } else {\r\n                            self._renderStatusScreen();\r\n                        }\r\n                    });\r\n\r\n                }, function (error) {\r\n                    // error requiring node models:\r\n                    self._unblockParentActions();\r\n                }); // require\r\n\r\n        },\r\n\r\n        // Shows the Status Screen.\r\n        // Checks to make sure the required models are populated before showing the Status Screen view\r\n        _renderStatusScreen: function () {\r\n            var dialogTitle,\r\n                statusScreenDialog,\r\n                statusScreenView,\r\n                hasSecondaryNode,\r\n                self = this,\r\n                options = this.statusScreenOptions,\r\n                specifics = options.destinationModel.get(\"destination_specific\"),\r\n                outputDestination = options.destinationModel.get(\"output_destination\"),\r\n                deferred = $.Deferred();\r\n\r\n            if (outputDestination === \"node\") {\r\n                // Is this Node destination with Add Version, or the Version destination?\r\n                if (_.has(specifics, \"add_version_to_id\")) {\r\n                    outputDestination = \"version\";\r\n                }\r\n            }\r\n\r\n            dialogTitle = (options.destinationModel.get(\"run_in_background\")) ? lang.WebReportExecutingInBackground : lang.WebReportExecutedSuccessfully;\r\n\r\n            this._unblockParentActions();\r\n\r\n            // Require in the status view to prevent cyclic dependencies:\r\n            require([\r\n                    'csui/controls/dialog/dialog.view',\r\n                    'webreports/controls/status.screen/status.screen.view'],\r\n                function (DialogView,\r\n                          StatusScreen) {\r\n\r\n                    // Create the dialog view first:\r\n                    statusScreenDialog = new DialogView({\r\n                        title: dialogTitle,\r\n                        buttons: [\r\n                            {\r\n                                label: lang.okLabel,\r\n                                close: true,\r\n                                click: _.bind(self._onCloseStatusScreen, self)\r\n                            }\r\n                        ]\r\n                    });\r\n\r\n                    // Create the Status Screen view, passing in the dialogView for easy access later:\r\n                    statusScreenView = new StatusScreen(_.extend(options, {dialogView: statusScreenDialog}));\r\n\r\n                    // Set the Status Screen view as the view for the DialogView:\r\n                    statusScreenDialog.options.view = statusScreenView;\r\n\r\n                    // Listen for when one of the links is clicked in the Status Screen, so we can turn off the blocking view:\r\n                    statusScreenView.on(\"onClickNodeLink\", _.bind(self._onCloseStatusScreen, self))\r\n                        .on(\"onClickSecondaryLink\", _.bind(self._onCloseStatusScreen, self));\r\n\r\n                    // Show the DialogView:\r\n                    statusScreenDialog.show();\r\n\r\n                    deferred.resolve();\r\n\r\n                },\r\n                function () {\r\n                    deferred.reject();\r\n                }\r\n            ); // end require\r\n\r\n        },\r\n\r\n        _onCloseStatusScreen: function () {\r\n            this._unblockParentActions();\r\n            this._cleanupFactory();\r\n        },\r\n\r\n        showStatusScreen: function () {\r\n            var options = this.statusScreenOptions,\r\n                rib = options.runInBackground,\r\n                destination_data = (rib) ? options.destinationModel.toJSON() : options.executeModel.get(\"data\").destination_data // if it's running in background, use the destination info from the runPre forms result since we don't have the actual output yet\r\n            ;\r\n\r\n            // Check to see if we need to get any additional models for the status screen:\r\n            if (!rib && destination_data.output_destination in this.additionalModelMap) {\r\n                this._getStatusScreenModels();\r\n            } else {\r\n                // We have all we need:\r\n                this._renderStatusScreen();\r\n            }\r\n        },\r\n\r\n        // Evaluates the destination setting and routes accordingly.\r\n        // Used for WRs that DON'T have any prompts, but use the Browser destination:\r\n        _checkExecutionRoute: function (parms) {\r\n\r\n            var executionRoute,\r\n                destinationModel = this.destinationModel;\r\n\r\n            switch (destinationModel.get(\"output_destination\")) {\r\n\r\n                // browser and desktop use the classic opener:\r\n                case \"browser\":\r\n                case \"desktop\":\r\n                    executionRoute = \"classic\";\r\n                    break;\r\n\r\n                default:\r\n                    // everything else uses the status screen currently:\r\n                    executionRoute = \"smart_ui\";\r\n                    break;\r\n\r\n            }\r\n\r\n            return executionRoute;\r\n        },\r\n\r\n\r\n        // Checks the runPre model to see if the WebReport has any prompt-able parameters:\r\n        // Returns 1 of 3 possible states:\r\n        //\t\t\t- WR has no parameters to prompt (noPrompts)\r\n        //\t\t\t- WR has parameters that are supported in the smartUI (showSmartPrompts)\r\n        //\t\t\t- WR has parameters that aren't supported in smartUI OR a custom prompt screen. (showClassicPrompts)\r\n        _checkPrompts: function (suppressPromptView) {\r\n            var parm,\r\n                currentSchema,\r\n                currentOptions,\r\n                formSchema,\r\n                formOptions,\r\n                promptRoute = \"noPrompts\",\r\n                parametersModel = this.parametersModel,\r\n                promptFileId = parametersModel.get(\"prompt_file_id\"),\r\n                hasCustomPromptScreen = false,\r\n                runWRPreModel = this.runWRPreModel,\r\n                destinationModel = this.destinationModel,\r\n                outputDestination = destinationModel.get(\"output_destination\"),\r\n                fullPageWidget = (outputDestination === \"fullpagewidget\"),\r\n                self = this;\r\n\r\n            if (typeof runWRPreModel !== \"undefined\") {\r\n\r\n                hasCustomPromptScreen = (typeof promptFileId !== \"undefined\" && promptFileId !== \"\");\r\n\r\n                if (hasCustomPromptScreen) {\r\n                    // There's a custom prompt screen:\r\n                    promptRoute = \"showClassicPrompts\";\r\n                } else {\r\n                    // No custom prompt screen, now check each parameter for compatibilty with SmartUI:\r\n                    formSchema = runWRPreModel.get(\"schema\");\r\n                    formOptions = runWRPreModel.get(\"options\");\r\n\r\n                    if (typeof formSchema !== \"undefined\" && typeof formOptions !== \"undefined\") {\r\n\r\n                        for (parm in formSchema.properties) {\r\n\r\n                            if (formSchema.properties.hasOwnProperty(parm)) {\r\n\r\n                                currentSchema = formSchema.properties[parm];\r\n                                currentOptions = formOptions.fields[parm];\r\n\r\n                                // Do we have any viewable prompt parms?\r\n                                if (currentOptions.hidden === false) {\r\n\r\n                                    // Is it a Custom parm?\r\n                                    if (currentSchema.type === \"Custom\") {\r\n                                        // There's a Custom prompt parameter, so we need to show the Classic prompt page:\r\n                                        promptRoute = \"showClassicPrompts\";\r\n                                        break;\r\n                                    } else {\r\n                                        // This parameter is supported in the smartUI:\r\n                                        promptRoute = \"showSmartPrompts\";\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (!suppressPromptView) {\r\n                if (fullPageWidget) {\r\n                    this._unblockParentActions();\r\n                    this.executeWR(this.options.parameters);\r\n                } else {\r\n                    switch (promptRoute) {\r\n                        case 'showSmartPrompts':\r\n                            // Need to show the prompt screen.\r\n                            this.switchToPromptView(status, this.options)\r\n                                .done(function () {\r\n                                    self._unblockParentActions();\r\n                                });\r\n                            break;\r\n                        case 'showClassicPrompts':\r\n                            // Need to prompt in the classic UI:\r\n                            this.openInClassic();\r\n                            this._unblockParentActions();\r\n                            break;\r\n                        default:\r\n                            // no prompts:\r\n                            this._unblockParentActions();\r\n                            this.executeWR(this.options.parameters);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.promptRoute = promptRoute;\r\n\r\n            return promptRoute;\r\n        },\r\n\r\n        _blockParentActions: function () {\r\n            var origView;\r\n            if (_.has(this, \"options\") && _.has(this.options, \"originatingView\")) {\r\n                origView = this.options.originatingView;\r\n                origView && origView.blockActions && origView.blockActions();\r\n                origView && origView.tableView && origView.tableView.blockActions && origView.tableView.blockActions();\r\n            }\r\n        },\r\n\r\n        _unblockParentActions: function () {\r\n            var origView;\r\n            if (_.has(this, \"options\") && _.has(this.options, \"originatingView\")) {\r\n                origView = this.options.originatingView;\r\n                origView && origView.unblockActions && origView.unblockActions();\r\n                origView && origView.tableView && origView.tableView.unblockActions && origView.tableView.unblockActions();\r\n            }\r\n        },\r\n\r\n        _cleanupFactory: function () {\r\n            var options = this.options;\r\n\r\n            if (_.has(options, \"executeModel\")){\r\n                options.executeModel.clear({silent: true});\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    _.extend(RunWebReportPreController, {version: \"1.0\"});\r\n\r\n    return RunWebReportPreController;\r\n\r\n});\n","csui.define('webreports/utils/contexts/factories/run.webreport.pre.controller.factory',[\r\n    'csui/lib/underscore',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'webreports/controls/run.webreport.pre/run.webreport.pre.controller'\r\n], function (_,ObjectFactory, ConnectorFactory, RunWRPreController) {\r\n\r\n    var RunWebReportPreControllerFactory = ObjectFactory.extend({\r\n\r\n        // Unique prefix of the default model instance, when this model is assigned\r\n        // to a context it can be shared by multiple widgets\r\n        propertyPrefix: 'runwebreportprecontroller',\r\n\r\n        constructor: function RunWebReportPreControllerFactory(context, options) {\r\n\r\n            // Don't pass the attributes into the model:\r\n            if (_.has(options,\"attributes\")){\r\n                delete options.attributes;\r\n            }\r\n            if (_.has(options, this.propertyPrefix) && _.has(options[this.propertyPrefix], \"attributes\")){\r\n                delete options[this.propertyPrefix].attributes;\r\n            }\r\n\r\n            ObjectFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            // Obtain the server connector from the application context to share\r\n            // the server connection with the rest of the application; include\r\n            // the options, which can contain settings for dependent factories\r\n            var connector = context.getObject(ConnectorFactory, options),\r\n                modelOptions = _.extend( options.options, {\r\n                    connector: connector\r\n                });\r\n\r\n            // Expose the model instance in the `property` key on this factory\r\n            // instance to be used by the context\r\n            this.property = new RunWRPreController( {}, modelOptions );\r\n        }\r\n\r\n    });\r\n\r\n    return RunWebReportPreControllerFactory;\r\n\r\n});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!webreports/controls/parameter.prompt/impl/parameter.prompt.footer',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"    <button type=\\\"button\\\" class=\\\"binf-btn binf-btn-primary csui-acc-tab-region csui-acc-focusable-active cancelPrompt\\\">\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"cancel\") || (depth0 != null ? lookupProperty(depth0,\"cancel\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"cancel\",\"hash\":{},\"loc\":{\"start\":{\"line\":2,\"column\":119},\"end\":{\"line\":2,\"column\":129}}}) : helper)))\n    + \"</button>\\r\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"showCancelButton\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"loc\":{\"start\":{\"line\":1,\"column\":0},\"end\":{\"line\":3,\"column\":7}}})) != null ? stack1 : \"\")\n    + \"    <button type=\\\"button\\\" class=\\\"binf-btn binf-btn-primary csui-acc-tab-region csui-acc-focusable-active submitPrompt\\\">\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"runReport\") || (depth0 != null ? lookupProperty(depth0,\"runReport\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"runReport\",\"hash\":{},\"loc\":{\"start\":{\"line\":4,\"column\":119},\"end\":{\"line\":4,\"column\":132}}}) : helper)))\n    + \"</button>\";\n}});\nHandlebars.registerPartial('webreports_controls_parameter.prompt_impl_parameter.prompt.footer', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('webreports/controls/parameter.prompt/impl/nls/parameter.prompt.lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('webreports/controls/parameter.prompt/impl/nls/root/parameter.prompt.lang',{\r\n    runReport: 'Run WebReport',\r\n    cancel: 'Cancel',\r\n    noFormFields: 'There are no parameter fields to show.',\r\n    defaultPromptTitle: 'WebReport Parameters',\r\n    ariaLabel: 'WebReport Parameters'\r\n});\r\n\n","\ncsui.define('css!webreports/controls/parameter.prompt/impl/parameter.prompt',[],function(){});\n","csui.define('webreports/controls/parameter.prompt/impl/parameter.prompt.footer.view',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/jquery',\r\n    'csui/lib/marionette3',\r\n    'hbs!webreports/controls/parameter.prompt/impl/parameter.prompt.footer',\r\n    'i18n!webreports/controls/parameter.prompt/impl/nls/parameter.prompt.lang',\r\n    'css!webreports/controls/parameter.prompt/impl/parameter.prompt'\r\n], function(_, $, Marionette, template, lang){\r\n    'use strict';\r\n\r\n    var ParameterPromptFooterView = Marionette.View.extend({\r\n\r\n        className: 'webreports-parameter-prompt-footer',\r\n\r\n        template: template,\r\n\r\n        templateContext: function () {\r\n            var options = this.options || {};\r\n            return {\r\n                showCancelButton: options.showCancelButton,\r\n                cancel: lang.cancel,\r\n                runReport: lang.runReport\r\n            };\r\n        },\r\n\r\n        ui: {\r\n            submitPrompt: '.binf-btn.binf-btn-primary.submitPrompt',\r\n            cancelPrompt: '.binf-btn.binf-btn-primary.cancelPrompt'\r\n        },\r\n\r\n        events: {\r\n            'click @ui.submitPrompt': 'submitPrompt',\r\n            'click @ui.cancelPrompt': 'cancelPrompt'\r\n        },\r\n\r\n        constructor: function ParameterPromptFooterView(options) {\r\n\r\n            Marionette.View.prototype.constructor.call(this, options);\r\n\r\n        },\r\n\r\n        submitPrompt: function() {\r\n\r\n            var options = this.options,\r\n                originatingView = options.parentView.options.originatingView,\r\n                formView = options.parentView.getChildView('promptForm'),\r\n                formValues = (formView) ? formView.getValues() : {},\r\n                eventArgs = {\r\n                    view: options.parentView,\r\n                    formValues: formValues\r\n                };\r\n\r\n            if (formView && formView.validate()){\r\n                if (originatingView) {\r\n                    originatingView.trigger('prompt:form:submitted', eventArgs);\r\n                }\r\n                else {\r\n                    this.trigger('prompt:form:submitted', eventArgs);\r\n                }\r\n            }\r\n        },\r\n\r\n        cancelPrompt: function() {\r\n            var options = this.options;\r\n\r\n            if (options && options.originatingView) {\r\n                options.originatingView.trigger('prompt:form:cancelled');\r\n            }\r\n            else {\r\n                this.trigger('prompt:form:cancelled');\r\n            }\r\n        }\r\n    });\r\n\r\n    return ParameterPromptFooterView;\r\n\r\n});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!webreports/controls/parameter.prompt/impl/parameter.prompt',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div class=\\\"webreports-parameter-prompt-form-wrapper\\\">\\r\\n    <div class=\\\"webreports-parameter-prompt-form\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"webreports-parameter-prompt-footer\\\"></div>\";\n}});\nHandlebars.registerPartial('webreports_controls_parameter.prompt_impl_parameter.prompt', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('webreports/controls/parameter.prompt/parameter.prompt.view',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/marionette3',\r\n    'csui/controls/tile/behaviors/perfect.scrolling.behavior',\r\n    'csui/controls/form/form.view',\r\n    'webreports/controls/parameter.prompt/impl/parameter.prompt.footer.view',\r\n    'hbs!webreports/controls/parameter.prompt/impl/parameter.prompt',\r\n    'i18n!webreports/controls/parameter.prompt/impl/nls/parameter.prompt.lang',\r\n    'css!webreports/controls/parameter.prompt/impl/parameter.prompt'\r\n], function(_, Marionette, PerfectScrollingBehavior, FormView, FooterView, template, lang) {\r\n    'use strict';\r\n\r\n    var ParameterPromptView = Marionette.View.extend({\r\n\r\n        className: 'webreports-parameter-prompt-content',\r\n\r\n        template: template,\r\n\r\n        wrapTemplate: false,\r\n\r\n        regions: {\r\n            promptForm: {\r\n                el: '.webreports-parameter-prompt-form',\r\n                replaceElement: false\r\n            },\r\n            footer: {\r\n                el: '.webreports-parameter-prompt-footer',\r\n                replaceElement: true\r\n            }\r\n        },\r\n\r\n        behaviors: {\r\n            PerfectScrolling: {\r\n                behaviorClass: PerfectScrollingBehavior,\r\n                contentParent: '.webreports-parameter-prompt-form-wrapper',\r\n                suppressScrollX: true,\r\n                // like bottom padding of container, otherwise scrollbar is shown always\r\n                scrollYMarginOffset: 15\r\n            }\r\n        },\r\n\r\n        constructor: function ParameterPromptView(options) {\r\n\r\n            Marionette.View.prototype.constructor.call(this, options);\r\n\r\n        },\r\n\r\n        onRender: function() {\r\n            var options = this.options,\r\n                errorWithForm = (options.promptRoute !== 'showSmartPrompts'),\r\n                formView = new FormView({\r\n                    context: options.context,\r\n                    model: this.model\r\n                }),\r\n                footerView = new FooterView({\r\n                    context: options.context,\r\n                    parentView: this,\r\n                    model: this.model\r\n                }),\r\n                errorView = new Marionette.View({\r\n                    template: false,\r\n                    el: '<div class=\"csui-no-result-message\">' + lang.noFormFields + '</div>'\r\n                }),\r\n                contentView = (errorWithForm) ? errorView : formView;\r\n\r\n            this.showChildView('promptForm', contentView);\r\n\r\n            if (!errorWithForm){\r\n                this.showChildView('footer', footerView);\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return ParameterPromptView;\r\n\r\n});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!webreports/controls/parameter.prompt/impl/parameter.prompt.tile.view',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"        <div class=\\\"tile-type-icon\\\">\\r\\n            <span class=\\\"icon title-icon \"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"icon\") || (depth0 != null ? lookupProperty(depth0,\"icon\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"icon\",\"hash\":{},\"loc\":{\"start\":{\"line\":5,\"column\":41},\"end\":{\"line\":5,\"column\":49}}}) : helper)))\n    + \"\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n\";\n},\"3\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"imageUrl\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(4, data, 0),\"inverse\":container.noop,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":12,\"column\":15}}})) != null ? stack1 : \"\");\n},\"4\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"            <div class=\\\"tile-type-image \"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"imageClass\") || (depth0 != null ? lookupProperty(depth0,\"imageClass\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"imageClass\",\"hash\":{},\"loc\":{\"start\":{\"line\":9,\"column\":40},\"end\":{\"line\":9,\"column\":54}}}) : helper)))\n    + \"\\\">\\r\\n                <span class=\\\"tile-type-icon tile-type-icon-img\\\"><img src=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"imageUrl\") || (depth0 != null ? lookupProperty(depth0,\"imageUrl\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"imageUrl\",\"hash\":{},\"loc\":{\"start\":{\"line\":10,\"column\":74},\"end\":{\"line\":10,\"column\":86}}}) : helper)))\n    + \"\\\" alt=\\\"\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            </div>\\r\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"tile-header\\\">\\r\\n\\r\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"icon\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.program(3, data, 0),\"loc\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":13,\"column\":11}}})) != null ? stack1 : \"\")\n    + \"\\r\\n    <div class=\\\"tile-title\\\" >\\r\\n        <h2 class=\\\"csui-heading\\\">\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"title\") || (depth0 != null ? lookupProperty(depth0,\"title\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"title\",\"hash\":{},\"loc\":{\"start\":{\"line\":16,\"column\":33},\"end\":{\"line\":16,\"column\":42}}}) : helper)))\n    + \"</h2>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-controls\\\" title=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"title\") || (depth0 != null ? lookupProperty(depth0,\"title\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"title\",\"hash\":{},\"loc\":{\"start\":{\"line\":19,\"column\":38},\"end\":{\"line\":19,\"column\":47}}}) : helper)))\n    + \"\\\"></div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"tile-content\\\"></div>\\r\\n\\r\\n<div class=\\\"tile-footer\\\"></div>\\r\\n\";\n}});\nHandlebars.registerPartial('webreports_controls_parameter.prompt_impl_parameter.prompt.tile.view', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","// this is a simply wrapper that utilises the tile view (mainly for the header), without imposing the tile structure on the parameter prompt view itself\r\ncsui.define('webreports/controls/parameter.prompt/parameter.prompt.tile.view',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/jquery',\r\n    'csui/utils/base',\r\n    'csui/controls/tile/tile.view',\r\n    'webreports/controls/parameter.prompt/parameter.prompt.view',\r\n    'hbs!webreports/controls/parameter.prompt/impl/parameter.prompt.tile.view',\r\n    'i18n!webreports/controls/parameter.prompt/impl/nls/parameter.prompt.lang'\r\n], function(_, $, base, TileView, ParameterPromptView, template, lang) {\r\n    'use strict';\r\n\r\n    var ParameterPromptTileView = TileView.extend({\r\n\r\n        templateHelpers: function() {\r\n\r\n            var options = this.options,\r\n                originatingViewOptions = (options && _.has(options,'originatingView') && _.has(options.originatingView,'options')) ? options.originatingView.options : false,\r\n                titleObj = (originatingViewOptions && _.has(originatingViewOptions,'data') && _.has(originatingViewOptions.data,'title') && _.isObject(originatingViewOptions.data.title)) ? originatingViewOptions.data.title : lang.defaultPromptTitle,\r\n                iconClass = (originatingViewOptions && _.has(originatingViewOptions,'data') && _.has(originatingViewOptions.data,'titleBarIcon')) ? originatingViewOptions.data.titleBarIcon : 'title-webreports',\r\n                helpers = {\r\n                    title: base.getClosestLocalizedString(titleObj, lang.dialogTitle),\r\n                    icon: iconClass || 'title-webreports'\r\n                };\r\n\r\n            return helpers;\r\n        },\r\n\r\n        template: template,\r\n\r\n        contentView: ParameterPromptView,\r\n\r\n        constructor: function ParameterPromptTileView(options) {\r\n\r\n            this.contentViewOptions = options;\r\n\r\n            TileView.prototype.constructor.call(this, options);\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return ParameterPromptTileView;\r\n\r\n});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!webreports/controls/parameter.prompt/impl/widget.prompt.wrapper',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div class=\\\"webreports-widget-prompt-wrapper-content\\\"></div>\";\n}});\nHandlebars.registerPartial('webreports_controls_parameter.prompt_impl_widget.prompt.wrapper', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('webreports/controls/parameter.prompt/widget.prompt.wrapper.view',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/marionette3',\r\n    'csui/lib/backbone',\r\n    'csui/lib/jquery',\r\n    'csui/models/node/node.model',\r\n    'csui/controls/progressblocker/blocker',\r\n    'csui/controls/mixins/view.events.propagation/view.events.propagation.mixin',\r\n    'webreports/utils/general.utils',\r\n    'webreports/utils/url.webreports',\r\n    'webreports/mixins/webreports.view.mixin',\r\n    'webreports/utils/contexts/factories/run.webreport.pre.controller.factory',\r\n    'webreports/controls/parameter.prompt/parameter.prompt.tile.view',\r\n    'hbs!webreports/controls/parameter.prompt/impl/widget.prompt.wrapper'\r\n], function(_,\r\n            Marionette,\r\n            Backbone,\r\n            $,\r\n            NodeModel,\r\n            BlockingView,\r\n            ViewEventsPropagationMixin,\r\n            generalUtils,\r\n            UrlWebreports,\r\n            WebReportsViewMixin,\r\n            RunWrPreControllerFactory,\r\n            ParameterPromptTileView,\r\n            template) {\r\n\r\n    var WidgetPromptWrapperView = Marionette.View.extend({\r\n\r\n        template: template,\r\n\r\n        wrapTemplate: false,\r\n\r\n        regions: {\r\n            content: {\r\n                el: '.webreports-widget-prompt-wrapper-content',\r\n                replaceElement: true\r\n            }\r\n        },\r\n\r\n        ui: {\r\n            showParametersBtn: '.webreports-visual-count-btn-parameters',\r\n            tileHeader: '.tile-header'\r\n        },\r\n\r\n        events: {\r\n            'click @ui.showParametersBtn': 'onShowParameterPromptView',\r\n            'keyup @ui.showParametersBtn': 'onShowParameterPromptView',\r\n            'keydown .cs-go-back': 'onKeyInView',\r\n            'click .cs-go-back': 'onBackButton'\r\n        },\r\n\r\n        constructor: function WidgetPromptWrapperView(options) {\r\n            var promptOptions,\r\n                node,\r\n                thisView = this,\r\n                showPrompt = (options.data.parameterPrompt === 'showPromptForm' ||\r\n                                (options.data.outputDestination && options.data.outputDestination === \"fullpagewidget\"));\r\n\r\n            this.showPrompt = showPrompt;\r\n            this.widgetView = options.view;\r\n\r\n            if (showPrompt) {\r\n\r\n                node = new NodeModel({\r\n                    id: options.data.id,\r\n                    type: 30303 // webreport\r\n                });\r\n\r\n                promptOptions = {\r\n                    node: node,\r\n                    context: options.context,\r\n                    suppressPromptView: true,\r\n                    originatingView: this\r\n                };\r\n\r\n                var getPromptView = this._getPromptView(promptOptions, options);\r\n\r\n                getPromptView\r\n                    .done(function (options) {\r\n                        if (options) {\r\n                            thisView.promptOptions = options;\r\n                            thisView.listenTo(thisView, 'prompt:form:submitted', thisView.onPromptFormSubmitted);\r\n                            thisView._showParameterPromptView();\r\n                        }\r\n                        else {\r\n                            thisView._showWidgetView();\r\n                            thisView._fetchWidgetFactory();\r\n                        }\r\n                    })\r\n                    .fail(function(options){\r\n                        // Render the prompt view so the header and error message can be shown to the user.\r\n                        thisView.promptOptions = options;\r\n                        thisView._showParameterPromptView();\r\n                    });\r\n            }\r\n\r\n            Marionette.View.prototype.constructor.apply(this, arguments);\r\n\r\n            this.listenTo(this, \"factory:fetched:after:prompt\", this._showParameterBtn);\r\n        },\r\n\r\n        templateContext: function() {\r\n            return {\r\n                showPrompt: this.showPrompt\r\n            };\r\n        },\r\n\r\n        onShowParameterPromptView: function(event) {\r\n            if (event.type === \"click\" || (event.type === \"keyup\" && (event.keyCode === 13 || event.keyCode === 32))) {\r\n                event.stopPropagation();\r\n                this.trigger('edit:prompt:clicked');\r\n                this._showParameterPromptView();\r\n            }\r\n            return false;\r\n        },\r\n\r\n        _showParameterPromptView: function() {\r\n            var parameterPromptTileView,\r\n                promptOptions = this.promptOptions;\r\n\r\n            if (promptOptions) {\r\n                if (_.has(promptOptions.originatingView,'formValues')) {\r\n                    promptOptions.model.set({data: promptOptions.originatingView.formValues});\r\n                }\r\n                parameterPromptTileView = new ParameterPromptTileView(promptOptions);\r\n\r\n                this.showChildView('content', parameterPromptTileView);\r\n\r\n                // Make sure events are propagated.\r\n                // One component that needs this is the perfect scrolling.\r\n\r\n                this.propagateEventsToViews(parameterPromptTileView);\r\n            }\r\n        },\r\n\r\n        _createWidgetView: function(){\r\n            var ContentView = this.widgetView,\r\n                contentOptions;\r\n\r\n            contentOptions = _.extend(this.options,{\r\n                originatingView: this\r\n            });\r\n\r\n            return new ContentView(contentOptions);\r\n        },\r\n\r\n        _showWidgetView: function() {\r\n            var contentView = this._createWidgetView();\r\n\r\n            this.showChildView('content', contentView);\r\n\r\n            // This is needed because we're deferring the main widget view creation.\r\n            // Some widgets like the Visual Count need the dom refresh event to\r\n            // be propagated down so the chart control renders correctly.\r\n\r\n            this.propagateEventsToViews(contentView);\r\n        },\r\n\r\n        _fetchWidgetFactory: function() {\r\n            var factoryFetchPromise,\r\n                factory = this.getContentViewFactory();\r\n\r\n            if (factory){\r\n                factoryFetchPromise = factory.fetch();\r\n            } else {\r\n                console.error(\"Could not find the factory for widget.\");\r\n            }\r\n            return factoryFetchPromise;\r\n        },\r\n\r\n        getContentViewFactory: function(){\r\n            var factory,\r\n                contentView = this.getChildView(\"content\");\r\n\r\n            if (contentView){\r\n                factory = contentView.getFactory();\r\n            }\r\n\r\n            return factory;\r\n        },\r\n\r\n        _getPromptView: function(promptOptions, options) {\r\n            var isWebReportNodeContext = generalUtils.isWebReportNodeContext(options.context),\r\n                factoryOptions = {\r\n                    detached: true,\r\n                    unique: !isWebReportNodeContext,\r\n                    attributes: {\r\n                        id: promptOptions.node.get(\"id\")\r\n                    },\r\n                    options: {\r\n                        id: promptOptions.node.get(\"id\")\r\n                    }\r\n                },\r\n                runWRController = options.context.getObject(RunWrPreControllerFactory, factoryOptions),\r\n                // If this is via a full page widget run we may already have called checkForPromptParameters\r\n                promptParameters = runWRController.getPromptCheckPromise(),\r\n                deferred = $.Deferred();\r\n\r\n            if (promptParameters && isWebReportNodeContext){\r\n                // Make sure prompt parameters are passed onto other SubWebReports when running a WebReport with \"fullpagewidget\" destination\r\n                if (options && options.data && !options.data.parameters){\r\n                    options.data.parameters = [];\r\n                }\r\n                _.extend(options.data.parameters, UrlWebreports.getDataAsWebReportParameters(runWRController.options.parameters));\r\n            } else {\r\n                promptParameters = runWRController.checkForPromptParameters(promptOptions);\r\n            }\r\n\r\n            promptOptions.model = runWRController.runWRPreModel;\r\n\r\n            $.when(promptParameters).then(function(promptRoute) {\r\n\r\n                if (promptRoute === 'showSmartPrompts') {\r\n\r\n                    promptOptions.promptRoute = promptRoute;\r\n\r\n                    // If the option to show prompt is missing add it here.\r\n                    // This is missing for full page destinations but this setting\r\n                    // is needed to show the edit pencil for the prompt form.\r\n\r\n                    options.data.parameterPrompt = \"showPromptForm\";\r\n\r\n                    deferred.resolve(promptOptions);\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n\r\n            }, function(){\r\n                deferred.reject(promptOptions);\r\n            });\r\n\r\n            return deferred.promise();\r\n        },\r\n\r\n        _mergeParametersIntoOptions: function(eventArgs) {\r\n            var options = this.options || {};\r\n\r\n            // Null form values for Integers seem to be set to NaN by the csui FormView and FormModel\r\n            // Adding workaround here to set back to null.\r\n            this.formValues = _.mapObject(eventArgs.formValues, function(val, key){\r\n                if (_.isNaN(val)){\r\n                    val = null;\r\n                }\r\n                return val;\r\n            });\r\n\r\n            options.data.parameters = (_.has(options,'data') && _.has(options.data,'parameters') && _.isArray(options.data.parameters)) ? options.data.parameters : [];\r\n            _.extend(options.data.parameters, UrlWebreports.getDataAsWebReportParameters(this.formValues));\r\n        },\r\n\r\n        _showParameterBtn: function(){\r\n            var editParameterBtn = this.$el.find(\".webreports-widget-parameters-btn.binf-hidden\");\r\n\r\n            if (editParameterBtn){\r\n                editParameterBtn.removeClass(\"binf-hidden\");\r\n            }\r\n        },\r\n\r\n        onPromptFormSubmitted: function (eventArgs) {\r\n            this._mergeParametersIntoOptions(eventArgs);\r\n            this._showWidgetView();\r\n            var promise = this._fetchWidgetFactory();\r\n            this.trigger(\"factory:fetched:after:prompt\", {\r\n                promise: promise\r\n            });\r\n        },\r\n\r\n        onRender: function() {\r\n            if (this.showPrompt) {\r\n                this._showParameterPromptView();\r\n            } else {\r\n                this._showWidgetView();\r\n            }\r\n        },\r\n\r\n        onKeyInView: function (event) {\r\n            if (event.keyCode === 32 || event.keyCode === 13) {\r\n                this.onBackButton();\r\n            }\r\n        },\r\n\r\n        onBackButton: function() {\r\n            var context = this.options.context,\r\n                viewStateModel = context && context.viewStateModel;\r\n            if (viewStateModel) {\r\n                viewStateModel.restoreLastFragment();\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    // Add the mixin functionality to the target view\r\n    WebReportsViewMixin.mixin(WidgetPromptWrapperView.prototype);\r\n    _.extend(WidgetPromptWrapperView.prototype, ViewEventsPropagationMixin);\r\n\r\n    return WidgetPromptWrapperView;\r\n\r\n});\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/expanding.behavior',['require', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone', 'csui/lib/marionette', // Third party libraries\r\n    'csui/controls/tile/behaviors/expanding.behavior'\r\n], function (require, $, _, Backbone, Marionette, TileExpandingBehavior) {\r\n    \"use strict\";\r\n\r\n    var VisualDataExpandingBehavior = TileExpandingBehavior.extend({\r\n\r\n        triggers: {\r\n            'click .cs-more': 'expand'\r\n        },\r\n\r\n        _expand: function () {\r\n            if (this.view && this.view.chartCollection && !this.view.chartCollection.isEmpty()) {\r\n                var expandedViewValue = this.getOption('expandedView'),\r\n                    expandedViewClass = expandedViewValue.prototype instanceof Backbone.View ?\r\n                        expandedViewValue : expandedViewValue.call(this.view),\r\n                    requiredModules = ['csui/controls/dialog/dialog.view'],\r\n                    self = this;\r\n                if (_.isString(expandedViewClass)) {\r\n                    requiredModules.push(expandedViewClass);\r\n                }\r\n                require(requiredModules, function (DialogView) {\r\n                    if (_.isString(expandedViewClass)) {\r\n                        expandedViewClass = arguments[1];\r\n                    }\r\n                    var expandedViewOptions = getOption.call(self, 'expandedViewOptions'),\r\n                        expandedView = new expandedViewClass(expandedViewOptions);\r\n\r\n                    self._dialog = new DialogView({\r\n                        iconLeft: getOption.call(self, 'titleBarIcon'),\r\n                        imageLeftUrl: getOption.call(self, 'titleBarImageUrl'),\r\n                        imageLeftClass: getOption.call(self, 'titleBarImageClass'),\r\n                        title: getOption.call(self, 'dialogTitle'),\r\n                        iconRight: getOption.call(self, 'dialogTitleIconRight'),\r\n                        className: 'cs-expanded ' + (getOption.call(self, 'dialogClassName') || ''),\r\n                        buttons: expandedViewOptions.buttons,\r\n                        largeSize: true,\r\n                        view: expandedView\r\n                    });\r\n                    self.listenTo(self._dialog, 'hide', function () {\r\n                        self.view.trigger(\"collapse\");\r\n                        self.triggerMethod('collapse');\r\n                    });\r\n                    // Destroy the overlay view if its still open on expand.\r\n                    if (self.view.overlayVisible) {\r\n                        self.view.ui.toggleSettings.trigger('click');\r\n                    }\r\n                    self._dialog.show();\r\n\r\n                    //Force set the facet checkbox elements to tabindex=-1 to allow keyboard navigation (facet panel remains accessible if the header element is activated)\r\n                    $('.webreports-visual-count-facetpanelview .cs-content .csui-facet-item-checkbox button', '.webreports-visual-data.binf-modal .binf-modal-content')\r\n                    .attr('tabindex', '-1');\r\n                });\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    function getOption(property) {\r\n        var options = this.options || {};\r\n        var value = options[property];\r\n        return _.isFunction(value) ? options[property].call(this.view) : value;\r\n    }\r\n\r\n    return VisualDataExpandingBehavior;\r\n\r\n});\r\n\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count.button.view',['csui/lib/marionette3',\r\n        'csui/lib/underscore',\r\n        'csui/behaviors/keyboard.navigation/tabable.region.behavior'\r\n], function (Marionette, _, TabableRegion) {\r\n\r\n    var VisualCountButtonView = Marionette.View.extend({\r\n\r\n        tagName: 'button',\r\n\r\n        className: 'binf-btn',\r\n\r\n        template: _.noop,\r\n\r\n        triggers: {\r\n            'click': 'click:button'\r\n        },\r\n\r\n        behaviors: {\r\n            TabableRegion: {\r\n                behaviorClass: TabableRegion\r\n            }\r\n        },\r\n\r\n        constructor: function VisualCountButtonView(options) {\r\n            Marionette.View.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        isTabable: function () {\r\n            if (this.$el.attr('tabindex') === '-1') {\r\n                this.$el.attr('tabindex', '0')\r\n            }\r\n            return this.$el.is(':not(:disabled)') && this.$el.is(':not(:hidden)');\r\n        },\r\n        currentlyFocusedElement: function () {\r\n            if (this.$el.prop('tabindex') === -1) {\r\n                this.$el.prop('tabindex', 0);\r\n            }\r\n            return this.$el;\r\n        },\r\n\r\n        onRender: function () {\r\n            var button     = this.$el,\r\n                attributes = this.model.attributes;\r\n            button.text(attributes.name);\r\n            button.addClass(\r\n                attributes['default'] ? 'binf-btn-primary cs-add-button' : 'binf-btn-default');\r\n            if (attributes.toolTip) {\r\n                button.attr('title', attributes.toolTip);\r\n            }\r\n            if (attributes.id) {\r\n                button.attr('id', attributes.id);\r\n            }\r\n            if (attributes.separate) {\r\n                button.addClass('cs-separate');\r\n            }\r\n            this.updateButton(attributes);\r\n        },\r\n\r\n        updateButton: function (attributes) {\r\n\r\n            var $button = this.$el;\r\n            attributes || (attributes = {});\r\n            if (attributes.hidden !== undefined) {\r\n                if (attributes.hidden) {\r\n                    $button.addClass('binf-hidden');\r\n                } else {\r\n                    $button.removeClass('binf-hidden');\r\n                }\r\n            }\r\n            if (attributes.disabled !== undefined) {\r\n                $button.prop('disabled', attributes.disabled);\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return VisualCountButtonView;\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div class=\\\"webreports-visual-count\\\">\\r\\n    <div class=\\\"webreports-visual-count-facet-table-container\\\">\\r\\n        <div class=\\\"webreports-visual-count-facetpanelview\\\"></div>\\r\\n        <!--outer div is needed in order to float table contents right to accommodate  facets-->\\r\\n        <div class=\\\"webreports-visual-count-outertablecontainer\\\">\\r\\n            <!--inner div is needed in order to have tableview sized to remaining height of container-->\\r\\n            <div class=\\\"webreports-visual-count-innertablecontainer\\\">\\r\\n                <div class=\\\"webreports-visual-count-facetbarview\\\"></div>\\r\\n                <div class=\\\"webreports-visual-count-controls-parent\\\"></div>\\r\\n                <div class=\\\"webreports-visual-count-chart\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"webreports-visual-count-footer\\\"></div>\\r\\n</div>\\r\\n\";\n}});\nHandlebars.registerPartial('webreports_widgets_visual.data.filtered.count_impl_controls_visual.count_impl_visual.count', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count',[],function(){});\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count.footer.view',['csui/lib/marionette3',\r\n        'csui/lib/backbone',\r\n        'csui/lib/underscore',\r\n        'csui/utils/commands',\r\n        'webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count.button.view',\r\n        'hbs!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count',\r\n        'css!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count'\r\n], function (Marionette, Backbone, _, commands, VisualCountButtonView, template){\r\n\r\n    var VisualCountFooterView = Marionette.CollectionView.extend({\r\n\r\n        className: 'webreports-visual-count-footer binf-modal-footer',\r\n\r\n        template: template,\r\n\r\n        childView: VisualCountButtonView,\r\n\r\n        constructor: function VisualCountFooterView(options) {\r\n            this.collection = this._createCommandCollection(options);\r\n            Marionette.CollectionView.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        _createCommandCollection: function(options){\r\n            var commandCollection,\r\n                toolbarItems = options.toolbarItems;\r\n\r\n            if (toolbarItems && _.has(toolbarItems, \"footer\")){\r\n                commandCollection = toolbarItems.footer.collection;\r\n                if (commandCollection){\r\n                    var disabledToolItem = commandCollection.findWhere({signature: 'disabled'});\r\n                    if (disabledToolItem){\r\n                        commandCollection.remove(disabledToolItem);\r\n                    }\r\n                }\r\n            } else {\r\n                commandCollection = new Backbone.Collection();\r\n            }\r\n\r\n            return commandCollection;\r\n        },\r\n\r\n        onChildviewClickButton: function(childView) {\r\n            var options = this.options,\r\n                originatingView = options.originatingView;\r\n\r\n            if (originatingView){\r\n                originatingView.trigger(\"button:clicked\", childView, options);\r\n            } else {\r\n                throw 'VisualCountView requires an originatingView if buttons are used';\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return VisualCountFooterView;\r\n\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/client.collection/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/client.collection/nls/root/lang',{\r\n    other: 'Other',\r\n    noValue: '(No value)'\r\n});\r\n\n","\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/client.collection/chart.collection.client.mixin',['csui/lib/underscore',\r\n        'csui/lib/d3',\r\n        'i18n!webreports/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/client.collection/nls/lang'\r\n], function (_,\r\n             d3,\r\n             lang) {\r\n    \"use strict\";\r\n\r\n    var VisualCountClientCollectionMixin = {\r\n\r\n        mixin: function (prototype) {\r\n            return _.extend(prototype, {\r\n\r\n                nest: function(dataset,activeColumn) {\r\n                    // for providing a count of 'values' (col 1) where 'key' (col n) = activeColumn\r\n\r\n                    var nestedData = [],\r\n                        index,\r\n                        key,\r\n                        count,\r\n                        initialNestedItem = {},\r\n                        nestedItem = {},\r\n                        countColumn = this.columnCollection.getCountColumn(),\r\n                        activeColumnFormatted = activeColumn + \"_formatted\",\r\n                        countColumnFormatted = countColumn + \"_formatted\";\r\n\r\n                    _.each(dataset, _.bind(function(row){\r\n\r\n                        key = this._removeEmptyValues(row[activeColumn]);\r\n                        // Check if the current value in the Active Column has already been counted\r\n                        // and added to nestedData\r\n                        index = _.findIndex(nestedData, function(nestedRow){\r\n                            return nestedRow[activeColumn] === key;\r\n                        });\r\n\r\n                        // If this is a new value, add it to the nestedData, otherwise increment the count of the existing object\r\n                        if (index === -1){\r\n                            initialNestedItem[activeColumn] = key;\r\n                            initialNestedItem[activeColumnFormatted] = key.toString();\r\n                            initialNestedItem[countColumn] = 1;\r\n                            initialNestedItem[countColumnFormatted] = \"1\";\r\n                            nestedData.push(initialNestedItem);\r\n                            initialNestedItem = {};\r\n                        } else {\r\n                            nestedItem = nestedData[index];\r\n                            count = nestedItem[countColumn];\r\n                            count = count + 1;\r\n                            nestedItem[countColumn] = count;\r\n                            nestedItem[countColumnFormatted] = count.toString();\r\n                            nestedData[index] = nestedItem;\r\n                        }\r\n\r\n                    },this));\r\n\r\n                    return nestedData;\r\n                },\r\n\r\n                filterBy: function(dataset,filters) {\r\n                    // returns a reduced dataset where activeColumn value == filterBy\r\n                    // filters is an array of objects: e.g. [{column: 'habitat',value: 'jungle'},{column: 'legs',value: 4 }] will likely return leopards but not chickens\r\n\r\n                    var column = null,\r\n                        value = null,\r\n                        operator = null;\r\n\r\n                    function dataFiltered(d) {\r\n                        var filtered,\r\n                            currentValue = this._removeEmptyValues(d[column]);\r\n                        switch(operator) {\r\n                            case '==':\r\n                                filtered = currentValue === value;\r\n                                break;\r\n                            case 'IN':\r\n                                filtered = (value.indexOf(currentValue) !== -1);\r\n                                break;\r\n                            default:\r\n                                filtered = (value.indexOf(currentValue) !== -1);\r\n                        }\r\n\r\n                        return filtered;\r\n                    }\r\n\r\n                    _.each(filters,_.bind(function(item) {\r\n                        // iterates through each of the objects in the filters array, returning a new dataset of rows where the filter is true\r\n                        value = this._removeEmptyValues(item.value);\r\n                        column = item.column;\r\n                        operator = item.operator;\r\n                        dataset = dataset.filter(_.bind(dataFiltered, this));\r\n                    }, this));\r\n\r\n                    return dataset;\r\n                },\r\n\r\n                sortNest: function(dataset,sortOptions) {\r\n                    // sorts data that has been nested by this.nest\r\n                    var activeColumn = this.columnCollection.getActiveColumn(),\r\n                        countColumn = this.columnCollection.getCountColumn(),\r\n                        sorted = [],\r\n                        sortBy,\r\n                        sortDir;\r\n\r\n                    sortBy = sortOptions.sortBy;\r\n                    sortDir = sortOptions.sortOrder;\r\n\r\n                    dataset = dataset.sort(function(a,b) {\r\n                        switch (sortBy.toLowerCase()) {\r\n                            case 'ordinal':\r\n                                if (isNaN(a[activeColumn])) {\r\n                                    // sort alpha values\r\n                                    sorted = d3.ascending(a[activeColumn],b[activeColumn]);\r\n                                }\r\n                                else {\r\n                                    sorted = a[activeColumn] - b[activeColumn];\r\n                                }\r\n                                break;\r\n                            case 'count':\r\n                                sorted = a[countColumn] - b[countColumn];\r\n                                break;\r\n                            default:\r\n                            // nothing\r\n                        }\r\n                        return sorted;\r\n                    });\r\n                    return (sortDir === 'asc') ? dataset : dataset.reverse();\r\n                },\r\n\r\n                groupOutlyingValues: function(dataset,maxItems) {\r\n                    // returns a new dataset where any values lower than the top n are grouped into 'other'\r\n                    // dataset must be sorted first\r\n                    if (dataset.length > maxItems+1 && maxItems > -1) { // only sensible to group values if there are more than 2 of them\r\n                        var activeColumn = this.columnCollection.getActiveColumn(),\r\n                            countColumn = this.columnCollection.getCountColumn(),\r\n                            d1 = dataset.slice(0,maxItems),\r\n                            d2 = dataset.slice(maxItems),\r\n                            oValue = _.pluck(d2,countColumn),\r\n                            oTotal = _.reduce(oValue,function(memo,item) {\r\n                                return memo + item;\r\n                            },0),\r\n                            others = {};\r\n\r\n                        others[activeColumn] = \"ga_other\";\r\n                        others[activeColumn + \"_formatted\"] = lang.other;\r\n                        others[countColumn] = oTotal;\r\n                        others[countColumn + \"_formatted\"] = oTotal.toString();\r\n\r\n                        d1.push(others);\r\n                        return d1;\r\n                    }\r\n                    else {\r\n                        return dataset;\r\n                    }\r\n                },\r\n\r\n                _removeEmptyValues: function(value){\r\n                    return (value === null ||value === \"\" || value === undefined) ? lang.noValue :value;\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    return VisualCountClientCollectionMixin;\r\n\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/filterable/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/filterable/nls/root/lang',{\r\n    other: 'Other'\r\n});\r\n\n","\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/filterable/filterable.mixin',['csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/models/facets',\r\n    'csui/models/facettopics',\r\n    'webreports/utils/general.utils',\r\n    'i18n!webreports/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/filterable/nls/lang'\r\n], function (_,\r\n             Backbone,\r\n             FacetCollection,\r\n             FacetTopicCollection,\r\n             generalUtils,\r\n             lang) {\r\n    \"use strict\";\r\n\r\n    var VisualCountFilterableMixin = {\r\n\r\n        mixin: function (prototype) {\r\n            return _.extend(prototype, {\r\n\r\n                makeFilterable: function () {\r\n                    this.facetCollection = new FacetCollection();\r\n                    this.facetCollection.filters = [];\r\n                },\r\n\r\n                setFacetData: function (filteredData) {\r\n                    var availableValues = [],\r\n                        facets = this.columnCollection.toJSON(),\r\n                        activeColumn = _.findWhere(facets, {active_column: true}),\r\n                        activeColumnName = activeColumn.name,\r\n                        facetModel = this.facetCollection.findWhere({id: activeColumn.id}),\r\n                        facetModelInCollection = !_.isUndefined(facetModel),\r\n                        filterStillApplied = !_.isUndefined(_.findWhere(this.facetCollection.filters, {id: activeColumn.id})),\r\n                        countColumn = this.columnCollection.getCountColumn(),\r\n                        activeFacet = {},\r\n                        facetObj = {};\r\n\r\n                    if (!facetModelInCollection || (facetModelInCollection && !filterStillApplied)) {\r\n\r\n                        activeFacet[activeColumn.id] = _.map(filteredData, _.bind(function (groupedItem) {\r\n                            var activeColumnFormattedValue = generalUtils.getCaseInsensitiveProperty(groupedItem, activeColumn.name + \"_formatted\"),\r\n                                activeColumnValue = generalUtils.getCaseInsensitiveProperty(groupedItem, activeColumnName);\r\n\r\n                            return {\r\n                                name: activeColumnFormattedValue || activeColumnValue,\r\n                                value: (activeColumnValue === null) ? \"\" : activeColumnValue.toString(),\r\n                                valueNative: activeColumnValue,\r\n                                total: groupedItem[countColumn],\r\n                                percentage: this.getPercentageOfTotal(groupedItem[countColumn])\r\n                            };\r\n                        }, this));\r\n\r\n                        activeFacet[activeColumn.id] = _.reject(activeFacet[activeColumn.id], function (facet) {\r\n                            return facet.name === lang.other;\r\n                        });\r\n\r\n                        availableValues[0] = activeFacet;\r\n\r\n                        _.each(facets, function (facet) {\r\n                            facetObj[facet.id] = facet;\r\n                        });\r\n\r\n                        _.each(availableValues, _.bind(function (item) {\r\n                            // topics are nested by the facet id as the single key property\r\n                            var id = _.keys(item)[0],\r\n                                topics = item[id] || [],\r\n                                object = {};\r\n\r\n                            object[id] = facetObj[id];\r\n                            facetObj[id].name = facetObj[id].name_formatted;\r\n\r\n                            facetModel = new Backbone.Model(facetObj[id]);\r\n                            facetModel.topics = new FacetTopicCollection(topics);\r\n                            facetModel.set({\r\n                                \"topics\": topics,\r\n                                \"total_displayable\": topics.length,\r\n                                \"items_to_show\": 10\r\n                            });\r\n                        }, this));\r\n                    }\r\n\r\n                    facetModel = this._setAsSelected(facetModel);\r\n                    facetModel.topics.reset(facetModel.get(\"topics\"));\r\n\r\n                    if (this.facetCollection) {\r\n                        var otherFilteredFacets = this._getOtherFilteredFacets();\r\n\r\n                        otherFilteredFacets.push(facetModel);\r\n\r\n                        this.facetCollection.reset(otherFilteredFacets);\r\n                    } else {\r\n                        this.makeFilterable();\r\n                    }\r\n                },\r\n\r\n                // Gets the filters returned from the Filtered Count API\r\n                getFCFilters: function () {\r\n                    return this.unMapFilterData();\r\n                },\r\n\r\n                // Gets the filters formatted for use with the Facet panel\r\n                getFacetFilters: function () {\r\n                    return this.facetCollection.filters;\r\n                },\r\n\r\n                // Sets the filters formatted for use with the Facet panel\r\n                setFacetFilters: function (filters) {\r\n                    filters = filters || [];\r\n\r\n                    if (!this.facetCollection.filters) {\r\n                        this.facetCollection.filters = this.mapFilterData(filters);\r\n                        this.facetCollection.trigger('reset');\r\n                    }\r\n                },\r\n\r\n                // Convert filters to format expected by facet.bar.view.\r\n                mapFilterData: function (filters) {\r\n                    return _.map(filters, function (filtersToMap) {\r\n                            return {\r\n                                id: filtersToMap.column.toString(),\r\n                                values: [{id: filtersToMap.value.toString()}]\r\n                            };\r\n                        }\r\n                    );\r\n                },\r\n\r\n                // Convert filters to format expected by server.\r\n                unMapFilterData: function () {\r\n                    var fcFilters = [],\r\n                        self = this,\r\n                        filters = this.getFacetFilters();\r\n\r\n                    if (filters.length > 0) {\r\n\r\n                        _.each(filters, function (filter) {\r\n                            var columnModel = self.columnCollection.findWhere({id: filter.id}),\r\n                                values = _.map(filter.values, function (value) {\r\n                                    return value.id;\r\n                                });\r\n\r\n                            values = self.resolveToActualValues(filter.id, values);\r\n\r\n                            var unMappedFilter = {\r\n                                column: columnModel.get(\"name\"),\r\n                                operator: 'IN',\r\n                                value: values\r\n                            };\r\n                            fcFilters.push(unMappedFilter);\r\n                        });\r\n                    }\r\n\r\n                    return fcFilters;\r\n                },\r\n\r\n                getTotalCount: function () {\r\n                    var filteredData = this.filteredData,\r\n                        countColumn = this.columnCollection.getCountColumn();\r\n\r\n                    return _.reduce(filteredData, function (memo, value) {\r\n                        return memo + value[countColumn];\r\n                    }, 0);\r\n                },\r\n\r\n                getPercentageOfTotal: function (value) {\r\n                    return ((value / this.getTotalCount()) * 100);\r\n                },\r\n\r\n                getActualColumnName: function (formattedColumnName) {\r\n                    var actualColumnName = formattedColumnName,\r\n                        columnCollection = this.columnCollection,\r\n                        columnModel = columnCollection.findWhere({name_formatted: formattedColumnName});\r\n\r\n                    if (columnModel && (columnModel.get(\"name\") !== columnModel.get(\"name_formatted\"))) {\r\n                        actualColumnName = columnModel.get(\"name\");\r\n                    }\r\n\r\n                    return actualColumnName;\r\n                },\r\n\r\n                onFiltersUpdated: function () {\r\n                    if (this.grouped_on_server) {\r\n                        this.fetch();\r\n                    } else {\r\n                        this.set(this.sortGroupAndFilter());\r\n                        this.facetCollection.trigger(\"reset\");\r\n                    }\r\n                },\r\n\r\n                resolveToActualValues: function (id, formattedValues) {\r\n                    var facetTopicModel,\r\n                        actualValues = [],\r\n                        facetTopicCollection = this._getFacetTopicCollection(id);\r\n\r\n                    if (facetTopicCollection) {\r\n                        _.each(formattedValues, function (formattedValue) {\r\n                            facetTopicModel = facetTopicCollection.findWhere({value: formattedValue});\r\n                            actualValues.push(facetTopicModel.get(\"valueNative\"));\r\n                        });\r\n                        return actualValues;\r\n                    } else {\r\n                        return formattedValues;\r\n                    }\r\n                },\r\n\r\n                _getFacetTopicCollection: function (id) {\r\n                    var facetModel = this.facetCollection.findWhere({id: id});\r\n                    return facetModel.topics;\r\n                },\r\n\r\n                _setAsSelected: function (facetModel) {\r\n                    var self = this,\r\n                        newTopics = [],\r\n                        id = facetModel.get(\"id\"),\r\n                        filters = this.facetCollection.filters,\r\n                        topics = facetModel.get(\"topics\");\r\n\r\n                    _.each(topics, function (topic) {\r\n                        var facetModelFilter = _.filter(filters, function (filter) {\r\n                            return filter.id === id;\r\n                        });\r\n\r\n                        if (facetModelFilter.length > 0) {\r\n                            var selected = !_.isUndefined(_.findWhere(facetModelFilter[0].values, {id: topic.value}));\r\n\r\n                            if (selected === true) {\r\n                                topic.selected = selected;\r\n                                topic.count = null;\r\n                                topic.percentage = null;\r\n                                newTopics.push(topic);\r\n                            }\r\n                        } else {\r\n                            newTopics.push(topic);\r\n                        }\r\n                    });\r\n\r\n                    facetModel.set({\r\n                        \"topics\": newTopics\r\n                    });\r\n\r\n                    return facetModel;\r\n                },\r\n\r\n                _getOtherFilteredFacets: function () {\r\n                    var activeColumn = this.columnCollection.findWhere({active_column: true}),\r\n                        filters = this.facetCollection.filters;\r\n                    return this.facetCollection.filter(function (facetModel) {\r\n                        return facetModel.get(\"id\") !== activeColumn.get(\"id\") && _.findWhere(filters, {id: facetModel.get(\"id\")});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    return VisualCountFilterableMixin;\r\n\r\n});\r\n\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/postable/postable.mixin',['csui/lib/underscore',\r\n        'webreports/utils/url.webreports'\r\n], function (_,\r\n             UrlWebReports) {\r\n    \"use strict\";\r\n\r\n    var VisualCountPostableMixin = {\r\n\r\n        mixin: function (prototype) {\r\n            var originalFetch = prototype.fetch;\r\n\r\n            prototype.fetch = function (options) {\r\n                options || (options = {});\r\n\r\n                var requestExtensions,\r\n                    data = {\r\n                        format: 'webreport',\r\n                        method: 'GET'\r\n                    },\r\n                    chartQueryParms = this.getFilteredCountQuery(options);\r\n\r\n                data = _.extend(data, chartQueryParms);\r\n\r\n                requestExtensions = {\r\n                    type:'POST',\r\n                    data: data\r\n                };\r\n\r\n                // This collection can have a large payload so we send it as a POST and add &method=GET\r\n                // in the url function. This is converted to a GET by the REST API request handler when\r\n                // the POST reaches the server.\r\n                if (options){\r\n                    _.extend(options,requestExtensions);\r\n                } else {\r\n                    options = requestExtensions;\r\n                }\r\n\r\n                return originalFetch.call(this, options);\r\n            };\r\n\r\n            return _.extend(prototype, {\r\n\r\n                getFilteredCountQuery: function(options){\r\n                    var postData = {},\r\n                        context = this.options.context || undefined,\r\n                        csuiContainerID = UrlWebReports.getCurrentContainerID(context),\r\n                        wrParameters = this.options.parameters || [],\r\n                        parameterData = UrlWebReports.getWebReportParametersAsData(wrParameters);\r\n\r\n                    // Extend the POST data with the current container ID if defined\r\n                    if (!_.isUndefined(csuiContainerID)){\r\n                        postData = _.extend(postData, {csuiContainerID: csuiContainerID} );\r\n                    }\r\n\r\n                    // Any WebReport parameters which conflict with reserved Rest parameters for the core widget behaviour e.g. active_column will be ignored.\r\n                    _.extend(postData, parameterData, this.getFilteredCountParms());\r\n\r\n                    return postData;\r\n                },\r\n\r\n                getFilteredCountParms: function(){\r\n                    var parms = {};\r\n\r\n                    parms.filterable = (this.options.filterable === true);\r\n                    parms.expandable = (this.options.expandable === true);\r\n\r\n                    _.extend(parms, this.chartControlsModel.attributes);\r\n\r\n                    if (parms.sort_by === 'ordinal' ){\r\n                        parms.sort_by = parms.active_column;\r\n                    }\r\n\r\n                    parms.fc_filters = JSON.stringify(this.getFCFilters());\r\n\r\n                    parms.total_count = this.getTotalCount();\r\n\r\n                    return parms;\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    return VisualCountPostableMixin;\r\n\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/models/visual.count/chart.collection/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/models/visual.count/chart.collection/nls/root/lang',{\r\n    noValue: '(No value)',\r\n    invalidActiveColumn: 'An invalid Active Column was specified.'\r\n});\r\n\n","\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/models/visual.count/chart.collection/chart.collection',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/dialogs/modal.alert/modal.alert',\r\n    'csui/models/mixins/connectable/connectable.mixin',\r\n    'webreports/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/client.collection/chart.collection.client.mixin',\r\n    'webreports/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/filterable/filterable.mixin',\r\n    'webreports/widgets/visual.data.filtered.count/impl/models/mixins/visual.count/postable/postable.mixin',\r\n    'webreports/utils/general.utils',\r\n    'i18n!webreports/widgets/visual.data.filtered.count/impl/models/visual.count/chart.collection/nls/lang',\r\n    'csui/utils/deepClone/deepClone'\r\n], function (_,\r\n             Backbone,\r\n             ModalAlert,\r\n             ConnectableMixin,\r\n             ChartCollectionClientMixin,\r\n             FilterableMixin,\r\n             PostableMixin,\r\n             generalUtils,\r\n             lang) {\r\n\r\n    var VisualCountChartCollection = Backbone.Collection.extend({\r\n\r\n        // Constructor gives an explicit name to the object in the debugger\r\n        constructor: function VisualCountChartCollection(models, options) {\r\n            Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n\r\n            if (_.isUndefined(options)) {\r\n                options = {};\r\n            }\r\n\r\n            if (options && options.id && !this.id) {\r\n                this.id = options.id;\r\n            }\r\n\r\n            this.options = options;\r\n\r\n            // Enable this model for communication with the CS REST API\r\n            this.makeConnectable(options);\r\n            // Add support for creating filter collections to use with facet filtering\r\n            this.makeFilterable(options);\r\n        },\r\n\r\n        // Computes the REST API URL using the connection options\r\n        url: function () {\r\n            return this.connector.connection.url + '/nodes/' + this.id + '/output';\r\n        },\r\n\r\n        parse: function (response) {\r\n            if (response.data && response.data.length > 0) {\r\n                this.grouped_on_server = response.grouped_on_server || false;\r\n                this.sorted_on_server = response.sorted_on_server || false;\r\n                this.setColumns(response.columns);\r\n                this.setFacetFilters(response.fc_filters);\r\n\r\n                if (this._isResponseValid(response)) {\r\n                    if (response.grouped_on_server) {\r\n                        this.groupedData = response;\r\n                    } else {\r\n                        this.rawCollection = response.data;\r\n                    }\r\n\r\n                    this.sortGroupAndFilter();\r\n\r\n                    return this.filteredData;\r\n                }\r\n            } else {\r\n                return [];\r\n            }\r\n        },\r\n\r\n        _isResponseValid: function (response) {\r\n            var ok = true;\r\n            if (!response.grouped_on_server) {\r\n                if (!this._isActiveColumnValid(response)) {\r\n                    ModalAlert.showError(lang.invalidActiveColumn);\r\n                    ok = false;\r\n                }\r\n            }\r\n            return ok;\r\n        },\r\n\r\n        _isActiveColumnValid: function (response) {\r\n            return !_.isUndefined(generalUtils.getCaseInsensitiveProperty(_.first(response.data), this.columnCollection.getActiveColumn()));\r\n        },\r\n\r\n        filteredData: {},\r\n        rawCollection: {},\r\n\r\n        getSortOptions: function () {\r\n            return {\r\n                sortBy: this.chartControlsModel.get('sort_by'),\r\n                sortOrder: this.chartControlsModel.get('sort_order')\r\n            };\r\n        },\r\n\r\n        getGroupAfter: function () {\r\n            return this.chartControlsModel.get('group_after');\r\n        },\r\n\r\n        setColumns: function (columns) {\r\n            var activeColumn = _.findWhere(columns, {active_column: true}),\r\n                countColumn = _.findWhere(columns, {count_column: true}),\r\n                noActiveOrCountColSet = !activeColumn || !countColumn;\r\n\r\n            // If the Active or Count columns aren't set, do a case insensitive check and set them.\r\n            if (noActiveOrCountColSet) {\r\n                columns = _.map(columns, _.bind(function (column) {\r\n                    if (this.options.activeColumn && (column.name.toLowerCase() === this.options.activeColumn.toLowerCase())) {\r\n                        column.active_column = true;\r\n                    }\r\n                    if (this.options.countColumn && (column.name.toLowerCase() === this.options.countColumn.toLowerCase())) {\r\n                        column.active_column = true;\r\n                    }\r\n                    return column;\r\n                }, this));\r\n            }\r\n\r\n            // The facet panel is expecting ids to be strings\r\n            _.each(columns, function (column) {\r\n                column.id = column.id.toString();\r\n            });\r\n\r\n            this.columnCollection.set(columns);\r\n        },\r\n\r\n        sortGroupAndFilter: function (options) {\r\n            var filteredData,\r\n                nestedData;\r\n\r\n            if (this.grouped_on_server) {\r\n                filteredData = this.groupedData.data;\r\n                if (!this.sorted_on_server || (options && options.sort)) {\r\n                    filteredData = this.sortNest(filteredData, this.getSortOptions());\r\n                }\r\n            } else {\r\n                nestedData = this.nest(this.filterBy(this.rawCollection, this.getFCFilters()), this.columnCollection.getActiveColumn());\r\n                filteredData = this.groupOutlyingValues(this.sortNest(nestedData, this.getSortOptions()), this.getGroupAfter());\r\n            }\r\n\r\n            filteredData = this._checkGroupedCategory(filteredData);\r\n            this.filteredData = filteredData;\r\n\r\n            this.setFacetData(filteredData);\r\n\r\n            return filteredData;\r\n        },\r\n\r\n        _checkGroupedCategory: function (filteredData) {\r\n            var groupedCategory = this._findGroupedCategory(filteredData);\r\n\r\n            if (groupedCategory) {\r\n                groupedCategory.grouped_category = true;\r\n            }\r\n\r\n            return filteredData;\r\n        },\r\n\r\n        _findGroupedCategory: function (filteredData) {\r\n            var findObj = {},\r\n                activeColumn = this.columnCollection.getActiveColumn();\r\n\r\n            findObj[activeColumn] = \"ga_other\";\r\n\r\n            return _.findWhere(filteredData, findObj);\r\n        },\r\n\r\n        onChartOptionsUpdated: function (args) {\r\n            var clientOnlyChanges = (_.keys(_.omit(args, ['sort_by', 'sort_order', 'view_value_as_percentage', 'theme_name'])).length === 0),\r\n                goToServer = (this.grouped_on_server && !clientOnlyChanges);\r\n\r\n            if (!_.has(args, 'column_names')) {\r\n                if (goToServer) {\r\n                    this.fetch();\r\n                } else if (clientOnlyChanges) {\r\n                    this.set(this.sortGroupAndFilter({sort: true}));\r\n                } else {\r\n                    if (_.has(args, 'active_column')) {\r\n                        this.columnCollection.updateActiveColumn(args.active_column);\r\n                    }\r\n                    this.set(this.sortGroupAndFilter());\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    ConnectableMixin.mixin(VisualCountChartCollection.prototype);\r\n    ChartCollectionClientMixin.mixin(VisualCountChartCollection.prototype);\r\n    FilterableMixin.mixin(VisualCountChartCollection.prototype);\r\n    PostableMixin.mixin(VisualCountChartCollection.prototype);\r\n\r\n    return VisualCountChartCollection;\r\n\r\n});\r\n\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/models/visual.count/column.collection/column.model',[\r\n  'csui/lib/backbone'\r\n], function (Backbone) {\r\n\r\n  var FilteredCountColumnModel = Backbone.Model.extend({\r\n\r\n    defaults: {\r\n      \"active_column\":false,\r\n      \"client_format\":{\r\n        \"type\":\"none\"\r\n      },\r\n      \"column_key\":\"\",\r\n      \"count_column\":false,\r\n      \"data_type\":10,\r\n      \"id\": undefined ,\r\n      \"name\":\"\",\r\n      \"tag_format\":\"\"\r\n    },\r\n\r\n    // Constructor gives an explicit name to the object in the debugger\r\n    constructor: function FilteredCountColumnModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n    }\r\n\r\n  });\r\n\r\n  return FilteredCountColumnModel;\r\n\r\n});\r\n\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/models/visual.count/column.collection/column.collection',[\r\n    'csui/lib/backbone',\r\n    'csui/lib/underscore',\r\n    'webreports/widgets/visual.data.filtered.count/impl/models/visual.count/column.collection/column.model'\r\n], function (Backbone, _, VisualCountColumnModel) {\r\n\r\n    var VisualCountColumnCollection = Backbone.Collection.extend({\r\n\r\n        // Constructor gives an explicit name to the object in the debugger\r\n        constructor: function VisualCountColumnCollection(models, options) {\r\n            Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n\r\n        },\r\n\r\n        model: VisualCountColumnModel,\r\n\r\n        getActiveColumn: function(){\r\n            var activeColumnName,\r\n                activeColumnModel;\r\n\r\n            activeColumnModel = this.findWhere({active_column:true});\r\n\r\n            if (activeColumnModel){\r\n                activeColumnName = activeColumnModel.get(\"name\");\r\n            }\r\n\r\n            return activeColumnName;\r\n        },\r\n\r\n        getActiveColumnFormatted: function(){\r\n            var activeColumnName,\r\n                activeColumnModel;\r\n\r\n            activeColumnModel = this.findWhere({active_column:true});\r\n\r\n            if (activeColumnModel){\r\n                activeColumnName = activeColumnModel.get(\"name_formatted\");\r\n            }\r\n\r\n            return activeColumnName;\r\n        },\r\n\r\n        getCountColumn: function(){\r\n            var countColumnName,\r\n                countColumnModel;\r\n\r\n            countColumnModel = this.findWhere({count_column:true});\r\n\r\n            if (countColumnModel){\r\n                countColumnName = countColumnModel.get(\"name\");\r\n            }\r\n\r\n            return countColumnName;\r\n        },\r\n\r\n        getCountColumnFormatted: function(){\r\n            var countColumnName,\r\n                countColumnModel;\r\n\r\n            countColumnModel = this.findWhere({count_column:true});\r\n\r\n            if (countColumnModel){\r\n                countColumnName = countColumnModel.get(\"name_formatted\");\r\n            }\r\n\r\n            return countColumnName;\r\n        },\r\n\r\n        updateActiveColumn: function(activeColumn){\r\n            // Update the column collection\r\n            var columnModels = this.models;\r\n            _.each(columnModels, function(columnModel){\r\n                if (columnModel.get(\"active_column\") === true && columnModel.get(\"name\") !== activeColumn){\r\n                    columnModel.set({\"active_column\":false});\r\n                }\r\n\r\n                if (columnModel.get(\"name\") === activeColumn){\r\n                    columnModel.set({\"active_column\":true});\r\n                }\r\n            });\r\n\r\n            this.set(columnModels);\r\n\r\n        },\r\n\r\n    });\r\n\r\n    return VisualCountColumnCollection;\r\n\r\n});\r\n\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/utils/contexts/factories/visual.count.collection.factory',[\r\n    'module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'webreports/widgets/visual.data.filtered.count/impl/models/visual.count/chart.collection/chart.collection',\r\n    'webreports/widgets/visual.data.filtered.count/impl/models/visual.count/column.collection/column.collection'\r\n\r\n], function (module,_, Backbone, CollectionFactory, ConnectorFactory, VisualCountChartCollection, VisualCountColumnCollection) {\r\n\r\n    var VisualCountCollectionFactory = CollectionFactory.extend({\r\n\r\n        // Unique prefix of the default collection instance, when this collection is assigned\r\n        // to a context it can be shared by multiple widgets\r\n        propertyPrefix: 'webreportsVisualCount',\r\n\r\n        constructor: function VisualCountCollectionFactory(context, options) {\r\n            CollectionFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            // Obtain the server connector from the application context to share\r\n            // the server connection with the rest of the application; include\r\n            // the options, which can contain settings for dependent factories\r\n            var connector = context.getObject(ConnectorFactory, options);\r\n            options.connector = connector;\r\n            var webreportsVisualCount = this.options.webreportsVisualCount || {};\r\n\r\n            if (!(webreportsVisualCount instanceof Backbone.Collection)) {\r\n                var config = module.config();\r\n                webreportsVisualCount = new VisualCountChartCollection(webreportsVisualCount.models, _.extend({\r\n                    connector: connector}, webreportsVisualCount.attributes, config.options, {\r\n                    // Prefer refreshing the entire collection to rendering one row after another.\r\n                    autoreset: true\r\n                }));\r\n\r\n                var webreportsVisualCountColumns = this.options.columnCollection || {};\r\n\r\n                if (!(webreportsVisualCountColumns instanceof Backbone.Collection)) {\r\n                    webreportsVisualCount.columnCollection = new VisualCountColumnCollection();\r\n                }\r\n            }\r\n\r\n            // Expose the collection instance in the `property` key on this factory\r\n            // instance to be used by the context\r\n            this.property = webreportsVisualCount;\r\n        },\r\n\r\n        fetch: function (options) {\r\n            // Just fetch the collection exposed by this factory\r\n\r\n            options = _.extend({\r\n                headers: {}\r\n            }, options);\r\n            _.extend(options.headers, {\r\n                'X-OriginParams': location.search\r\n            });\r\n\r\n            return this.property.fetch(options);\r\n        }\r\n\r\n    });\r\n\r\n    return VisualCountCollectionFactory;\r\n\r\n});\r\n\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/models/visual.count/chart.controls/chart.controls.model',[\r\n    'csui/lib/backbone',\r\n    'csui/lib/underscore'\r\n], function (Backbone, _) {\r\n\r\n    var ChartControlsModel = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n            // placeholder object for persisting any user settings for visualisation\r\n            active_column: '',\r\n            active_column_formatted: '',\r\n            theme_name: '',\r\n            count_column: '',\r\n            column_names: [],\r\n            column_names_formatted: [],\r\n            sort_by: 'Count',\r\n            sort_order: 'desc',\r\n            view_value_as_percentage: false,\r\n            group_after: 10,\r\n        },\r\n\r\n        // Constructor gives an explicit name to the object in the debugger\r\n        constructor: function ChartControlsModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        updateColumnData: function(columnCollection){\r\n            var columnsExcludingCount = columnCollection.filter(function(model){\r\n                return (model.get(\"count_column\") !== true);\r\n            });\r\n\r\n            this.set({\r\n                column_names_formatted: _.map(columnsExcludingCount, function(model){\r\n                    return model.get(\"name_formatted\") || model.get(\"name\");\r\n                }),\r\n                column_names: _.map(columnsExcludingCount, function(model){\r\n                    return model.get(\"name\");\r\n                }),\r\n                active_column: columnCollection.getActiveColumn(),\r\n                active_column_formatted: columnCollection.getActiveColumnFormatted(),\r\n                count_column: columnCollection.getCountColumn(),\r\n                count_column_formatted: columnCollection.getCountColumnFormatted()\r\n            });\r\n        }\r\n    });\r\n\r\n    return ChartControlsModel;\r\n\r\n});\r\n\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/control.options.view',[\r\n    'csui/lib/marionette3',\r\n    'csui/lib/underscore',\r\n], function(Marionette, _){\r\n    'use strict';\r\n\r\n    var VisualCountControlsOption = Marionette.View.extend({\r\n\r\n        tagName: 'option',\r\n\r\n        template: _.noop,\r\n\r\n        className: 'webreports-visual-count-controls-option',\r\n\r\n        constructor: function VisualCountControlsOption(options){\r\n            Marionette.View.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        attributes: function(){\r\n            var model = this.model;\r\n\r\n            return {\r\n                value: model.get(\"value\"),\r\n                selected: model.get(\"selected\")\r\n            };\r\n        },\r\n\r\n        onRender: function(){\r\n            this.$el.text(this.model.get(\"label\"));\r\n        }\r\n    });\r\n\r\n    return VisualCountControlsOption;\r\n\r\n});\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/controls.select.view',[\r\n    'csui/lib/marionette3',\r\n    'csui/lib/underscore',\r\n    'webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/control.options.view',\r\n], function (Marionette, _, VisualCountOptionsView) {\r\n\r\n    var VisualCountControlsSelectView = Marionette.CollectionView.extend({\r\n\r\n        className: \"webreports-visual-count-controls-select\",\r\n\r\n        tagName: \"select\",\r\n\r\n        template: _.noop,\r\n\r\n        attributes: function(){\r\n            return {\r\n                name: this.model.get(\"name\"),\r\n                id: this.model.get(\"id\")\r\n            };\r\n        },\r\n\r\n        events: {\r\n            \"change\": \"onOptionChanged\"\r\n        },\r\n\r\n        constructor: function VisualCountControlsSelectView(options) {\r\n            this.model = options.model;\r\n            Marionette.CollectionView.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        childView: VisualCountOptionsView,\r\n\r\n        onOptionChanged: function(){\r\n            var selectModel = this.model,\r\n                originatingView = this.options.originatingView,\r\n                optionCollection = this.collection,\r\n                value = this.$el.val();\r\n\r\n            originatingView.trigger(\"option:changed\", {\r\n                selectModel: selectModel,\r\n                optionCollection: optionCollection,\r\n                value: value\r\n            });\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return VisualCountControlsSelectView;\r\n\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/controls.list.item',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<label for=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"id\") || (depth0 != null ? lookupProperty(depth0,\"id\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"id\",\"hash\":{},\"loc\":{\"start\":{\"line\":1,\"column\":12},\"end\":{\"line\":1,\"column\":18}}}) : helper)))\n    + \"\\\">\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"label\") || (depth0 != null ? lookupProperty(depth0,\"label\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"label\",\"hash\":{},\"loc\":{\"start\":{\"line\":1,\"column\":20},\"end\":{\"line\":1,\"column\":29}}}) : helper)))\n    + \"</label>\\r\\n<select name=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"name\") || (depth0 != null ? lookupProperty(depth0,\"name\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"name\",\"hash\":{},\"loc\":{\"start\":{\"line\":2,\"column\":14},\"end\":{\"line\":2,\"column\":22}}}) : helper)))\n    + \"\\\" id=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"id\") || (depth0 != null ? lookupProperty(depth0,\"id\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"id\",\"hash\":{},\"loc\":{\"start\":{\"line\":2,\"column\":28},\"end\":{\"line\":2,\"column\":34}}}) : helper)))\n    + \"\\\" class=\\\"webreports-visual-count-controls-select\\\"></select>\";\n}});\nHandlebars.registerPartial('webreports_widgets_visual.data.filtered.count_impl_controls_visual.count.tile_visual.count.controls_impl_controls.list.item', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/controls.list.item.view',[\r\n    'csui/lib/marionette3',\r\n    'csui/lib/backbone',\r\n    'csui/lib/underscore',\r\n    'webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/controls.select.view',\r\n    'hbs!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/controls.list.item'\r\n], function(Marionette, Backbone, _, VisualCountControlsSelectView, template){\r\n    'use strict';\r\n\r\n    var VisualCountListItemView = Marionette.View.extend({\r\n\r\n        tagName: 'li',\r\n\r\n        template: template,\r\n\r\n        className: 'webreports-visual-count-controls-list-item',\r\n\r\n        constructor: function VisualCountSelectListItemView(options){\r\n            Marionette.View.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        regions: {\r\n            selectList: {\r\n                el: '.webreports-visual-count-controls-select',\r\n                replaceElement: true\r\n            }\r\n        },\r\n\r\n        templateContext: function(){\r\n            var model = this.model;\r\n\r\n            return {\r\n                id: model.get(\"id\"),\r\n                label: model.get(\"label\"),\r\n                name: model.get(\"name\")\r\n            };\r\n        },\r\n\r\n        onRender: function(){\r\n            this.showChildView('selectList', new VisualCountControlsSelectView({\r\n                originatingView: this.options.originatingView,\r\n                collection: new Backbone.Collection(this.model.get(\"options\")),\r\n                model: this.model\r\n            }));\r\n        },\r\n    });\r\n\r\n    return VisualCountListItemView;\r\n\r\n});\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/controls.list.view',[\r\n    'csui/lib/marionette3',\r\n    'webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/controls.list.item.view'\r\n], function(Marionette, VisualCountControlsListItemView){\r\n    'use strict';\r\n\r\n    var VisualCountControlListView = Marionette.CollectionView.extend({\r\n\r\n        tagName: 'ul',\r\n\r\n        className: 'webreports-visual-count-controls-list',\r\n\r\n        childView: VisualCountControlsListItemView,\r\n\r\n        childViewOptions: function(){\r\n          return {\r\n              originatingView: this.options.originatingView\r\n          };\r\n        },\r\n\r\n        constructor: function VisualCountSelectListView(options){\r\n            Marionette.CollectionView.prototype.constructor.apply(this, arguments);\r\n        }\r\n    });\r\n\r\n    return VisualCountControlListView;\r\n\r\n});\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/nls/root/lang',{\r\n    activeColumn: 'Active column',\r\n    sortBy: 'Sort by',\r\n    count: 'Count',\r\n    asc: 'asc',\r\n    desc: 'desc',\r\n    showValuesAs: 'Show values as',\r\n    groupAfter: 'Group after',\r\n    actual: 'Actual',\r\n    percentage: 'Percentage',\r\n    theme: 'Theme',\r\n    OTPrimary: 'Evening 10',\r\n    OTSecondary: 'Coral 10',\r\n    OTTertiary: 'Garden 10',\r\n    DataClarity: 'Clarity 20',\r\n    DataClarityPatterned: 'Patterned 20',\r\n    OTNavy: 'Navy 6',\r\n    OTTeal: 'Teal 6',\r\n    OTIndigo: 'Indigo 6',\r\n    OTPlum: 'Plum 6',\r\n    OTMagenta: 'Magenta 6'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/visual.count.controls',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div class=\\\"webreports-visual-count-control-group webreports-controls-lhs\\\"></div>\\r\\n<div class=\\\"webreports-visual-count-control-group webreports-controls-rhs\\\"></div>\\r\\n\";\n}});\nHandlebars.registerPartial('webreports_widgets_visual.data.filtered.count_impl_controls_visual.count.tile_visual.count.controls_impl_visual.count.controls', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/visual.count.controls',[],function(){});\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/visual.count.controls.view',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/jquery',\r\n    'csui/lib/marionette3',\r\n    'csui/lib/backbone',\r\n    'webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/controls.list.view',\r\n    'webreports/widgets/visual.data.filtered.count/impl/models/visual.count/chart.controls/chart.controls.model',\r\n    'i18n!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/nls/lang',\r\n    'hbs!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/visual.count.controls',\r\n    'css!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/impl/visual.count.controls'\r\n], function (_, $, Marionette, Backbone, VisualCountControlsListView, VisualCountChartControlsModel, lang, template) {\r\n\r\n      var VisualCountControlsView = Marionette.View.extend({\r\n\r\n          className: \"webreports-visual-count-controls\",\r\n\r\n          constructor: function VisualCountControlsView(options) {\r\n              if (!options.model){\r\n                  // Create a new overlay model with the current settings for the visualization\r\n                  options.model = new VisualCountChartControlsModel({\r\n                      vis_type: options.type,\r\n                      active_column: options.activeColumn,\r\n                      theme_name: options.themeName,\r\n                      sort_by: options.sortBy || 'Count',\r\n                      sort_order: options.sortOrder || 'desc',\r\n                      view_value_as_percentage: options.viewValueAsPercentage,\r\n                      group_after: options.groupAfter\r\n                  });\r\n              }\r\n\r\n              if (options.chartCollection){\r\n                  this.chartCollection = options.chartCollection;\r\n                  this.chartCollection.chartControlsModel = options.model;\r\n              } else {\r\n                  throw 'VisualCountControlsView requires a chart collection';\r\n              }\r\n\r\n              if (options.columnCollection){\r\n                  this.columnCollection = options.columnCollection;\r\n              } else {\r\n                  throw 'VisualCountControlsView requires a columns collection';\r\n              }\r\n\r\n              Marionette.View.prototype.constructor.apply(this, arguments);\r\n\r\n              this.listenTo(options.columnCollection, 'update', this.onColumnsChanged);\r\n              this.listenTo(this, 'option:changed', this.onOptionChanged);\r\n\r\n          },\r\n\r\n          regions: {\r\n              leftControls: {\r\n                  el: '.webreports-visual-count-control-group.webreports-controls-lhs'\r\n              },\r\n              rightControls: {\r\n                  el: '.webreports-visual-count-control-group.webreports-controls-rhs'\r\n              }\r\n          },\r\n\r\n          template: template,\r\n\r\n          onRender: function(){\r\n              var lhsOptionsCollection = this._getLHSOptionsCollection(),\r\n                  rhsOptionsCollection = this._getRHSOptionsCollection(),\r\n                  moreThanOneColumn = this.model.get('column_names').length > 1;\r\n\r\n              if (moreThanOneColumn) {\r\n                  this.showChildView('leftControls', new VisualCountControlsListView({\r\n                      originatingView: this,\r\n                      collection: lhsOptionsCollection\r\n                  }));\r\n              }\r\n\r\n              this.showChildView('rightControls', new VisualCountControlsListView({\r\n                  originatingView: this,\r\n                  collection: rhsOptionsCollection\r\n              }));\r\n          },\r\n\r\n          onDomRefresh: function () {\r\n              this._reFocus();\r\n          },\r\n\r\n          _getLHSOptionsCollection: function () {\r\n              var activeColumnSelectName = \"webreports-select-active-column\",\r\n                  columnNames = _.map(this.model.get('column_names'), function (column, index) {\r\n                      return {\r\n                          value: column,\r\n                          label: this.model.get('column_names_formatted')[index],\r\n                          selected: this.model.get('active_column') === column\r\n                      };\r\n                  }, this);\r\n\r\n              return new Backbone.Collection([{\r\n                  label: lang.activeColumn,\r\n                  key: \"activeColumn\",\r\n                  options: columnNames,\r\n                  name: activeColumnSelectName,\r\n                  id: this._getSelectID(activeColumnSelectName)\r\n              }]);\r\n\r\n          },\r\n\r\n          _getRHSOptionsCollection: function () {\r\n              var sortBySelectName = \"webreports-select-sort-options\",\r\n                  valueAsPercentageSelectName = \"webreports-select-value-as-percentage\",\r\n                  groupAfterSelectName = \"webreports-select-group-after\",\r\n                  themeSelectName = \"webreports-select-theme\",\r\n                  themeOptions = [\r\n                      {value:\"otPrimary\", selected: this.model.get(\"theme_name\") === \"otPrimary\", label: lang.OTPrimary},\r\n                      {value:\"otSecondary\", selected: this.model.get(\"theme_name\") === \"otSecondary\", label: lang.OTSecondary},\r\n                      {value:\"otTertiary\", selected: this.model.get(\"theme_name\") === \"otTertiary\", label: lang.OTTertiary},\r\n                      {value:\"dataClarity\", selected: this.model.get(\"theme_name\") === \"dataClarity\", label: lang.DataClarity},\r\n                      {value:\"dataClarityPatterned\", selected: this.model.get(\"theme_name\") === \"Patterned\", label: lang.DataClarityPatterned},\r\n                      {value:\"otNavy\", selected: this.model.get(\"theme_name\") === \"otNavy\", label: lang.OTNavy},\r\n                      {value:\"otTeal\", selected: this.model.get(\"theme_name\") === \"otTeal\", label: lang.OTTeal},\r\n                      {value:\"otIndigo\", selected: this.model.get(\"theme_name\") === \"otIndigo\", label: lang.OTIndigo},\r\n                      {value:\"otPlum\", selected: this.model.get(\"theme_name\") === \"otPlum\", label: lang.OTPlum},\r\n                      {value:\"otMagenta\", selected: this.model.get(\"theme_name\") === \"otMagenta\", label: lang.OTMagenta}\r\n                  ],\r\n                  sortOptions = [\r\n                      {value:\"Count|asc\", selected: (this.model.get(\"sort_by\") === \"Count\" && this.model.get(\"sort_order\") === \"asc\"), label: lang.count+':'+ lang.asc},\r\n                      {value:\"Count|desc\", selected: (this.model.get(\"sort_by\") === \"Count\" && this.model.get(\"sort_order\") === \"desc\"), label: lang.count+':'+ lang.desc},\r\n                      {value:\"ordinal|asc\", selected: (this.model.get(\"sort_by\") === \"ordinal\" && this.model.get(\"sort_order\") === \"asc\"), label: lang.activeColumn+':'+ lang.asc},\r\n                      {value:\"ordinal|desc\", selected: (this.model.get(\"sort_by\") === \"ordinal\" && this.model.get(\"sort_order\") === \"desc\"), label: lang.activeColumn+':'+ lang.desc}\r\n                  ],\r\n                  viewValueAsPercentage = [\r\n                      {value:\"true\", selected: this.model.get(\"view_value_as_percentage\"), label: lang.percentage},\r\n                      {value:\"false\", selected: !this.model.get(\"view_value_as_percentage\"), label: lang.actual}\r\n                  ],\r\n                  groupAfter = _.map([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], function (value) {\r\n                      return {\r\n                          value: value,\r\n                          label: value,\r\n                          selected: this.model.get('group_after') === value\r\n                      };\r\n                  }, this);\r\n\r\n              return new Backbone.Collection([\r\n                  {\r\n                      label: lang.theme,\r\n                      key: \"themeName\",\r\n                      options: themeOptions,\r\n                      name: themeSelectName,\r\n                      id: this._getSelectID(themeSelectName)\r\n                  },\r\n                  {\r\n                      label: lang.sortBy,\r\n                      key: \"sortBy\",\r\n                      options: sortOptions,\r\n                      name: sortBySelectName,\r\n                      id: this._getSelectID(sortBySelectName)\r\n                  },\r\n                  {\r\n                      label: lang.showValuesAs,\r\n                      key: \"ViewValueAsPercentage\",\r\n                      options: viewValueAsPercentage,\r\n                      name: valueAsPercentageSelectName,\r\n                      id: this._getSelectID(valueAsPercentageSelectName)\r\n                  },\r\n                  {\r\n                      label: lang.groupAfter,\r\n                      key: \"groupAfter\",\r\n                      options: groupAfter,\r\n                      name: groupAfterSelectName,\r\n                      id: this._getSelectID(groupAfterSelectName)\r\n                  }]);\r\n          },\r\n\r\n          _getSelectID: function(name){\r\n              return _.uniqueId(name + \"_\");\r\n          },\r\n\r\n          _reFocus: function () {\r\n              var that = this;\r\n              setTimeout(function () {\r\n                  if (that.options && that.options.lastRegion && that.options.lastRegion.length > 0 ) {\r\n                      var lastActiveRegion = $(\"select[name=\" + that.options.lastRegion + \"]\");\r\n                      lastActiveRegion.focus();\r\n                  }\r\n              }, 1);\r\n          },\r\n\r\n          onOptionChanged: function(args) {\r\n              this.updateControlsModel(args);\r\n              this.options.lastRegion = document.querySelector('#' + args.selectModel.get('id') + '').attributes.name.value;\r\n              this._reFocus;\r\n          },\r\n\r\n          onColumnsChanged: function(){\r\n              this.model.updateColumnData(this.columnCollection);\r\n              this.render();\r\n          },\r\n\r\n          updateControlsModel: function(args) {\r\n              var optionModel,\r\n                  value,\r\n                  changedAttributes = {},\r\n                  chartControlsModel = this.model,\r\n                  selectModel = args.selectModel,\r\n                  optionCollection = args.optionCollection,\r\n                  selectKey = selectModel.get(\"key\");\r\n\r\n              switch (selectKey) {\r\n                  case 'activeColumn':\r\n                      optionModel = optionCollection.findWhere({\r\n                          value: args.value\r\n                      });\r\n                      changedAttributes = {\r\n                          active_column: optionModel.get(\"value\"),\r\n                          active_column_formatted: optionModel.get(\"label\")\r\n                      };\r\n                      break;\r\n                  case 'sortBy':\r\n                      value = args.value;\r\n\r\n                      var sortOptions = value.split(\"|\"),\r\n                          sortBy = sortOptions[0],\r\n                          sortOrder = sortOptions[1];\r\n\r\n                      changedAttributes = {\r\n                          sort_by: sortBy,\r\n                          sort_order: sortOrder\r\n                      };\r\n                      break;\r\n                  case 'ViewValueAsPercentage':\r\n                      changedAttributes = {\r\n                          view_value_as_percentage: (args.value === 'true')\r\n                      };\r\n                      break;\r\n                  case 'groupAfter':\r\n                      changedAttributes = {\r\n                          group_after: parseInt(args.value)\r\n                      };\r\n                      break;\r\n                  case 'themeName':\r\n                      optionModel = optionCollection.findWhere({\r\n                          value: args.value\r\n                      });\r\n                      changedAttributes = {\r\n                          theme_name: optionModel.get('value')\r\n                      };\r\n                      break;\r\n                  default:\r\n                      console.warn(\"Invalid select key\");\r\n              }\r\n\r\n              if (!_.isEmpty(changedAttributes)){\r\n                  chartControlsModel.set(changedAttributes);\r\n                  this.trigger(\"chart:options:updated\", changedAttributes);\r\n              }\r\n          }\r\n      });\r\n\r\n    return VisualCountControlsView;\r\n\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/mixins/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/mixins/visual.count.view.mixin',[\r\n    'csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/base',\r\n    'csui/controls/toolbar/toolitems.factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'csui/models/node/node.model',\r\n    'csui/models/nodes',\r\n    'webreports/widgets/visual.data.filtered.count/impl/utils/contexts/factories/visual.count.collection.factory',\r\n    'webreports/widgets/visual.data.filtered.count/impl/models/visual.count/column.collection/column.collection',\r\n    'webreports/widgets/visual.data.filtered.count/impl/models/visual.count/chart.controls/chart.controls.model',\r\n    'webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.controls/visual.count.controls.view',\r\n    'webreports/widgets/visual.data.filtered.count/impl/mixins/nls/lang',\r\n    'csui/utils/deepClone/deepClone'\r\n], function ($,\r\n             _,\r\n             Backbone,\r\n             base,\r\n             ToolItemsFactory,\r\n             ConnectorFactory,\r\n             NodeModel,\r\n             NodeCollection,\r\n             VisualCountCollectionFactory,\r\n             VisualCountColumnCollection,\r\n             VisualCountChartControlsModel,\r\n             VisualCountControlsView,\r\n             lang) {\r\n    \"use strict\";\r\n\r\n    var VisualCountViewMixin = {\r\n\r\n        mixin: function (prototype) {\r\n            return _.extend(prototype, {\r\n\r\n                defaults: {\r\n                    theme: \"otPrimary\",\r\n                    titleBarIcon: \"title-icon title-webreports\",\r\n                    groupAfterBar: 10,\r\n                    groupAfterPie: 5,\r\n                    filterable: false,\r\n                    animate: true,\r\n                    expandable: false,\r\n                    showAsPercentage: false,\r\n                    showLegend: true,\r\n                    commandRowLimit: 5000,\r\n                    commandHardRowLimit: 50000\r\n                },\r\n\r\n                groupAfterIsValid: function(groupAfter){\r\n                    return (groupAfter >= 2 && groupAfter <= 20);\r\n                },\r\n\r\n                getGroupAfterDefault: function(chartType){\r\n                    return ( chartType === \"pie\" || chartType === \"donut\" ) ? this.defaults.groupAfterPie : this.defaults.groupAfterBar;\r\n                },\r\n\r\n                validateVisualCountOptions: function(options){\r\n\r\n                    var commandRowLimit,\r\n                        defaults = this.defaults,\r\n                        launchButtonConfig = options.launchButtonConfig;\r\n\r\n                    options.titleBarIcon = ( _.has(options, 'titleBarIcon')) ? 'title-icon '+ options.titleBarIcon : defaults.titleBarIcon;\r\n                    options.filterable = _.has(options, 'filterable') && _.isBoolean(options.filterable) ? options.filterable : defaults.filterable;\r\n                    options.animate = _.has(options, 'animate') && _.isBoolean(options.animate) ? options.animate : defaults.animate;\r\n                    options.expandable = _.has(options, 'expandable') && _.isBoolean(options.expandable) ? options.expandable : defaults.expandable;\r\n                    options.theme = _.has(options, 'theme') ? options.theme : defaults.theme;\r\n                    options.viewValueAsPercentage = _.has(options, 'viewValueAsPercentage') && _.isBoolean(options.viewValueAsPercentage) ? options.viewValueAsPercentage : defaults.showAsPercentage;\r\n                    options.groupAfter = _.has(options, 'groupAfter') && this.groupAfterIsValid(options.groupAfter) ? parseInt(options.groupAfter, defaults.groupAfterBar) : this.getGroupAfterDefault(options.type);\r\n                    options.showLegend = _.has(options, 'showLegend') && _.isBoolean(options.showLegend) ? options.showLegend : defaults.showLegend;\r\n\r\n                    if (launchButtonConfig){\r\n                        commandRowLimit = launchButtonConfig.rowLimit;\r\n\r\n                        if (!_.isNumber(commandRowLimit) || _.isNaN(commandRowLimit)){\r\n                            commandRowLimit = defaults.commandRowLimit;\r\n                        }\r\n\r\n                        if (commandRowLimit > defaults.commandHardRowLimit){\r\n                            commandRowLimit = defaults.commandHardRowLimit;\r\n                        }\r\n\r\n                        launchButtonConfig.rowLimit = commandRowLimit;\r\n                    }\r\n\r\n                    return options;\r\n                },\r\n\r\n                validateCollections: function(options){\r\n                    var defaults = this.defaults;\r\n\r\n                    if (options.chartCollection){\r\n                        this.chartCollection = options.chartCollection;\r\n                    } else {\r\n                        throw 'VisualCountView requires a chart collection';\r\n                    }\r\n\r\n                    if (options.columnCollection){\r\n                        this.columnCollection = options.columnCollection;\r\n                    } else {\r\n                        throw 'VisualCountView requires a column collection';\r\n                    }\r\n\r\n                    if (options.facetCollection){\r\n                        this.facetCollection = options.facetCollection;\r\n                    } else {\r\n                        throw 'VisualCountView requires a facet collection';\r\n                    }\r\n                    if (options.chartOptionsModel){\r\n                        this.chartOptionsModel = options.chartOptionsModel;\r\n                    } else {\r\n                        this.chartOptionsModel = new Backbone.Model({\r\n                            \"themeName\": options.theme || defaults.theme,\r\n                            \"showAsPercentage\": _.has(options,'showAsPercentage') && _.isBoolean(options.showAsPercentage) ? options.showAsPercentage : defaults.showAsPercentage,\r\n                            \"animate\": options.animate || defaults.animate,\r\n                            \"showLegend\": _.has(options,'showLegend') && _.isBoolean(options.showLegend) ? options.showLegend : defaults.showLegend\r\n                        });\r\n                    }\r\n                },\r\n\r\n                getToolbarItems: function(options){\r\n                    var toolbarItems,\r\n                        toolbarItemsModels,\r\n                        launchButtonConfig = options.launchButtonConfig,\r\n                        rowLimit = launchButtonConfig.rowLimit,\r\n                        launchButtons = launchButtonConfig.launchButtons;\r\n\r\n                    toolbarItemsModels = _.chain(launchButtons)\r\n                                .reject(function(launchButton){\r\n                                    var launchButtonID = launchButton.launchButtonID;\r\n                                    return !launchButtonID || !_.isNumber(launchButtonID);\r\n                                })\r\n                                .map(function(launchButton){\r\n                                    var context = options.context,\r\n                                        connector = context.getObject(ConnectorFactory),\r\n                                        buttonNode = new NodeModel({\r\n                                            id: launchButton.launchButtonID\r\n                                        }, {connector: connector});\r\n\r\n                                    return {\r\n                                        signature: \"OpenWebReport\",\r\n                                        name: base.getClosestLocalizedString(launchButton.launchButtonLabel, lang.launchReport),\r\n                                        toolTip: base.getClosestLocalizedString(launchButton.launchButtonTooltip, lang.launchReportTooltip),\r\n                                        status: {\r\n                                            nodes: new NodeCollection([buttonNode])\r\n                                        }\r\n                                    };\r\n                                })\r\n                                .value();\r\n\r\n                    if (toolbarItemsModels.length > 0){\r\n                        toolbarItems = {\r\n                            footer: new ToolItemsFactory({\r\n                                    right: toolbarItemsModels\r\n                                },\r\n                                {\r\n                                    rowLimit: rowLimit\r\n                                }\r\n                            )\r\n\r\n                        };\r\n                    }\r\n\r\n                    return toolbarItems;\r\n                },\r\n\r\n                getToolbarItemNodes: function(){\r\n                    var toolbarItemsFooter,\r\n                        status,\r\n                        toolbarItemsFooterCollection,\r\n                        nodePromises = [],\r\n                        toolbarItemNodes = [],\r\n                        options = this.options,\r\n                        context = options.context,\r\n                        toolbarItems = options.toolbarItems;\r\n\r\n                    if (toolbarItems){\r\n                        toolbarItemsFooter  = toolbarItems.footer;\r\n                        if (toolbarItemsFooter){\r\n                            toolbarItemsFooterCollection = toolbarItemsFooter.collection;\r\n\r\n                            toolbarItemsFooterCollection.each(function(toolbarItemsFooterModel){\r\n                                if (toolbarItemsFooterModel.get(\"group\") === \"right\"){\r\n                                    status = _.extend( {context: context},toolbarItemsFooterModel.get(\"status\"));\r\n                                    if (_.has(status, \"nodes\") && status.nodes.length > 0){\r\n                                        toolbarItemNodes.push(status.nodes.at(0));\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    if (toolbarItemNodes.length > 0){\r\n                        _.each(toolbarItemNodes, function(toolbarItemNode){\r\n                            nodePromises.push(toolbarItemNode.fetch());\r\n                        });\r\n\r\n                        var successFunc = function (response) {\r\n                                console.debug(response);\r\n                            },\r\n                            failureFunc = function (response) {\r\n                                console.log(response);\r\n                            };\r\n\r\n                        $.when(nodePromises)\r\n                            .then(successFunc, failureFunc);\r\n                    }\r\n                },\r\n\r\n                setVisualCountWidgetOptions: function(options){\r\n                    if (!(options && options.data)) {\r\n                        throw 'VisualCount widget requires valid widget options';\r\n                    }\r\n\r\n                    var modelOptions,\r\n                        toolbarItems,\r\n                        columnCollection,\r\n                        visualCountWidgetOptions = _.deepClone(options.data);\r\n\r\n                    visualCountWidgetOptions.context = options.context;\r\n\r\n                    visualCountWidgetOptions = this.validateVisualCountOptions(visualCountWidgetOptions);\r\n                    modelOptions = this.setCommonModelOptions(options);\r\n\r\n                    _.extend(modelOptions, {\r\n                        visType: visualCountWidgetOptions.type, // visType is used to send to the server via Rest\r\n                        type: visualCountWidgetOptions.type,\r\n                        activeColumn: visualCountWidgetOptions.activeColumn,\r\n                        themeName: visualCountWidgetOptions.theme, // 'theme' is the key that comes from the manifest, but 'themeName' is the key used in the chart control :-(\r\n                        filters: visualCountWidgetOptions.filters,\r\n                        filterable: visualCountWidgetOptions.filterable,\r\n                        expandable: visualCountWidgetOptions.expandable,\r\n                        viewValueAsPercentage: visualCountWidgetOptions.viewValueAsPercentage,\r\n                        sortBy: visualCountWidgetOptions.sortBy,\r\n                        sortOrder: visualCountWidgetOptions.sortOrder,\r\n                        groupAfter: visualCountWidgetOptions.groupAfter,\r\n                        showLegend: visualCountWidgetOptions.showLegend\r\n                    });\r\n\r\n                    // Set up the data collection object\r\n                    this.setFactory(this.getWidgetFactory(options, VisualCountCollectionFactory, modelOptions));\r\n                    visualCountWidgetOptions.chartCollection = options.context.getCollection(VisualCountCollectionFactory, {attributes: modelOptions});\r\n\r\n                    visualCountWidgetOptions.columnCollection = visualCountWidgetOptions.chartCollection.columnCollection;\r\n                    visualCountWidgetOptions.facetCollection = visualCountWidgetOptions.chartCollection.facetCollection;\r\n\r\n                    // The Visual Count widget only supports the Vertical Bar type. Make sure we change the type tp pass the correct value onto the control.\r\n                    if (_.has(options.data, 'type') && options.data.type === 'bar'){\r\n                        visualCountWidgetOptions.chartType = 'verticalBar';\r\n                    } else {\r\n                        visualCountWidgetOptions.chartType = options.data.type;\r\n                    }\r\n\r\n                    if (visualCountWidgetOptions.launchButtonConfig){\r\n                        toolbarItems = this.getToolbarItems(visualCountWidgetOptions);\r\n                        if (toolbarItems){\r\n                            visualCountWidgetOptions.toolbarItems = toolbarItems;\r\n                            this.listenToOnce(visualCountWidgetOptions.chartCollection, \"sync\", this.getToolbarItemNodes);\r\n                        }\r\n                    }\r\n\r\n                    return visualCountWidgetOptions;\r\n                },\r\n\r\n                createChartControlsView: function(options){\r\n                    var chartControlOptions = {\r\n                            activeColumn: options.activeColumn,\r\n                            themeName: options.theme, // 'theme' is the key that comes from the manifest, but 'themeName' is the key used in the chart control :-(\r\n                            type: options.type,\r\n                            sortBy: options.sortBy,\r\n                            sortOrder: options.sortOrder,\r\n                            viewValueAsPercentage: options.viewValueAsPercentage,\r\n                            groupAfter: options.groupAfter,\r\n                            chartCollection: this.chartCollection,\r\n                            columnCollection: this.columnCollection,\r\n                            showLegend: options.showLegend\r\n                        };\r\n\r\n                    if (options.chartControlsModel){\r\n                        chartControlOptions.model = options.chartControlsModel;\r\n                    }\r\n\r\n                    this.chartControlsView = new VisualCountControlsView(chartControlOptions);\r\n\r\n                    this.listenTo(this.chartControlsView, \"chart:options:updated\", this.onChartOptionsUpdated);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    return VisualCountViewMixin;\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/nls/root/lang',{\r\n    tooManyRows: 'Please refine your filter further. The maximum number of items that can be processed is '\r\n});\r\n\n","\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/visual.count.view',['csui/lib/marionette3',\r\n        'csui/lib/backbone',\r\n        'csui/lib/underscore',\r\n        'csui/lib/jquery',\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/models/node/node.model',\r\n        'csui/utils/commands',\r\n        'csui/utils/commandhelper',\r\n        'csui/dialogs/modal.alert/modal.alert',\r\n        'csui/controls/facet.bar/facet.bar.view',\r\n        'csui/controls/facet.panel/facet.panel.view',\r\n        'csui/controls/charts/visual.count/visual.count.view',\r\n        'csui/controls/progressblocker/blocker',\r\n        'webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count.footer.view',\r\n        'webreports/mixins/webreports.view.mixin',\r\n        'webreports/widgets/visual.data.filtered.count/impl/mixins/visual.count.view.mixin',\r\n        'hbs!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count',\r\n        'i18n!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/nls/lang',\r\n        'css!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/impl/visual.count'\r\n], function (Marionette,\r\n             Backbone,\r\n             _,\r\n             $,\r\n             ConnectorFactory,\r\n             NodeModel,\r\n             commands,\r\n             CommandHelper,\r\n             ModalAlert,\r\n             FacetBarView,\r\n             FacetPanelView,\r\n             VisualCountChartView,\r\n             BlockingView,\r\n             VisualCountFooterView,\r\n             WebReportsViewMixin,\r\n             VisualCountViewMixin,\r\n             template,\r\n             lang){\r\n\r\n    var VisualCountView = Marionette.View.extend({\r\n\r\n        className: 'webreports-visual-count-container',\r\n\r\n        template: template,\r\n\r\n        regions: {\r\n            facetBar: {\r\n                el: '.webreports-visual-count-facetbarview'\r\n            },\r\n            facetPanel: {\r\n                el: '.webreports-visual-count-facetpanelview'\r\n            },\r\n            chartControls: {\r\n                el:'.webreports-visual-count-controls-parent'\r\n            },\r\n            chart: {\r\n                el: '.webreports-visual-count-chart'\r\n            },\r\n            footer: {\r\n                el: '.webreports-visual-count-footer',\r\n                replaceElement: true\r\n            }\r\n        },\r\n\r\n        constructor: function VisualCountView(options) {\r\n\r\n            options = this.validateVisualCountOptions(options);\r\n\r\n            this.validateCollections(options);\r\n\r\n            Marionette.View.prototype.constructor.apply(this, arguments);\r\n\r\n            this._createViews(options);\r\n\r\n            BlockingView.imbue(this);\r\n        },\r\n\r\n        onDomRefresh: function() {\r\n                this._renderFooter();\r\n                this._renderFacetBar();\r\n                this._renderFacetPanel();\r\n                this._renderChartControls();\r\n                // NB: chart must be rendered last as its initial height is determined by other UI elements being present or not\r\n                this._renderChart();\r\n        },\r\n\r\n        onChartOptionsUpdated: function(args) {\r\n\r\n            if (this.chartOptionsModel) {\r\n                if (_.has(args, 'theme_name')) {\r\n                    this.chartOptionsModel.set({\r\n                        \"themeName\": args.theme_name\r\n                    });\r\n                }\r\n                if (_.has(args, 'view_value_as_percentage')) {\r\n                    this.chartOptionsModel.set({\r\n                        \"showAsPercentage\": args.view_value_as_percentage\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.chartCollection.onChartOptionsUpdated(args);\r\n        },\r\n\r\n        _clearFilters: function(){\r\n            this.facetCollection.clearFilter(false);\r\n        },\r\n\r\n        _addToFacetFilter: function(filter){\r\n            var $chartEl = this.getRegion('chart').$el;\r\n\r\n            this.facetCollection.addFilter(filter);\r\n            this.chartCollection.onFiltersUpdated();\r\n\r\n            this._renderFacetBar();\r\n            this._renderChartControls();\r\n            this._renderFacetPanel();\r\n\r\n            $chartEl.addClass('facet-bar-visible');\r\n        },\r\n\r\n        _renderChart: function(){\r\n            var $offsetParent,\r\n                chartContentView,\r\n                chartView = this.chartView,\r\n                chartRegion = this.getRegion('chart');\r\n\r\n                if (chartRegion && chartView){\r\n                    // When rendered in an expanding dialog dom:refresh is called twice.\r\n                    // The first call is made before the view has any height and causes issues with calculating svg size.\r\n                    // The prevents the double render.\r\n\r\n                    $offsetParent = this.$el.offsetParent();\r\n                    if (!_.isNull($offsetParent ) && $offsetParent.height() > 0){\r\n                        chartRegion.show(this.chartView);\r\n                        chartContentView =  chartView.getChildView(\"chart\");\r\n                        if (chartContentView){\r\n                            chartContentView.trigger(\"redraw:chart\");\r\n                        }\r\n                    }\r\n                } else {\r\n                    console.warn(\"Missing chart view or region.\");\r\n                }\r\n        },\r\n\r\n        _renderFacetBar: function(){\r\n            if (this.facetCollection.filters.length > 0){\r\n                this.showChildView('facetBar', this.facetBarView);\r\n                this.facetCollection.trigger(\"reset\");\r\n            }\r\n        },\r\n\r\n        _renderFacetPanel: function(){\r\n            this.showChildView('facetPanel', this.facetPanelView);\r\n        },\r\n\r\n        _renderFooter: function(){\r\n            var $footerEl;\r\n            if (this.footerView){\r\n                this.showChildView('footer', this.footerView);\r\n                $footerEl = this.getRegion('footer').$el;\r\n                $footerEl.addClass('has-footer');\r\n            }\r\n        },\r\n\r\n        _createViews: function(options){\r\n            if (options.chartView){\r\n                this.chartView = options.chartView;\r\n            } else {\r\n                this._createChartView();\r\n            }\r\n\r\n            this.createChartControlsView(options);\r\n            this._createFacetPanelView();\r\n            this._createFacetBarView();\r\n\r\n            if (options.toolbarItems){\r\n                this.toolbarItems = options.toolbarItems;\r\n                this._createFooterView();\r\n            }\r\n        },\r\n\r\n        _createChartView: function(){\r\n            var options = this.options,\r\n                chartOptionsModel = this.chartOptionsModel;\r\n\r\n            this.chartView = new VisualCountChartView({\r\n                context: options.context,\r\n                chartType: options.type,\r\n                collection: options.chartCollection,\r\n                columns: options.columnCollection,\r\n                chartOptions: chartOptionsModel,\r\n                originatingView: this\r\n            });\r\n        },\r\n\r\n        _createFacetPanelView: function () {\r\n            this.facetPanelView = new FacetPanelView({\r\n                collection: this.facetCollection,\r\n                enableCheckBoxes: true,\r\n                blockingLocal: true\r\n            });\r\n\r\n            this.listenTo(this.facetPanelView, 'apply:filter', this._addToFacetFilter);\r\n        },\r\n\r\n        _createFacetBarView: function () {\r\n            this.facetBarView = new FacetBarView({\r\n                collection: this.facetCollection\r\n            });\r\n\r\n            this.listenTo(this.facetBarView, 'remove:filter', this._removeFacetFilter, this)\r\n                .listenTo(this.facetBarView, 'remove:all', this._removeAll, this)\r\n                .listenTo(this.chartView, 'apply:filter', this._addToFacetFilter, this);\r\n        },\r\n\r\n        _createFooterView: function () {\r\n            var options = this.options;\r\n\r\n            this.footerView = new VisualCountFooterView({\r\n                context: options.context,\r\n                toolbarItems: this.toolbarItems,\r\n                originatingView: this\r\n            });\r\n\r\n            this.listenTo(this, \"button:clicked\", this._onButtonClicked);\r\n        },\r\n\r\n        _renderChartControls: function(){\r\n            this.getRegion('chartControls').show(this.chartControlsView);\r\n        },\r\n\r\n        _removeFacetFilter: function (filter) {\r\n            var $chartEl = this.getRegion('chart').$el;\r\n\r\n            this.facetCollection.removeFilter(filter, false);\r\n            this.chartCollection.onFiltersUpdated();\r\n\r\n            if (_.has(this.facetCollection,'filters') && this.facetCollection.filters.length < 1) {\r\n                $chartEl.removeClass('facet-bar-visible');\r\n            }\r\n\r\n            this._renderChartControls();\r\n            this._renderFacetPanel();\r\n        },\r\n\r\n        _removeAll: function () {\r\n            var $chartEl = this.getRegion('chart').$el;\r\n            this._clearFilters();\r\n            this.chartCollection.onFiltersUpdated();\r\n            this._renderChartControls();\r\n\r\n            $chartEl.removeClass('facet-bar-visible');\r\n\r\n        },\r\n\r\n        _onButtonClicked: function(childView, args){\r\n            var commandPromise,\r\n                rowLimit,\r\n                filteredRowCount,\r\n                toolbarItems = args.toolbarItems,\r\n                model = childView.model,\r\n                context = this.options.context,\r\n                signature = model.get(\"signature\"),\r\n                command = commands.findWhere({\"signature\": signature}),\r\n                status = {\r\n                    context: context\r\n                },\r\n                options = {\r\n                    context: context,\r\n                    parameters: this.chartCollection.getFilteredCountQuery(),\r\n                    originatingView: this\r\n                };\r\n\r\n            if (toolbarItems && toolbarItems.footer && toolbarItems.footer.options){\r\n                rowLimit = toolbarItems.footer.options.rowLimit;\r\n                filteredRowCount = this.chartCollection.getTotalCount();\r\n\r\n                if (filteredRowCount <= rowLimit){\r\n                    if (command) {\r\n                        _.extend(status, model.get(\"status\"));\r\n                        _.extend(options, model.get(\"commandData\"));\r\n                        if (command.enabled(status, options)){\r\n                            commandPromise = command.execute(status, options);\r\n                            CommandHelper.handleExecutionResults(commandPromise, {\r\n                                command: command,\r\n                                suppressSuccessMessage: true\r\n                            });\r\n                        }\r\n                    }\r\n                } else {\r\n                    ModalAlert.showError(lang.tooManyRows + rowLimit);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    // Add the mixin functionality to the target view\r\n    WebReportsViewMixin.mixin(VisualCountView.prototype);\r\n    VisualCountViewMixin.mixin(VisualCountView.prototype);\r\n\r\n    return VisualCountView;\r\n\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/nls/root/lang',{\r\n    dialogTitle: 'Visual Count Tile',\r\n    activeColumn: 'Active column',\r\n    sortBy: 'Sort by',\r\n    count: 'Count',\r\n    asc: 'asc',\r\n    desc: 'desc',\r\n    showValuesAs: 'Show values as',\r\n    groupAfter: 'Group after',\r\n    actual: 'Actual',\r\n    percentage: 'Percentage',\r\n    parameters: 'Report parameters',\r\n    chartOptions: 'Chart options'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/visual.count.tile',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"        <div class=\\\"tile-type-icon\\\">\\r\\n            <span class=\\\"icon title-icon \"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"icon\") || (depth0 != null ? lookupProperty(depth0,\"icon\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"icon\",\"hash\":{},\"loc\":{\"start\":{\"line\":5,\"column\":41},\"end\":{\"line\":5,\"column\":49}}}) : helper)))\n    + \"\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n\";\n},\"3\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"imageUrl\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(4, data, 0),\"inverse\":container.noop,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":12,\"column\":15}}})) != null ? stack1 : \"\");\n},\"4\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"            <div class=\\\"tile-type-image \"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"imageClass\") || (depth0 != null ? lookupProperty(depth0,\"imageClass\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"imageClass\",\"hash\":{},\"loc\":{\"start\":{\"line\":9,\"column\":40},\"end\":{\"line\":9,\"column\":54}}}) : helper)))\n    + \"\\\">\\r\\n                <img src=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"imageUrl\") || (depth0 != null ? lookupProperty(depth0,\"imageUrl\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"imageUrl\",\"hash\":{},\"loc\":{\"start\":{\"line\":10,\"column\":26},\"end\":{\"line\":10,\"column\":38}}}) : helper)))\n    + \"\\\" aria-hidden=\\\"true\\\">\\r\\n            </div>\\r\\n\";\n},\"6\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"            <div class=\\\"csui-favorite csui-acc-tab-region webreports-tile-toolbar-btn webreports-visual-count-btn-parameters\\\">\\r\\n                <span class=\\\"csui-icon-edit inline-edit-icon icon-edit wr-icon-edit\\\" role=\\\"button\\\" tabindex=\\\"0\\\" aria-label=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"parameters\") || (depth0 != null ? lookupProperty(depth0,\"parameters\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"parameters\",\"hash\":{},\"loc\":{\"start\":{\"line\":22,\"column\":124},\"end\":{\"line\":22,\"column\":138}}}) : helper)))\n    + \"\\\" title=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"parameters\") || (depth0 != null ? lookupProperty(depth0,\"parameters\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"parameters\",\"hash\":{},\"loc\":{\"start\":{\"line\":22,\"column\":147},\"end\":{\"line\":22,\"column\":161}}}) : helper)))\n    + \"\\\"></span>\\r\\n            </div>\\r\\n\";\n},\"8\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"            <!-- Note: the options button must be available even when there is no header. In the case of no header, it will be positioned absolute -->\\r\\n            <div class=\\\"csui-favorite csui-acc-tab-region webreports-tile-toolbar-btn webreports-visual-count-btn-options\\\">\\r\\n                <span class=\\\"csui-icon-more inline-edit-icon icon-more\\\" role=\\\"button\\\" tabindex=\\\"0\\\" aria-label=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"chartOptions\") || (depth0 != null ? lookupProperty(depth0,\"chartOptions\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"chartOptions\",\"hash\":{},\"loc\":{\"start\":{\"line\":28,\"column\":111},\"end\":{\"line\":28,\"column\":127}}}) : helper)))\n    + \"\\\" title=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"chartOptions\") || (depth0 != null ? lookupProperty(depth0,\"chartOptions\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"chartOptions\",\"hash\":{},\"loc\":{\"start\":{\"line\":28,\"column\":136},\"end\":{\"line\":28,\"column\":152}}}) : helper)))\n    + \"\\\"></span>\\r\\n            </div>\\r\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"tile-header\\\">\\r\\n\\r\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"icon\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.program(3, data, 0),\"loc\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":13,\"column\":11}}})) != null ? stack1 : \"\")\n    + \"\\r\\n    <div class=\\\"tile-title\\\" title=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"title\") || (depth0 != null ? lookupProperty(depth0,\"title\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"title\",\"hash\":{},\"loc\":{\"start\":{\"line\":15,\"column\":35},\"end\":{\"line\":15,\"column\":44}}}) : helper)))\n    + \"\\\">\\r\\n        <h2 class=\\\"csui-heading\\\">\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"title\") || (depth0 != null ? lookupProperty(depth0,\"title\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"title\",\"hash\":{},\"loc\":{\"start\":{\"line\":16,\"column\":33},\"end\":{\"line\":16,\"column\":42}}}) : helper)))\n    + \"</h2>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-controls\\\" title=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"title\") || (depth0 != null ? lookupProperty(depth0,\"title\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"title\",\"hash\":{},\"loc\":{\"start\":{\"line\":19,\"column\":38},\"end\":{\"line\":19,\"column\":47}}}) : helper)))\n    + \"\\\">\\r\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"showParameterEditBtn\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(6, data, 0),\"inverse\":container.noop,\"loc\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":24,\"column\":15}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"filterable\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(8, data, 0),\"inverse\":container.noop,\"loc\":{\"start\":{\"line\":25,\"column\":8},\"end\":{\"line\":30,\"column\":15}}})) != null ? stack1 : \"\")\n    + \"    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"tile-content\\\"></div>\\r\\n\\r\\n<div class=\\\"tile-footer binf-hidden\\\"></div>\\r\\n\\r\\n<div class=\\\"webreports-visual-count-overlay-clip\\\">\\r\\n    <div class=\\\"webreports-visual-count-overlay\\\">\\r\\n        <div class=\\\"webreports-visual-count-overlay-content binf-modal-dialog\\\">\\r\\n        <form class=\\\"csui-inlineform-group webreports-visual-count-settings-form\\\">\\r\\n            <div class=\\\"binf-modal-content\\\">\\r\\n                <div class=\\\"binf-modal-body\\\">\\r\\n                    <div class=\\\"webreports-visual-count-controls-parent\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";\n}});\nHandlebars.registerPartial('webreports_widgets_visual.data.filtered.count_impl_controls_visual.count.tile_impl_visual.count.tile', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/visual.count.tile',[],function(){});\n","\ncsui.define('css!webreports/style/webreports',[],function(){});\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.tile.view',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/jquery',\r\n    'csui/lib/backbone',\r\n    'csui/controls/tile/tile.view',\r\n    'csui/utils/contexts/factories/connector',\r\n    'csui/utils/base',\r\n    'csui/controls/tile/behaviors/perfect.scrolling.behavior',\r\n    'webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/expanding.behavior',\r\n    'csui/controls/charts/visual.count/visual.count.view',\r\n    'webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/visual.count.view',\r\n    'webreports/mixins/webreports.view.mixin',\r\n    'webreports/widgets/visual.data.filtered.count/impl/mixins/visual.count.view.mixin',\r\n    'i18n!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/nls/lang',\r\n    'hbs!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/visual.count.tile',\r\n    'css!webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/impl/visual.count.tile',\r\n    'css!webreports/style/webreports.css'\r\n], function (_,\r\n    $,\r\n    Backbone,\r\n    TileView,\r\n    ConnectorFactory,\r\n    base,\r\n    PerfectScrollingBehavior,\r\n    ExpandingBehavior,\r\n    VisualCountChartView,\r\n    VisualDataExpanded,\r\n    WebReportsViewMixin,\r\n    VisualCountViewMixin,\r\n    lang,\r\n    template) {\r\n\r\n    var VisualCountTileView = TileView.extend({\r\n\r\n        contentView: VisualCountChartView,\r\n\r\n        ui: {\r\n            overlayClip: '.webreports-visual-count-overlay-clip',\r\n            toggleSettings: '.webreports-visual-count-btn-options > span',\r\n            overlay: '.webreports-visual-count-overlay',\r\n            footer: '.tile-footer',\r\n            expandButton: '.cs-more'\r\n        },\r\n\r\n        constructor: function VisualCountTileView(options) {\r\n\r\n            if (options && _.has(options, 'id') && this._isTileWidget(options)) {\r\n                // pie chart legend does not fit well in a single tile. This override forces radial labels instead of legend\r\n                options.showLegend = false;\r\n            }\r\n\r\n            options = this.validateVisualCountOptions(options);\r\n\r\n            this.validateCollections(options);\r\n\r\n            this._setContentViewOptions(options);\r\n\r\n            TileView.prototype.constructor.apply(this, arguments);\r\n\r\n            this.createChartControlsView(options);\r\n\r\n        },\r\n\r\n        behaviors: function () {\r\n            var behaviors = {\r\n                PerfectScrolling: {\r\n                    behaviorClass: PerfectScrollingBehavior,\r\n                    contentParent: \".tile-content\",\r\n                    suppressScrollX: false,\r\n                    scrollYMarginOffset: 10\r\n                }\r\n            };\r\n\r\n            if (this.options.expandable) {\r\n                behaviors.Expanding = {\r\n                    behaviorClass: ExpandingBehavior,\r\n                    titleBarIcon: function () {\r\n                        return this.options.titleBarIcon;\r\n                    },\r\n                    dialogTitle: function () {\r\n                        var title = base.getClosestLocalizedString(this.options.title, lang.dialogTitle);\r\n                        return title;\r\n                    },\r\n                    dialogTitleIconRight: \"icon-tileCollapse\",\r\n                    dialogClassName: 'webreports-visual-data',\r\n                    expandedView: function () {\r\n                        return VisualDataExpanded;\r\n                    },\r\n                    expandedViewOptions: function () {\r\n                        var options = this.options,\r\n                            expandedOptions = {\r\n                                context: options.context,\r\n                                chartCollection: this.chartCollection,\r\n                                columnCollection: this.columnCollection,\r\n                                facetCollection: this.facetCollection,\r\n                                type: options.chartType,\r\n                                theme: this.chartOptionsModel.get(\"themeName\"),\r\n                                chartControlsModel: options.chartCollection.chartControlsModel,\r\n                                chartOptionsModel: this.chartOptionsModel,\r\n                                toolbarItems: options.toolbarItems\r\n                            };\r\n\r\n                        return expandedOptions;\r\n                    }\r\n                };\r\n            }\r\n\r\n            return behaviors;\r\n        },\r\n\r\n        regions: function () {\r\n            var regions = _.extend({\r\n                visualizationControls: '.webreports-visual-count-controls-parent'\r\n            }, TileView.prototype.regions);\r\n            return regions;\r\n        },\r\n\r\n        events: {\r\n            'click @ui.toggleSettings': 'toggleSettings',\r\n            'keyup @ui.toggleSettings': 'toggleSettings',\r\n            'keyup @ui.expandButton': 'keyboardExpand'\r\n        },\r\n\r\n        keyboardExpand: function (event, options) {\r\n            event.preventDefault();\r\n            if ((event.type === \"keyup\" && (event.keyCode === 13 || event.keyCode === 32))) {\r\n                this.triggerMethod('expand', options);\r\n            }\r\n        },\r\n\r\n        toggleSettings: function (event) {\r\n            event.preventDefault();\r\n            if (event.type === \"click\" || (event.type === \"keyup\" && (event.keyCode === 13 || event.keyCode === 32))) {\r\n                if (this.overlayVisible) {\r\n                    $('.webreports-visual-count-overlay', this.$el).removeClass('visible')\r\n                    .addClass('binf-hidden');\r\n                    $('.cs-more', this.$el).attr('tabindex', '0');\r\n                    this.overlayVisible = false;\r\n                } else {\r\n                    this.getRegion('visualizationControls').show(this.chartControlsView);\r\n                    $('.webreports-visual-count-overlay', this.$el).addClass('visible')\r\n                    .removeClass('binf-hidden');\r\n                    $('.cs-more', this.$el).attr('tabindex', '-1');\r\n                    this.overlayVisible = true;\r\n                }\r\n            }\r\n\r\n         },\r\n\r\n        template: template,\r\n\r\n        templateHelpers: function () {\r\n            var helpers = {\r\n                title: base.getClosestLocalizedString(this.options.title, lang.dialogTitle),\r\n                icon: this.options.titleBarIcon || 'title-webreports',\r\n                activeColumn: this.options.activeColumn || '',\r\n                filterable: this.options.filterable,\r\n                parameters: lang.parameters,\r\n                chartOptions: lang.chartOptions\r\n            };\r\n\r\n            if (this.options.parameterPrompt === 'showPromptForm') {\r\n                _.extend(helpers, {\r\n                    showParameterEditBtn: true\r\n                });\r\n            }\r\n\r\n            return helpers;\r\n        },\r\n\r\n        onChartOptionsUpdated: function (args) {\r\n            if (this.chartOptionsModel) {\r\n                if (_.has(args, 'theme_name')) {\r\n                    this.chartOptionsModel.set({\r\n                        \"themeName\": args.theme_name\r\n                    });\r\n                }\r\n                if (_.has(args, 'view_value_as_percentage')) {\r\n                    this.chartOptionsModel.set({\r\n                        \"showAsPercentage\": args.view_value_as_percentage\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.chartCollection.onChartOptionsUpdated(args);\r\n        },\r\n\r\n        _setContentViewOptions: function (options) {\r\n            this.contentViewOptions = {\r\n                context: options.context,\r\n                chartType: options.type,\r\n                collection: options.chartCollection,\r\n                columns: options.columnCollection,\r\n                chartOptions: this.chartOptionsModel\r\n            };\r\n\r\n            this.listenToOnce(options.chartCollection, \"sync\", this._showControls);\r\n        },\r\n\r\n        _showControls: function () {\r\n            if (!this.chartCollection.isEmpty()) {\r\n                if (this.options.filterable) {\r\n                    this.ui.toggleSettings.removeClass(\"binf-hidden\");\r\n                }\r\n                if (this.options.expandable) {\r\n                    this.ui.footer.removeClass(\"binf-hidden\");\r\n\r\n                    // add class to expand button csui-acc-tab-region\r\n                    var expandButtonContext = $('.tile-content > .csui-visual-count-container').parentElement,\r\n                        expandButton = $('.tile-footer > .cs-more.tile-expand', expandButtonContext);\r\n                    if (expandButton) {\r\n                        expandButton.addClass('csui-acc-tab-region').attr('tabindex', '0');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        _isTileWidget: function (options) {\r\n            // return true if widget with id is of kind 'tile', which means single-tile width\r\n            var widgetCollection,\r\n                isTileWidget = false;\r\n\r\n            if (options && _.has(options, 'context') && _.has(options.context, 'perspective') && _.has(options.context.perspective.get('options'), 'widgets')) {\r\n                widgetCollection = options.context.perspective.get('options').widgets;\r\n\r\n                widgetCollection = _.filter(widgetCollection, function (widget) {\r\n                    // filter just the tile widgets\r\n                    return (widget.kind && widget.kind === 'tile');\r\n                });\r\n\r\n                if (widgetCollection.length) {\r\n                    isTileWidget = _.every(widgetCollection, function (widget) {\r\n                        return (_.has(widget, 'options') && _.has(widget.options, 'id') && (widget.options.id === options.id));\r\n                    });\r\n                }\r\n            }\r\n            return isTileWidget;\r\n        }\r\n    });\r\n\r\n    WebReportsViewMixin.mixin(VisualCountTileView.prototype);\r\n    VisualCountViewMixin.mixin(VisualCountTileView.prototype);\r\n\r\n    return VisualCountTileView;\r\n\r\n});\r\n\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/visual.count.content.view',[\r\n    'webreports/widgets/visual.data.filtered.count/impl/controls/visual.count.tile/visual.count.tile.view',\r\n    'webreports/mixins/webreports.view.mixin',\r\n    'webreports/widgets/visual.data.filtered.count/impl/mixins/visual.count.view.mixin'\r\n], function (VisualCountTileView,\r\n             WebReportsViewMixin,\r\n             VisualCountViewMixin) {\r\n\r\n    var VisualCountContentView = VisualCountTileView.extend({\r\n\r\n        constructor: function VisualCountContentView(options) {\r\n\r\n            var tileOptions = this.setVisualCountWidgetOptions(options);\r\n\r\n            VisualCountTileView.prototype.constructor.apply(this, [tileOptions]);\r\n\r\n            this.options = tileOptions;\r\n        }\r\n    });\r\n\r\n    WebReportsViewMixin.mixin(VisualCountContentView.prototype);\r\n    VisualCountViewMixin.mixin(VisualCountContentView.prototype);\r\n\r\n    return VisualCountContentView;\r\n\r\n});\r\n\n","csui.define('webreports/widgets/visual.data.filtered.count/visual.data.filtered.count.view',[\r\n    'webreports/controls/parameter.prompt/widget.prompt.wrapper.view',\r\n    'webreports/widgets/visual.data.filtered.count/impl/visual.count.content.view',\r\n], function (WidgetPromptWrapperView, VisualCountContentView) {\r\n\r\n      var VisualDataFilteredCountView = WidgetPromptWrapperView.extend({\r\n\r\n          className: 'cs-tile cs-list tile content-tile webreports-tilereport',\r\n\r\n          constructor: function VisualDataFilteredCountView(options) {\r\n\r\n              options.view = VisualCountContentView;\r\n\r\n              WidgetPromptWrapperView.prototype.constructor.apply(this, arguments);\r\n          }\r\n      });\r\n\r\n    return VisualDataFilteredCountView;\r\n\r\n});\r\n\n","\ncsui.define('json!webreports/widgets/visual.data.filtered.count/visual.data.filtered.count.manifest.json',{\r\n    \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n    \"title\": \"{{widgetTitle}}\",\r\n    \"description\": \"{{widgetDescription}}\",\r\n    \"kind\": \"header\",\r\n    \"supportedKinds\": [\"tile\", \"header\"],\r\n    \"schema\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"title\": {\r\n                \"title\": \"{{tileTitle}}\",\r\n                \"description\": \"{{tileDescription}}\",\r\n                \"type\": \"object\"\r\n            },\r\n            \"type\": {\r\n                \"title\": \"{{typeTitle}}\",\r\n                \"description\": \"{{typeDescription}}\",\r\n                \"type\": \"string\",\r\n                \"enum\": [\"bar\",\"horizontalBar\",\"donut\",\"pie\"],\r\n                \"default\": \"bar\"\r\n            },\r\n            \"id\": {\r\n                \"title\": \"{{sourceTitle}}\",\r\n                \"description\": \"{{sourceDescription}}\",\r\n                \"type\": \"integer\"\r\n            },\r\n            \"activeColumn\": {\r\n                \"title\": \"{{activeTitle}}\",\r\n                \"description\": \"{{activeDescription}}\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"theme\": {\r\n                \"title\": \"{{themeTitle}}\",\r\n                \"description\": \"{{themeDescription}}\",\r\n                \"type\": \"string\",\r\n                \"enum\": [\"otPrimary\",\"otSecondary\",\"otTertiary\", \"dataClarity\",\"dataClarityPatterned\",\"otNavy\",\"otTeal\",\"otIndigo\",\"otPlum\",\"otMagenta\"],\r\n                \"default\": \"otPrimary\"\r\n            },\r\n            \"showLegend\": {\r\n              \"title\": \"{{pieLegendTitle}}\",\r\n              \"description\": \"{{pieLegendDescription}}\",\r\n              \"type\": \"boolean\",\r\n              \"enum\": [\r\n                true,\r\n                false\r\n              ],\r\n              \"default\": true\r\n            },\r\n            \"viewValueAsPercentage\": {\r\n                \"title\": \"{{percentTitle}}\",\r\n                \"description\": \"{{percentDescription}}\",\r\n                \"type\": \"boolean\",\r\n                \"enum\": [\r\n                    true,\r\n                    false\r\n                ],\r\n                \"default\": false\r\n            },\r\n            \"animate\": {\r\n                \"title\": \"{{animateTitle}}\",\r\n                \"description\": \"{{animateDescription}}\",\r\n                \"type\": \"boolean\",\r\n                \"enum\": [\r\n                    true,\r\n                    false\r\n                ],\r\n                \"default\": true\r\n            },\r\n            \"groupAfter\": {\r\n                \"title\": \"{{groupTitle}}\",\r\n                \"type\": \"integer\",\r\n                \"description\": \"{{groupDescription}}\",\r\n                \"enum\": [-1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\r\n                \"default\": -1\r\n            },\r\n            \"sortBy\": {\r\n                \"title\": \"{{sortTitle}}\",\r\n                \"description\": \"{{sortDescription}}\",\r\n                \"type\": \"string\",\r\n                \"enum\": [\"ordinal\",\"Count\"],\r\n                \"default\": \"Count\"\r\n            },\r\n            \"sortOrder\": {\r\n                \"title\": \"{{directionTitle}}\",\r\n                \"description\": \"{{directionDescription}}\",\r\n                \"type\": \"string\",\r\n                \"enum\": [\"desc\",\"asc\"],\r\n                \"default\": \"desc\"\r\n            },\r\n            \"filterable\": {\r\n                \"title\": \"{{optionsTitle}}\",\r\n                \"description\": \"{{optionsDescription}}\",\r\n                \"type\": \"boolean\",\r\n                \"enum\": [\r\n                    true,\r\n                    false\r\n                ],\r\n                \"default\": false\r\n            },\r\n            \"expandable\": {\r\n                \"title\": \"{{expandedTitle}}\",\r\n                \"description\": \"{{expandedDescription}}\",\r\n                \"type\": \"boolean\",\r\n                \"enum\": [\r\n                    true,\r\n                    false\r\n                ],\r\n                \"default\": false\r\n            },\r\n            \"launchButtonConfig\": {\r\n                \"type\": \"object\",\r\n                \"title\": \"{{buttonTitle}}\",\r\n                \"description\": \"{{buttonDescription}}\",\r\n                \"properties\": {\r\n                    \"rowLimit\": {\r\n                      \"title\": \"{{maxTitle}}\",\r\n                      \"description\": \"{{maxDescription}}\",\r\n                      \"type\": \"integer\",\r\n                      \"default\": 5000\r\n                    },\r\n                    \"launchButtons\": {\r\n                        \"type\": \"array\",\r\n                        \"title\": \"{{customButtonTitle}}\",\r\n                        \"description\": \"{{customButtonDescription}}\",\r\n                        \"items\": {\r\n                            \"type\": \"object\",\r\n                            \"title\": \"{{addButtonTitle}}\",\r\n                            \"description\": \"{{addButtonDescription}}\",\r\n                            \"properties\": {\r\n                                \"launchButtonID\": {\r\n                                    \"title\": \"{{reportButtonTitle}}\",\r\n                                    \"description\": \"{{reportButtonDescription}}\",\r\n                                    \"type\": \"integer\"\r\n                                },\r\n                                \"launchButtonLabel\": {\r\n                                    \"title\": \"{{labelButtonTitle}}\",\r\n                                    \"description\": \"{{labelButtonDescription}}\",\r\n                                    \"type\": \"object\"\r\n                                },\r\n                                \"launchButtonTooltip\": {\r\n                                    \"title\": \"{{buttonToolTitle}}\",\r\n                                    \"description\": \"{{buttonToolDescription}}\",\r\n                                    \"type\": \"object\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"parameterPrompt\": {\r\n              \"title\": \"{{parameterPromptTitle}}\",\r\n              \"description\": \"{{parameterPromptDescription}}\",\r\n              \"type\": \"string\",\r\n              \"enum\": [\r\n                \"disabled\",\r\n                \"showPromptForm\"\r\n              ],\r\n              \"default\": \"disabled\"\r\n            },\r\n            \"parameters\": {\r\n                \"type\": \"array\",\r\n                \"title\": \"{{paramSourceTitle}}\",\r\n                \"description\": \"{{paramSourceDescription}}\",\r\n                \"items\": {\r\n                    \"type\": \"object\",\r\n                    \"title\": \"{{paramPairTitle}}\",\r\n                    \"description\": \"{{paramPairDescription}}\",\r\n                    \"properties\": {\r\n                        \"name\": {\r\n                            \"type\": \"string\",\r\n                            \"title\": \"{{paramNameTitle}}\",\r\n                            \"description\": \"{{paramNameDescription}}\"\r\n                        },\r\n                        \"value\": {\r\n                            \"type\": \"string\",\r\n                            \"title\": \"{{paramValueTitle}}\",\r\n                            \"description\": \"{{paramValueDescription}}\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"required\": [\"activeColumn\",\"id\"]\r\n    },    \r\n    \"options\": {\r\n        \"fields\": {\r\n            \"id\": {\r\n                \"type\": \"otcs_node_picker\",\r\n                \"type_control\": {\r\n                    \"parameters\": {\r\n                        \"select_types\": [30303]\r\n                    }\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"type\": \"otcs_multilingual_string\"\r\n            },\r\n            \"parameterPrompt\": {\r\n              \"type\": \"select\",\r\n              \"optionLabels\": [\r\n                \"{{parmsIgnored}}\",\r\n                \"{{enabledShowPromptForm}}\"\r\n              ]\r\n            },\r\n            \"launchButtonConfig\": {\r\n                \"fields\": {\r\n                    \"launchButtons\": {\r\n                        \"items\": {\r\n                            \"fields\": {\r\n                                \"launchButtonID\": {\r\n                                    \"type\": \"otcs_node_picker\",\r\n                                    \"type_control\": {\r\n                                        \"parameters\": {\r\n                                            \"select_types\": [30303]\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"launchButtonLabel\": {\r\n                                    \"type\": \"otcs_multilingual_string\"\r\n                                },\r\n                                \"launchButtonTooltip\": {\r\n                                    \"type\": \"otcs_multilingual_string\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"type\": {\r\n              \"type\": \"select\",\r\n              \"optionLabels\": [\"{{optionsTypeBar}}\", \"{{optionsTypeHorizontalBar}}\", \"{{optionsTypeDonut}}\", \"{{optionsTypePie}}\"]\r\n            },\r\n            \"theme\": {\r\n                \"type\": \"select\",\r\n                \"optionLabels\": [\"{{optionsTypeOTPrimary}}\", \"{{optionsTypeOTSecondary}}\", \"{{optionsTypeOTTertiary}}\", \"{{optionsTypeDataClarity}}\",\"{{optionsTypeDataClarityPatterned}}\",\"{{optionsTypeOTNavy}}\",\"{{optionsTypeOTTeal}}\",\"{{optionsTypeOTIndigo}}\",\"{{optionsTypeOTPlum}}\",\"{{optionsTypeOTMagenta}}\"]\r\n            },\r\n            \"groupAfter\": {\r\n                \"type\": \"select\",\r\n                \"optionLabels\": [\"{{optionsGroupAfterDefault}}\",\"2\",\"3\",\"4\",\"{{optionsPieDonutDefault}}\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"{{optionsBarDefault}}\",\"16\",\"17\",\"18\",\"19\",\"20\"]\r\n            },\r\n            \"sortBy\": {\r\n                \"type\": \"select\",\r\n                \"optionLabels\": [\"{{optionsSortByActive}}\", \"{{optionsSortByCount}}\"]\r\n            },\r\n            \"sortOrder\": {\r\n                \"type\": \"select\",\r\n                \"optionLabels\": [\"{{optionsSortOrderDsc}}\", \"{{optionsSortOrderAsc}}\"]\r\n            }\r\n        }\r\n    }\r\n});\n\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/nls/visual.data.filtered.count.manifest',{\r\n\t// Always load the root bundle for the default locale (en-us)\r\n\t\"root\": true,\r\n\t// Do not load English locale bundle provided by the root bundle\r\n\t\"en-us\": false,\r\n\t\"en\": false\r\n});\r\n\n","csui.define('webreports/widgets/visual.data.filtered.count/impl/nls/root/visual.data.filtered.count.manifest',{\r\n    \"widgetTitle\": \"Visual Count\",\r\n    \"widgetDescription\": \"This widget visualizes the total count of values matching given criteria.\",\r\n    \"tileTitle\": \"Title\",\r\n    \"tileDescription\": \"Enter the title for the widget. This title appears in the Tile header.\",\r\n    \"typeTitle\": \"Chart Type\",\r\n    \"typeDescription\": \"Select the type of chart appropriate for your data.\",\r\n    \"themeTitle\": \"Theme\",\r\n    \"themeDescription\": \"Select a color palette for your chart.\",\r\n    \"sourceTitle\": \"Source WebReport\",\r\n    \"sourceDescription\": \"Browse to select the WebReport that retrieves the data that you want to visualize.\",\r\n    \"activeTitle\": \"Active Column\",\r\n    \"activeDescription\": \"Enter the name of the data source column that provides the matching values to be counted.\",\r\n    \"optionsTitle\": \"Chart Options\",\r\n    \"optionsDescription\": \"Choose whether end users have access to chart filtering options in the Tile view.\",\r\n    \"expandedTitle\": \"Expanded View\",\r\n    \"expandedDescription\": \"Choose whether end users have access to the Expanded view of the chart.\",\r\n    \"percentTitle\": \"Values as Percentage\",\r\n    \"percentDescription\": \"Choose whether to show the chart values as percentages of the total count or as the actual count.\",\r\n    \"pieLegendTitle\": \"Pie legend\",\r\n    \"pieLegendDescription\": \"Pie and donut charts have a separate legend by default. If this is disabled, slice labels are shown instead.\",\r\n    \"animateTitle\": \"Animate\",\r\n    \"animateDescription\": \"Choose whether the chart animates or not when changing certain settings in the interface.\",\r\n    \"groupTitle\": \"Group After\",\r\n    \"groupDescription\": \"Select the threshold for the number of discrete values whose total count will appear in the chart. Values above the threshold will be grouped as \\'Other\\' and the combined total will appear. The Chart Default is a threshold value appropriate to the chart type.\",\r\n    \"sortTitle\": \"Sort By\",\r\n    \"sortDescription\": \"Select whether to sort the chart by the value names in the Active Column or by the count of the values.\",\r\n    \"directionTitle\": \"Sort Direction\",\r\n    \"directionDescription\": \"Select whether to sort the chart in Ascending or Descending order.\",\r\n    \"buttonTitle\": \"Button WebReports\",\r\n    \"buttonDescription\": \"Configure the options for Button WebReports launched by Custom Buttons in the Expanded view\",\r\n    \"maxTitle\": \"Maximum Items to Process\",\r\n    \"maxDescription\": \"Enter the maximum number of data items to pass to the Button WebReport.\",\r\n    \"customButtonTitle\": \"Custom Buttons\",\r\n    \"customButtonDescription\": \"Set the properties for the Custom Button that appears in the Expanded View, then click the \\'Add To Array\\' button. Repeat as required to add multiple buttons.\",\r\n    \"addButtonTitle\": \"Add Custom Buttons\",\r\n    \"addButtonDescription\": \"Configure custom buttons that will appear in the Expanded view and which will launch Button Webreports.\",\r\n    \"reportButtonTitle\": \"Button WebReport\",\r\n    \"reportButtonDescription\": \"Browse to select the WebReport that will open when you click the button.\",\r\n    \"labelButtonTitle\": \"Button Label\",\r\n    \"labelButtonDescription\": \"Enter a custom label for the button.\",\r\n    \"buttonToolTitle\": \"Button Tooltip\",\r\n    \"buttonToolDescription\": \"Enter a tool tip for the button.\",\r\n    \"parameterPromptTitle\": \"Parameter prompt behavior\",\r\n    \"parameterPromptDescription\": \"Determines how the widget should behave when the source WebReport has input parameters.\",\r\n    \"parmsIgnored\": \"Don\\'t prompt - use defaults\",\r\n    \"enabledShowPromptForm\": \"Show prompt form\",\r\n    \"paramSourceTitle\": \"Source Parameters\",\r\n    \"paramSourceDescription\": \"Specify one or more Key/Value pairs of parameters to pass into the Source WebReport, as required.\",\r\n    \"paramPairTitle\": \"Source Parameters\",\r\n    \"paramPairDescription\": \"Specify one or more Key/Value pairs of parameters to pass into the Source WebReport, as required.\",\r\n    \"paramNameTitle\": \"Parameter Name\",\r\n    \"paramNameDescription\": \"The name of the URL parameter.\",\r\n    \"paramValueTitle\": \"Parameter Value\",\r\n    \"paramValueDescription\": \"The value of the URL parameter.\",\r\n    \"optionsTypeBar\": \"Vertical Bar\",\r\n    \"optionsTypeHorizontalBar\": \"Horizontal Bar\",\r\n    \"optionsTypeDonut\": \"Donut\",\r\n    \"optionsTypePie\": \"Pie\",\r\n    \"optionsTypeOTPrimary\": \"Evening 10\",\r\n    \"optionsTypeOTSecondary\": \"Coral 10\",\r\n    \"optionsTypeOTTertiary\": \"Garden 10\",\r\n    \"optionsTypeDataClarity\": \"Clarity 20\",\r\n    \"optionsTypeDataClarityPatterned\": \"Patterned 20\",\r\n    \"optionsTypeOTNavy\": \"Navy 6\",\r\n    \"optionsTypeOTTeal\": \"Teal 6\",\r\n    \"optionsTypeOTIndigo\": \"Indigo 6\",\r\n    \"optionsTypeOTPlum\": \"Plum 6\",\r\n    \"optionsTypeOTMagenta\": \"Magenta 6\",\r\n    \"optionsGroupAfterDefault\": \"Use Chart Default\",\r\n    \"optionsPieDonutDefault\": \"5 - Pie and Donut default\",\r\n    \"optionsBarDefault\": \"15 - Bar default\",\r\n    \"optionsSortByActive\": \"Active Column\",\r\n    \"optionsSortByCount\": \"Count\",\r\n    \"optionsSortOrderDsc\": \"Descending\",\r\n    \"optionsSortOrderAsc\": \"Ascending\"\r\n});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!webreports/widgets/visual.count.full.page/impl/visual.count.full.page',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"1\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"    <div class=\\\"webreports-visual-count-header tile-header\\\">\\r\\n\\r\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"wrNode\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(2, data, 0),\"inverse\":container.noop,\"loc\":{\"start\":{\"line\":4,\"column\":8},\"end\":{\"line\":6,\"column\":15}}})) != null ? stack1 : \"\")\n    + \"\\r\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"icon\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(4, data, 0),\"inverse\":container.program(6, data, 0),\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":18,\"column\":15}}})) != null ? stack1 : \"\")\n    + \"\\r\\n        <div class=\\\"tile-title\\\">\\r\\n             <h2 class=\\\"csui-heading\\\">\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"title\") || (depth0 != null ? lookupProperty(depth0,\"title\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"title\",\"hash\":{},\"loc\":{\"start\":{\"line\":21,\"column\":38},\"end\":{\"line\":21,\"column\":47}}}) : helper)))\n    + \"</h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"tile-controls\\\">\\r\\n            <div class=\\\"csui-favorite csui-acc-tab-region webreports-widget-parameters-btn webreports-visual-count-btn-parameters binf-hidden\\\">\\r\\n                <span class=\\\"csui-icon-edit inline-edit-icon icon-edit wr-icon-edit\\\" role=\\\"button\\\" tabindex=\\\"0\\\" aria-label=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"settings\") || (depth0 != null ? lookupProperty(depth0,\"settings\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"settings\",\"hash\":{},\"loc\":{\"start\":{\"line\":26,\"column\":124},\"end\":{\"line\":26,\"column\":136}}}) : helper)))\n    + \"\\\"></span>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\";\n},\"2\":function(container,depth0,helpers,partials,data) {\n    return \"            <div class=\\\"arrow_back cs-go-back\\\"></div>\\r\\n\";\n},\"4\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"            <div class=\\\"tile-type-icon\\\">\\r\\n                <span class=\\\"icon \"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"icon\") || (depth0 != null ? lookupProperty(depth0,\"icon\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"icon\",\"hash\":{},\"loc\":{\"start\":{\"line\":10,\"column\":34},\"end\":{\"line\":10,\"column\":42}}}) : helper)))\n    + \"\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            </div>\\r\\n\";\n},\"6\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"imageUrl\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(7, data, 0),\"inverse\":container.noop,\"loc\":{\"start\":{\"line\":13,\"column\":12},\"end\":{\"line\":17,\"column\":19}}})) != null ? stack1 : \"\");\n},\"7\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"                <div class=\\\"tile-type-image \"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"imageClass\") || (depth0 != null ? lookupProperty(depth0,\"imageClass\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"imageClass\",\"hash\":{},\"loc\":{\"start\":{\"line\":14,\"column\":44},\"end\":{\"line\":14,\"column\":58}}}) : helper)))\n    + \"\\\">\\r\\n                    <img src=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"imageUrl\") || (depth0 != null ? lookupProperty(depth0,\"imageUrl\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"imageUrl\",\"hash\":{},\"loc\":{\"start\":{\"line\":15,\"column\":30},\"end\":{\"line\":15,\"column\":42}}}) : helper)))\n    + \"\\\" aria-hidden=\\\"true\\\">\\r\\n                </div>\\r\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"header\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"loc\":{\"start\":{\"line\":1,\"column\":0},\"end\":{\"line\":31,\"column\":7}}})) != null ? stack1 : \"\")\n    + \"\\r\\n<div class=\\\"webreports-visual-count-container\\\"></div>\";\n}});\nHandlebars.registerPartial('webreports_widgets_visual.count.full.page_impl_visual.count.full.page', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('webreports/widgets/visual.count.full.page/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('webreports/widgets/visual.count.full.page/impl/nls/root/lang',{\r\n    visualCount: 'Visual Count'\r\n});\r\n\n","\ncsui.define('css!webreports/widgets/visual.count.full.page/impl/visual.count.full.page',[],function(){});\n","csui.define('webreports/widgets/visual.count.full.page/impl/visual.count.full.page.content.view',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/marionette3',\r\n    'csui/utils/base',\r\n    'webreports/widgets/visual.data.filtered.count/impl/controls/visual.count/visual.count.view',\r\n    'webreports/mixins/webreports.view.mixin',\r\n    'webreports/utils/general.utils',\r\n    'webreports/widgets/visual.data.filtered.count/impl/mixins/visual.count.view.mixin',\r\n    'hbs!webreports/widgets/visual.count.full.page/impl/visual.count.full.page',\r\n    'i18n!webreports/widgets/visual.count.full.page/impl/nls/lang',\r\n    'css!webreports/widgets/visual.count.full.page/impl/visual.count.full.page'\r\n], function (_,\r\n             Marionette,\r\n             base,\r\n             VisualCountView,\r\n             WebReportsViewMixin,\r\n             generalUtils,\r\n             VisualCountViewMixin,\r\n             template,\r\n             lang) {\r\n\r\n    var VisualCountFullPageContentView = Marionette.View.extend({\r\n\r\n        template: template,\r\n\r\n        className: 'webreports-visual-count-fp-content-view',\r\n\r\n        ui: {\r\n            visualCount: '.webreports-visual-count-container',\r\n        },\r\n\r\n        regions: {\r\n            visualCount: {\r\n                el: '.webreports-visual-count-container',\r\n                replaceElement: true\r\n            }\r\n        },\r\n\r\n        constructor: function VisualCountFullPageContentView(options) {\r\n            options = this.setVisualCountWidgetOptions(options);\r\n            Marionette.View.prototype.constructor.apply(this, options);\r\n            this.options = options;\r\n            this._createVisualCountView();\r\n        },\r\n\r\n        templateContext: function () {\r\n            var context = this.getOption(\"context\"),\r\n                options = this.options;\r\n\r\n            return {\r\n                title: base.getClosestLocalizedString(options.title, lang.visualCount),\r\n                icon: options.titleBarIcon,\r\n                header: (!_.isUndefined(options.header) && options.header === false) ? false : true,\r\n                wrNode: generalUtils.isWebReportNodeContext(context)\r\n            };\r\n        },\r\n\r\n        onDomRefresh: function(){\r\n            this.showChildView('visualCount', this.visualCountView);\r\n        },\r\n\r\n        _createVisualCountView: function(){\r\n            this.visualCountView = new VisualCountView(this.options);\r\n        }\r\n    });\r\n\r\n    WebReportsViewMixin.mixin(VisualCountFullPageContentView.prototype);\r\n    VisualCountViewMixin.mixin(VisualCountFullPageContentView.prototype);\r\n\r\n    return VisualCountFullPageContentView;\r\n\r\n});\r\n\n","csui.define('webreports/widgets/visual.count.full.page/visual.count.full.page.view',[\r\n    'webreports/controls/parameter.prompt/widget.prompt.wrapper.view',\r\n    'webreports/widgets/visual.count.full.page/impl/visual.count.full.page.content.view'\r\n], function (WidgetPromptWrapperView, VisualCountFullPageContentView) {\r\n\r\n    var VisualCountFullPageView = WidgetPromptWrapperView.extend({\r\n\r\n        className: 'webreports-visual-count-fp-view',\r\n\r\n        constructor: function VisualCountFullPageView(options) {\r\n            // Always check for a prompt form for full page widgets\r\n            if (options.data){\r\n                options.data.parameterPrompt = \"showPromptForm\";\r\n            }\r\n\r\n            options.view = VisualCountFullPageContentView;\r\n\r\n            WidgetPromptWrapperView.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        onDomRefresh: function(){\r\n            var contentView = this.getChildView(\"content\");\r\n            if (contentView){\r\n                contentView.triggerMethod('dom:refresh');\r\n            }\r\n        }\r\n    });\r\n\r\n    return VisualCountFullPageView;\r\n\r\n});\r\n\n","\ncsui.define('json!webreports/widgets/visual.count.full.page/visual.count.full.page.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"{{widgetTitle}}\",\r\n  \"description\": \"{{widgetDescription}}\",\r\n  \"kind\": \"fullpage\",\r\n  \"supportedKinds\": [\"fullpage\"],\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n      \"title\": {\r\n        \"title\": \"{{tileTitle}}\",\r\n        \"description\": \"{{tileDescription}}\",\r\n        \"type\": \"object\"\r\n      },\r\n      \"type\": {\r\n        \"title\": \"{{typeTitle}}\",\r\n        \"description\": \"{{typeDescription}}\",\r\n        \"type\": \"string\",\r\n        \"enum\": [\"bar\",\"horizontalBar\",\"donut\",\"pie\"],\r\n        \"default\": \"bar\"\r\n      },\r\n      \"id\": {\r\n        \"title\": \"{{sourceTitle}}\",\r\n        \"description\": \"{{sourceDescription}}\",\r\n        \"type\": \"integer\"\r\n      },\r\n      \"activeColumn\": {\r\n        \"title\": \"{{activeTitle}}\",\r\n        \"description\": \"{{activeDescription}}\",\r\n        \"type\": \"string\"\r\n      },\r\n      \"theme\": {\r\n        \"title\": \"{{themeTitle}}\",\r\n        \"description\": \"{{themeDescription}}\",\r\n        \"type\": \"string\",\r\n        \"enum\": [\"otPrimary\",\"otSecondary\",\"otTertiary\", \"dataClarity\",\"otNavy\",\"otTeal\",\"otIndigo\",\"otPlum\",\"otMagenta\"],\r\n        \"default\": \"otPrimary\"\r\n      },\r\n      \"viewValueAsPercentage\": {\r\n        \"title\": \"{{percentTitle}}\",\r\n        \"description\": \"{{percentDescription}}\",\r\n        \"type\": \"boolean\",\r\n        \"enum\": [\r\n          true,\r\n          false\r\n        ],\r\n        \"default\": false\r\n      },\r\n      \"animate\": {\r\n        \"title\": \"{{animateTitle}}\",\r\n        \"description\": \"{{animateDescription}}\",\r\n        \"type\": \"boolean\",\r\n        \"enum\": [\r\n          true,\r\n          false\r\n        ],\r\n        \"default\": true\r\n      },\r\n      \"groupAfter\": {\r\n        \"title\": \"{{groupTitle}}\",\r\n        \"type\": \"integer\",\r\n        \"description\": \"{{groupDescription}}\",\r\n        \"enum\": [-1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\r\n        \"default\": -1\r\n      },\r\n      \"sortBy\": {\r\n        \"title\": \"{{sortTitle}}\",\r\n        \"description\": \"{{sortDescription}}\",\r\n        \"type\": \"string\",\r\n        \"enum\": [\"ordinal\",\"Count\"],\r\n        \"default\": \"Count\"\r\n      },\r\n      \"sortOrder\": {\r\n        \"title\": \"{{directionTitle}}\",\r\n        \"description\": \"{{directionDescription}}\",\r\n        \"type\": \"string\",\r\n        \"enum\": [\"desc\",\"asc\"],\r\n        \"default\": \"desc\"\r\n      },\r\n      \"launchButtonConfig\": {\r\n        \"type\": \"object\",\r\n        \"title\": \"{{buttonTitle}}\",\r\n        \"description\": \"{{buttonDescription}}\",\r\n        \"properties\": {\r\n          \"rowLimit\": {\r\n            \"title\": \"{{maxTitle}}\",\r\n            \"description\": \"{{maxDescription}}\",\r\n            \"type\": \"integer\",\r\n            \"default\": 5000\r\n          },\r\n          \"launchButtons\": {\r\n            \"type\": \"array\",\r\n            \"title\": \"{{customButtonTitle}}\",\r\n            \"description\": \"{{customButtonDescription}}\",\r\n            \"items\": {\r\n              \"type\": \"object\",\r\n              \"title\": \"{{addButtonTitle}}\",\r\n              \"description\": \"{{addButtonDescription}}\",\r\n              \"properties\": {\r\n                \"launchButtonID\": {\r\n                  \"title\": \"{{reportButtonTitle}}\",\r\n                  \"description\": \"{{reportButtonDescription}}\",\r\n                  \"type\": \"integer\"\r\n                },\r\n                \"launchButtonLabel\": {\r\n                  \"title\": \"{{labelButtonTitle}}\",\r\n                  \"description\": \"{{labelButtonDescription}}\",\r\n                  \"type\": \"object\"\r\n                },\r\n                \"launchButtonTooltip\": {\r\n                  \"title\": \"{{buttonToolTitle}}\",\r\n                  \"description\": \"{{buttonToolDescription}}\",\r\n                  \"type\": \"object\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"required\": [\"activeColumn\",\"id\"]\r\n  },\r\n  \"options\": {\r\n    \"fields\": {\r\n      \"id\": {\r\n        \"type\": \"otcs_node_picker\",\r\n        \"type_control\": {\r\n          \"parameters\": {\r\n            \"select_types\": [30303]\r\n          }\r\n        }\r\n      },\r\n      \"title\": {\r\n        \"type\": \"otcs_multilingual_string\"\r\n      },\r\n      \"parameterPrompt\": {\r\n        \"type\": \"select\",\r\n        \"optionLabels\": [\r\n          \"{{parmsIgnored}}\",\r\n          \"{{enabledShowPromptForm}}\"\r\n        ]\r\n      },\r\n      \"launchButtonConfig\": {\r\n        \"fields\": {\r\n          \"launchButtons\": {\r\n            \"items\": {\r\n              \"fields\": {\r\n                \"launchButtonID\": {\r\n                  \"type\": \"otcs_node_picker\",\r\n                  \"type_control\": {\r\n                    \"parameters\": {\r\n                      \"select_types\": [30303]\r\n                    }\r\n                  }\r\n                },\r\n                \"launchButtonLabel\": {\r\n                  \"type\": \"otcs_multilingual_string\"\r\n                },\r\n                \"launchButtonTooltip\": {\r\n                  \"type\": \"otcs_multilingual_string\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"type\": {\r\n        \"type\": \"select\",\r\n        \"optionLabels\": [\"{{optionsTypeBar}}\", \"{{optionsTypeHorizontalBar}}\", \"{{optionsTypeDonut}}\", \"{{optionsTypePie}}\"]\r\n      },\r\n      \"theme\": {\r\n        \"type\": \"select\",\r\n        \"optionLabels\": [\"{{optionsTypeOTPrimary}}\", \"{{optionsTypeOTSecondary}}\", \"{{optionsTypeOTTertiary}}\", \"{{optionsTypeDataClarity}}\",\"{{optionsTypeOTNavy}}\",\"{{optionsTypeOTTeal}}\",\"{{optionsTypeOTIndigo}}\",\"{{optionsTypeOTPlum}}\",\"{{optionsTypeOTMagenta}}\"]\r\n      },\r\n      \"groupAfter\": {\r\n        \"type\": \"select\",\r\n        \"optionLabels\": [\"{{optionsGroupAfterDefault}}\",\"2\",\"3\",\"4\",\"{{optionsPieDonutDefault}}\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"{{optionsBarDefault}}\",\"16\",\"17\",\"18\",\"19\",\"20\"]\r\n      },\r\n      \"sortBy\": {\r\n        \"type\": \"select\",\r\n        \"optionLabels\": [\"{{optionsSortByActive}}\", \"{{optionsSortByCount}}\"]\r\n      },\r\n      \"sortOrder\": {\r\n        \"type\": \"select\",\r\n        \"optionLabels\": [\"{{optionsSortOrderDsc}}\", \"{{optionsSortOrderAsc}}\"]\r\n      }\r\n    }\r\n  }\r\n});\n\n","csui.define('webreports/widgets/visual.count.full.page/impl/nls/visual.count.full.page.manifest',{\r\n\t// Always load the root bundle for the default locale (en-us)\r\n\t\"root\": true,\r\n\t// Do not load English locale bundle provided by the root bundle\r\n\t\"en-us\": false,\r\n\t\"en\": false\r\n});\r\n\n","csui.define('webreports/widgets/visual.count.full.page/impl/nls/root/visual.count.full.page.manifest',{\r\n    \"widgetTitle\": \"Visual Count - Full\",\r\n    \"widgetDescription\": \"This widget visualizes the total count of values matching given criteria.\",\r\n    \"tileTitle\": \"Title\",\r\n    \"tileDescription\": \"Enter the title for the widget. This title appears in the Tile header.\",\r\n    \"typeTitle\": \"Chart Type\",\r\n    \"typeDescription\": \"Select the type of chart appropriate for your data.\",\r\n    \"themeTitle\": \"Theme\",\r\n    \"themeDescription\": \"Select a color palette for your chart.\",\r\n    \"sourceTitle\": \"Source WebReport\",\r\n    \"sourceDescription\": \"Browse to select the WebReport that retrieves the data that you want to visualize.\",\r\n    \"activeTitle\": \"Active Column\",\r\n    \"activeDescription\": \"Enter the name of the data source column that provides the matching values to be counted.\",\r\n    \"percentTitle\": \"Values as Percentage\",\r\n    \"percentDescription\": \"Choose whether to show the chart values as percentages of the total count or as the actual count.\",\r\n    \"animateTitle\": \"Animate\",\r\n    \"animateDescription\": \"Choose whether the chart animates or not when changing certain settings in the interface.\",\r\n    \"groupTitle\": \"Group After\",\r\n    \"groupDescription\": \"Select the threshold for the number of discrete values whose total count will appear in the chart. Values above the threshold will be grouped as \\'Other\\' and the combined total will appear. The Chart Default is a threshold value appropriate to the chart type.\",\r\n    \"sortTitle\": \"Sort By\",\r\n    \"sortDescription\": \"Select whether to sort the chart by the value names in the Active Column or by the count of the values.\",\r\n    \"directionTitle\": \"Sort Direction\",\r\n    \"directionDescription\": \"Select whether to sort the chart in Ascending or Descending order.\",\r\n    \"buttonTitle\": \"Button WebReports\",\r\n    \"buttonDescription\": \"Configure the options for Button WebReports launched by Custom Buttons in the Expanded view\",\r\n    \"maxTitle\": \"Maximum Items to Process\",\r\n    \"maxDescription\": \"Enter the maximum number of data items to pass to the Button WebReport.\",\r\n    \"customButtonTitle\": \"Custom Buttons\",\r\n    \"customButtonDescription\": \"Set the properties for the Custom Button that appears in the Expanded View, then click the \\'Add To Array\\' button. Repeat as required to add multiple buttons.\",\r\n    \"addButtonTitle\": \"Add Custom Buttons\",\r\n    \"addButtonDescription\": \"Configure custom buttons that will appear in the Expanded view and which will launch Button Webreports.\",\r\n    \"reportButtonTitle\": \"Button WebReport\",\r\n    \"reportButtonDescription\": \"Browse to select the WebReport that will open when you click the button.\",\r\n    \"labelButtonTitle\": \"Button Label\",\r\n    \"labelButtonDescription\": \"Enter a custom label for the button.\",\r\n    \"buttonToolTitle\": \"Button Tooltip\",\r\n    \"buttonToolDescription\": \"Enter a tool tip for the button.\",\r\n    \"parameterPromptTitle\": \"Parameter prompt behavior\",\r\n    \"parameterPromptDescription\": \"Determines how the widget should behave when the source WebReport has input parameters.\",\r\n    \"parmsIgnored\": \"Don\\'t prompt - use defaults\",\r\n    \"enabledShowPromptForm\": \"Show prompt form\",\r\n    \"optionsTypeBar\": \"Vertical Bar\",\r\n    \"optionsTypeHorizontalBar\": \"Horizontal Bar\",\r\n    \"optionsTypeDonut\": \"Donut\",\r\n    \"optionsTypePie\": \"Pie\",\r\n    \"optionsTypeOTPrimary\": \"Evening 10\",\r\n    \"optionsTypeOTSecondary\": \"Coral 10\",\r\n    \"optionsTypeOTTertiary\": \"Garden 10\",\r\n    \"optionsTypeDataClarity\": \"Clarity 20\",\r\n    \"optionsTypeOTNavy\": \"Navy 6\",\r\n    \"optionsTypeOTTeal\": \"Teal 6\",\r\n    \"optionsTypeOTIndigo\": \"Indigo 6\",\r\n    \"optionsTypeOTPlum\": \"Plum 6\",\r\n    \"optionsTypeOTMagenta\": \"Magenta 6\",\r\n    \"optionsGroupAfterDefault\": \"Use Chart Default\",\r\n    \"optionsPieDonutDefault\": \"5 - Pie and Donut default\",\r\n    \"optionsBarDefault\": \"15 - Bar default\",\r\n    \"optionsSortByActive\": \"Active Column\",\r\n    \"optionsSortByCount\": \"Count\",\r\n    \"optionsSortOrderDsc\": \"Descending\",\r\n    \"optionsSortOrderAsc\": \"Ascending\"\r\n});\n","// Placeholder for the build target file; the name must be the same,\r\n// include public modules from this component\r\n\r\ncsui.define('bundles/webreports-visdata',[\r\n\r\n    // Widgets:\r\n    \"webreports/widgets/visual.data.filtered.count/visual.data.filtered.count.view\",\r\n    \"json!webreports/widgets/visual.data.filtered.count/visual.data.filtered.count.manifest.json\",\r\n    \"i18n!webreports/widgets/visual.data.filtered.count/impl/nls/visual.data.filtered.count.manifest\",\r\n\r\n    \"webreports/widgets/visual.count.full.page/visual.count.full.page.view\",\r\n    \"json!webreports/widgets/visual.count.full.page/visual.count.full.page.manifest.json\",\r\n    \"i18n!webreports/widgets/visual.count.full.page/impl/nls/visual.count.full.page.manifest\"\r\n\r\n], {});\r\n\r\ncsui.require(['require', 'css'], function (require, css) {\r\n\r\n    css.styleLoad(require, 'webreports/bundles/webreports-visdata');\r\n\r\n});\r\n\n"]}