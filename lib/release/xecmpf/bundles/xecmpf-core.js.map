{"version":3,"sources":["../../src/controls/bosearch/bosearch.model.js","../../src/controls/bosearch/searchform/bosearchform.model.js","../../src/controls/property.panels/reference/impl/workspace.reference.model.js","../../src/controls/property.panels/reference/impl/nls/lang.js","../../src/controls/property.panels/reference/impl/nls/root/lang.js","../../src/controls/property.panels/reference/impl/nls/lang!i18n","../../src/controls/property.panels/reference/impl/reference.panel.model.js","../../src/models/boattachmentcontext/attachmentcontext.category.model.js","../../src/models/boattachmentcontext/attachmentcontext.category.factory.js","../../src/widgets/boattachments/impl/nls/lang.js","../../src/widgets/boattachments/impl/nls/root/lang.js","../../src/models/boattachmentcontext/attachmentcontext.busobjinfo.model.js","../../src/models/boattachmentcontext/attachmentcontext.node.model.js","../../src/models/boattachmentcontext/attachmentcontext.node.factory.js","../../src/models/boattachmentcontext/attachmentcontext.busobjinfo.factory.js","../../src/models/boattachmentcontext/attachmentcontext.model.js","../../src/widgets/boattachments/impl/boattachmentutil.js","../../src/widgets/boattachments/impl/boattachment.model.js","../../src/utils/util.js","../../src/widgets/boattachments/impl/boattachments.model.js","../../src/widgets/myattachments/metadata.attachment.model.js","../../src/widgets/myattachments/metadata.attachments.model.js","../../src/widgets/myattachments/metadata.nodeattachments.model.js","../../src/widgets/dossier/impl/dossier.model.js","../../src/widgets/dossier/impl/documentslist/impl/documents.model.js","../../src/widgets/dossier/impl/documentslistitem/impl/metadata.model.js","../../src/widgets/header/impl/completenesscheck/impl/models/missingdocuments.model.js","../../src/widgets/workspaces/models/workspace.collection.js","../../src/widgets/workspaces/models/workspace.types.collection.js","../../src/models/boattachmentcontext/attachmentcontext.factory.js","../../src/widgets/header/impl/completenesscheck/impl/missingdocuments.factory.js","xecmpf-core.js"],"names":["csui","define","_","$","Backbone","Model","extend","constructor","attributes","options","prototype","apply","this","arguments","module","log","Url","ResourceModel","defaults","data","schema","call","makeResource","url","bo_type_id","get","params","resource","path","param","baseurl","connector","getConnectionUrl","getApiBase","combine","parse","response","form","results","id","name","bo_type_name","bus_att_metadata_mapping","business_attachments","metadata_mapping","title","NodeConnectableMixin","WorkspaceReferenceModel","makeNodeConnectable","sync","method","model","node_id","bo_id","str","sformat","appendQuery","ext_system_id","queryParams","actions","properties","business","business_properties","business_object_id","business_object_type_id","business_object_type_name","external_system_id","external_system_name","ext_system_name","workspace_type_id","workspace_type_name","change_reference","complete_reference","mixin","root","en-us","en","cannotCompleteBusinessReference","errorUpdatingWorkspaceReference","businessObjectIdLabel","referenceTabTitle","referenceSearchButtonTitle","referenceSearchButtonLabel","referenceRemoveButtonTitle","referenceReplaceButtonTitle","referencePanelAddNote","referencePanelChangeNote","referencePanelRemoveNote","removeBOReferenceAlertTitle","removeBOReferenceAlertDescription","removeBOReferenceSuccessMessage","errorRemovingWorkspaceReference","lang","set","NodeModel","FetchableMixin","node","category_id","fetch","categoryOptions","result","Deferred","resolve","promise","ModelFactory","ConnectorFactory","NodeModelFactory","AttachmentContextFactoryModel","propertyPrefix","context","attachmentContextCategory","getModel","getObject","property","dialogTitle","searchPlaceholder","noResultsPlaceholder","errorFieldFormatTagUnrecognized","errorCustomColumnConfigInvalid","errorCustomColumnMissingBraces","errorOrderByMustNotBeString","errorOrderByMissingBraces","errorFilteringFailed","noAttachmentsFound","businessAttachments","CommandSnapshot","addBusinessAttachment","fileSizeByte","fileSizeKByte","fileSizeMByte","parent_id","reservedBy","snaphotCreated","snaphotFailed","CommandDoneVerbCreated","fileSizeGByte","items","invalidConfigurationNoBusObjDisplay","invalidConfigurationNoBusObjConfigured","invalidConfigurationNoBusObjAvailable","noBusinessObjectFound","invalidConfiguration","emptyBusinessObjectKey","emptyBusinessObjectType","emptyBusinessApplicationID","AttachmentContextCategoryFactory","ResourceMixin","AttachmentContextBusinessObjectInfoModel","invalidConfigurationShown","invalidErrorMessage","_logInvalidConfiguration","_isConfigEmpty","busObjectKey","warn","console","last","busObjectType","extSystemId","_logEmptyBusObjKeyConfiguration","trigger","_logEmptyBusObjTypeConfiguration","_showInvalidConfigurationError","_logEmptyBusAppIDConfiguration","msg","error","message","config","isObject","length","isEmpty","_isConfigValid","isBusKeyEmpty","isBusObjEmpty","isExtSystemEmpty","_isWorkspaceWithoutConfig","_getCategoryInfo","busObjectId","_loadCategories","promises","self","busObjectIdCatInfo","busObjectTypeCatInfo","extSystemIdCatInfo","categoryId","catModelObjectId","push","listenTo","catVal","categoryAttr","responseJSON","catModelObjectType","catModelExtSystem","configValue","res","regExp","test","lastIndex","exec","busProps","find","workspace_references","wksp_ref","has_default_display","isUndefined","isEarly","undefined","needEarlyWkspData","business_object_type","titleIcon","wksp_info","wksp_type_icon","originalFetch","deferred","when","done","workspaceSpecific","syncToNode","type","nodeId","debug","Fetchable","toString","AttachmentContextNodeModel","attachmentContextNode","attachmentContextBusinessObjectInfo","Context","AttachmentContextNodeFactory","AttachmentContextBusinessObjectInfoFactory","AttachmentContexCategoryFactory","attachmentSpecific","attachmentSpecificFactories","wkspid","setAttachmentSpecific","Factory","_isAttachmentSpecificFactory","isAttachmentSpecific","found","ii","getOuterContext","_getAttachmentObject","getCollection","methodName","fetched","old_id","then","new_id","factories","getFactories","_factories","obj","f","nodepromise","isWksp","wkspStatus","wksp_id","chain","map","compact","value","unshift","BOAttachmentUtil","formatFilzeSize","size","container","filesSize","Math","ceil","orderByAsString","orderBy","defCol","defOrd","ret","order","sc","so","sortColumn","sortOrder","parameterPlaceholder","match","NodeAncestorCollection","fetchNodeActions","require","NodeActionCollection","nodes","commands","reduce","toJSON","concat","reject","BOAttachmentModel","collection","idAttribute","size_formatted","version","body","content_type","form_href","href","signature","ancestors","autofetch","bind","unEscapeSpecialCharacters","extSystem","isString","replaceAll","isArray","ConnectableModel","NodeChildrenColumnModel","NodeChildrenColumnCollection","NodeChildrenCollection","NodeCollection","ExpandableMixin","NodeResourceMixin","BrowsableMixin","BrowsableV1RequestMixin","BrowsableV1ResponseMixin","BrowsableV2ResponseMixin","DelayedCommandableV2Mixin","XecmpfUtil","AttachmentsColumnModel","AttachmentsColumnCollection","dataCollectionName","resetColumns","resetCollection","getColumns","definitions","meta_data","columnKeys","keys","columnModels","getColumnModels","each","persona","BOAttachmentsCollection","models","makeNodeResource","makeExpandable","makeBrowsable","makeBrowsableV1Request","makeBrowsableV1Response","makeDelayedCommandableV2","columns","totalCount","next","busobjinfo","businessattachment","query","mergeUrlPaging","mergeUrlSorting","mergeUrlFiltering","encodeURIComponent","_cacheCollection","omit","key","metadata","queryParamsToString","df","fetching","fail","clone","where_name","paging","total_count","businessObjectActions","limit","topCount","defaultPageSize","page","skipCount","floor","sort","_formatSorting","indexOf","slicePosition","lastIndexOf","slice","isEmptyObject","filters","hasOwnProperty","queryParamsStr","getBaseUrl","connection","ActionCollection","UploadableMixin","AttachmentModel","expand","_setCollectionProperty","makeUploadable","val","attrs","bo_type","isNew","isFetchable","attachment","attachmentActions","attribute","Class","camelize","AttachmentCollection","Collection","assignTo","setOrder","resetOrder","setLimit","skip","top","resetLimit","setFilter","tempKey","base","NodeColumnCollection","NodeAttachmentCollection","filter","deepClone","combineQueryString","getExpandableResourcesUrlQuery","onlyClientSideDefinedColumns","metadata_order","idx","column_key","reset","colArray","column","shortColumnName","replace","definition_short","definition_formatted","definition","default_action","contextual_menu","editable","filter_key","ConnectableMixin","DossierModel","DossierCollection","pick","makeConnectable","total_documents","item","getUrl","nodeModel","DocumentModel","DocumentsCollection","mergeUrlMetadata","hideEmptyFields","catsAndAttrs","_addModels","label","category","itemType","add","split","comparator","MissingDocumentModel","MissingDocumentCollection","wrkspceId","WorkspaceCollection","makeBrowsableV2Response","getBrowsableUrlQuery","early","modifyDate","modify_date","align","width_weight","parseBrowsedState","parseBrowsedItems","WorkspaceTypeModel","templates","WorkspaceTypesCollection","businessworkspacetypes","elem","index","ref","props","businessworkspacetypeAttributes","wksp_type_name","wksp_type_id","rm_enabled","subType","subtype","AttachmentContextModel","attachmentContext","CollectionFactory","NodeFactory","MissingReportCollection","missingDocumentsCollection","reportType"],"mappings":"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","file":"xecmpf-core.js","sourcesContent":["csui.define('xecmpf/controls/bosearch/bosearch.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone'\r\n], function (_, $, Backbone) {\r\n  'use strict';\r\n\r\n  var BoSearchModel = Backbone.Model.extend({\r\n\r\n    constructor: function BoSearchModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n  return BoSearchModel;\r\n\r\n});\r\n\n","/**\r\n * Created by stefang on 24.05.2016.\r\n */\r\n// Fetches the search form.\r\ncsui.define('xecmpf/controls/bosearch/searchform/bosearchform.model',[\"module\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/lib/backbone\",\r\n  \"csui/utils/log\", \"csui/utils/url\", \"csui/models/resource\"\r\n], function (module, $, _, Backbone, log, Url, ResourceModel) {\r\n  \"use strict\";\r\n\r\n  var BusinessObjectSearchFormModel = Backbone.Model.extend(\r\n      _.defaults({\r\n\r\n        constructor: function BusinessObjectSearchFormModel(attributes, options) {\r\n          options || (options = {});\r\n\r\n          attributes = _.extend({data:{},options:{},schema:{}},attributes);\r\n          Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n          this.makeResource(options);\r\n\r\n        },\r\n\r\n        url: function () {\r\n          var path = 'forms/businessobjects/search',\r\n              bo_type_id = this.get(\"id\"),\r\n              params = { bo_type_id: bo_type_id },\r\n              resource = path + '?' + $.param(params),\r\n              baseurl = this.connector.getConnectionUrl().getApiBase('v2'),\r\n              url = Url.combine(baseurl, resource);\r\n          return url;\r\n        },\r\n\r\n        parse: function (response) {\r\n          var form;\r\n          if (response && response.results) {\r\n            form = response.results[1];\r\n            form.id = this.get(\"id\");\r\n            form.name = response.results[0].data.bo_type_name;\r\n            form.bus_att_metadata_mapping = response.results[\"0\"].data.business_attachments && response.results[\"0\"].data.business_attachments.metadata_mapping;\r\n            if (form.schema) {\r\n              delete form.schema.title; // avoid title being displayed by the FormView\r\n            }\r\n          }\r\n          return form;\r\n        }\r\n\r\n      }, ResourceModel(Backbone.Model)));\r\n  \r\n  return BusinessObjectSearchFormModel;\r\n\r\n});\r\n\n","csui.define('xecmpf/controls/property.panels/reference/impl/workspace.reference.model',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/jquery',\r\n    'csui/lib/backbone',\r\n    \"csui/utils/url\",\r\n    \"csui/models/mixins/node.connectable/node.connectable.mixin\"\r\n], function(_, $, Backbone, Url,\r\n    NodeConnectableMixin) {\r\n    'use strict';\r\n\r\n    var WorkspaceReferenceModel = Backbone.Model.extend({\r\n\r\n        constructor: function WorkspaceReferenceModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n            this.makeNodeConnectable(options);\r\n\r\n        },\r\n\r\n        sync: function(method, model, options) {\r\n            var node_id, path, baseurl, url, bo_id, params, bo_type_id;\r\n            if (method === \"read\") {\r\n                node_id = this.get(\"id\");\r\n                path = _.str.sformat('businessworkspaces/{0}', node_id);\r\n                baseurl = this.connector.getConnectionUrl().getApiBase('v2');\r\n                url = Url.combine(baseurl, path);\r\n                url = Url.appendQuery(url, \"bo_properties_only=true\");\r\n                options.url = url;\r\n            } else if (method === \"update\") {\r\n                node_id = this.get(\"id\");\r\n                path = _.str.sformat('businessworkspaces/{0}/workspacereferences', node_id);\r\n                bo_id = this.get(\"bo_id\");\r\n                bo_type_id = this.get(\"bo_type_id\");\r\n                params = { bo_id: bo_id, bo_type_id: bo_type_id };\r\n                baseurl = this.connector.getConnectionUrl().getApiBase('v2');\r\n                url = Url.combine(baseurl, path);\r\n                options.url = url;\r\n                options.data = $.param(params);\r\n            } else if (method === \"delete\") {\r\n                var ext_system_id, queryParams;\r\n                node_id = this.get(\"id\");\r\n                bo_id = this.get(\"bo_id\");\r\n                bo_type_id = this.get(\"bo_type_id\");\r\n                ext_system_id = this.get(\"ext_system_id\");\r\n                params = { bo_id: bo_id, bo_type_id: bo_type_id, ext_system_id: ext_system_id };\r\n                queryParams = $.param(params);\r\n                path = _.str.sformat('businessworkspaces/{0}/workspacereferences?{1}', node_id, queryParams);\r\n                baseurl = this.connector.getConnectionUrl().getApiBase('v2');\r\n                url = Url.combine(baseurl, path);\r\n                options.url = url;\r\n            }\r\n            return Backbone.sync(method, model, options);\r\n        },\r\n\r\n        parse: function(response) {\r\n            var data = response && response.results && response.results.data || {},\r\n                actions = response && response.results && response.results.actions &&\r\n                response.results.actions.data || {},\r\n                properties = data.properties || {},\r\n                business = data.business_properties || {};\r\n            business.business_object_id && (properties.bo_id = business.business_object_id);\r\n            business.business_object_type_id &&\r\n                (properties.bo_type_id = business.business_object_type_id);\r\n            business.business_object_type_name &&\r\n                (properties.bo_type_name = business.business_object_type_name);\r\n            business.external_system_id && (properties.ext_system_id = business.external_system_id);\r\n            business.external_system_name && (properties.ext_system_name = business.external_system_name);\r\n            business.workspace_type_id && (properties.workspace_type_id = business.workspace_type_id);\r\n            business.workspace_type_name &&\r\n                (properties.workspace_type_name = business.workspace_type_name);\r\n            properties.change_reference = !!actions['change-reference'];\r\n            properties.complete_reference = !!actions['complete-reference'];\r\n\r\n            return properties;\r\n        }\r\n\r\n    });\r\n\r\n    NodeConnectableMixin.mixin(WorkspaceReferenceModel.prototype);\r\n\r\n    return WorkspaceReferenceModel;\r\n\r\n});\n","csui.define('xecmpf/controls/property.panels/reference/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('xecmpf/controls/property.panels/reference/impl/nls/root/lang',{\r\n  cannotCompleteBusinessReference: \"You do not have permission to complete the business reference\",\r\n  errorUpdatingWorkspaceReference: \"Error updating workspace reference.\",\r\n  businessObjectIdLabel: \"Reference object\",\r\n  referenceTabTitle: 'Reference',\r\n  referenceSearchButtonTitle: 'Search',\r\n  referenceSearchButtonLabel: '{0} in {1}',\r\n  referenceRemoveButtonTitle: 'Remove',\r\n  referenceReplaceButtonTitle: 'Replace',\r\n  referencePanelAddNote: 'If you add a workspace reference, workspace name and other attributes will be overwritten with metadata of the business object.',\r\n  referencePanelChangeNote: 'If you change the workspace reference, the workspace name and other attributes will be overwritten with metadata of the new business object.',\r\n  referencePanelRemoveNote: 'If you remove the workspace reference, the metadata of the business object coming from the business application will also be removed. If the Generate Business Workspace Names checkbox for workspace types is selected, the business workspace will be renamed as configured.',\r\n  removeBOReferenceAlertTitle: 'Remove business object reference',\r\n  removeBOReferenceAlertDescription: 'Remove object reference {0} from this business workspace?',\r\n  removeBOReferenceSuccessMessage: 'Business object reference successfully removed.',\r\n  errorRemovingWorkspaceReference: 'Error removing workspace reference.'\r\n});\n","\n","csui.define('xecmpf/controls/property.panels/reference/impl/reference.panel.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'i18n!xecmpf/controls/property.panels/reference/impl/nls/lang'\r\n], function (_, $, Backbone, lang) {\r\n  'use strict';\r\n\r\n  var ReferencePanelModel = Backbone.Model.extend({\r\n\r\n    constructor: function ReferencePanelModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n      this.set('id', 'conws-reference');\r\n      this.set('title', lang.referenceTabTitle);\r\n      \r\n    }\r\n    \r\n  });\r\n\r\n  return ReferencePanelModel;\r\n\r\n});\r\n\n","/**\r\n * Fetches the workspace info for a given node.\r\n */\r\ncsui.define('xecmpf/models/boattachmentcontext/attachmentcontext.category.model',['csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    \"csui/utils/log\",\r\n    'csui/utils/url',\r\n    'csui/models/node/node.model',\r\n    'csui/models/mixins/fetchable/fetchable.mixin'\r\n], function ($, _,\r\n             Backbone,\r\n             log,\r\n             Url,\r\n             NodeModel,\r\n             FetchableMixin) {\r\n\r\n    var AttachmentContextCategoryModel = NodeModel.extend({\r\n\r\n        // constructor gives an explicit name to the object in the debugger\r\n        constructor: function AttachmentContextCategoryModel(attributes, options) {\r\n            options || (options = {});\r\n\r\n            NodeModel.prototype.constructor.call(this, attributes, options);\r\n            this.node = options.node;\r\n            this.category_id = options.category_id;\r\n\r\n        },\r\n        fetch: function (options) {\r\n            options || (options = {});\r\n            // If not overridden, Use the v1 URL for GET requests\r\n\t\t\tvar categoryOptions = _.extend({},options)\r\n\t\t\t if (!categoryOptions.url) {\r\n                categoryOptions.url = _.result(this, 'url');\r\n            }\r\n            if (this.node.get(\"id\")) {\r\n                return NodeModel.prototype.fetch.call(this, categoryOptions);\r\n            } else {\r\n                return $.Deferred().resolve().promise();\r\n            }\r\n        },\r\n\r\n        url: function () {\r\n            return Url.combine(this.connector.getConnectionUrl().getApiBase('v1'),\r\n                // yes, take v1\r\n                'nodes', this.node.get(\"id\"), 'categories', this.category_id);\r\n        },\r\n        parse: function (response) {\r\n            return response.data;\r\n        }\r\n    });\r\n    return AttachmentContextCategoryModel;\r\n});\r\n\r\n\n","csui.define('xecmpf/models/boattachmentcontext/attachmentcontext.category.factory',['csui/lib/underscore',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'csui/utils/contexts/factories/node',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.category.model'\r\n], function (_,\r\n             ModelFactory,\r\n             ConnectorFactory,\r\n             NodeModelFactory,\r\n             AttachmentContextFactoryModel) {\r\n\r\n    var AttachmentContextCategoryFactory = ModelFactory.extend({\r\n\r\n        propertyPrefix: 'attachmentContextCategory',\r\n\r\n        constructor: function AttachmentContextCategoryFactory(context, options) {\r\n            ModelFactory.prototype.constructor.apply(this, arguments);\r\n            options.attachmentContextCategory = options.attachmentContextCategory || {};\r\n\r\n            var node = options.attachmentContextCategory.node ||\r\n                    context.getModel(NodeModelFactory, options),\r\n                connector = options.attachmentContextCategory.connector ||\r\n                    context.getObject(ConnectorFactory, options);\r\n\r\n            this.property = new AttachmentContextFactoryModel({},\r\n                {\r\n                    category_id: options.attachmentContextCategory.category_id,\r\n                    connector: connector,\r\n                    node: node\r\n                });\r\n\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n\r\n    });\r\n\r\n    return AttachmentContextCategoryFactory;\r\n\r\n});\r\n\n","csui.define('xecmpf/widgets/boattachments/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('xecmpf/widgets/boattachments/impl/nls/root/lang',{\r\n    dialogTitle: 'Business attachments',\r\n    searchPlaceholder: 'Search %1',\r\n    noResultsPlaceholder: 'No business attachments to display.',\r\n    errorFieldFormatTagUnrecognized: 'Invalid format specification for {0}.',\r\n    errorCustomColumnConfigInvalid: \"Invalid custom column configuration: {0}.\",\r\n    errorCustomColumnMissingBraces: \"Missing curly braces in custom column configuration: {0}.\",\r\n    errorOrderByMustNotBeString: \"Configuration 'orderBy' must be an object not a string.\",\r\n    errorOrderByMissingBraces: \"Missing curly braces in 'orderBy' configuration in business attachment widget. Please contact your administrator.\",\r\n    errorFilteringFailed: 'Filtering of result list failed. Please contact your administrator.',\r\n    noAttachmentsFound: 'No business attachments found.',\r\n    businessAttachments: 'Business attachments',\r\n    CommandSnapshot: 'Snapshot',\r\n    addBusinessAttachment: 'Add business attachment',\r\n    fileSizeByte: \"Bytes\",\r\n    fileSizeKByte: \"KB\",\r\n    fileSizeMByte: \"MB\",\r\n    parent_id: 'Location',\r\n    reservedBy: 'Reserved by %1',\r\n    snaphotCreated: 'Snapshot created',\r\n    snaphotFailed: 'Snapshot creation failed',\r\n    CommandDoneVerbCreated: 'created',\r\n    fileSizeGByte: \"GB\",\r\n    items: 'items',\r\n    invalidConfigurationNoBusObjDisplay:'Cannot display business attachments because there is no business object defined.',\r\n    invalidConfigurationNoBusObjConfigured:'No business object type configured for workspace display.',\r\n    invalidConfigurationNoBusObjAvailable:'Cannot display business attachments because there is no business object available.',\r\n    noBusinessObjectFound: 'No business object found',\r\n    invalidConfiguration: 'Invalid widget configuration. Business object key, business object type and business application ID must be set.',\r\n    emptyBusinessObjectKey: 'No information available.',\r\n    emptyBusinessObjectType: 'Empty business object type in business attachment widget. Please contact your administrator.',\r\n    emptyBusinessApplicationID: 'Empty business application ID in business attachment widget. Please contact your administrator.'\r\n});\r\n\n","/**\r\n * Fetches the workspace info for a given node.\r\n */\r\ncsui.define('xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.model',['csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    \"csui/utils/log\",\r\n    'csui/utils/url',\r\n    'csui/models/node/node.model',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.category.factory',\r\n    'i18n!xecmpf/widgets/boattachments/impl/nls/lang',\r\n    'csui/models/mixins/resource/resource.mixin'\r\n\r\n], function ($, _,\r\n             Backbone,\r\n             log,\r\n             Url,\r\n             NodeModel,\r\n             AttachmentContextCategoryFactory,\r\n             lang, ResourceMixin ) {\r\n\r\n    var AttachmentContextBusinessObjectInfoModel = Backbone.Model.extend({\r\n\r\n        // constructor gives an explicit name to the object in the debugger\r\n        constructor: function AttachmentContextBusinessObjectInfoModel(attributes, options) {\r\n            options || (options = {});\r\n\r\n            Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n            this.makeResource(options);\r\n\r\n            this.node = options.node;\r\n            this.data = options.data;\r\n            this.connector = options.connector;\r\n            this.context = options.context;\r\n            this.invalidConfigurationShown = false;\r\n            this.invalidErrorMessage = lang.noBusinessObjectFound\r\n\r\n        },\r\n        _logInvalidConfiguration: function() {\r\n          this._isConfigEmpty(this.busObjectKey) && log.warn('Business object key is not set') && console && console.log(log.last);\r\n          this._isConfigEmpty(this.busObjectType) && log.warn('Business object type is not set') && console && console.log(log.last);\r\n          this._isConfigEmpty(this.extSystemId) && log.warn('Business application ID is not set')  && console && console.log(log.last);\r\n        },\r\n        _logEmptyBusObjKeyConfiguration: function() {\r\n          log.warn(lang.emptyBusinessObjectKey) && console && console.log(log.last);\r\n          this.trigger('missing:busobj:info');\r\n          this.invalidConfigurationShown = true;\r\n        },\r\n        _logEmptyBusObjTypeConfiguration: function() {\r\n          log.warn(lang.emptyBusinessObjectType) && console && console.log(log.last);\r\n          this._showInvalidConfigurationError(lang.emptyBusinessObjectType);\r\n          this.invalidConfigurationShown = true;\r\n        },\r\n        _logEmptyBusAppIDConfiguration: function() {\r\n          log.warn(lang.emptyBusinessApplicationID)  && console && console.log(log.last);\r\n          this._showInvalidConfigurationError(lang.emptyBusinessApplicationID);\r\n          this.invalidConfigurationShown = true;\r\n        },\r\n\r\n        _showInvalidConfigurationError: function(msg) {\r\n          if (!this.invalidConfigurationShown) {\r\n            this.error = {};\r\n            this.error.message = msg;\r\n            this.trigger('error');\r\n          }\r\n          this.invalidConfigurationShown = true;\r\n        },\r\n        _isConfigEmpty: function(config){\r\n          // For single Value attributes, config value is of type string.\r\n          // For multi value attribute, config value is of type object (ie., list of values).\r\n          // If a multi value attribute has a single value then checking wheter it is empty or not.\r\n          // If a multi value attribute has multiple empty/non empty values then it is considered as empty or non set configuration.\r\n          var isConfigEmpty = _.isObject(config) ? (config.length === 1 ? _.isEmpty(config[0]) : true) : _.isEmpty(config);\r\n          return isConfigEmpty\r\n\r\n        },\r\n        _isConfigValid: function() {\r\n          var isBusKeyEmpty = this._isConfigEmpty(this.busObjectKey),\r\n              isBusObjEmpty = this._isConfigEmpty(this.busObjectType),\r\n              isExtSystemEmpty = this._isConfigEmpty(this.extSystemId);\r\n\r\n          return !isBusObjEmpty &&  !isExtSystemEmpty && !isBusKeyEmpty;\r\n        },\r\n        _isWorkspaceWithoutConfig: function() {\r\n            return  _.isEmpty(this._getCategoryInfo(this.data.busObjectId)) &&\r\n                    _.isEmpty(this._getCategoryInfo(this.data.busObjectType)) &&\r\n                    _.isEmpty(this._getCategoryInfo(this.data.extSystemId)) &&\r\n                    this.node.get(\"id\") && this.node.get(\"type\") === 848;\r\n        },\r\n        _loadCategories: function() {\r\n            var promises = [],\r\n                self = this,\r\n                busObjectIdCatInfo = this._getCategoryInfo(this.data.busObjectId),\r\n                busObjectTypeCatInfo = this._getCategoryInfo(this.data.busObjectType),\r\n                extSystemIdCatInfo = this._getCategoryInfo(this.data.extSystemId);\r\n\r\n            if (busObjectIdCatInfo.categoryId) {\r\n                var catModelObjectId = this.context.getModel(AttachmentContextCategoryFactory,\r\n                    {\r\n                        attributes: {\r\n                            category_id: busObjectIdCatInfo.categoryId\r\n                        },\r\n                        category_id: busObjectIdCatInfo.categoryId,\r\n                        node: this.node,\r\n                        connector: this.connector\r\n                    });\r\n\r\n                // got the model for the bus. obj. id\r\n                promises.push(catModelObjectId.fetch());\r\n                this.listenTo(catModelObjectId, 'sync', function () {\r\n                        // object key must be set via category\r\n                        var catVal = catModelObjectId.get(busObjectIdCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.busObjectKey = catVal;\r\n                        }  else {\r\n                            self._logEmptyBusObjKeyConfiguration();\r\n                        }\r\n                        /*// but check if we can get also the business object type ....\r\n                        catVal = catModelObjectId.get(busObjectTypeCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.busObjectType = catVal;\r\n                        } else {\r\n                          self._logEmptyBusObjTypeConfiguration();\r\n                        }\r\n                                    // ... and the external system ...\r\n                                    catVal = catModelObjectId.get(extSystemIdCatInfo.categoryAttr);\r\n                                    if (!self._isConfigEmpty(catVal)) {\r\n                                        self.extSystemId = catVal;\r\n                                    } else {\r\n                          self._logEmptyBusAppIDConfiguration();\r\n                        }*/\r\n                    }\r\n                );\r\n                this.listenTo(catModelObjectId, \"error\", function () {\r\n                    this._showInvalidConfigurationError(arguments[1].responseJSON.error);\r\n                });\r\n\r\n            } else {\r\n                // key is fixed\r\n                this.busObjectKey = busObjectIdCatInfo.categoryAttr;\r\n            }\r\n            // load category for business object type if necessary\r\n            if (busObjectTypeCatInfo.categoryId) {\r\n                var catModelObjectType =\r\n                    this.context.getModel(AttachmentContextCategoryFactory,\r\n                        {\r\n                            attributes: {\r\n                                category_id: busObjectTypeCatInfo.categoryId\r\n                            },\r\n                            category_id: busObjectTypeCatInfo.categoryId,\r\n                            node: this.node,\r\n                            connector: this.connector\r\n                        });\r\n\r\n                promises.push(catModelObjectType.fetch());\r\n                this.listenTo(catModelObjectType, 'sync', function () {\r\n                        // check again if we can get from this category all entries\r\n                        // so we can skip further category calls\r\n                       /* var catVal = catModelObjectType.get(busObjectIdCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.busObjectKey = catVal;\r\n                        } else {\r\n\t\t\t\t\t\t              \tself._logEmptyBusObjKeyConfiguration();\r\n\t\t\t\t\t            \t}*/\r\n\r\n                        var catVal = catModelObjectType.get(busObjectTypeCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.busObjectType = catVal;\r\n                        } else {\r\n                            self._logEmptyBusObjTypeConfiguration();\r\n                        }\r\n\r\n                      /*  catVal = catModelObjectType.get(extSystemIdCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.extSystemId = catVal;\r\n                        } else {\r\n                          self._logEmptyBusAppIDConfiguration()\r\n                        }*/\r\n                    }\r\n                );\r\n                this.listenTo(catModelObjectType, \"error\", function () {\r\n                    this._showInvalidConfigurationError(arguments[1].responseJSON.error);\r\n                });\r\n            } else {\r\n                this.busObjectType = busObjectTypeCatInfo.categoryAttr;\r\n            }\r\n            // get external system category\r\n            if (extSystemIdCatInfo.categoryId) {\r\n                var catModelExtSystem = this.context.getModel(AttachmentContextCategoryFactory,\r\n                    {\r\n                        attributes: {\r\n                            category_id: extSystemIdCatInfo.categoryId\r\n                        },\r\n                        category_id: extSystemIdCatInfo.categoryId,\r\n                        node: this.node,\r\n                        connector: this.connector\r\n                    });\r\n\r\n\r\n                promises.push(catModelExtSystem.fetch());\r\n                this.listenTo(catModelExtSystem, 'sync', function () {\r\n                        // check again if we can get from this category all entries\r\n                        // so we can skip further category calls\r\n                       /* var catVal = catModelExtSystem.get(busObjectIdCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.busObjectKey = catVal;\r\n                        } else {\r\n                          self._logEmptyBusObjKeyConfiguration();\r\n                        }\r\n\r\n                                    catVal = catModelExtSystem.get(busObjectTypeCatInfo.categoryAttr);\r\n                                    if (!self._isConfigEmpty(catVal)) {\r\n                                        self.busObjectType = catVal;\r\n                                    } else {\r\n                           self._logEmptyBusObjTypeConfiguration();\r\n                        }*/\r\n\r\n                        var catVal = catModelExtSystem.get(extSystemIdCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.extSystemId = catVal;\r\n                        } else {\r\n                            self._logEmptyBusAppIDConfiguration();\r\n                        }\r\n                    }\r\n                );\r\n                this.listenTo(catModelExtSystem, \"error\", function () {\r\n                    this._showInvalidConfigurationError(arguments[1].responseJSON.error);\r\n                });\r\n            } else {\r\n                this.extSystemId = extSystemIdCatInfo.categoryAttr;\r\n            }\r\n            return promises;\r\n        },\r\n        _getCategoryInfo: function (configValue) {\r\n            var res, categoryId, categoryAttr;\r\n\r\n            if (!_.isEmpty(configValue)) {\r\n                var regExp = /{categories.(([0-9]+)_[0-9]+[_]?[0-9]*[_]?[0-9]*)}/g;\r\n                if (regExp.test(configValue)) {\r\n                    regExp.lastIndex = 0;\r\n                    res = regExp.exec(configValue);\r\n                    categoryId = res[2];\r\n                    categoryAttr = res[1];\r\n\r\n                    return {\r\n                        categoryId: categoryId,\r\n                        categoryAttr: categoryAttr\r\n                    }\r\n                } else {\r\n                    return {\r\n                        categoryId: \"\",\r\n                        categoryAttr: configValue\r\n                    };\r\n                }\r\n            }\r\n            return \"\";\r\n        },\r\n\r\n        // computes the REST API URL used to access the metadata.\r\n        url: function () {\r\n            var url;\r\n\r\n            if (this._isWorkspaceWithoutConfig() === true) {\r\n                url = Url.combine(this.connector.getConnectionUrl().getApiBase('v2'),\r\n                    'businessworkspaces/' + this.node.get(\"id\") + '?metadata');\r\n            } else {\r\n                url = Url.combine(this.connector.getConnectionUrl().getApiBase('v2'),\r\n                    'businessworkspacetypes' +\r\n                    '?ext_system_id=' + this.extSystemId +\r\n                    '&expand_templates=true&bo_type=' + this.busObjectType);\r\n            }\r\n            return url;\r\n        },\r\n        parse: function (response) {\r\n\r\n            if (this._isWorkspaceWithoutConfig() === true) {\r\n                var busProps =  _.find(response.results.data.workspace_references,\r\n                        function(wksp_ref) {\r\n                            return (wksp_ref.has_default_display === true)\r\n                        });\r\n                if (_.isUndefined(busProps)) {\r\n                    if ( response.results.data.business_properties.isEarly) {\r\n                        if (this.data.needEarlyWkspData !== undefined && this.data.needEarlyWkspData === true) {\r\n                            return {\r\n                                busObjectType: response.results.data.business_properties.business_object_type,\r\n                                extSystemId: response.results.data.business_properties.external_system_id\r\n                            }\r\n                        } else {\r\n                            this.invalidConfigurationShown = true;\r\n                            this.invalidErrorMessage = lang.invalidConfigurationNoBusObjDisplay;\r\n                        }\r\n                    } else {\r\n                        this.invalidConfigurationShown = true;\r\n                        this.invalidErrorMessage =lang.invalidConfigurationNoBusObjAvailable;\r\n                    }\r\n                    return null;\r\n                } else {\r\n                    return {\r\n                        busObjectKey: busProps.business_object_id,\r\n                        busObjectType: busProps.business_object_type,\r\n                        extSystemId: busProps.external_system_id,\r\n                        titleIcon: response.results.data.wksp_info.wksp_type_icon\r\n                    }\r\n                }\r\n            } else {\r\n                return {\r\n                    busObjectKey: this.busObjectKey,\r\n                    busObjectType: this.busObjectType,\r\n                    extSystemId: this.extSystemId,\r\n                    titleIcon: response.results.length > 0 &&\r\n                    response.results[0].data.wksp_info.wksp_type_icon\r\n                }\r\n            }\r\n        }\r\n    });\r\n    ResourceMixin.mixin(AttachmentContextBusinessObjectInfoModel.prototype);\r\n\r\n    var originalFetch = AttachmentContextBusinessObjectInfoModel.prototype.fetch;\r\n    AttachmentContextBusinessObjectInfoModel.prototype.fetch = function (options) {\r\n        var deferred = $.Deferred(),\r\n            promises = this._loadCategories(),\r\n            self = this;\r\n\r\n        if (promises.length > 0) {\r\n            $.when.apply($, promises).done(function () {\r\n                // if one setting is determined via category all entries\r\n                // must be set\r\n                if (self._isConfigValid() === true)\r\n                {\r\n                    originalFetch.call(self, options).done(function () {\r\n                        deferred.resolve();\r\n                    });\r\n                } else {\r\n                    self._logInvalidConfiguration();\r\n                    self._showInvalidConfigurationError(lang.invalidConfiguration);\r\n                    deferred.resolve();\r\n                }\r\n\r\n            })\r\n        } else {\r\n            if (this._isWorkspaceWithoutConfig() === true || this._isConfigValid() === true)\r\n            {\r\n                return originalFetch.call(this, options);\r\n            } else {\r\n                this._logInvalidConfiguration();\r\n                this._showInvalidConfigurationError(lang.invalidConfiguration);\r\n                return deferred.resolve().promise();\r\n            }\r\n\r\n        }\r\n        return deferred.promise();\r\n    };\r\n\r\n    return AttachmentContextBusinessObjectInfoModel;\r\n});\r\n\r\n\n","/**\r\n * Fetches the workspace id of the effective businessworkspace for a given node.\r\n */\r\n\r\ncsui.define('xecmpf/models/boattachmentcontext/attachmentcontext.node.model',['csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    \"csui/utils/log\",\r\n    'csui/utils/url',\r\n    \"csui/models/resource\"\r\n], function ($, _, Backbone,\r\n             log,\r\n             Url,\r\n             ResourceModel) {\r\n\r\n    var AttachmentContextNode = Backbone.Model.extend(\r\n        _.defaults({\r\n\r\n            workspaceSpecific: true,\r\n\r\n            constructor: function AttachmentContextNode(attributes, options) {\r\n                options || (options = {});\r\n\r\n                Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n                this.options = options;\r\n                this.makeResource(options);\r\n                this.listenTo(this.options.node, 'change:id', this.syncToNode);\r\n\r\n                // and initially set id if it fits.\r\n                this.syncToNode();\r\n            },\r\n\r\n            syncToNode: function () {\r\n                var node = this.options.node;\r\n                var node_id = node.get(\"id\");\r\n                if (node.get(\"type\") === 848) {\r\n                    this.set({id: node_id, type: 848});\r\n                }\r\n            },\r\n\r\n            url: function () {\r\n                var nodeId = this.options.node.get('id');\r\n                var url;\r\n\r\n                if (this.options.data && this.options.data.busObjectId &&\r\n                    this.options.data.busObjectType &&\r\n                    this.options.data.extSystemId) {\r\n\r\n                    url = Url.combine(this.options.connector.getConnectionUrl().getApiBase('v2'),\r\n                        '/businessworkspaces');\r\n                    url += '?expanded_view=true&where_bo_type=' + this.options.data.busObjectType;\r\n                    url += '&where_ext_system_id=' + this.options.data.extSystemId;\r\n                    url += '&where_bo_id=' + this.options.data.busObjectId;\r\n                } else {\r\n                    url = Url.combine(this.options.connector.getConnectionUrl().getApiBase('v1'), 'nodes', nodeId,\r\n                        'businessworkspace');\r\n                }\r\n                return url;\r\n            },\r\n\r\n            fetch: function (options) {\r\n                if (this.options.node.get('id')) {\r\n                    if (this.options.node.get('type') !== 848) {\r\n                        log.debug(\"Fetching the workspace id for {0} from server.\", this) && console.log(log.last);\r\n                        options || (options = {});\r\n                        // If not overridden, Use the v1 URL for GET requests\r\n                        if (!options.url) {\r\n                            options.url = _.result(this, 'url');\r\n                        }\r\n                        return this.Fetchable.fetch.call(this, options);\r\n                    } else {\r\n                        log.debug(\"Fetching the workspace id for {0} from node.\", this) && console.log(log.last);\r\n                        this.set({id: this.options.node.get('id'), type: 848});\r\n                        return $.Deferred().resolve().promise();\r\n                    }\r\n\r\n                } else if (this.options.data && this.options.data.busObjectId && // integration scenario\r\n                            this.options.data.busObjectType &&\r\n                            this.options.data.extSystemId) {\r\n\r\n                    log.debug(\"Fetching the workspace id for {0} from server.\", this) && console.log(log.last);\r\n                    options || (options = {});\r\n                    // If not overridden, Use the v1 URL for GET requests\r\n                    if (!options.url) {\r\n                        options.url = _.result(this, 'url');\r\n                    }\r\n                    return this.Fetchable.fetch.call(this, options);\r\n\r\n                } else {\r\n                    return $.Deferred().resolve().promise();\r\n                }\r\n            },\r\n\r\n            parse: function (response) {\r\n                if (response.results) {\r\n                    response = response.results.length>0?response.results[0].data.properties:null;\r\n                }\r\n\r\n                if (response) {\r\n                    return {id: response.id, type: response.type};\r\n                }\r\n            },\r\n\r\n            toString: function () {\r\n                // Format a string for logging purposes\r\n                return \"node:\" + this.get('id');\r\n            }\r\n\r\n        }, ResourceModel(Backbone.Model)));\r\n\r\n    return AttachmentContextNode;\r\n\r\n});\r\n\n","csui.define('xecmpf/models/boattachmentcontext/attachmentcontext.node.factory',['csui/lib/underscore',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'csui/utils/contexts/factories/node',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.node.model'\r\n], function (_,\r\n             ModelFactory,\r\n             ConnectorFactory,\r\n             NodeModelFactory,\r\n             AttachmentContextNodeModel) {\r\n\r\n    var AttachmentContextNodeFactory = ModelFactory.extend({\r\n\r\n        propertyPrefix: 'attachmentContextNode',\r\n\r\n        constructor: function AttachmentContextNodeFactory(context, options) {\r\n            ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var node = options.attachmentContextNode.node ||\r\n                    context.getModel(NodeModelFactory, {}),\r\n                connector = options.attachmentContextNode.connector ||\r\n                    context.getObject(ConnectorFactory, {});\r\n\r\n            this.property = new AttachmentContextNodeModel({}, {data: options.attachmentContextNode.data,\r\n                connector: connector, node: node});\r\n\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n\r\n    });\r\n\r\n    return AttachmentContextNodeFactory;\r\n\r\n});\r\n\n","csui.define('xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.factory',['csui/lib/underscore',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'csui/utils/contexts/factories/node',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.model'\r\n\r\n], function (_,\r\n             ModelFactory,\r\n             ConnectorFactory,\r\n             NodeModelFactory,\r\n             AttachmentContextBusinessObjectInfoModel) {\r\n\r\n    var AttachmentContextBusinessObjectInfoFactory = ModelFactory.extend({\r\n\r\n        propertyPrefix: 'attachmentContextBusinessObjectInfo',\r\n\r\n        constructor: function AttachmentContextBusinessObjectInfoFactory(context, options) {\r\n            options = options || {};\r\n            ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var node = options.node ||  context.getModel(NodeModelFactory, {}),\r\n                connector = options.connector || context.getObject(ConnectorFactory, {}),\r\n                data = options.attachmentContextBusinessObjectInfo.data || {};\r\n\r\n            _.defaults(data, {\r\n                busObjectId: \"\",\r\n                busObjectType: \"\",\r\n                extSystemId: \"\"\r\n            })\r\n\r\n            this.property = new AttachmentContextBusinessObjectInfoModel({},\r\n                {context: context, data: data, connector: connector, node: node});\r\n\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n\r\n    });\r\n\r\n    return AttachmentContextBusinessObjectInfoFactory;\r\n\r\n});\r\n\n","/**\r\n * Created by stefang on 24.11.2015.\r\n */\r\ncsui.define('xecmpf/models/boattachmentcontext/attachmentcontext.model',['csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n    \"csui/utils/log\",\r\n    'csui/utils/contexts/context',\r\n    'csui/utils/contexts/factories/node',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.node.factory',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.factory',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.category.factory'\r\n\r\n], function ($, _, Backbone,\r\n             log,\r\n             Context,\r\n             NodeModelFactory,\r\n             AttachmentContextNodeFactory,\r\n             AttachmentContextBusinessObjectInfoFactory,\r\n             AttachmentContexCategoryFactory) {\r\n\r\n    var AttachmentContextModel = Context.extend({\r\n\r\n        constructor: function AttachmentContextModel(attributes, options) {\r\n            options || (options = {});\r\n\r\n            Context.prototype.constructor.apply(this, arguments);\r\n\r\n            this.options = options;\r\n\r\n            this.attachmentSpecific = {};\r\n            this.attachmentSpecific[NodeModelFactory.prototype.propertyPrefix] = true;\r\n            this.attachmentSpecific[AttachmentContextNodeFactory.prototype.propertyPrefix] = true;\r\n            this.attachmentSpecific[AttachmentContextBusinessObjectInfoFactory.prototype.propertyPrefix] = true;\r\n            this.attachmentSpecific[AttachmentContexCategoryFactory.prototype.propertyPrefix] = true;\r\n\r\n            this.attachmentSpecificFactories = [\r\n                NodeModelFactory,\r\n                AttachmentContextNodeFactory,\r\n                AttachmentContextBusinessObjectInfoFactory,\r\n                AttachmentContexCategoryFactory\r\n            ];\r\n\r\n            // get the navigation node, that triggers the attachment context node\r\n            this.options.node = this.options.context.getModel(NodeModelFactory);\r\n\r\n            // attachment context node is the first model in the attachment context and we fetch it first\r\n            this.wkspid = this.getModel(AttachmentContextNodeFactory,\r\n                {data: this.options.data, node: this.options.node, connector: this.options.node.connector});\r\n\r\n            // and provide an attachment node, for compatibility with the outer context\r\n            this.node = this.getModel(NodeModelFactory);\r\n\r\n            if (this.wkspid.get(\"id\") === this.options.node.get(\"id\")) {\r\n                this.node.set(this.options.node.attributes);\r\n            } else {\r\n                this.node.set(\"id\", this.wkspid.get(\"id\"));\r\n            }\r\n        },\r\n\r\n        setAttachmentSpecific: function (Factory) {\r\n            this.attachmentSpecific[Factory.prototype.propertyPrefix] = true;\r\n            if (!this._isAttachmentSpecificFactory(Factory)) {\r\n                this.attachmentSpecificFactories.push(Factory);\r\n            }\r\n        },\r\n\r\n        isAttachmentSpecific: function (Factory) {\r\n            var found = false;\r\n            if (this.attachmentSpecific[Factory.prototype.propertyPrefix]) {\r\n                found = true;\r\n            } else if (this._isAttachmentSpecificFactory(Factory)) {\r\n                // remember property prefix, so we find it faster next time.\r\n                this.attachmentSpecific[Factory.prototype.propertyPrefix] = true;\r\n                found = true;\r\n            }\r\n            return found;\r\n        },\r\n\r\n        _isAttachmentSpecificFactory: function (Factory) {\r\n            var found = false;\r\n            for (var ii = 0; ii < this.attachmentSpecificFactories.length; ii++) {\r\n                if (this.attachmentSpecificFactories[ii] === Factory) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            return found;\r\n        },\r\n\r\n        getOuterContext: function () {\r\n            return this.options.context;\r\n        },\r\n\r\n        getModel: function () {\r\n            return this._getAttachmentObject(\"getModel\", arguments);\r\n        },\r\n        getCollection: function () {\r\n            return this._getAttachmentObject(\"getCollection\", arguments);\r\n        },\r\n        getObject: function () {\r\n            return this._getAttachmentObject(\"getObject\", arguments);\r\n        },\r\n\r\n        _getAttachmentObject: function (methodName, params) {\r\n            var model;\r\n            if (this.isAttachmentSpecific(params[0])) {\r\n                model = Context.prototype[methodName].apply(this, params);\r\n            } else {\r\n                model = this.options.context[methodName].apply(this.options.context, params);\r\n            }\r\n\r\n            return model;\r\n        },\r\n\r\n        fetch: function (options) {\r\n            this.fetched = false;\r\n            var old_id = this.wkspid.get(\"id\"),\r\n                self   = this;\r\n            // First fetch attachment context node and wait for the result.\r\n            // As we do this in the fetch, we delay the slide-in animation of the perspective,\r\n            // so the perspective is sliding in only after we have triggered all fetches here.\r\n            // This is for sliding in smoothly, as otherwise it is stumbling on mobiles/tablets.\r\n\r\n            return this.wkspid // get workspace id for given node\r\n                .fetch()\r\n                .then(function () {\r\n                    self.fetched = true;\r\n                    var new_id = self.wkspid.get(\"id\");\r\n                    var promises;\r\n                    log.debug(\"wkspid old {0}, new {1}.\", old_id, new_id) &&\r\n                    console.log(log.last);\r\n                    // then, if possible, first get values for node models from context node\r\n                    // and for all other models do a normal fetch using the factory.\r\n                    // note: node models represent persisted or non persisted nodes for an id.\r\n                    // They are triggered from outside by setting the id.\r\n                    // So if the workspace id of the context node changes\r\n                    // we must set the id of all our node models in the attachment context.\r\n\r\n                    // get node factory\r\n                    var factories = self.getFactories ? self.getFactories() : self._factories;\r\n                    var obj = _.find(factories, function (f) {\r\n                        return f.property === self.node\r\n                    });\r\n                    log.debug(\"going to fetch {0}.\", obj.propertyPrefix) && console.log(log.last);\r\n                    var nodepromise, isWksp;\r\n                    // update inner node (inner context) !!!\r\n                    // Workspaces:\r\n                    // 1. From current navigation node we determine a parent workspace id\r\n                    // 2. Inner node is set to workspace node\r\n                    // Containers:\r\n                    // Current navigation node is set to inner node\r\n                    if (new_id === self.options.node.get(\"id\")) {\r\n                        self.node.set(self.options.node.attributes);\r\n                        // Check if the current workspace is already fetched.No need to fetch again\r\n                        // if the workspace is already fetched( breadcrumb/links from other widgets like\r\n                        // related,business attachments,workspaces etc.,)\r\n                        if (self.wkspStatus && self.wkspStatus.wksp_id === new_id &&\r\n                            self.wkspStatus.fetched) {\r\n                            return $.Deferred()\r\n                                .resolve(self, {}, options)\r\n                                .promise();\r\n                        }\r\n                        isWksp = true\r\n                    } else {\r\n                        isWksp = false;\r\n                        // drill down from workspace into folder\r\n                        if (new_id) {\r\n                            self.node.set(\"id\", new_id);\r\n                            self.node.set(\"type\", 848);\r\n                            if (obj.fetch) {\r\n                                // Node other than a workspace - accessed via bookmark/shortcut/direct-access\r\n                                // 1) Fetch if the node is accessed directly via bookmark and attachment context is\r\n                                //    not already fetched(!old_id)\r\n                                // 2) Fetch if the node is accessed via shortcut where the attachment context is\r\n                                //    changed (old_id !== new_id)\r\n                                // 3) Skip the fetch when the node belongs to already fetched attachment context\r\n                                if (!old_id || (old_id && new_id && old_id !== new_id)) {\r\n                                    nodepromise = obj.fetch();\r\n                                }\r\n                            }\r\n                        } else { // container is not a workspace\r\n\r\n                            self.node.set(self.options.node.attributes);\r\n                        }\r\n                    }\r\n\r\n                    // after setting the id in the node model, again get the factories to be sure, that\r\n                    // we have also the factories, that were added during the change:id propagation.\r\n                    factories = self.getFactories ? self.getFactories() : self._factories;\r\n                    // trigger business attachment call\r\n                    promises = _.chain(factories)\r\n                        .map(function (obj) {\r\n                            log.debug(\"going to fetch {0}.\", obj.propertyPrefix) &&\r\n                            console.log(log.last);\r\n                            if (obj.property !== self.wkspid &&\r\n                                obj.property !== self.node) {\r\n\r\n                                if (obj.fetch) {\r\n                                    // 1. Fetch if the workspace is accessed for the first time (isWksp)\r\n                                    // 2. Fetch if the node inside a workspace is accessed directly\r\n                                    //    and the workspace context is not fetched even once(!old_id)\r\n                                    // 3. Fetch if the workspace is changed (ie., old_id !== new_id)\r\n                                    if (isWksp || !old_id ||\r\n                                        (old_id && new_id && old_id !== new_id)) {\r\n                                        return obj.fetch();\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                        .compact()\r\n                        .value();\r\n                    if (nodepromise) {\r\n                        promises.unshift(nodepromise);\r\n                    }\r\n                    // Set the attachment fetched status for subsequent workspace access via other widgets/breadcrumbs\r\n                    if (promises.length > 0) {\r\n                        self.wkspStatus = {\r\n                            wksp_id: new_id,\r\n                            fetched: true\r\n                        }\r\n                    }\r\n\r\n                    return $.when.apply($, promises);\r\n                })\r\n        }\r\n    });\r\n\r\n    return AttachmentContextModel;\r\n\r\n});\r\n\n","csui.define('xecmpf/widgets/boattachments/impl/boattachmentutil',[\r\n    'csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    \"i18n!xecmpf/widgets/boattachments/impl/nls/lang\",\r\n\r\n], function ($, _,\r\n             lang) {\r\n\r\n    function BOAttachmentUtil() {\r\n    }\r\n\r\n    _.extend(BOAttachmentUtil.prototype, {\r\n\r\n        formatFilzeSize: function (node) {\r\n            var size = node.size;\r\n            if (node.container!==undefined && node.container === true) {\r\n                return size + ' ' + lang.items;\r\n            } else {\r\n                var filesSize = lang.fileSizeByte;\r\n                if (size > 1024) {\r\n                    filesSize = lang.fileSizeKByte;\r\n                    size = size / 1024;\r\n                    if (size > 1024) {\r\n                        filesSize = lang.fileSizeMByte;\r\n                        size = size / 1024;\r\n                        if (size > 1024) {\r\n                            filesSize = lang.fileSizeGByte;\r\n                            size = size / 1024;\r\n                        }\r\n                    }\r\n                }\r\n                return Math.ceil(size) + ' ' + filesSize;\r\n            }\r\n        },\r\n        orderByAsString: function (orderBy, defCol, defOrd) {\r\n            var sc;\r\n\r\n            var ret, order = {sc: defCol, so: defOrd};\r\n            if (orderBy) {\r\n                order = _.defaults({sc: orderBy.sortColumn, so: orderBy.sortOrder}, order);\r\n            }\r\n            // strip curly braces from sortColumn\r\n            if (order.sc) {\r\n                // syntax of the sortColumn is to be checked in the constructors, so no need to\r\n                // raise a message here\r\n                var parameterPlaceholder = /{([^:}]+)(:([^}]+))?}/g;\r\n                var match = parameterPlaceholder.exec(order.sc);\r\n                if (match) {\r\n                    order.sc = match[1];\r\n                } else {\r\n                    order.sc = undefined;\r\n                }\r\n            }\r\n            // if one of column or order is defined, then we must deliver something defined\r\n            if (order.sc || order.so) {\r\n                // and use a constant default, if one is undefined\r\n                ret = _.str.sformat(\"{0} {1}\", order.sc ? order.sc : \"name\", order.so ? order.so : \"asc\");\r\n            }\r\n            return ret;\r\n        }\r\n\r\n    });\r\n\r\n    return new BOAttachmentUtil();\r\n});\r\n\n","/**\r\n * The business attachment model for fetching business attachments from the server.\r\n * Provides:\r\n *   - Endless scrolling\r\n */\r\ncsui.define('xecmpf/widgets/boattachments/impl/boattachment.model',[\r\n    'module',\r\n    'csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/models/node/node.model',\r\n    'csui/models/nodeancestors',\r\n    'csui/utils/contexts/factories/factory',\r\n    'xecmpf/widgets/boattachments/impl/boattachmentutil'\r\n\r\n\r\n], function (module, $, _, Backbone, NodeModel,\r\n             NodeAncestorCollection, ConnectorFactory, BOAttachmentUtil) {\r\n\r\n    var BOAttachmentModel = NodeModel.extend({\r\n\r\n        constructor: function BOAttachmentModel(attributes, options) {\r\n            // The connector needs to be passed to the NodeModel constructor\r\n            // to be processed correctly\r\n            options || (options = {});\r\n            if (!options.connector) {\r\n                options.connector = options.collection && options.collection.connector || undefined;\r\n            }\r\n            this.connector = options.connector;\r\n            NodeModel.prototype.constructor.call(this, attributes, options);\r\n\r\n        },\r\n\r\n        // Set id attribute to support endless scrolling\r\n        // Needed to support compare attachments and add attachments to a existing collection\r\n        idAttribute: 'id',\r\n\r\n        // Parse one workspace and add category properties\r\n        parse: function (response, options) {\r\n            var node = NodeModel.prototype.parse.call(this, response, options);\r\n\r\n            if (!node.size_formatted ) {\r\n                node.size_formatted =\r\n                    BOAttachmentUtil.formatFilzeSize(node);\r\n            }\r\n\r\n            // SAPRM-11354: If CS item has no version it should be blank\r\n            if ( node.version === 0 ){\r\n                node.version = \"\";\r\n            }\r\n\r\n            if (node.actions) {\r\n                node.actions[node.actions.length] = {\r\n                    body: \"\",\r\n                    content_type: \"\",\r\n                    form_href: \"\",\r\n                    href: \"\",\r\n                    method: \"GET\",\r\n                    name: \"Snapshot\",\r\n                    signature: \"Snapshot\"\r\n                }\r\n            }\r\n\r\n            node.ancestors = new NodeAncestorCollection(\r\n                response.data.ancestors, {\r\n                node: this, autofetch: false\r\n            });\r\n\r\n            return node;\r\n        }\r\n\r\n    });\r\n\r\n    BOAttachmentModel.prototype.fetch = function (options) {\r\n      // Fetching of single BOAttachment is not legitimate.\r\n      // However this fetch will be invoked to refresh / refetch the latest toolbar actions on performing one\r\n      // Hence just re-fetch the actions of BOAttachment\r\n      return fetchNodeActions(this).then(_.bind(function (actions) {\r\n        // Update actions to node\r\n        this.set('actions', actions)\r\n      }, this))\r\n    };\r\n\r\n    function fetchNodeActions(node, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/models/node.actions'], function (NodeActionCollection) {\r\n        var actions = new NodeActionCollection(undefined, {\r\n          connector: node.connector,\r\n          nodes: [node.get('id')],\r\n          commands: _.result(node, 'urlQueryWithActionsOnly').actions\r\n        });\r\n        return actions\r\n        .fetch()\r\n        .then(function () {\r\n          return actions.reduce(function (actions, node) {\r\n            var attributes = node.actions.toJSON();\r\n            return actions.concat(attributes);\r\n          }, []);\r\n        }).then(deferred.resolve, deferred.reject)\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n\r\n    return BOAttachmentModel;\r\n});\r\n\n","csui.define('xecmpf/utils/util',['csui/lib/underscore'], function (_) {\r\n    'use strict';\r\n    return {\r\n        unEscapeSpecialCharacters: function (extSystem) {\r\n\r\n            if (extSystem !== undefined) {\r\n                if (_.isString(extSystem)) {\r\n                    extSystem = extSystem.replaceAll('/', '0xF0A7');\r\n                    extSystem = extSystem.replaceAll('\\\\', '0xF0A6');\r\n                }\r\n                else if (_.isArray(extSystem)) {\r\n                    extSystem[0] = extSystem[0].replaceAll('/', '0xF0A7');\r\n                    extSystem[0] = extSystem[0].replaceAll('\\\\', '0xF0A6');\r\n                }\r\n                else {\r\n                    return extSystem;\r\n                }\r\n\r\n            }\r\n\r\n            return extSystem;\r\n        }\r\n    }\r\n\r\n});\n","/**\r\n * The business attachment model for fetching the business attachments from the server.\r\n * Provides:\r\n *   - Endless scrolling\r\n *   - Fetch custom attributes (categories)\r\n *   - Provide Workspace type icon\r\n */\r\ncsui.define('xecmpf/widgets/boattachments/impl/boattachments.model',['module', 'csui/lib/jquery',\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/models/node/node.model',\r\n  'csui/models/connectable',\r\n  'csui/models/nodechildrencolumn',\r\n  'csui/models/nodechildrencolumns',\r\n  'csui/models/nodechildren',\r\n\r\n  'csui/models/nodes',\r\n  'csui/models/mixins/expandable/expandable.mixin',\r\n  'csui/models/mixins/node.resource/node.resource.mixin',\r\n  'csui/models/browsable/browsable.mixin',\r\n  'csui/models/browsable/v1.request.mixin',\r\n  'csui/models/mixins/resource/resource.mixin',\r\n  'csui/models/browsable/v1.response.mixin',\r\n  'csui/models/browsable/v2.response.mixin',\r\n  'csui/models/mixins/v2.delayed.commandable/v2.delayed.commandable.mixin',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.factory',\r\n  'xecmpf/widgets/boattachments/impl/boattachment.model',\r\n  'xecmpf/utils/util'\r\n], function (module, $, _, Backbone, Url,\r\n    NodeModel, ConnectableModel,\r\n    NodeChildrenColumnModel,\r\n    NodeChildrenColumnCollection,\r\n    NodeChildrenCollection,\r\n    NodeCollection,\r\n    ExpandableMixin,\r\n    NodeResourceMixin,\r\n    BrowsableMixin,\r\n    BrowsableV1RequestMixin,\r\n    ResourceMixin,\r\n    BrowsableV1ResponseMixin,\r\n    BrowsableV2ResponseMixin,\r\n    DelayedCommandableV2Mixin,\r\n    AttachmentContextBusinessObjectInfoFactory,\r\n    BOAttachmentModel, XecmpfUtil) {\r\n\r\n  // Model for display columns in expanded view\r\n  var AttachmentsColumnModel = NodeChildrenColumnModel.extend({\r\n\r\n    constructor: function AttachmentsColumnModel() {\r\n      NodeChildrenColumnModel.prototype.constructor.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n  // Collection for display columns in expanded view\r\n  var AttachmentsColumnCollection = NodeChildrenColumnCollection.extend({\r\n\r\n    dataCollectionName: \"properties\",\r\n    model: AttachmentsColumnModel,\r\n\r\n    constructor: function AttachmentsColumnCollection(dataCollectionName) {\r\n      dataCollectionName && (this.dataCollectionName = dataCollectionName);\r\n      NodeChildrenColumnCollection.prototype.constructor.apply(this);\r\n    },\r\n\r\n    resetColumns: function (response, options) {\r\n      this.resetCollection(this.getColumns(response), options);\r\n    },\r\n\r\n    getColumns: function (response) {\r\n\r\n      var definitions = response && response.meta_data && response.meta_data.properties || {};\r\n\r\n      if (definitions && !definitions['modified']) {\r\n        definitions['modified'] = definitions['modify_date'];\r\n      }\r\n\r\n      if (definitions && !definitions['size_formatted']) {\r\n        definitions['size_formatted'] = definitions['size'];\r\n      }\r\n      var columnKeys   = _.keys(definitions),\r\n          columnModels = this.getColumnModels(columnKeys, definitions);\r\n\r\n      _.each(columnModels, function (model) {\r\n        // To format user columns they must have type 14\r\n        if (model.persona === \"user\" || model.persona === \"member\") {\r\n          model.type = 14;\r\n        }\r\n      });\r\n\r\n      return columnModels\r\n    }\r\n\r\n  });\r\n  var config = module.config();\r\n\r\n  var BOAttachmentsCollection = NodeCollection.extend({\r\n\r\n    dataCollectionName: \"properties\",\r\n    model: BOAttachmentModel,\r\n\r\n    constructor: function BOAttachmentsCollection(models, options) {\r\n      NodeCollection.prototype.constructor.apply(this, arguments);\r\n      options || (options = {});\r\n      this.options = options;\r\n\r\n      this.makeNodeResource(options)\r\n          .makeExpandable(options)\r\n          .makeBrowsable(options)\r\n          .makeBrowsableV1Request(options)\r\n          .makeBrowsableV1Response(options)\r\n          .makeDelayedCommandableV2(options);\r\n\r\n      this.columns = new AttachmentsColumnCollection(this.dataCollectionName);\r\n      this.totalCount = 0;\r\n      this.titleIcon = undefined;\r\n      // API returns if there are more pages to fetch or not\r\n      this.next = undefined;\r\n      this.busobjinfo = this.options.context.getModel(AttachmentContextBusinessObjectInfoFactory,\r\n          {\r\n            attributes: this.options.data.businessattachment.properties,\r\n            data: this.options.data.businessattachment.properties\r\n          });\r\n    },\r\n\r\n    url: function () {\r\n      var queryParams = this.options.query || {};\r\n      // Paging\r\n      queryParams = this.mergeUrlPaging(config, queryParams);\r\n      // Sorting\r\n      queryParams = this.mergeUrlSorting(queryParams);\r\n      // Filtering\r\n      queryParams = this.mergeUrlFiltering(queryParams);\r\n\r\n      \r\n      var url = Url.combine(this.connector.getConnectionUrl().getApiBase('v2'),\r\n          'businessobjects',\r\n          encodeURIComponent(XecmpfUtil.unEscapeSpecialCharacters(this.busobjinfo.get(\"extSystemId\"))),\r\n          encodeURIComponent(this.busobjinfo.get(\"busObjectType\")),\r\n          encodeURIComponent(this.busobjinfo.get(\"busObjectKey\")),\r\n\t\t  'businessattachments');\r\n\r\n      this.listenTo(this, \"sync\", this._cacheCollection);\r\n      queryParams = _.omit(queryParams, function (value, key) {\r\n        return value == null || value === '';\r\n      });\r\n      queryParams.metadata = undefined;\r\n      return url + '?' + this.queryParamsToString(queryParams) + \"&expand=\" + encodeURIComponent(\r\n          'properties{original_id,ancestors,parent_id,reserved_user_id,createdby,modifiedby}');\r\n\r\n    },\r\n\r\n    fetch: function (options) {\r\n      var self = this,\r\n          df   = $.Deferred();\r\n      this.busobjinfo.fetch().done(function () {\r\n        if (!this.fetching) {\r\n          // reset total count\r\n          this.totalCount = 0;\r\n        }\r\n\r\n        if (self.busobjinfo.get(\"extSystemId\") &&\r\n            self.busobjinfo.get(\"busObjectType\") &&\r\n            self.busobjinfo.get(\"busObjectKey\")) {\r\n          self.Fetchable.fetch.call(self, options).done(function () {\r\n            df.resolve()\r\n          }).fail(function () {\r\n            df.resolve()\r\n          })\r\n        } else {\r\n          self.trigger('sync');\r\n          df.resolve()\r\n        }\r\n      });\r\n      return df.promise();\r\n    },\r\n\r\n    clone: function () {\r\n      // Don't share something between collapsed and expanded view (models, ...)\r\n      // Sorting, filtering, columns, ... must also be shared since e.g. the modal view has\r\n      // specific sorting\r\n      var options = $.extend(true, {}, this.options);\r\n      // remove filter parameter\r\n      options.query && options.query.where_name && (options.query.where_name = '');\r\n      var collection = new this.constructor([], options);\r\n\r\n      collection.connector = this.connector;\r\n      return collection;\r\n    },\r\n\r\n    parse: function (response) {\r\n      // In case api returns properties use them, otherwise use defaults\r\n      this.totalCount = response.paging.total_count;\r\n      this.options.orderBy = this.orderBy;\r\n      this.columns && this.columns.resetColumns(response, this.options);\r\n\r\n      // If more pages available set next to true, otherwise to false\r\n      this.next = response.paging.actions && response.paging.actions.next ? true : false;\r\n\r\n      this.businessObjectActions = response.businessObjectActions;\r\n\r\n      // pass the array of v2 nodes to the model parse methods\r\n      return response.results;\r\n    },\r\n    mergeUrlPaging: function (config, queryParams) {\r\n      var limit = this.topCount || config.defaultPageSize;\r\n      if (limit) {\r\n        queryParams.limit = limit;\r\n        queryParams.page = this.skipCount ? (Math.floor(this.skipCount / limit)) + 1 : 1;\r\n      }\r\n      return queryParams;\r\n    },\r\n\r\n    mergeUrlSorting: function (queryParams) {\r\n      var orderBy;\r\n      if (this.orderBy) {\r\n        orderBy = this.orderBy;\r\n        queryParams.sort = this._formatSorting(orderBy);\r\n      } else if (_.isUndefined(queryParams.sort)) {\r\n        queryParams.sort = \"asc_name\";\r\n        this.orderBy = \"name asc\";\r\n      } else if (queryParams.sort.indexOf(\" \") > -1) {\r\n        orderBy = queryParams.sort;\r\n        this.orderBy = queryParams.sort;\r\n        queryParams.sort = this._formatSorting(orderBy);\r\n      }\r\n      return queryParams;\r\n    },\r\n\r\n    _formatSorting: function (orderBy) {\r\n      var slicePosition = orderBy.lastIndexOf(\" \");\r\n      return orderBy.slice(slicePosition + 1) + '_' + orderBy.slice(0, slicePosition);\r\n    },\r\n\r\n    mergeUrlFiltering: function (queryParams) {\r\n      if (!$.isEmptyObject(this.filters)) {\r\n        for (var name in this.filters) {\r\n          if (this.filters.hasOwnProperty(name)) {\r\n            if (this.filters[name] === \"\" || this.filters[name] === undefined) {\r\n              // Clear filter\r\n              delete queryParams[\"where_\" + name];\r\n              delete this.options.query[\"where_\" + name];\r\n            } else {\r\n              // API like search syntax: where_name=contains_street\r\n              // Currently it's only possible to filter for strings, since the\r\n              // API only returns for Strings that filtering is possible\r\n              queryParams[\"where_\" + name] = \"contains_\" +\r\n                                             encodeURIComponent(this.filters[name]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return queryParams;\r\n    },\r\n\r\n    queryParamsToString: function (params) {\r\n      var queryParamsStr = \"\";\r\n      for (var param in params) {\r\n        if (params.hasOwnProperty(param)) {\r\n          if (queryParamsStr.length > 0) {\r\n            queryParamsStr += \"&\"\r\n          }\r\n\r\n          if (params[param] === undefined) {\r\n            queryParamsStr += param;\r\n          } else {\r\n            queryParamsStr += param + \"=\" + params[param];\r\n          }\r\n        }\r\n      }\r\n      return queryParamsStr;\r\n    },\r\n\r\n    getBaseUrl: function () {\r\n      var url = this.connector && this.connector.connection &&\r\n                this.connector.connection.url;\r\n      if (_.isUndefined(url)) {\r\n        url = this.options.connector.connection.url;\r\n      }\r\n      return url;\r\n    }\r\n  });\r\n\r\n  BrowsableMixin.mixin(BOAttachmentsCollection.prototype);\r\n  ExpandableMixin.mixin(BOAttachmentsCollection.prototype);\r\n  NodeResourceMixin.mixin(BOAttachmentsCollection.prototype);\r\n  BrowsableV1RequestMixin.mixin(BOAttachmentsCollection.prototype);\r\n  BrowsableV1ResponseMixin.mixin(BOAttachmentsCollection.prototype);\r\n  DelayedCommandableV2Mixin.mixin(BOAttachmentsCollection.prototype);\r\n\r\n  // TODO: Remove this, as soon as all abandoned this.Fetchable.\r\n\r\n  var originalFetch = NodeCollection.prototype.fetch;\r\n  BOAttachmentsCollection.prototype.Fetchable = {\r\n\r\n    fetch: function (options) {\r\n      // log.warn('Using this.Fetchable.fetch has been deprecated.  ' +\r\n      //          'Use NodeChildrenCollection.prototype.fetch. ' +\r\n      //          'this.Fetchable is going to be removed.') && console.warn(log.last);\r\n      // log.warn('Occurred ' + log.getStackTrace(2)) && console.warn(log.last);\r\n      return originalFetch.call(this, options);\r\n    }\r\n\r\n  };\r\n\r\n  return BOAttachmentsCollection;\r\n\r\n});\r\n\n","csui.define('xecmpf/widgets/myattachments/metadata.attachment.model',['module', 'csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/utils/log', 'csui/utils/url', 'csui/models/actions',\r\n    'csui/models/mixins/expandable/expandable.mixin',\r\n    'csui/models/mixins/resource/resource.mixin',\r\n    'csui/models/mixins/uploadable/uploadable.mixin',\r\n    'xecmpf/utils/util','csui/lib/jquery',\r\n], function (module, _, Backbone, log, Url, ActionCollection,\r\n             ExpandableMixin, ResourceMixin, UploadableMixin, XecmpfUtil, $) {\r\n    'use strict';\r\n\r\n    var AttachmentModel = Backbone.Model.extend({\r\n\r\n        // Not set this idAttribute as you can have the same bo_id for\r\n        // different external systems\r\n        // idAttribute: '_id',\r\n\r\n        constructor: function AttachmentModel(attributes, options) {\r\n            attributes || (attributes = {});\r\n            options = _.extend({expand: 'user'}, options);\r\n\r\n            if (!attributes.actions) {\r\n\t\t\t\tthis._setCollectionProperty('actions', ActionCollection,\r\n\t\t\t\t\tattributes, options);\r\n\t\t\t}\r\n\r\n            Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n            this.makeResource(options)\r\n                .makeUploadable(options)\r\n                .makeExpandable(options);\r\n        },\r\n\r\n        set: function (key, val, options) {\r\n            var attrs;\r\n            if (key == null) {\r\n                return this;\r\n            }\r\n\r\n            // Save actions\r\n            if (key.actions) {\r\n                this.actions = key.actions;\r\n                this._setCollectionProperty('actions', ActionCollection, key, options);\r\n            }\r\n            // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n            if (typeof key === 'object') {\r\n                if (key.data) {\r\n                    if (key.data.properties) {\r\n                        attrs = key.data.properties;\r\n                        // we need additional id for collapse of the table, see\r\n                        // table.view.js line 1525:\r\n                        // childRow.attr('id', \"csui-details-row-\" + aData.get('id'));\r\n                        // ........\r\n                        // aData could be an AttachmentModel\r\n                        this.id = attrs.ext_system_id + attrs.bo_type + attrs.bo_id;\r\n                        options = val;\r\n                    }\r\n                }\r\n                else {\r\n                    attrs = key;\r\n                    options = val;\r\n                }\r\n            } else {\r\n                (attrs = {})[key] = val;\r\n            }\r\n\r\n            options || (options = {});\r\n            return Backbone.Model.prototype.set.call(this, attrs, options);\r\n\r\n        },\r\n\r\n        isNew: function () {\r\n            if (this.id) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        },\r\n\r\n        isFetchable: function () {\r\n            return !!(this.get('id') && this.get('bo_id'));\r\n        },\r\n\r\n        url: function () {\r\n            var url = Url.combine(this.connector.getConnectionUrl().getApiBase('v2'), 'nodes', this.collection.node.get('id'), 'businessattachments');\r\n            if (!this.isNew()) {\r\n                url = Url.combine(url, encodeURIComponent(XecmpfUtil.unEscapeSpecialCharacters(this.get('ext_system_id'))), encodeURIComponent(this.get('bo_type')), encodeURIComponent(this.get('bo_id')));\r\n            }\r\n            return url;\r\n        },\r\n\r\n        parse: function (response) {\r\n            var attachment;\r\n            if ( $.isArray(response.results) ){\r\n                attachment = response.results[0];\r\n            }\r\n            else {\r\n               attachment = response;\r\n            }\r\n\r\n            var attachmentActions = _.map(attachment, function (value, key) {\r\n\t\t\t\treturn {\r\n\t\t\t\t  id: key,\r\n\t\t\t\t  actions: _.map(value.data, function (value, key) {\r\n\t\t\t\t\tvalue.signature = key;\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t  })\r\n\t\t\t\t};\r\n\t\t\t}, {});\r\n\t\t\t\r\n\t\t\tattachment.actions = attachmentActions[0].actions;\r\n\r\n            return attachment;\r\n        },\r\n\r\n        _setCollectionProperty: function (attribute, Class, attributes, options) {\r\n            var property   = _.str.camelize(attribute),\r\n                models     = attributes[attribute];\t\t\t  \r\n            this[property] = new Class(models, {\r\n                connector: this.connector || options && options.connector\r\n            });\r\n          }\r\n\r\n    });\r\n\r\n    ExpandableMixin.mixin(AttachmentModel.prototype);\r\n    UploadableMixin.mixin(AttachmentModel.prototype);\r\n    ResourceMixin.mixin(AttachmentModel.prototype);\r\n\r\n    return AttachmentModel;\r\n\r\n});\r\n\r\n\n","csui.define('xecmpf/widgets/myattachments/metadata.attachments.model',[\"module\", \"csui/lib/backbone\", \"csui/utils/log\", \"xecmpf/widgets/myattachments/metadata.attachment.model\",\"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/utils/url\"\r\n], function (module, Backbone, log, AttachmentModel, $, _, Url) {\r\n  'use strict';\r\n\r\n  var AttachmentCollection = Backbone.Collection.extend({\r\n\r\n    model: AttachmentModel,\r\n\r\n    constructor: function AttachmentCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n      this.options = options || {};\r\n      if (this.options.connector) {\r\n        this.options.connector.assignTo(this);\r\n      }\r\n    },\r\n\r\n    setOrder: function (attributes, fetch) {\r\n      if (this.orderBy !== attributes) {\r\n        this.orderBy = attributes;\r\n        if (fetch !== false) {\r\n          this.fetch();\r\n        }\r\n        //this._runAllOperations();\r\n        return true;\r\n      }\r\n    },\r\n\r\n    resetOrder: function (fetch) {\r\n      if (this.orderBy) {\r\n        this.orderBy = undefined;\r\n        if (fetch !== false) {\r\n          this.fetch();\r\n        }\r\n        return true;\r\n      }\r\n    },\r\n\r\n    setLimit: function (skip, top, fetch) {\r\n      if (this.skipCount !== skip || this.topCount !== top) {\r\n        this.skipCount = skip;\r\n        this.topCount = top;\r\n        if (fetch !== false) {\r\n          this.fetch();\r\n        }\r\n        return true;\r\n      }\r\n    },\r\n\r\n    resetLimit: function (fetch) {\r\n      if (this.skipCount) {\r\n        this.skipCount = 0;\r\n        if (fetch !== false) {\r\n          this.fetch();\r\n        }\r\n        return true;\r\n      }\r\n    },\r\n\r\n    setFilter: function (filters, fetch, options) {\r\n      if(this.filters) {\r\n        for (var tempKey in this.filters) {\r\n          if(this.filters[tempKey] === undefined) {\r\n            delete this.filters[tempKey];\r\n          }\r\n        }\r\n      }\r\n      for (var key in filters) {\r\n        if (!this.filters) {\r\n          this.filters = {};\r\n        }\r\n        this.filters[key] = filters[key];\r\n      }\r\n      if (fetch !== false) {\r\n        this.fetch(options);\r\n      }\r\n      return true;\r\n    }\r\n\r\n  });\r\n  AttachmentCollection.version = '1.0';\r\n\r\n  return AttachmentCollection;\r\n\r\n});\r\n\n","csui.define('xecmpf/widgets/myattachments/metadata.nodeattachments.model',['module', 'csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/utils/base', 'csui/utils/log', 'csui/utils/url',\r\n    'xecmpf/widgets/myattachments/metadata.attachments.model', 'csui/models/actions', 'csui/models/columns',\r\n    'csui/models/mixins/node.resource/node.resource.mixin',\r\n    'csui/models/mixins/expandable/expandable.mixin',\r\n    'csui/lib/jquery',\r\n    // 'csui/models/browsable/client-side.mixin',\r\n    'csui/utils/deepClone/deepClone'\r\n], function (module, _, Backbone, base, log, Url, AttachmentCollection, ActionCollection,\r\n             NodeColumnCollection, NodeResourceMixin,\r\n             ExpandableMixin, $/* ClientSideBrowsableMixin */) {\r\n    'use strict';\r\n\r\n    var NodeAttachmentCollection = AttachmentCollection.extend({\r\n\r\n        constructor: function NodeAttachmentCollection(models, options) {\r\n            AttachmentCollection.prototype.constructor.apply(this, arguments);\r\n\r\n            this.makeNodeResource(options)\r\n                .makeExpandable(options);\r\n            // .makeClientSideBrowsable(options);\r\n\r\n            this.columns = new NodeColumnCollection();\r\n        },\r\n\r\n        clone: function () {\r\n            return new this.constructor(this.models, {\r\n                node: this.node,\r\n                skip: this.skipCount,\r\n                top: this.topCount,\r\n                filter: _.deepClone(this.filters),\r\n                orderBy: _.clone(this.orderBy),\r\n                expand: _.clone(this.expand),\r\n                // TODO: Use commandable mixin.\r\n                commands: _.clone(this.options.commands)\r\n            });\r\n        },\r\n\r\n        mergeUrlPaging: function () {\r\n            var queryParams = {};\r\n            var limit = this.topCount;\r\n            if (limit) {\r\n                queryParams.limit = limit;\r\n                queryParams.page = this.skipCount ? (Math.floor(this.skipCount / limit)) + 1 : 1;\r\n            }\r\n            return queryParams;\r\n        },\r\n\r\n        mergeUrlFiltering: function () {\r\n            var queryParams = [];\r\n            if (!$.isEmptyObject(this.filters)) {\r\n                for (var name in this.filters) {\r\n                    if (this.filters.hasOwnProperty(name)) {\r\n                        if (this.filters[name] !== \"\" && this.filters[name] !== undefined) {\r\n                            queryParams[\"where_\" + name] = \"contains_\" + this.filters[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return queryParams;\r\n        },\r\n\r\n        mergeUrlSorting: function () {\r\n            var queryParams = [];\r\n            var orderBy;\r\n            if (this.orderBy) {\r\n                orderBy = this.orderBy;\r\n                queryParams.sort = this._formatSorting(orderBy);\r\n            } else if (_.isUndefined(queryParams.sort)) {\r\n                queryParams.sort = \"asc_name\";\r\n                this.orderBy = \"name asc\";\r\n            } else if (queryParams.sort.indexOf(\" \") > -1) {\r\n                orderBy = queryParams.sort;\r\n                this.orderBy = queryParams.sort;\r\n                queryParams.sort = this._formatSorting(orderBy);\r\n            }\r\n            return queryParams;\r\n        },\r\n\r\n        _formatSorting: function (orderBy) {\r\n            var slicePosition = orderBy.lastIndexOf(\" \");\r\n            return orderBy.slice(slicePosition + 1) + '_' + orderBy.slice(0, slicePosition);\r\n        },\r\n\r\n        url: function () {\r\n            var query = Url.combineQueryString(\r\n                this.getExpandableResourcesUrlQuery(),\r\n                'metadata',\r\n                this.mergeUrlPaging(),\r\n                this.mergeUrlFiltering(),\r\n                this.mergeUrlSorting()\r\n            );\r\n\r\n            var url = this.connector.getConnectionUrl().getApiBase('v2');\r\n            // SAPRM-9351:\r\n            // this does not work for machine names like\r\n            // http://xecmwinsrv12.eng-muc-test.opentext.net:8080/OTCS/cs.exe/api/v1/nodes/...\"\r\n            // we have to replace correctly\r\n            // url = url.replace(\"v1\", \"v2\");\r\n            // End of SAPRM-9351\r\n            return Url.combine(url, 'nodes', this.node.get('id'), '/businessattachments?' + query);\r\n        },\r\n\r\n        parse: function (response) {\r\n            this.actions = response.actions; // get actions independent from single bus. attachment, e.g. add attachment\r\n            this.totalCount = response.paging.total_count;\r\n\r\n            var metadata = response.meta_data;\r\n            var columnKeys = _.keys(metadata.properties);\r\n\r\n            if (!this.options.onlyClientSideDefinedColumns) {\r\n                // merge metadata_order into metadata as metadata_order attribute\r\n                if (response.metadata_order) {\r\n                    for (var idx = 0; idx < response.metadata_order.length; idx++) {\r\n                        var column_key = response.metadata_order[idx];\r\n                        metadata[column_key].metadata_order = 500 + idx;\r\n                    }\r\n                }\r\n            }\r\n            // do not reset the columns in case of filtering else the searchbox is removed\r\n            if (!this.filters) {\r\n                this.columns.reset(this.getColumnModels(columnKeys, metadata.properties));\r\n            }\r\n\r\n            return response.results;\r\n        },\r\n\r\n        getColumnModels: function (columnKeys, metadata) {\r\n            var columns = _.reduce(columnKeys, function (colArray, column) {\r\n                if (column.indexOf('_formatted') >= 0) {\r\n                    var shortColumnName = column.replace(/_formatted$/, '');\r\n                    if (metadata[shortColumnName]) {\r\n                        // there is also the column without the trailing _formatted: skip this and use this instead\r\n                        return colArray;\r\n                    }\r\n                } else {\r\n                    // copy the metadata_order from the *_formatted column to the non-formatted column\r\n                    // because it is assumed that the attributes form *_formatted column are more important\r\n                    var definition_short = metadata[column];\r\n                    if (!definition_short.metadata_order) {\r\n                        var definition_formatted = metadata[column + '_formatted'];\r\n                        if (definition_formatted && definition_formatted.metadata_order) {\r\n                            definition_short.metadata_order = definition_formatted.metadata_order;\r\n                        }\r\n                    }\r\n                }\r\n                var definition = metadata[column];\r\n\r\n                switch (column) {\r\n                    case \"name\":\r\n                        definition = _.extend(definition, {\r\n                            default_action: true,\r\n                            contextual_menu: false,\r\n                            editable: true,\r\n                            filter_key: \"name\"\r\n                        });\r\n                        break;\r\n                }\r\n\r\n                colArray.push(_.extend({column_key: column}, definition));\r\n                return colArray;\r\n            }, []);\r\n            return columns;\r\n        }\r\n\r\n    });\r\n\r\n    // ClientSideBrowsableMixin.mixin(NodeAttachmentCollection.prototype);\r\n    ExpandableMixin.mixin(NodeAttachmentCollection.prototype);\r\n    NodeResourceMixin.mixin(NodeAttachmentCollection.prototype);\r\n\r\n    return NodeAttachmentCollection;\r\n\r\n});\r\n\n","csui.define('xecmpf/widgets/dossier/impl/dossier.model',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/utils/url', 'csui/models/mixins/connectable/connectable.mixin'\r\n], function (module, $, _, Backbone,\r\n             Url, ConnectableMixin) {\r\n\r\n    var DossierModel, DossierCollection;\r\n\r\n    DossierModel = Backbone.Model.extend({\r\n        constructor: function DossierModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        parse: function (response) {\r\n            if (response && response.paging && response.paging.total_count > 0) {\r\n                return response;\r\n            }\r\n        }\r\n    });\r\n\r\n    DossierCollection = Backbone.Collection.extend({\r\n        model: DossierModel,\r\n\r\n        constructor: function DossierCollection(attributes, options) {\r\n            options || (options = {});\r\n            Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n\r\n            this.options = _.pick(options, ['connector', 'nodeModel', 'query']);\r\n            this.makeConnectable(this.options);\r\n        },\r\n\r\n        parse: function (response, options) {\r\n            var data = response.results.data,\r\n                properties = response.results.properties;\r\n            this.total_documents = properties.total_documents;\r\n            data = _.filter(data, function (item) {\r\n                return item.paging.total_count > 0\r\n            });\r\n            return data;\r\n        },\r\n\r\n        queryParamsToString: function (params) {\r\n            return '?' + $.param(params);\r\n        },\r\n\r\n        fetch: function (options) {\r\n            options || (options = {});\r\n            if (options.query) {\r\n                this.url = this.getUrl() + this.queryParamsToString(options.query);\r\n            }\r\n            return Backbone.Collection.prototype.fetch.apply(this, arguments);\r\n        },\r\n\r\n        url: function () {\r\n            // Get query from options, e.g. group_by criterion already passed\r\n            var queryParams = this.options.query || {};\r\n\r\n            return this.getUrl() + this.queryParamsToString(queryParams);\r\n        },\r\n\r\n        getUrl: function () {\r\n            var url = this.connector.getConnectionUrl().getApiBase('v2');\r\n            url = Url.combine(url, 'businessworkspaces', this.options.nodeModel.get('id'), 'dossier');\r\n            return url;\r\n        }\r\n    });\r\n\r\n    ConnectableMixin.mixin(DossierCollection.prototype);\r\n\r\n    return DossierCollection;\r\n});\r\n\n","csui.define('xecmpf/widgets/dossier/impl/documentslist/impl/documents.model',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/url',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  'csui/models/browsable/browsable.mixin',\r\n  'csui/models/node/node.model'\r\n], function (module, $, _, Backbone, Url,\r\n    ConnectableMixin, BrowsableMixin,\r\n    NodeModel) {\r\n\r\n  var config, DocumentModel, DocumentsCollection;\r\n\r\n  config = module.config();\r\n\r\n  DocumentModel = NodeModel.extend({\r\n\r\n    idAttribute: 'id',\r\n\r\n    constructor: function DocumentModel(attributes, options) {\r\n      options || (options = {});\r\n      // The connector needs to be passed to the NodeModel constructor\r\n      // to be processed correctly\r\n      if (!options.connector) {\r\n        options.connector = options.collection && options.collection.connector || undefined;\r\n      }\r\n      NodeModel.prototype.constructor.apply(this, arguments);\r\n      this.set(NodeModel.prototype.parse.call(this, attributes, options));\r\n    }\r\n  });\r\n\r\n  DocumentsCollection = Backbone.Collection.extend({\r\n\r\n    model: DocumentModel,\r\n\r\n    constructor: function DocumentsCollection(models, options) {\r\n      options || (options = {});\r\n      options.connector = options.nodeModel && options.nodeModel.connector;\r\n      this.options = _.pick(options, ['connector', 'nodeModel', 'query', 'paging', 'metadata']);\r\n      Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n\r\n      this.makeConnectable(this.options)\r\n          .makeBrowsable(this.options);\r\n\r\n      this.totalCount = this.options.paging.total_count;\r\n      this.options.orderBy = this.orderBy;\r\n    },\r\n\r\n    fetch: function () {\r\n      return Backbone.Collection.prototype.fetch.apply(this, arguments);\r\n    },\r\n\r\n    parse: function (response, options) {\r\n      return response.results.data;\r\n    },\r\n\r\n    mergeUrlPaging: function (config, queryParams) {\r\n      var limit = this.topCount || config.defaultPageSize || 5;\r\n      if (limit) {\r\n        queryParams.limit = limit;\r\n        queryParams.page = this.skipCount ? (Math.floor(this.skipCount / limit)) + 1 : 1;\r\n      }\r\n      return queryParams;\r\n    },\r\n\r\n    mergeUrlMetadata: function (queryParams) {\r\n      if (this.options.metadata) {\r\n        queryParams.metadata = '{' + this.options.metadata + '}';\r\n      }\r\n      return queryParams;\r\n    },\r\n\r\n    queryParamsToString: function (params) {\r\n      return '?' + $.param(params);\r\n    },\r\n\r\n    url: function () {\r\n      // Get query from options\r\n      var queryParams = this.options.query || {};\r\n\r\n      // Paging\r\n      queryParams = this.mergeUrlPaging(config, queryParams);\r\n\r\n      //metadata\r\n      queryParams = this.mergeUrlMetadata(queryParams);\r\n\r\n      var url = this.connector.getConnectionUrl().getApiBase('v2');\r\n      url = Url.combine(url, 'businessworkspaces',\r\n          this.options.nodeModel && this.options.nodeModel.get('id'), 'dossier/documents');\r\n\r\n      return url + this.queryParamsToString(queryParams);\r\n    }\r\n  });\r\n\r\n  ConnectableMixin.mixin(DocumentsCollection.prototype);\r\n  BrowsableMixin.mixin(DocumentsCollection.prototype);\r\n  return DocumentsCollection;\r\n});\r\n\n","csui.define('xecmpf/widgets/dossier/impl/documentslistitem/impl/metadata.model',['csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/backbone'\r\n], function (_, $, Backbone) {\r\n  var MetadataCollection = Backbone.Collection.extend({\r\n\r\n    constructor: function MetadataCollection(models, options) {\r\n      options || (options = {});\r\n      options.data || (options.data = {});\r\n      Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n      if (!_.isEmpty(options.data)) {\r\n        this.hideEmptyFields = options.hideEmptyFields;\r\n        this.catsAndAttrs = options.catsAndAttrs;\r\n        this._addModels(options.data);\r\n      }\r\n    },\r\n\r\n    _addModels: function (data) {\r\n      _.each(this.catsAndAttrs, function (item) {\r\n        var itemType = typeof item,\r\n            label, value, type, attribute, category;\r\n\r\n        if (itemType === 'number') {\r\n          category = item;\r\n          if (data.hasOwnProperty(category)) {\r\n            for (attribute in data[category]['data']) {\r\n              if (data[category]['data'].hasOwnProperty(attribute)) {\r\n                label = data[category]['definitions'][attribute]['name'];\r\n                value = data[category]['data'][attribute];\r\n                type = data[category]['definitions'][attribute]['type_name'];\r\n                if (this.hideEmptyFields === true && value === null) {continue;}\r\n                this.add({label: label, value: value, type: type});\r\n              }\r\n            }\r\n          }\r\n        } else if (itemType === 'string') {\r\n          category = item.split('_')[0];\r\n          attribute = item;\r\n          if (data.hasOwnProperty(category) && data[category]['data'].hasOwnProperty(attribute)) {\r\n            label = data[category]['definitions'][attribute]['name'];\r\n            value = data[category]['data'][attribute];\r\n            type = data[category]['definitions'][attribute]['type_name'];\r\n            if (this.hideEmptyFields === true && value === undefined) {return;}\r\n            this.add({label: label, value: value, type: type});\r\n          }\r\n        }\r\n      }, this);\r\n    },\r\n\r\n    comparator: 'label'\r\n  });\r\n\r\n  return MetadataCollection;\r\n});\r\n\n","csui.define('xecmpf/widgets/header/impl/completenesscheck/impl/models/missingdocuments.model',['csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/models/mixins/connectable/connectable.mixin', 'csui/utils/url'\r\n], function (_, Backbone, ConnectableMixin, Url) {\r\n    \r\n    var MissingDocumentModel = Backbone.Model.extend({\r\n\r\n        idAttribute: 'id',\r\n\r\n        constructor: function MissingDocumentModel(attributes, options) {\r\n            options || (options = {});\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n            this.makeConnectable(options);\r\n        },\r\n\r\n        parse: function (response) {\r\n            return response;\r\n        }\r\n\r\n    });\r\n    ConnectableMixin.mixin(MissingDocumentModel.prototype);\r\n\r\n    var MissingDocumentCollection = Backbone.Collection.extend({\r\n\r\n        model: MissingDocumentModel,\r\n\r\n        constructor: function MissingDocumentCollection(models, options) {\r\n            this.options = options || {};\r\n            Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n            this.makeConnectable(options);\r\n        },\r\n\r\n        url: function () {\r\n            var wrkspceId = this.options.node.get('id');\r\n            return Url.combine(new Url(this.connector.connection.url).getApiBase('v2'),\r\n                '/businessworkspaces/' + wrkspceId + '/missingdocuments');\r\n        },\r\n\r\n        parse: function (response) {\r\n            return response.results.data;\r\n        },\r\n\r\n        fetch: function () {\r\n            return Backbone.Collection.prototype.fetch.apply(this, arguments);\r\n        }\r\n    });\r\n    ConnectableMixin.mixin(MissingDocumentCollection.prototype);\r\n\r\n    return MissingDocumentCollection;\r\n});\r\n\n","csui.define('xecmpf/widgets/workspaces/models/workspace.collection',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/utils/url',\r\n    'xecmpf/utils/util',\r\n    'csui/models/nodes',\r\n    'csui/models/nodechildrencolumns',\r\n    'csui/models/browsable/browsable.mixin',\r\n    'csui/models/browsable/v1.request.mixin',\r\n    'csui/models/mixins/resource/resource.mixin',\r\n    'csui/models/browsable/v1.response.mixin',\r\n    'csui/models/browsable/v2.response.mixin',\r\n    'csui/utils/log',\r\n    'csui/utils/deepClone/deepClone'\r\n], function (module, $, _, Backbone, Url,\r\n    XecmpfUtil,\r\n    NodeCollection,\r\n    NodeChildrenColumnCollection,\r\n    BrowsableMixin,\r\n    BrowsableV1RequestMixin,\r\n    ResourceMixin,\r\n    BrowsableV1ResponseMixin,\r\n    BrowsableV2ResponseMixin,\r\n    log) {\r\n    'use strict';\r\n\r\n    var config = module.config();\r\n    _.defaults(config, {\r\n        defaultPageSize: 30\r\n    });\r\n\r\n    var WorkspaceCollection = NodeCollection.extend({\r\n\r\n        constructor: function WorkspaceCollection(models, options) {\r\n            options = _.defaults({}, options, {\r\n                top: config.defaultPageSize\r\n            }, options);\r\n\r\n            NodeCollection.prototype.constructor.call(this, models, options);\r\n            this.makeBrowsable(options)\r\n                .makeBrowsableV1Request(options)\r\n                .makeResource(options)\r\n                .makeBrowsableV2Response(options);\r\n\r\n            this.options = options;\r\n            this.orderBy = \"name asc\";\r\n        },\r\n\r\n        clone: function () {\r\n            return new this.constructor(this.models, {\r\n                skip: this.skipCount,\r\n                top: this.topCount,\r\n                orderBy: this.orderBy\r\n            });\r\n        },\r\n        getBaseUrl: function () {\r\n            //   return \"//server/otcs/cs/api/v2\";\r\n            return this.options.connector.getConnectionUrl().getApiBase('v2');\r\n        },\r\n\r\n        url: function () {\r\n            var query = this.getBrowsableUrlQuery();\r\n            var url;\r\n            if (this.options.early) {\r\n                url = Url.combine(this.getBaseUrl(),\r\n                    query ? '/businessworkspaces?' + query + \"&\" : '/businessworkspaces?');\r\n                url += 'metadata&expanded_view=true' +\r\n                    '&where_bo_type=' + this.options.busObjectType +\r\n                    '&where_ext_system_id=' + this.options.extSystemId +\r\n                    '&where_is_early=true';\r\n                if (this.options.busObjectId) {\r\n                    url += '&where_bo_id=' + this.options.busObjectId;\r\n                }\r\n                url = url.replace(\"where_name=\", \"where_name=contains_\");\r\n            } else {\r\n                url = Url.combine(this.getBaseUrl(),\r\n                    'externalsystems/' + encodeURIComponent(XecmpfUtil.unEscapeSpecialCharacters(this.options.extSystemId)) + '/botypes/' +\r\n                    encodeURIComponent(this.options.busObjectType) + '/boids/' + encodeURIComponent(this.options.busObjectId));\r\n                query ? url += '?' + query + '&metadata' : url += '?metadata';\r\n            }\r\n            return url;\r\n        },\r\n        isFetchable: function () {\r\n            return true;\r\n        },\r\n        parse: function (response, options) {\r\n            var modifyDate = _.chain(response.meta_data.properties).pick(\"modify_date\").value().modify_date,\r\n                name = _.chain(response.meta_data.properties).pick(\"name\").value().name\r\n\r\n            this.columns = new NodeChildrenColumnCollection([\r\n                {\r\n                    align: modifyDate.align,\r\n                    column_key: \"modify_date\",\r\n                    name: modifyDate.name,\r\n                    persona: modifyDate.persona,\r\n                    sort: (modifyDate.sort ? true : false),\r\n                    type: modifyDate.type,\r\n                    width_weight: modifyDate.width_weight\r\n                },\r\n                {\r\n                    column_key: \"name\",\r\n                    align: name.align,\r\n                    name: name.name,\r\n                    persona: name.persona,\r\n                    sort: (name ? name.sort : false),\r\n                    type: name.type,\r\n                    width_weight: name.width_weight\r\n                }]);\r\n\r\n            this.parseBrowsedState(response, options);\r\n            return this.parseBrowsedItems(response, options);\r\n        }\r\n\r\n    });\r\n\r\n    BrowsableMixin.mixin(WorkspaceCollection.prototype);\r\n    BrowsableV1RequestMixin.mixin(WorkspaceCollection.prototype);\r\n    ResourceMixin.mixin(WorkspaceCollection.prototype);\r\n    BrowsableV2ResponseMixin.mixin(WorkspaceCollection.prototype);\r\n    // TODO: Remove this, as soon as all abandoned this.Fetchable.\r\n    var originalFetch = WorkspaceCollection.prototype.fetch;\r\n    WorkspaceCollection.prototype.Fetchable = {\r\n\r\n        fetch: function (options) {\r\n            // log.warn('Using this.Fetchable.fetch has been deprecated.  ' +\r\n            //          'Use NodeChildrenCollection.prototype.fetch. ' +\r\n            //          'this.Fetchable is going to be removed.') && console.warn(log.last);\r\n            // log.warn('Occurred ' + log.getStackTrace(2)) && console.warn(log.last);\r\n            return originalFetch.call(this, options);\r\n        }\r\n\r\n    };\r\n\r\n    return WorkspaceCollection;\r\n\r\n});\r\n\n","csui.define('xecmpf/widgets/workspaces/models/workspace.types.collection',['csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/url',\r\n    'csui/models/mixins/resource/resource.mixin'\r\n], function (_,\r\n             Backbone,\r\n             Url,\r\n             ResourceMixin) {\r\n    'use strict';\r\n\r\n    var WorkspaceTypeModel = Backbone.Model.extend({\r\n\r\n         defaults: {\r\n            id: null,\r\n            name: null,\r\n            templates: null\r\n         }\r\n    });\r\n\r\n    var WorkspaceTypesCollection = Backbone.Collection.extend({\r\n\r\n        model: WorkspaceTypeModel,\r\n\r\n        constructor: function WorkspaceTypesCollection(models, options) {\r\n            this.options = options || (options = {});\r\n            Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n            this.makeResource(options);\r\n        },\r\n\r\n        getBaseUrl: function () {\r\n            // return \"//server/otcs/cs/api/v2\";\r\n            return this.options.connector.getConnectionUrl().getApiBase('v2');\r\n        },\r\n        queryParamsToString: function (params) {\r\n            var queryParamsStr = \"\";\r\n            for (var param in params) {\r\n                if (params.hasOwnProperty(param)) {\r\n                    if (queryParamsStr.length > 0) {\r\n                        queryParamsStr += \"&\"\r\n                    }\r\n\r\n                    if (params[param] === undefined) {\r\n                        queryParamsStr += param;\r\n                    } else {\r\n                        queryParamsStr += param + \"=\" + params[param];\r\n                    }\r\n                }\r\n            }\r\n            return queryParamsStr;\r\n        },\r\n\r\n        url: function () {\r\n\r\n            var url = Url.combine(this.getBaseUrl(), '/businessworkspacetypes');\r\n            url += '?expand_templates=true' +\r\n                '&bo_type=' + this.options.config.busObjectType +\r\n                '&ext_system_id=' + this.options.config.extSystemId;\r\n\r\n            return url;\r\n\r\n        },\r\n\r\n        parse: function (response, options) {\r\n\r\n            var businessworkspacetypes = response.results;\r\n            return _.chain(businessworkspacetypes)\r\n                .map(function (elem, index, ref) {\r\n\r\n                    var props = elem.data.properties,\r\n                        businessworkspacetypeAttributes = {\r\n                            wksp_type_name: props.wksp_type_name,\r\n                            wksp_type_id: props.wksp_type_id,\r\n                            rm_enabled: props.rm_enabled,\r\n                            type: 848\r\n                        };\r\n                     businessworkspacetypeAttributes.templates =\r\n                        _.chain(props.templates)\r\n                            .map(function (elem, index, ref) {\r\n                                if (index === 0) {\r\n                                    return {\r\n                                        id: elem.id,\r\n                                        name: elem.name,\r\n                                        subType: elem.subtype\r\n                                    };\r\n                                }\r\n                            })\r\n                            .compact()\r\n                            .value();\r\n\r\n\r\n                    return businessworkspacetypeAttributes;\r\n                })\r\n                .compact()\r\n                .value();\r\n        }\r\n\r\n    });\r\n\r\n    ResourceMixin.mixin(WorkspaceTypesCollection.prototype);\r\n\r\n    return WorkspaceTypesCollection;\r\n\r\n});\r\n\n","/**\r\n * Created by stefang on 24.11.2015.\r\n */\r\ncsui.define('xecmpf/models/boattachmentcontext/attachmentcontext.factory',['csui/lib/underscore',\r\n    'csui/utils/contexts/factories/factory',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.model'\r\n], function (_,\r\n             ModelFactory,\r\n             AttachmentContextModel) {\r\n\r\n    var AttachmentContextFactory = ModelFactory.extend({\r\n\r\n        propertyPrefix: 'attachmentContext',\r\n\r\n        constructor: function AttachmentContextFactory(context, options) {\r\n            ModelFactory.prototype.constructor.apply(this, arguments);\r\n            this.property = new AttachmentContextModel({}, {context: context, data: options.attachmentContext});\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n\r\n    });\r\n\r\n    return AttachmentContextFactory;\r\n\r\n});\r\n\n","\r\ncsui.define('xecmpf/widgets/header/impl/completenesscheck/impl/missingdocuments.factory',[\r\n  'module',\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/utils/contexts/factories/factory',\r\n  'csui/utils/contexts/factories/connector',\r\n  'csui/utils/contexts/factories/node',\r\n  'xecmpf/widgets/header/impl/completenesscheck/impl/models/missingdocuments.model'\r\n], function (module,\r\n    _,\r\n    Backbone,\r\n    CollectionFactory,\r\n    ConnectorFactory,\r\n    NodeFactory,\r\n    MissingReportCollection) {\r\n  var MissingDocumentsFactory = CollectionFactory.extend({\r\n    propertyPrefix: 'missingDocumentsCollection',\r\n    constructor: function MissingDocumentsFactory(context, options) {\r\n      CollectionFactory.prototype.constructor.apply(this, arguments);\r\n      var missingDocumentsCollection = this.options.missingDocumentsCollection || {};\r\n      if (!(missingDocumentsCollection instanceof Backbone.Collection)) {\r\n        var connector = context.getObject(ConnectorFactory, options),\r\n            node      = context.getModel(NodeFactory, options),\r\n            config    = module.config();\r\n        missingDocumentsCollection = new MissingReportCollection(missingDocumentsCollection.models, _.extend(\r\n            {\r\n              connector: connector,\r\n              node: node,\r\n              reportType: 'MissingDocuments'\r\n            }, missingDocumentsCollection.options, config.options, {\r\n              autofetch: true\r\n            }));\r\n      }\r\n      this.property = missingDocumentsCollection;\r\n    },\r\n    fetch: function (options) {\r\n      return this.property.fetch(options);\r\n    }\r\n  });\r\n  return MissingDocumentsFactory;\r\n});\r\n\n","csui.define('bundles/xecmpf-core',[\r\n  'xecmpf/controls/bosearch/bosearch.model',\r\n  'xecmpf/controls/bosearch/searchform/bosearchform.model',\r\n  'xecmpf/controls/property.panels/reference/impl/workspace.reference.model',\r\n  'xecmpf/controls/property.panels/reference/impl/reference.panel.model',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.category.model',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.model',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.node.model',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.model',\r\n  'xecmpf/widgets/boattachments/impl/boattachment.model',\r\n  'xecmpf/widgets/boattachments/impl/boattachments.model',\r\n  'xecmpf/widgets/myattachments/metadata.attachment.model',\r\n  'xecmpf/widgets/myattachments/metadata.attachments.model',\r\n  'xecmpf/widgets/myattachments/metadata.nodeattachments.model',\r\n  'xecmpf/widgets/dossier/impl/dossier.model',\r\n  'xecmpf/widgets/dossier/impl/documentslist/impl/documents.model',\r\n  'xecmpf/widgets/dossier/impl/documentslistitem/impl/metadata.model',\r\n  'xecmpf/widgets/header/impl/completenesscheck/impl/models/missingdocuments.model',\r\n  'xecmpf/widgets/workspaces/models/workspace.collection',\r\n  'xecmpf/widgets/workspaces/models/workspace.types.collection',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.category.factory',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.factory',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.factory',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.node.factory',\r\n  'xecmpf/widgets/header/impl/completenesscheck/impl/missingdocuments.factory'\r\n], {});\n"]}