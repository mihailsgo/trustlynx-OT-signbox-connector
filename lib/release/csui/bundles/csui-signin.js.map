{"version":3,"sources":["../../src/controls/signin/impl/signin!hbs","../../src/controls/signin/impl/nls/localized.strings.js","../../src/controls/signin/impl/nls/root/localized.strings.js","../../src/controls/signin/impl/css/signin!css","../../src/controls/signin/signin.view.js","../../src/pages/signin/impl/signin.page!hbs","../../src/pages/signin/impl/nls/lang.js","../../src/pages/signin/impl/nls/root/lang.js","../../src/pages/signin/impl/nls/lang!i18n","../../src/utils/non-attaching.region/non-attaching.region.js","../../src/pages/signin/impl/signin.page!css","../../src/pages/signin/signin.page.view.js","../../src/utils/authenticators/interactive.credentials.authenticator.js","../../src/utils/user.session/impl/nls/lang.js","../../src/utils/user.session/impl/nls/root/lang.js","../../src/utils/user.session/impl/nls/lang!i18n","../../src/utils/user.session/user.session.js","../../src/utils/authenticators/impl/redirecting.form.authenticator!hbs","../../src/utils/authenticators/impl/nls/lang.js","../../src/utils/authenticators/impl/nls/root/lang.js","../../src/utils/authenticators/impl/redirecting.form.authenticator!css","../../src/utils/authenticators/redirecting.form.authenticator.js","../../src/utils/authenticators/core.authenticators.js","../../src/utils/high.contrast/detector.js","../../src/models/view.state.model.js","../../src/utils/contexts/impl/csui.context.plugin.js","csui-signin.js"],"names":["csui","define","module","hbs","Handlebars","t","template","compiler","main","container","depth0","helpers","partials","data","helper","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","escapeExpression","hooks","helperMissing","nullContext","name","hash","loc","start","line","column","end","registerPartial","root","en-us","en","signinButtonText","signinForgotPassword","signinPlaceholderUsername","usernameAria","signinPlaceholderPassword","passwordAria","signinInvalidUsernameOrPassword","_","$","BasicAuthenticator","CredentialsAuthenticator","PageContext","Connector","ConnectorFactory","Marionette","lang","config","extend","useBasicAuthentication","ItemView","constructor","apply","this","arguments","className","triggers","click button","mousedown @ui.usernameclearer","mousedown @ui.passwordclearer","focus @ui.username","focus @ui.password","change @ui.password","change @ui.username","ui","username","password","button","passwordclearer","usernameclearer","loginerror","onRender","toggle","prop","onClickPasswordclearer","event","val","trigger","_unsetErrorStyle","hide","onClickUsernameclearer","onFocusUsername","validate","onFocusPassword","onChangeUsername","onChangePassword","templateHelpers","buttontext","copyright","signinCopyright","forgotpassword","placeholderusername","placeholderpassword","events","keyup .binf-form-control","keydown button","onKeyPress","which","toggleClass","bIsUserNameSet","length","bIsValidInput","bUserNameHasFocus","document","activeElement","is","bPasswordHasFocus","preventDefault","onClickButton","credentials","authenticator","connection","defaults","options","Authenticator","on","bind","session","successHandler","context","connector","getObject","updateAuthenticatedSession","errorHandler","error","_setErrorStyle","check","login","html","addClass","removeClass","copyrightMessage","Region","attachHtml","view","SignInView","pageTemplate","log","base","NonAttachingRegion","applicationPageUrl","LayoutView","regions","formRegion","el","body","$el","isAppleMobile","isIOSBrowser","control","listenTo","warn","statusText","console","last","info","query","location","search","substring","nextUrl","exec","decodeURIComponent","replace","indexOf","href","show","setTimeout","render","require","RequestAuthenticator","interactive","authenticate","succeeded","failed","undefined","openSignInDialog","reauthenticating","self","SignInDialog","BlockingView","dialog","suppressAll","done","args","resumeAll","errorTerminateSession","errorContinueSession","errorHttpPrefix","Url","id","getSessionReactionTime","sessionReactionTime","getSessionInactivity","sessionInactivity","isSessionExpirationEnabled","redirectEnabled","getCookieExpirationMode","cookieExpirationMode","currentDateUTC","Date","toUTCString","_getOverallExpirationTime","_ensureExpiresTime","expires","serverDate","getTime","dat2","dat","_calcExpirationStartTime","diffTime","expireDate","isNaN","expireTime","kindnessPeriod","currentDate","currentTime","_shouldDisplayExpirationWarning","isCookieExpirationEnabled","updateSessionTicket","request","isAuthenticated","settings","url","getAbsolute","toLowerCase","match","debug","clearExpirationTimer","_createExpirationTimer","startExpirationTimer","timerId","clearInterval","timer","reactionTimeSecs","doOnce","executed","curTimer","displayExpirationWarning","startWithWarningContent","startTime","setInterval","sendAuthenticatorEvent","performSessionExpired","stopExpirationWarningViewTimer","triggerMethod","_showExpirationWarningDialog","ExpirationWarningDialog","dlgOptions","userSession","expWarnDialog","createExpirationWarningDialog","showExpirationWarningDialog","always","result","redirectToTargetPage","cgiUrl","getCgiScript","targetUrl","appendQuery","doRedirect","logoutInitiated","signOut","onErrorRedirect","isSessionExpired","fail","timerRedirectId","clearTimeout","continueSession","authUrl","combine","makeAjaxCall","headers","OTCSTicket","ticket","success","response","textStatus","parseResponse","req","errMsg","errDetails","RequestErrorMessage","errResponse","statusCode","message","ModalAlert","showError","reasonStr","sender","cmdData","deferred","Deferred","routing","openAuthenticatedPage","routesWithSlashes","tokenUrl","then","queryStr","encodeURIComponent","token","logoutFct","openInNewTab","unauthenticate","unauthenticateReason","reason","resolve","reject","signInPageUrl","pathname","logoutUrl","promise","JSON","stringify","enableExpirationHandling","usedConfig","1","stack1","states","iconName","3","fn","program","inverse","dialogCloseButtonTooltip","dialogCloseButtonAria","Backbone","UserSession","CloseButton","authenticationIFrameTimeout","showCloseButtonOnError","initiateLoginSequence","reportFailedTicketRefresh","skipFailedEvent","removeIFrame","resumeBlockingView","destroy","suppressBlockingView","receiveMessage","origin","urlOrigin","source","postMessage","window","removeEventListener","waitForLogin","enableInteactiveLogin","n","getUserId","DialogView","ErrorGlobalView","handleDestroy","edialog","off","errorModel","Model","hideNavigationButtons","showCloseButton","errorCode","showLogout","errorGlobalView","model","standardHeader","fullSize","addEventListener","src","getOrigin","View","width","height","ControlView","closeButton","dialogCloseAria","click @ui.closeButton","onButtonClick","onClickClose","footerView","css","z-index","TicketAuthenticator","InteractiveCredentialsAuthenticator","RedirectingFormAuthenticator","requirejs","s","contexts","enableInteractiveAuthenticator","enabled","originalConfig","enableRedirectingFormAuthenticator","sequence","detectHighContrast","div","createElement","style","backgroundColor","borderWidth","borderStyle","borderTopColor","borderRightColor","position","left","appendChild","getComputedStyle","highContrast","removeChild","method","hcMode","documentElement","classList","load","_require","onLoad","ensureHighContrastDetection","readyState","isBuild","NamedSessionStorage","PublicLang","publicLang","constants","freeze","LAST_ROUTER","CURRENT_ROUTER","CURRENT_ROUTER_FRAGMENT","CURRENT_ROUTER_NAVIGATE_OPTIONS","CURRENT_ROUTER_SCOPE_ID","BACK_TO_TITLE","METADATA_CONTAINER","STATE","DEFAULT_STATE","SESSION_STATE","NAVIGATION_HISTORY_ARRAY","URL_PARAMS","ALLOW_WIDGET_URL_PARAMS","START_ID","BREADCRUMB","QUERY_STRING_PARAMS","counter","attributes","storage","set","_navigationHistory","values","forEach","property","value","get","isString","parse","_syncWithStorage","CONSTANTS","_setViewStateAttribute","attributeName","key","_getViewStateAttribute","object","clone","omit","_syncWithStorageIfSilentUpdate","decode","state","setViewState","getViewState","setDefaultViewState","getDefaultViewState","setSessionViewState","getSessionViewState","sessionState","silent","isArray","getCurrentRouterName","onNavigationStarted","newRouterInfo","canRestore","restore","isSameRoutingInfo","getLastHistoryEntry","_currentHistoryEntry","_restoreStatesFromHistoryEntry","pop","unset","_savePotentialHistoryEntry","routerName","router","getRouter","back_to_title","urlParam","urlParams","fragment","scopeId","navigateOptions","defaultState","getPotentialHistoryEntry","onContextFetch","_addRouterInfoToHistory","historyInfo","restoreStates","isFromHistory","default_state","session_state","historyEntry","push","shift","_copyAttributes","viewStateModel","keys","saveHistory","savedViewStateModel","_resetAttributes","restoreHistory","clean","hasRouted","router1Info","router2Info","clear","getBackToTitle","title","back","index","getLastRouterIndex","lastRouterInfo","clearHistory","clearCurrentHistoryEntry","navigationHistory","i","getIndexOfOfLastApplicationScope","getHistory","restoreRouterOfLastApplicationScope","_restoreHistoryEntryByIndex","restoreLastRouter","restoreLastFragment","restoreHistoryEntryByIndex","historyEntryInfo","restoreRouter","history","addUrlParameters","urlParameters","force","perspectiveRouting","activeRouter","hasNotNavigatedAndNotJustStarted","ContextPlugin","ViewStateModel","propagateRequestEventToViewState","clearViewState","styleLoad"],"mappings":"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","file":"csui-signin.js","sourcesContent":["\n/* START_TEMPLATE */\ncsui.define('hbs!csui/controls/signin/impl/signin',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"login-container\\\">\\r\\n  <div class=\\\"login-controls\\\">\\r\\n    <div class=\\\"branding\\\"><span role=\\\"presentation\\\" class=\\\"ot-logo\\\">&nbsp;</span></div>\\r\\n    <div class=\\\"login-error\\\" id=\\\"loginError\\\"></div>\\r\\n    <div class=\\\"login-form-wrapper\\\">\\r\\n      <form>\\r\\n        <div class=\\\"binf-form-group binf-has-feedback\\\">\\r\\n          <div class=\\\"col-md-20\\\">\\r\\n            <input id=\\\"inputUsername\\\" type=\\\"text\\\" class=\\\"binf-form-control binf-input-lg textbox hasclear\\\"\\r\\n                   placeholder=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"placeholderusername\") || (depth0 != null ? lookupProperty(depth0,\"placeholderusername\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"placeholderusername\",\"hash\":{},\"loc\":{\"start\":{\"line\":10,\"column\":32},\"end\":{\"line\":10,\"column\":55}}}) : helper)))\n    + \"\\\" aria-label=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"userNameAria\") || (depth0 != null ? lookupProperty(depth0,\"userNameAria\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"userNameAria\",\"hash\":{},\"loc\":{\"start\":{\"line\":10,\"column\":69},\"end\":{\"line\":10,\"column\":85}}}) : helper)))\n    + \"\\\">\\r\\n              <span id=\\\"usernameclearer\\\" class=\\\"clearer clear-icon binf-form-control-feedback\\\"></span>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"binf-form-group binf-has-feedback\\\">\\r\\n          <div class=\\\"col-md-20\\\">\\r\\n            <input id=\\\"inputPassword\\\" type=\\\"password\\\"\\r\\n                   class=\\\"binf-form-control binf-input-lg textbox hasclear\\\"\\r\\n                   placeholder=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"placeholderpassword\") || (depth0 != null ? lookupProperty(depth0,\"placeholderpassword\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"placeholderpassword\",\"hash\":{},\"loc\":{\"start\":{\"line\":19,\"column\":32},\"end\":{\"line\":19,\"column\":55}}}) : helper)))\n    + \"\\\" aria-label=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"passwordAria\") || (depth0 != null ? lookupProperty(depth0,\"passwordAria\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"passwordAria\",\"hash\":{},\"loc\":{\"start\":{\"line\":19,\"column\":69},\"end\":{\"line\":19,\"column\":85}}}) : helper)))\n    + \"\\\">\\r\\n              <span id=\\\"passwordclearer\\\" class=\\\"clearer clear-icon binf-form-control-feedback\\\"></span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <button id=\\\"buttonSubmit\\\" type=\\\"button\\\" class=\\\"login-btn\\\">\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"buttontext\") || (depth0 != null ? lookupProperty(depth0,\"buttontext\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"buttontext\",\"hash\":{},\"loc\":{\"start\":{\"line\":23,\"column\":66},\"end\":{\"line\":23,\"column\":80}}}) : helper)))\n    + \"</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n}});\nHandlebars.registerPartial('csui_controls_signin_impl_signin', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/controls/signin/impl/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/controls/signin/impl/nls/root/localized.strings',{\r\n  signinButtonText: \"Sign in\",\r\n  signinForgotPassword: \"Forgot password?\",\r\n  signinPlaceholderUsername: \"User name\",\r\n  usernameAria: 'Enter user name',\r\n  signinPlaceholderPassword: \"Password\",\r\n  passwordAria: 'Enter password',\r\n  signinInvalidUsernameOrPassword: \"You have entered an invalid user name or password. Please try again.\"\r\n});\r\n\n","\ncsui.define('css!csui/controls/signin/impl/css/signin',[],function(){});\n","csui.define('csui/controls/signin/signin.view',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/authenticators/basic.authenticator',\r\n  'csui/utils/authenticators/credentials.authenticator',\r\n  'csui/utils/contexts/page/page.context',\r\n  'csui/utils/connector', 'csui/utils/contexts/factories/connector',\r\n  'csui/lib/marionette', 'hbs!csui/controls/signin/impl/signin',\r\n  'i18n!csui/controls/signin/impl/nls/localized.strings',\r\n  'css!csui/controls/signin/impl/css/signin'\r\n], function (module, _, $, BasicAuthenticator, CredentialsAuthenticator,\r\n    PageContext, Connector, ConnectorFactory, Marionette, template, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    useBasicAuthentication: false\r\n  }, module.config());\r\n\r\n  var SignInView = Marionette.ItemView.extend({\r\n    constructor: function SignInView() {\r\n      Marionette.ItemView.apply(this, arguments);\r\n    },\r\n\r\n    className: 'cs-signin',\r\n\r\n    template: template,\r\n\r\n    triggers: {\r\n      'click button': 'click:button',\r\n      //'click @ui.usernameclearer': 'click:usernameclearer',\r\n      //'click @ui.passwordclearer': 'click:passwordclearer',\r\n      'mousedown @ui.usernameclearer': 'click:usernameclearer',\r\n      'mousedown @ui.passwordclearer': 'click:passwordclearer',\r\n      'focus @ui.username': 'focus:username',\r\n      'focus @ui.password': 'focus:password',\r\n      'change @ui.password': 'change:password',\r\n      'change @ui.username': 'change:username'\r\n    },\r\n\r\n    ui: {\r\n      username: '#inputUsername',\r\n      password: '#inputPassword',\r\n      button: '#buttonSubmit',\r\n      passwordclearer: '#passwordclearer',\r\n      usernameclearer: '#usernameclearer',\r\n      loginerror: '#loginError'\r\n    },\r\n\r\n    onRender: function () {\r\n      this.ui.usernameclearer.toggle(false);\r\n      this.ui.passwordclearer.toggle(false);\r\n      //if (window.navigator.userAgent.indexOf(\"MSIE\") === -1) {\r\n        this.ui.username.prop('autofocus', true);\r\n      //}\r\n    },\r\n\r\n    onClickPasswordclearer: function (event) {\r\n      this.ui.password.val('').trigger('focus');\r\n      this._unsetErrorStyle();\r\n      this.ui.passwordclearer.hide();\r\n    },\r\n\r\n    onClickUsernameclearer: function (event) {\r\n      this.ui.username.val('').trigger('focus');\r\n      this._unsetErrorStyle();\r\n      this.ui.usernameclearer.hide();\r\n    },\r\n\r\n    onFocusUsername: function () {\r\n        this.validate();\r\n    },\r\n\r\n    onFocusPassword: function () {\r\n        this.validate();\r\n    },\r\n\r\n    onChangeUsername: function () {\r\n        this.validate();\r\n    },\r\n\r\n    onChangePassword: function () {\r\n        this.validate();\r\n    },\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        buttontext: lang.signinButtonText,\r\n        copyright: lang.signinCopyright,\r\n        forgotpassword: lang.signinForgotPassword,\r\n        placeholderusername: lang.signinPlaceholderUsername,\r\n        usernameAria: lang.usernameAria,\r\n        placeholderpassword: lang.signinPlaceholderPassword,\r\n        passwordAria: lang.passwordAria\r\n      };\r\n    },\r\n\r\n    events: {\r\n      'keyup .binf-form-control': 'validate',\r\n      'keydown button': 'onKeyPress'\r\n    },\r\n\r\n    onKeyPress: function (event) {\r\n      var isButtonDisabled = this.ui.button.prop(\"disabled\");\r\n\r\n      // handle enter -> enable button\r\n      if (!isButtonDisabled && event.which === 13) {\r\n        this.ui.button.toggleClass('login-btn-enabled');\r\n      }\r\n    },\r\n\r\n    validate: function (event) {\r\n      this._unsetErrorStyle();\r\n\r\n      var bIsUserNameSet = !!this.ui.username.val().length,\r\n        bIsPasswordSet = true, //!!this.ui.password.val().length, // allow for empty pw\r\n        bIsValidInput = bIsUserNameSet && bIsPasswordSet,\r\n        bUserNameHasFocus = $(document.activeElement).is(this.ui.username),\r\n        bPasswordHasFocus = $(document.activeElement).is(this.ui.password);\r\n\r\n      // show/hide clearers\r\n      this.ui.usernameclearer.toggle(bIsUserNameSet && bUserNameHasFocus);\r\n      this.ui.passwordclearer.toggle(bIsPasswordSet && bPasswordHasFocus);\r\n\r\n      // en/disable button\r\n      this.ui.button.prop(\"disabled\", !bIsValidInput);\r\n      this.ui.button.toggleClass('login-btn-enabled', bIsValidInput);\r\n\r\n      // submit on enter\r\n      if (bIsValidInput && event && event.which === 13) {\r\n        event.preventDefault();\r\n        this.ui.button.trigger('click');\r\n      }\r\n    },\r\n\r\n    onClickButton: function () {\r\n      // disable button during login\r\n      this.ui.button.toggleClass('login-btn-enabled', false);\r\n\r\n      // Credentials always come from the form fields, while the rest\r\n      // of the connection was specified in the constructor options\r\n      var credentials = {\r\n            username: this.ui.username.val(),\r\n            password: this.ui.password.val()\r\n          },\r\n          useBasicAuthentication = config.useBasicAuthentication;\r\n\r\n      if (!this.authenticator) {\r\n        var connection = _.defaults({\r\n              credentials: credentials\r\n            }, this.options.connection),\r\n            Authenticator = useBasicAuthentication ? BasicAuthenticator :\r\n                            CredentialsAuthenticator,\r\n            authenticator = new Authenticator({\r\n              connection: connection\r\n            }).on('loggedIn', _.bind(function () {\r\n              this.ui.button.toggleClass('login-btn-enabled', true);\r\n              this.trigger('success', {\r\n                username: credentials.username,\r\n                session: connection.session\r\n              });\r\n            }, this));\r\n        this.authenticator = authenticator;\r\n      }\r\n\r\n      // authenticate\r\n      var successHandler = _.bind(function () {\r\n            // authentication succeeded -> update the shared connector used on the page\r\n            var context = new PageContext(),\r\n                connector = context.getObject(ConnectorFactory),\r\n                session = this.authenticator.connection.session;\r\n            connector.authenticator.updateAuthenticatedSession(session);\r\n          }, this),\r\n          errorHandler = _.bind(function (error, connection) {\r\n            // authentication failed -> raise event, show error\r\n            this.ui.button.toggleClass('login-btn-enabled', true);\r\n            this._setErrorStyle();\r\n            this.trigger('failure', {\r\n              username: credentials.username,\r\n              error: error\r\n            });\r\n          }, this);\r\n      if (useBasicAuthentication) {\r\n        this.authenticator.check({\r\n          credentials: credentials,\r\n        }, successHandler, errorHandler);\r\n      } else {\r\n        this.authenticator.login({\r\n          data: credentials\r\n        }, successHandler, errorHandler);\r\n      }\r\n    },\r\n\r\n    _setErrorStyle: function () {\r\n      this.ui.username.trigger('focus').trigger('select');\r\n      this.ui.password.val('');\r\n      this.ui.usernameclearer.toggle(true);\r\n      this.ui.passwordclearer.toggle(true);\r\n      this.ui.loginerror.html(lang.signinInvalidUsernameOrPassword);\r\n      // TODO Force the error message through the screenreader\r\n\r\n      this.$('.binf-form-group').addClass('binf-has-error');\r\n      this.$('.clearer').removeClass('clear-icon').addClass('error-icon');\r\n    },\r\n\r\n    _unsetErrorStyle: function () {\r\n      this.ui.loginerror.html('');\r\n      this.$('.binf-form-group').removeClass('binf-has-error');\r\n      this.$('.clearer').removeClass('error-icon').addClass('clear-icon');\r\n    }\r\n  });\r\n\r\n  return SignInView;\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/pages/signin/impl/signin.page',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div class=\\\"wrapper\\\">\\r\\n  <div id=\\\"signin\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"footer\\\">\\r\\n  <span class=\\\"login-copyright\\\"></span>\\r\\n</div>\\r\\n\";\n}});\nHandlebars.registerPartial('csui_pages_signin_impl_signin.page', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/pages/signin/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/pages/signin/impl/nls/root/lang',{\r\n  copyrightMessage: \"Copyright \\u00A9 2018 Open Text SA or Open Text ULC (in Canada). All rights reserved.\"\r\n});\r\n\n","\n","csui.define('csui/utils/non-attaching.region/non-attaching.region',['csui/lib/marionette'], function (Marionette) {\r\n  'use strict';\r\n\r\n  var NonAttachingRegion = Marionette.Region.extend({\r\n\r\n    constructor: function NonAttachingRegion(options) {\r\n      Marionette.Region.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    attachHtml: function (view) {}\r\n\r\n  });\r\n\r\n  return NonAttachingRegion;\r\n\r\n});\r\n\n","\ncsui.define('css!csui/pages/signin/impl/signin.page',[],function(){});\n","// Places the sign-in form to the page body\r\ncsui.define('csui/pages/signin/signin.page.view',['module', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/marionette',\r\n  'csui/utils/contexts/page/page.context', 'csui/utils/contexts/factories/connector',\r\n  \"csui/controls/signin/signin.view\", 'hbs!csui/pages/signin/impl/signin.page',\r\n  'i18n!csui/pages/signin/impl/nls/lang', \"csui/utils/log\", 'csui/utils/base',\r\n  'csui/utils/non-attaching.region/non-attaching.region',\r\n  'css!csui/pages/signin/impl/signin.page'\r\n], function (module, _, $, Marionette, PageContext,\r\n    ConnectorFactory, SignInView, pageTemplate, lang, log, base,\r\n    NonAttachingRegion) {\r\n\r\n  var config = _.extend({\r\n    applicationPageUrl: 'index.html'\r\n  }, module.config());\r\n\r\n  var SignInPageView = Marionette.LayoutView.extend({\r\n\r\n    template: pageTemplate,\r\n\r\n    regions: {\r\n      formRegion: '#signin'\r\n    },\r\n\r\n    ui: {\r\n      copyright: '.login-copyright'\r\n    },\r\n\r\n    constructor: function SignInPageView(options) {\r\n      options || (options = {});\r\n      options.el = document.body;\r\n\r\n      Marionette.LayoutView.prototype.constructor.call(this, options);\r\n\r\n      // Namespace for binf widgets\r\n      this.$el.addClass('binf-widgets');\r\n\r\n      // Enable styling workarounds for Safari on iPad.  We might want to\r\n      // put them to a separate CSS file loaded dynamically, instead of\r\n      // having them in the same file identified by this class, if the size\r\n      // of the workaround styles grows too much.\r\n      if (base.isAppleMobile()) {\r\n        this.$el.addClass('csui-on-ipad');\r\n      }\r\n      \r\n      if (base.isIOSBrowser()) {\r\n        this.$el.addClass('csui-on-macintosh');\r\n      }\r\n    },\r\n\r\n    onRender: function () {\r\n      var context = new PageContext(),\r\n          connector = context.getObject(ConnectorFactory),\r\n          control = new SignInView({\r\n            connection: connector.connection\r\n          });\r\n\r\n      this.listenTo(control, 'failure', function (event) {\r\n        log.warn(\"Login for user {0} failed: {1} \", event.username,\r\n            event.error.statusText) && console.warn(log.last);\r\n      });\r\n      this.listenTo(control, 'success', function (event) {\r\n        log.info(\"Login succeeded for user: \", event.username) && console.log(log.last);\r\n        // Login redirects to the nextUrl parameter or to the configured\r\n        // default application page\r\n        var query = location.search.substring(1),\r\n            nextUrl = /\\bnextUrl(?:=([^&]+))?\\b/i.exec(query),\r\n            applicationPageUrl = nextUrl && decodeURIComponent(nextUrl[1]) ||\r\n                                 this.options.applicationPageUrl ||\r\n                                 config.applicationPageUrl;\r\n        // Do not keep the nextUrl parameter in the application page URL\r\n        query = query.replace(/\\bnextUrl(?:=[^&]*)?/i, '').replace(/&$/, '');\r\n        if (query) {\r\n          applicationPageUrl += (applicationPageUrl.indexOf('?') > 0 ? '&' : '?') + query;\r\n        }\r\n        location.href = applicationPageUrl + location.hash;\r\n      });\r\n\r\n      this.formRegion.show(control);\r\n      this.ui.copyright.html(lang.copyrightMessage);\r\n\r\n      // Do not send showing events before triggering the first render event\r\n      setTimeout(_.bind(function () {\r\n        var bodyRegion = new NonAttachingRegion({el: this.el});\r\n        bodyRegion.show(this, {render: false});\r\n      }, this));\r\n    }\r\n\r\n  });\r\n\r\n  return SignInPageView;\r\n\r\n});\r\n\n","csui.define('csui/utils/authenticators/interactive.credentials.authenticator',[\r\n  'require', 'module', 'csui/lib/underscore',\r\n  'csui/utils/authenticators/request.authenticator'\r\n], function (require, module, _, RequestAuthenticator) {\r\n  'use strict';\r\n\r\n  // Warns, that the developer did not specify any authentication ticket\r\n  // or other header.  There is no interactive authentication in CS UI\r\n  // Widgets.  Integrators have to authenticate, preferably by SSO.\r\n  var InteractiveCredentialsAuthenticator = RequestAuthenticator.extend({\r\n    interactive: function() {\r\n      return true;\r\n    },\r\n\r\n    constructor: function InteractiveCredentialsAuthenticator(options) {\r\n      RequestAuthenticator.prototype.constructor.call(this, options);\r\n    },\r\n\r\n    authenticate: function (options, succeeded, failed) {\r\n      // Normalize input parameters, which are all optional.\r\n      if (typeof options === 'function') {\r\n        failed = succeeded;\r\n        succeeded = options;\r\n        options = undefined;\r\n      }\r\n\r\n      RequestAuthenticator.prototype.authenticate.call(this, options,\r\n          succeeded, _.bind(this.openSignInDialog, this, succeeded));\r\n    },\r\n\r\n    openSignInDialog: function (succeeded) {\r\n      if (this.reauthenticating) {\r\n        return;\r\n      }\r\n      var self = this;\r\n      self.reauthenticating = true;\r\n      require([\r\n        'csui/utils/impl/signin.dialog/signin.dialog', 'csui/controls/progressblocker/blocker'\r\n      ], function (SignInDialog, BlockingView) {\r\n        var dialog = new SignInDialog({\r\n          connection: self.connection\r\n        });\r\n        BlockingView.suppressAll();\r\n        dialog.show()\r\n              .done(function (args) {\r\n                self.connection.session = args.session;\r\n                self.reauthenticating = false;\r\n                BlockingView.resumeAll();\r\n                succeeded(self.connection);\r\n              });\r\n      });\r\n    }\r\n  });\r\n\r\n  return InteractiveCredentialsAuthenticator;\r\n});\r\n\n","csui.define('csui/utils/user.session/impl/nls/lang',{\r\n    // Always load the root bundle for the default locale (en-us)\r\n    \"root\": true,\r\n    // Do not load English locale bundle provided by the root bundle\r\n    \"en-us\": false,\r\n    \"en\": false\r\n  });\r\n  \n","csui.define('csui/utils/user.session/impl/nls/root/lang',{\r\n\r\n  errorTerminateSession: 'Terminating the session failed.',    \r\n  errorContinueSession: 'Continuing the session failed.',\r\n\r\n  errorHttpPrefix: 'HTTP'\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/user.session/user.session',[\r\n  'module',\r\n  'require',\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/utils/log',\r\n  'csui/utils/url',\r\n  'csui/utils/base',\r\n  'i18n!csui/utils/user.session/impl/nls/lang'\r\n  ], function (module, require, _, $, log, Url, base, lang) {\r\n    'use strict';\r\n    log = log(module.id);\r\n\r\n    var singleton = function() {\r\n      log.info(\"user.session: module.config is: \" + JSON.stringify(module.config())) && console.log(log.last);\r\n      var DEFAULT_KINDNESS_PERIOD = 30 * 1000;                // at least 30 sec kindness time needed for refresh-call with still valid ticket\r\n      var DEFAULT_COOKIE_EXPIRATION_MODE = 1;                 // last request\r\n      var DEFAULT_ENABLE_EXPIRATION_HANDLING = false;         // disabled\r\n      var DEFAULT_SESSION_INACTIVITY_TIME = 30 * 60 * 1000;\r\n      var DEFAULT_SESSION_REACTION_TIME = 3 * 60 * 1000;\r\n\r\n      var config = _.extend({\r\n            signInPageUrl: 'signin.html',       // only for development\r\n            kindnessPeriod: DEFAULT_KINDNESS_PERIOD,\r\n            cookieExpirationMode: DEFAULT_COOKIE_EXPIRATION_MODE,\r\n            enableExpirationHandling: DEFAULT_ENABLE_EXPIRATION_HANDLING    \r\n          }, module.config()),\r\n          redirectEnabled = config.enableExpirationHandling == null ? DEFAULT_ENABLE_EXPIRATION_HANDLING : config.enableExpirationHandling,\r\n          cookieExpirationMode = config.cookieExpirationMode == null ? DEFAULT_COOKIE_EXPIRATION_MODE : config.cookieExpirationMode,\r\n          sessionInactivity = config.sessionInactivity == null ? DEFAULT_SESSION_INACTIVITY_TIME : config.sessionInactivity,\r\n          sessionReactionTime = config.sessionReactionTime == null ? DEFAULT_SESSION_REACTION_TIME : config.sessionReactionTime,\r\n          kindnessPeriod = config.kindnessPeriod == null ? DEFAULT_KINDNESS_PERIOD : config.kindnessPeriod,\r\n\r\n          // CS provides 3 modes: \r\n          //     0 = never expires (no additional params available)\r\n          //     1 = expire after last request\r\n          //     2 = expire after last login\r\n          isCookieExpirationEnabled   = (cookieExpirationMode > 0);\r\n\r\n      // print the finally used config values\r\n      var usedConfig = {\r\n        enableExpirationHandling: redirectEnabled,\r\n        cookieExpirationMode: cookieExpirationMode,          \r\n        sessionInactivity: sessionInactivity,\r\n        sessionReactionTime: sessionReactionTime,\r\n        kindnessPeriod: kindnessPeriod\r\n      };\r\n      log.warn(\"user.session: used config: \" + JSON.stringify(usedConfig)) && console.warn(log.last);\r\n\r\n\r\n      var timerId;\r\n      var expWarnDialog;\r\n      var logoutInitiated = false;\r\n\r\n\r\n      function getSessionReactionTime() {\r\n        return sessionReactionTime;\r\n      }\r\n\r\n      function getSessionInactivity() {\r\n        return sessionInactivity;\r\n      }\r\n\r\n      function isSessionExpirationEnabled() {\r\n        return redirectEnabled;\r\n      }\r\n\r\n      function getCookieExpirationMode() {\r\n        return cookieExpirationMode;\r\n      }\r\n\r\n      function currentDateUTC() {\r\n        return (new Date()).toUTCString();\r\n      }\r\n\r\n      // returns the overall expiration time, used to correct wrong/missing values\r\n      function _getOverallExpirationTime() {\r\n        return getSessionInactivity() + getSessionReactionTime();\r\n      }\r\n\r\n      // Ensures that the 'expires' and 'serverDate' exists\r\n      function _ensureExpiresTime(session) {\r\n        if ( session ) {\r\n          if (!session.expires || !session.serverDate) {\r\n            var dat = new Date();\r\n            session.serverDate = dat.toUTCString();\r\n            session.expires = new Date(dat.getTime() + _getOverallExpirationTime()).toUTCString();          \r\n            log.warn(\"user.session: _ensureExpiresTime: Adding 'serverDate' and 'expires' information to session (expires: \" + session.expires + \").\") && console.warn(log.last);\r\n          } else if( new Date(session.expires).getTime() <= new Date(session.serverDate).getTime() ) {\r\n            var dat2 = new Date();\r\n            session.serverDate = dat2.toUTCString();\r\n            session.expires = new Date(dat2.getTime() + _getOverallExpirationTime()).toUTCString();\r\n            log.warn(\"user.session: _ensureExpiresTime: Provided 'serverDate' is newer or equal than 'expires' value, exceptionally replacing values (expires: \" + session.expires + \").\") && console.warn(log.last);\r\n          }\r\n        } else {\r\n          log.error(\"user.session: _ensureExpiresTime: The provided argument 'session' is undefined!\") && console.error(log.last);\r\n        }\r\n      }\r\n\r\n      // Returns the expiration start time duration for the timer in seconds.\r\n      // After the duration the ExpirationWarningDialog should be shown.\r\n      function _calcExpirationStartTime(authenticator) {\r\n        var session = authenticator.connection.session;\r\n        var diffTime = 0;\r\n\r\n        _ensureExpiresTime(session);\r\n\r\n        if ( session && session.expires !== undefined && \r\n            (typeof session.expires === \"string\") && session.expires.length > 0 ) {\r\n\r\n          var expireDate = new Date(session.expires);\r\n          if (isNaN(expireDate.getTime())) { \r\n            expireDate = new Date(new Date().getTime() + _getOverallExpirationTime());\r\n            log.info(\"user.session: _calcExpirationStartTime: Got unparseable date value for expires '\" + session.expires + \"', using fallback value '\" + expireDate.toUTCString() + \"'.\") && console.log(log.last);\r\n            session.expires = expireDate.toUTCString();\r\n          }\r\n          var expireTime = expireDate.getTime();\r\n          expireTime -= kindnessPeriod;\r\n          if (expireTime < 0) { expireTime = 0; }\r\n\r\n          var currentDate = new Date(session.serverDate);\r\n          if (isNaN(currentDate.getTime())) {\r\n            currentDate = new Date();\r\n            log.warn(\"user.session: _calcExpirationStartTime: Got unparseable date value for serverDate '\" + session.serverDate + \"', using fallback value '\" + currentDate.toUTCString() + \"'.\") && console.warn(log.last);\r\n            session.serverDate = currentDate.toUTCString();\r\n          }\r\n          var currentTime = currentDate.getTime();\r\n          log.info(\"user.session: _calcExpirationStartTime: srvDate: \" \r\n            + session.serverDate + \", expires: \" + session.expires + \" (Date: \" + currentDateUTC() + \").\") \r\n            && console.log(log.last);\r\n\r\n          if ( currentTime >= expireTime ) {\r\n            diffTime = 0;\r\n          } else {\r\n            diffTime = expireTime - currentTime;\r\n          }\r\n          diffTime /= 1000; // secs\r\n        } else {\r\n          log.error(\"user.session: _calcExpirationStartTime: The provided authenticator.connection.session has no expiration information.\") && console.error(log.last);\r\n          // if we want to allow this you can return e.g. 5 secs, within a REST-call with expiration information has to provide the start time\r\n        }\r\n        log.info(\"user.session: _calcExpirationStartTime: secs until expiration: \" + diffTime) && console.log(log.last);\r\n        return diffTime;\r\n      }\r\n\r\n      // helper if countdown of expiration warning dialog should be displayed\r\n      function _shouldDisplayExpirationWarning() {\r\n        if ( this.isSessionExpirationEnabled() === true && isCookieExpirationEnabled ) {\r\n          // == 1 for only 'expire after last request'\r\n          // > 0 for mode 1 and 2\r\n          return ( this.getCookieExpirationMode() == 1 );\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // The authenticator.connection.session contains the 'ticket', 'serverDate' and 'expires' information.\r\n      function updateSessionTicket(authenticator, request) {\r\n        if (authenticator && authenticator.isAuthenticated()) {\r\n          if (request && request.settings && request.settings.url) {\r\n            var url = new Url(request.settings.url).getAbsolute().toLowerCase(),\r\n                match = url.match(/^.*\\/(api\\/[^?]+)/);\r\n            // Only REST API request handlers can supply a fresh ticket and\r\n            // renew the expiration warning timeout. Custom handlers written\r\n            // without the RESTAPIObject are not standardized and will not be\r\n            // able to take part on the expiration warning feature.\r\n            if (match) {\r\n              var call = match[1];\r\n              log.debug(\"user.session: updateSessionTicket: Resetting expiration timer based on call '\" + call + \"'.\") && console.log(log.last);\r\n              this.clearExpirationTimer();\r\n              this._createExpirationTimer(authenticator);\r\n            }\r\n          } else {\r\n            log.debug(\"user.session: updateSessionTicket: Resetting expiration timer based on unspecified call.\") && console.log(log.last);\r\n            this.clearExpirationTimer();\r\n            this._createExpirationTimer(authenticator);\r\n          }\r\n        } else {\r\n          log.warn(\"user.session: updateSessionTicket: Authenticator has to be 'authenticated' before updating session ticket!\") && console.warn(log.last);\r\n        }\r\n      }\r\n      \r\n      function startExpirationTimer(authenticator) {\r\n        if (authenticator && authenticator.isAuthenticated()) {\r\n          log.debug(\"user.session: startExpirationTimer: Creating new expiration timer with provided authenticator...\") && console.log(log.last);\r\n          this.clearExpirationTimer();\r\n          this._createExpirationTimer(authenticator);\r\n        } else {\r\n          console.warn(\"user.session: startExpirationTimer: Unable to start expiration timer, you have to provide an (still) authenticated 'authenticator'! Verify your parameter(s) for startExpirationTimer() function.\");\r\n        }\r\n      }\r\n      \r\n      function clearExpirationTimer() {\r\n        log.debug(\"user.session: clearExpirationTimer: called...\") && console.log(log.last);\r\n        if ( timerId ) {\r\n          clearInterval(timerId);\r\n          timerId = undefined;\r\n        }\r\n      }\r\n\r\n      // doOnce is called inside this function just once, but with each invokation of this function\r\n      // it can get called once.\r\n      function _createExpirationTimer(authenticator) {\r\n        var timer = _calcExpirationStartTime(authenticator);\r\n        var self = this;\r\n        var reactionTimeSecs = this.getSessionReactionTime()/1000;\r\n        var doOnce = (function() {\r\n          var executed = false;\r\n          return function(curTimer) {\r\n              if (!executed) {\r\n                  executed = true;\r\n          log.info(\"user.session: expirationTimer: current time for expiration warning count down: \" + self.currentDateUTC()) && console.log(log.last);\r\n                  self.displayExpirationWarning(authenticator, \r\n                    { startWithWarningContent: true, startTime: curTimer });\r\n              }\r\n          };\r\n        })();\r\n\r\n        timerId = setInterval(function () {\r\n          if (--timer < reactionTimeSecs) {\r\n            log.info(\"user.session: current expiration value: \" + timer) && console.log(log.last);\r\n            if ( timer >= 0 ) {\r\n              // create dialog with separate timer, so upcoming REST-calls do not influence the timer;\r\n              // an automatic logout is initiated as soon as the timer reached 0\r\n              doOnce(timer);\r\n            } else {\r\n              self.clearExpirationTimer();\r\n              log.info(\"user.session: expirationTimer: Switching to LoggedOut dialog content due to expired session...\") && console.log(log.last);\r\n              // trigger logout event on authenticator\r\n              self.sendAuthenticatorEvent(authenticator);\r\n              // show loggedOut content\r\n              self.performSessionExpired(authenticator, false);\r\n            }\r\n          }\r\n        }, 1000);\r\n      }\r\n\r\n      function stopExpirationWarningViewTimer(dialog) {\r\n        if ( dialog ){\r\n          log.debug(\"user.session: Sending event 'clear:timer' to dialog...\") && console.log(log.last);\r\n          dialog.triggerMethod('clear:timer', 'someValue');\r\n        } else {\r\n          log.debug(\"user.session: Skipping sending event 'clear:timer' to dialog, because dialog is already destroyed.\") && console.log(log.last);\r\n        }\r\n      }\r\n\r\n      function _showExpirationWarningDialog(authenticator, options) {\r\n        var self = this;\r\n        // we use here dynamical loading to allow the expiration warning dialog\r\n        // to be in a different bundle than UserSession which gets required in authenticator\r\n        require([ 'csui/utils/expiration.warning/expiration.warning.dialog'\r\n          ], function(ExpirationWarningDialog) {\r\n            \r\n            var dlgOptions = {\r\n              userSession: self,\r\n              authenticator: authenticator,\r\n              startWithWarningContent: options.startWithWarningContent,\r\n              startTime: options.startTime,\r\n              clearExpirationTimer: function() {  // callback function to clear timer\r\n                self.clearExpirationTimer();\r\n              }\r\n            };\r\n            \r\n            expWarnDialog = ExpirationWarningDialog.createExpirationWarningDialog(dlgOptions);\r\n\r\n            ExpirationWarningDialog.showExpirationWarningDialog(expWarnDialog)          \r\n            .always(function(result) {\r\n              log.debug(\"user.session: _showExpirationWarningDialog: Expiration dialog was finished, setting internal dialog to undefined.\") && console.log(log.last);\r\n              expWarnDialog = undefined;\r\n            });        \r\n\r\n        });\r\n      }\r\n\r\n      // In case the remaining time is already lower than the sessionReactionTime when loading\r\n      // the page then this function is called with each REST-call.\r\n      // => there should be only one expiration warning dialog.\r\n      function displayExpirationWarning(authenticator, options) {\r\n        if ( expWarnDialog === undefined && this.isSessionExpirationEnabled() === true) {     // we want just one dialog\r\n          if (options && options.startWithWarningContent === true) {\r\n            if ( this._shouldDisplayExpirationWarning() ) {\r\n              return this._showExpirationWarningDialog(authenticator, options);    \r\n            }\r\n          } else {\r\n            // just loggedOut content for 2 (= after login) without countdown\r\n            if ( isCookieExpirationEnabled ) {\r\n              options = options || {};\r\n              options.startWithWarningContent = false;\r\n              return this._showExpirationWarningDialog(authenticator, options);\r\n            }\r\n          }        \r\n        }\r\n      }\r\n\r\n      function redirectToTargetPage(authenticator) {\r\n        log.debug(\"user.session: redirectToTargetPage: Called ...\") && console.log(log.last);\r\n        // At this point of time the session in authenticator is normally invalid or cleared.\r\n        var cgiUrl = new Url(authenticator.connection.url).getCgiScript();\r\n        var targetUrl = Url.appendQuery(cgiUrl, 'func=csui.redirecttotarget');\r\n\r\n        // redirect to target\r\n        location.href = targetUrl;\r\n      }\r\n\r\n      function performSessionExpired(authenticator, doRedirect) {\r\n        var self = this;\r\n        if (this.isSessionExpirationEnabled() === true) {\r\n          if (!logoutInitiated) {\r\n            logoutInitiated = true;\r\n            log.debug(\"user.session: performSessionExpired: Initiating automatic logout ...\") && console.log(log.last);\r\n            // initiate automatic logout\r\n            this.clearExpirationTimer();\r\n\r\n            if (doRedirect === true) {\r\n              // redirect without logout    \r\n              log.info(\"user.session: performSessionExpired: Session expired, performing requested redirect (Date: \" + this.currentDateUTC() + \").\") && console.log(log.last);\r\n              this.redirectToTargetPage(authenticator);\r\n            } else {\r\n              // perform signOut\r\n              log.info(\"user.session: performSessionExpired: Session expired, performing signOut (Date: \" + this.currentDateUTC() + \").\") && console.log(log.last);\r\n              this.signOut(authenticator, { onErrorRedirect: true, isSessionExpired: true })\r\n              .done(function() {\r\n                logoutInitiated = false;\r\n                log.debug(\"user.session: performSessionExpired: Automatic logout requests successfully sent.\") && console.log(log.last);\r\n              })\r\n              .fail(function() {\r\n                logoutInitiated = false;\r\n                log.info(\"user.session: performSessionExpired: Sending automatic logout requests returned error.\") && console.log(log.last);\r\n              })\r\n              .always(function() {\r\n                log.info(\"user.session: performSessionExpired: Sending automatic logout requests finished, spawning redirect timer.\") && console.log(log.last);\r\n                // the timer based on kindnessPeriod may last longer than the session is valid, \r\n                // but redirectToTargetPage() supports this\r\n                var timerRedirectId = setTimeout(function () {\r\n                  logoutInitiated = false;\r\n                  if ( timerRedirectId ) {\r\n                    clearTimeout(timerRedirectId);\r\n                    timerRedirectId = undefined;\r\n                  }\r\n                  log.info(\"user.session: performSessionExpired: Redirecting to target page...'\") && console.log(log.last);\r\n                  self.redirectToTargetPage(authenticator);\r\n                }, kindnessPeriod);\r\n              });\r\n            }\r\n\r\n            // keep dialog on page to hide content\r\n          } else {\r\n            log.debug(\"user.session: performSessionExpired: A logout is already executed.\") && console.log(log.last);\r\n          }\r\n        } else {\r\n          log.debug(\"user.session: performSessionExpired: Skipping automatic logout due to disabled expiration handling.\") && console.log(log.last);\r\n          this.clearExpirationTimer();\r\n        }\r\n      }\r\n\r\n      function continueSession(authenticator) {\r\n        var self = this;\r\n        var cgiUrl = new Url(authenticator.connection.url).getCgiScript();\r\n\r\n        // performs 'GET auth' call\r\n        var authUrl = Url.combine(cgiUrl, 'api/v1/auth');\r\n        authenticator.makeAjaxCall({\r\n          url: authUrl,\r\n          headers: { \r\n              OTCSTicket: authenticator.connection.session.ticket\r\n            },\r\n          success: function (response, textStatus, request) {\r\n              log.debug('Receiving request response from {0}.', authUrl) && console.log(log.last);\r\n              response = authenticator.parseResponse(response, request);\r\n              // update session and call indirectly updateSessionTicket\r\n              authenticator.updateAuthenticatedSession(response, request);\r\n            }\r\n        })\r\n        .done(function() {\r\n          // the modal alert dialog handles destroy itself when you press a button\r\n          // self._dialogViewDestroy(dialog);\r\n          self.startExpirationTimer(authenticator);\r\n          log.info(\"expiration.warning.dialog: Processed continue session (Date: \" + self.currentDateUTC() + \").\") && console.log(log.last);\r\n        })\r\n        .fail(function(req) {            \r\n          self.sendAuthenticatorEvent(authenticator, 'failedTicketRefresh');          \r\n          // the error parameter is the request and the error-messages are in base.MessageHelper\r\n          var errMsg = lang.errorContinueSession;\r\n          var errDetails = new base.RequestErrorMessage(req);\r\n          var errResponse = lang.errorHttpPrefix + ' ' + errDetails.statusCode + (errDetails.message?': ':'') + errDetails.message;\r\n          log.error(\"expiration.warning.dialog: Processing continue session failed with an error (Date: \" + self.currentDateUTC() + \"). Error: \" + errResponse + \".\") && console.error(log.last);\r\n          require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlert) {\r\n            ModalAlert\r\n              .showError(errMsg + '\\n' + errResponse)\r\n              .always(function () {\r\n                self.redirectToTargetPage(authenticator);\r\n              });\r\n          });             \r\n        });      \r\n      }\r\n\r\n      function sendAuthenticatorEvent(authenticator, reasonStr) {\r\n        if (authenticator) {\r\n          authenticator.trigger(reasonStr || 'loggedOut', { sender: authenticator });\r\n        }\r\n      }\r\n\r\n      // The cmdData can contain optional flags:\r\n      //   unauthenticateReason - user specified unauthenticateReason reason\r\n      //   onErrorRedirect - if true, on error directly a redirect is performed \r\n      //                     otherwise a modal-error is displayed\r\n      //   isSessionExpired - flag, if signOut-reason is an expired session (e.g. automatic logout)\r\n      function signOut(authenticator, cmdData) {\r\n        var deferred = $.Deferred();\r\n        var self = this;\r\n        cmdData || (cmdData = {});\r\n\r\n        if (authenticator && authenticator.isAuthenticated()) {\r\n          var cgiUrl = new Url(authenticator.connection.url).getCgiScript();\r\n\r\n          require(['csui/utils/routing',\r\n                   'csui/utils/open.authenticated.page'\r\n            ], function (routing, openAuthenticatedPage) {\r\n\r\n            // Development HTML pages do not use the OTDS login page\r\n            if (routing.routesWithSlashes()) {\r\n\r\n              if (self.isSessionExpirationEnabled() === true) {\r\n\r\n                if (authenticator && authenticator.makeAjaxCall && typeof authenticator.makeAjaxCall === 'function') {\r\n                  // Invalidate the authenticated session, get the secure request token\r\n                  // for the classic logout page and perform the logout by navigating there.\r\n                  // Since csui.DoLogout is a ClassicUI call you have to provide a cookie.\r\n\r\n                  // get secure request token\r\n                  var tokenUrl = Url.combine(cgiUrl, 'api/v1/auth/logouttoken');\r\n                  authenticator.makeAjaxCall({\r\n                    url: tokenUrl,\r\n                    headers: {\r\n                      OTCSTicket: authenticator.connection.session.ticket\r\n                    },\r\n                    success: function (response, textStatus, request) {\r\n                      log.debug('Receiving request response from {0}.', tokenUrl) && console.log(log.last);\r\n                      response = authenticator.parseResponse(response, request);\r\n                      // update session and call indirectly updateSessionTicket\r\n                      authenticator.updateAuthenticatedSession(response, request);\r\n                    }\r\n                  }).then(function (response) {\r\n                    // perform csui.DoLogout\r\n                    var queryStr = 'func=csui.dologout&secureRequestToken=' + encodeURIComponent(response.token);\r\n                    if (cmdData.isSessionExpired === true) {\r\n                      // inform OTDS about expired session\r\n                      queryStr += '&authcontext=sessionexpired';\r\n                    }\r\n                    var logoutFct = Url.appendQuery(cgiUrl, queryStr);\r\n                    openAuthenticatedPage(authenticator.connection, logoutFct, {\r\n                      openInNewTab: false\r\n                    }).always(function() {\r\n                      authenticator.unauthenticate(cmdData.unauthenticateReason || {reason: 'logged-out'});\r\n                      log.debug(\"user.session: signOut: The logout request was sent to server (Date: \" + self.currentDateUTC() + \").\") && console.log(log.last);\r\n                      deferred.resolve();\r\n                    });\r\n                  }, function(req) {\r\n                    // the error parameter is the request and the error-messages are in base.MessageHelper\r\n                    var errMsg = lang.errorTerminateSession;\r\n                    var errDetails = new base.RequestErrorMessage(req);\r\n                    var errResponse = lang.errorHttpPrefix + ' ' + errDetails.statusCode + (errDetails.message?': ':'') + errDetails.message;\r\n                    if (cmdData.onErrorRedirect === true) {\r\n                      authenticator.unauthenticate(cmdData.unauthenticateReason || {reason: 'logged-out'});\r\n                      log.info(\"user.session: signOut: Terminate session was not successful, redirecting ... (Date: \" + self.currentDateUTC() + \"). Error: \" + errResponse + \".\") && console.error(log.last);\r\n                      self.redirectToTargetPage(authenticator);\r\n                    } else {\r\n                      log.error(\"user.session: signOut: Terminate session failed with an error (Date: \" + self.currentDateUTC() + \"). Error: \" + errResponse + \".\") && console.error(log.last);\r\n                      require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlert) {\r\n                        ModalAlert\r\n                          .showError(errMsg + '\\n' + errResponse)\r\n                          .always(function () {\r\n                            authenticator.unauthenticate(cmdData.unauthenticateReason || {reason: 'logged-out'});\r\n                            // redirect without logout    \r\n                            self.redirectToTargetPage(authenticator);\r\n                          });                        \r\n                      });\r\n                    }\r\n                    deferred.reject(req);     \r\n                  });\r\n                } else {\r\n                  // we have no makeAjaxCall, so perform just redirect to target page\r\n                  authenticator.unauthenticate(cmdData.unauthenticateReason || {reason: 'logged-out'});\r\n                  log.debug(\"user.session: signOut: makeAjaxCall is not available, so performing redirect to target page (Date: \" + self.currentDateUTC() + \").\") && console.log(log.last);\r\n                  self.redirectToTargetPage(authenticator);\r\n                  deferred.resolve();\r\n                }\r\n\r\n              } else {\r\n                // no session expiration warning enabled\r\n                // let the authenticators do their work, do not unauthenticate since it clears the session\r\n\r\n                log.debug(\"user.session: signOut: Session expiration handling is disabled, skipping logout (Date: \" + self.currentDateUTC() + \").\") && console.log(log.last);\r\n                deferred.resolve();\r\n              }\r\n\r\n            } else {\r\n              \r\n              // This is used on the development pages.\r\n              // Invalidate the authenticated session and navigate to the login page.\r\n              authenticator.unauthenticate(cmdData.unauthenticateReason || {reason: 'logged-out'});\r\n              var signInPageUrl = config.signInPageUrl,\r\n                  query = location.search;\r\n              query += query ? '&' : '?';\r\n              query += 'nextUrl=' + encodeURIComponent(location.pathname);\r\n              var logoutUrl = signInPageUrl + query + location.hash;\r\n              log.debug(\"user.session: signOut: Performed unauthenticate with redirect to development signIn page.\") && console.log(log.last);\r\n              location.href = logoutUrl;\r\n\r\n              deferred.resolve();\r\n            }\r\n          });   // require\r\n\r\n        } else {\r\n          // not authenticated\r\n          log.info(\"user.session: signOut: Authenticator is not 'authenticated' anymore, just returning success.\") && console.log(log.last);\r\n          deferred.resolve();\r\n        }\r\n\r\n        return deferred.promise();\r\n      }    \r\n\r\n\r\n\r\n      return {\r\n        // this can be used by everyone and specifies the authentication expiration\r\n        // configuration\r\n        getSessionReactionTime: getSessionReactionTime,\r\n        getSessionInactivity: getSessionInactivity,\r\n        isSessionExpirationEnabled: isSessionExpirationEnabled,\r\n        getCookieExpirationMode: getCookieExpirationMode,\r\n        currentDateUTC: currentDateUTC,\r\n\r\n        // these are helpers which can be used\r\n        signOut: signOut,\r\n        continueSession: continueSession,\r\n        redirectToTargetPage: redirectToTargetPage,\r\n\r\n        // these internal functions are needed by the dialog and views,\r\n        // you should avoid to call these functions directly\r\n        updateSessionTicket: updateSessionTicket,\r\n        startExpirationTimer: startExpirationTimer,\r\n        displayExpirationWarning: displayExpirationWarning,\r\n        performSessionExpired: performSessionExpired,      \r\n        clearExpirationTimer: clearExpirationTimer,\r\n        stopExpirationWarningViewTimer: stopExpirationWarningViewTimer,      \r\n        sendAuthenticatorEvent: sendAuthenticatorEvent,    \r\n\r\n        // private functions\r\n        _createExpirationTimer: _createExpirationTimer,\r\n        _shouldDisplayExpirationWarning: _shouldDisplayExpirationWarning,\r\n        _showExpirationWarningDialog: _showExpirationWarningDialog\r\n      };\r\n    };\r\n\r\n    return singleton();\r\n\r\n  });\r\n  \n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/utils/authenticators/impl/redirecting.form.authenticator',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"1\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"        \"\n    + ((stack1 = (lookupProperty(helpers,\"icon-v2\")||(depth0 && lookupProperty(depth0,\"icon-v2\"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"icon-v2\",\"hash\":{\"on\":(depth0 != null ? lookupProperty(depth0,\"on\") : depth0),\"states\":\"true\",\"iconName\":(depth0 != null ? lookupProperty(depth0,\"iconName\") : depth0)},\"loc\":{\"start\":{\"line\":4,\"column\":8},\"end\":{\"line\":4,\"column\":59}}})) != null ? stack1 : \"\")\n    + \"        \\r\\n\";\n},\"3\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"        <div class=\\\"icon circular \"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"iconRight\") || (depth0 != null ? lookupProperty(depth0,\"iconRight\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"iconRight\",\"hash\":{},\"loc\":{\"start\":{\"line\":6,\"column\":34},\"end\":{\"line\":6,\"column\":47}}}) : helper)))\n    + \"\\\"></div>\\r\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<button class=\\\"csui-signin-close csui-with-iframe\\\" title=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"dialogCloseButtonTooltip\") || (depth0 != null ? lookupProperty(depth0,\"dialogCloseButtonTooltip\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"dialogCloseButtonTooltip\",\"hash\":{},\"loc\":{\"start\":{\"line\":1,\"column\":58},\"end\":{\"line\":1,\"column\":86}}}) : helper)))\n    + \"\\\"\\r\\n    aria-label=\\\"\"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"dialogCloseAria\") || (depth0 != null ? lookupProperty(depth0,\"dialogCloseAria\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"dialogCloseAria\",\"hash\":{},\"loc\":{\"start\":{\"line\":2,\"column\":16},\"end\":{\"line\":2,\"column\":35}}}) : helper)))\n    + \"\\\">    \\r\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"iconName\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.program(3, data, 0),\"loc\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":7,\"column\":11}}})) != null ? stack1 : \"\")\n    + \"</button>\\r\\n\";\n}});\nHandlebars.registerPartial('csui_utils_authenticators_impl_redirecting.form.authenticator', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/utils/authenticators/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/authenticators/impl/nls/root/lang',{\r\n\r\n  dialogCloseButtonTooltip: 'Close',\r\n  dialogCloseButtonAria: 'Close sign in dialog'\r\n\r\n});\r\n\n","\ncsui.define('css!csui/utils/authenticators/impl/redirecting.form.authenticator',[],function(){});\n","csui.define('csui/utils/authenticators/redirecting.form.authenticator',[\r\n  'require', 'module', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/lib/jquery', 'csui/utils/log',\r\n  'csui/utils/authenticators/request.authenticator',\r\n  'csui/utils/user.session/user.session',\r\n  'hbs!csui/utils/authenticators/impl/redirecting.form.authenticator',\r\n  'i18n!csui/utils/authenticators/impl/nls/lang',\r\n  'css!csui/utils/authenticators/impl/redirecting.form.authenticator'\r\n], function (require, module, _, Backbone, $, log, RequestAuthenticator, \r\n             UserSession, CloseButton, lang) {\r\n  'use strict';\r\n  log = log(module.id);\r\n\r\n  var config                      = module.config(),\r\n      authenticationIFrameTimeout = config.authenticationIFrameTimeout || 3000,\r\n      showCloseButtonOnError      = config.showCloseButtonOnError;\r\n\r\n  // Warns, that the developer did not specify any authentication ticket\r\n  // or other header.  There is no interactive authentication in CS UI\r\n  // Widgets.  Integrators have to authenticate, preferably by SSO.\r\n  var RedirectingFormAuthenticator = RequestAuthenticator.extend({\r\n    interactive: function() {      \r\n      return false;      \r\n    },\r\n\r\n    constructor: function RedirectingFormAuthenticator(options) {\r\n      RequestAuthenticator.prototype.constructor.call(this, options);\r\n    },\r\n\r\n    authenticate: function (options, succeeded, failed) {\r\n      // Normalize input parameters, which are all optional.\r\n      if (typeof options === 'function') {\r\n        failed = succeeded;\r\n        succeeded = options;\r\n        options = undefined;\r\n      }\r\n      RequestAuthenticator.prototype.authenticate.call(this, options,\r\n          succeeded, _.bind(this.initiateLoginSequence, this, succeeded, failed));\r\n    },\r\n\r\n    \r\n    updateAuthenticatedSession: function (response, request) {\r\n      // call the parent implementation\r\n      RequestAuthenticator.prototype.updateAuthenticatedSession.call(this, response, request);\r\n\r\n      if (this.connection.session && this.connection.session.ticket) {        \r\n        // inform user session about updated ticket; in rare cases UserSession can be undefined \r\n        // if something went wrong in UserSession\r\n        if ( UserSession ) {\r\n          UserSession.updateSessionTicket(this, (request ? request : response));\r\n        } else {\r\n          log.info(\"redirecting.form.authenticator: updateAuthenticatedSession: UserSession is undefined, unable to updateSessionTicket in UserSession.\") && console.log(log.last);\r\n        }\r\n      } else {\r\n        log.error(\"redirecting.form.authenticator: updateAuthenticatedSession: Cannot get 'ticket' from just updated session, invalid request!\") && console.error(log.last);\r\n      }\r\n\r\n    },\r\n\r\n    unauthenticate: function (options) {\r\n      var authen = this.isAuthenticated();\r\n      if (authen && options && options.reason \r\n        && (options.reason === 'logged-out' || options.reason === 'expired') ) {\r\n          if (UserSession && UserSession.isSessionExpirationEnabled() === true) {\r\n            // Avoid popup of expiration warning dialog e.g. during ticket refresh.\r\n            // Clear expiration timer.\r\n            log.debug(\"redirecting.form.authenticator: unauthenticate: clearing expiration timer based on logged-out or expired.\") && console.log(log.last);\r\n            UserSession.clearExpirationTimer();\r\n          }\r\n      }\r\n      // the parent clears the session and sends 'loggedOut'\r\n      return RequestAuthenticator.prototype.unauthenticate.apply(this, arguments);\r\n    },\r\n\r\n\r\n    initiateLoginSequence: function (succeeded, failed) {\r\n      // this method is trying to reauthenticate with OTDS in the background\r\n      var self = this;\r\n      var timer, dialog, urlOrigin;\r\n      var skipFailedEvent = false;\r\n\r\n      // the initiateLoginSequence is only called if the authenticate failed;\r\n      if ( !isTruthy( self.getUserId() ) ) {\r\n        showErrorMessage();\r\n      } else {\r\n        window.addEventListener('message', receiveMessage, false);\r\n        createIFrame()\r\n          .done(waitForLogin);\r\n      }\r\n\r\n      function showErrorMessage() {\r\n        require([\r\n          'csui/controls/dialog/dialog.view',\r\n          'csui/widgets/error.global/error.global.view'\r\n        ], function (DialogView, ErrorGlobalView) {\r\n          // wrong credentials is a programmer error and we must not translate this message\r\n          var errorModel    = new Backbone.Model({\r\n              message:  'The userId is undefined, the preceding authentication failed. Please initialize CSUI in a correct way.',\r\n              hideNavigationButtons: true,\r\n              showCloseButton: showCloseButtonOnError,\r\n              errorCode: 401,\r\n              showLogout: false\r\n            }),\r\n            errorGlobalView = new ErrorGlobalView({\r\n              model: errorModel\r\n            });\r\n\r\n            var edialog = new DialogView({\r\n              standardHeader: false,\r\n              view: errorGlobalView,\r\n              fullSize: true\r\n            });\r\n  \r\n            edialog\r\n              .on('destroy', handleDestroy)\r\n              .on('childview:destroy', handleDestroy)\r\n              .show();\r\n\r\n            function handleDestroy() {\r\n              reportFailedTicketRefresh();\r\n              edialog.off('destroy', handleDestroy);\r\n              edialog.off('childview:destroy', handleDestroy);\r\n              // destroy the dialog and not just the view (but without receiving events again)\r\n              edialog.destroy();\r\n            }\r\n\r\n          // get rid of rotating wheel\r\n          suppressBlockingView();\r\n        });\r\n      }      \r\n\r\n      function reportFailedTicketRefresh()  {\r\n        if (skipFailedEvent === false && !self.isAuthenticated()) {\r\n          log.warn(\"redirecting.form.authenticator: Sending 'failedTicketRefresh' event...\") && console.log(log.last);\r\n          self.trigger('failedTicketRefresh', { sender: self });\r\n        }        \r\n      }\r\n\r\n      function createIFrame() {\r\n        var deferred = $.Deferred();\r\n        require([\r\n          'csui/lib/marionette', \r\n          'csui/controls/dialog/dialog.view',\r\n          'csui/utils/url'          \r\n        ], function (Marionette, DialogView, Url) {\r\n          var src = Url.appendQuery(new Url(self.connection.url).getCgiScript(), 'func=csui.ticket');\r\n          src = Url.appendQuery(src, 'userid=' + self.getUserId());\r\n          urlOrigin = new Url(self.connection.url).getOrigin();\r\n\r\n          var view = new Marionette.View({\r\n            el: $('<iframe>', {\r\n              width: '100%',\r\n              height: '100%',\r\n              src: src\r\n            })\r\n          });\r\n\r\n          var ControlView = Marionette.ItemView.extend({\r\n\r\n            ui: {\r\n              closeButton: 'button.csui-signin-close'\r\n            },\r\n\r\n            templateHelpers: function () {\r\n              return {\r\n                dialogCloseButtonTooltip: lang.dialogCloseButtonTooltip,\r\n                dialogCloseAria: lang.dialogCloseButtonAria,\r\n                iconName: 'csui_action_close_white32',\r\n                on: 'false'\r\n              };\r\n            },\r\n\r\n            template: CloseButton,\r\n\r\n            events: {\r\n              'click @ui.closeButton': 'onButtonClick'\r\n            },\r\n\r\n            onButtonClick: function(event) {\r\n              // use the matching implementation for destruction of the dialog from the parent\r\n              dialog.onClickClose(event);\r\n            }\r\n\r\n          });\r\n\r\n          dialog = new DialogView({\r\n            className: 'csui-signin-close',\r\n            standardHeader: false,\r\n            view: view,\r\n            fullSize: true,\r\n            footerView: new ControlView()\r\n          });\r\n          view.render();\r\n\r\n          //\r\n          // Comment out code below because on a real server with SSO, it always fails.\r\n          // The iframe load event is triggered 3 times:\r\n          // - The first 2 times have undefined location. Thus, error is triggered.\r\n          // - Only the third time has href pointing to the csui.ticket URL.\r\n          //\r\n          //view.el.addEventListener('load', function () {\r\n          //  try {\r\n          //    // If we cannot access the URL, the iframe was blocked by the content security policy.\r\n          //    var href = !!this.contentWindow.location.href;\r\n          //  } catch (error) {\r\n          //    reportError(error);\r\n          //  }\r\n          //});\r\n          dialog\r\n            .on('destroy', function () {\r\n              reportFailedTicketRefresh();\r\n            })\r\n            .show({render: false});\r\n\r\n          dialog.$el.css({'z-index': '1061'});  // higher than popover\r\n          dialog.$el.addClass('binf-hidden');\r\n          deferred.resolve();\r\n        }, deferred.reject);\r\n        return deferred.promise();\r\n      }\r\n\r\n      function removeIFrame() {\r\n        resumeBlockingView();\r\n        // prevent failedTicketRefresh event from being triggered by destroy\r\n        skipFailedEvent = true;\r\n        dialog && dialog.destroy();\r\n        skipFailedEvent = false;\r\n      }\r\n\r\n      function suppressBlockingView() {\r\n        require(['csui/controls/progressblocker/blocker'],\r\n            function (BlockingView) {\r\n              BlockingView.suppressAll();\r\n            });\r\n      }\r\n\r\n      function resumeBlockingView() {\r\n        require(['csui/controls/progressblocker/blocker'],\r\n            function (BlockingView) {\r\n              BlockingView.resumeAll();\r\n            });\r\n      }\r\n\r\n      function receiveMessage(event) {\r\n        // the IFrame was created with urlOrigin, so check that we communicate only with our IFrame\r\n        if (event.origin !== urlOrigin) {\r\n          log.warn('redirecting.form.authenticator: event.origin and urlOrigin differ, aborting!') && console.warn(log.last);\r\n          return;\r\n        }\r\n        if (event.data === 'csuiTicketLoaded') {\r\n          log.info('redirecting.form.authenticator: Sending getOrigin back to child.') && console.log(log.last);\r\n          event.source.postMessage('getOrigin', '*');\r\n        } else {\r\n          if (event.data.ticket) {\r\n            log.debug('redirecting.form.authenticator: Redirecting Form Authenticator received new ticket.') && console.log(log.last);\r\n            window.removeEventListener('message', receiveMessage, false);\r\n            timer && clearTimeout(timer);\r\n            timer = undefined;\r\n            removeIFrame();\r\n            var session = self.connection.session || (self.connection.session = {});\r\n            session.ticket = event.data.ticket;\r\n            session.expires = event.data.expires;\r\n            session.serverDate = event.data.serverDate;\r\n            succeeded && succeeded(self.connection);\r\n            // if this ticket refresh will be used with expiration warning, inform here UserSession\r\n            if (UserSession) {\r\n              UserSession.updateSessionTicket(self);\r\n            }\r\n            // signal loggedIn (= ticket refreshed), like normal login-page does\r\n            log.info(\"redirecting.form.authenticator: Sending 'loggedIn' event...\") && console.log(log.last);\r\n            self.trigger('loggedIn', {\r\n              sender: self,\r\n              connection: self.connection\r\n            });            \r\n          }\r\n        }\r\n      }\r\n\r\n      function waitForLogin() {\r\n        // If the server doesn't post a message after a few seconds, show the OTDS page.\r\n        timer = setTimeout(enableInteactiveLogin, authenticationIFrameTimeout);\r\n      }\r\n\r\n      function enableInteactiveLogin() {\r\n        // Show modal dialog containing the iFrame that shows the OTDS login page.\r\n        if (dialog) {\r\n          dialog.$el.removeClass('binf-hidden');\r\n          suppressBlockingView();\r\n        }\r\n      }\r\n\r\n      function reportError(error) {\r\n        require(['csui/dialogs/modal.alert/modal.alert'\r\n        ], function (ModalAlert) {\r\n          ModalAlert.showError(error.message);\r\n        });\r\n        failed(error, self.connection);\r\n      }\r\n\r\n      // avoid undefined, null, 0 and ''\r\n      function isTruthy(n) {\r\n        return !!n;\r\n      }\r\n\r\n    }\r\n  });\r\n\r\n  return RedirectingFormAuthenticator;\r\n});\r\n\n","csui.define('csui/utils/authenticators/core.authenticators',[\r\n  'module', 'csui/lib/underscore',\r\n  'csui/utils/authenticators/ticket.authenticator',\r\n  'csui/utils/authenticators/interactive.credentials.authenticator',\r\n  'csui/utils/authenticators/redirecting.form.authenticator'\r\n], function (module, _, TicketAuthenticator,\r\n    InteractiveCredentialsAuthenticator, RedirectingFormAuthenticator) {\r\n  'use strict';\r\n\r\n  var config = window.csui.requirejs.s.contexts._.config\r\n      .config['csui/utils/interactiveauthenticator'] || {},\r\n      enableInteractiveAuthenticator = config.enabled,\r\n      originalConfig = module.config();\r\n  config = _.extend({\r\n    // If there is no ticket, show a modal dialog with a login form and\r\n    // allow the user to enter credentials and get a ticket.\r\n    enableInteractiveAuthenticator: originalConfig.enableRedirectingFormAuthenticator === undefined &&\r\n                                    enableInteractiveAuthenticator !== false,\r\n    // If there is no ticket, try to get it using a request in a hidden\r\n    // iframe. Using response redirection it either posts back a ticket\r\n    // automatically, or it renders a login form and waits. The iframe\r\n    // will be shown to the user, who will log in manually and let the\r\n    // redirection to the pahe posting back tyhe ticket continue.\r\n    enableRedirectingFormAuthenticator: false\r\n  }, originalConfig);\r\n\r\n  // If no custom authentication means are detected, authentication\r\n  // will assume the native ticket. There are two authenticators, which\r\n  // can be enabled to prompt for login, or fetch the ticket\r\n  // automatically, is it is missing.\r\n  var FallbackAuthenticator =\r\n    config.enableInteractiveAuthenticator ?\r\n      InteractiveCredentialsAuthenticator :\r\n      config.enableRedirectingFormAuthenticator ?\r\n        RedirectingFormAuthenticator :\r\n        TicketAuthenticator;\r\n\r\n  return [\r\n    {\r\n      sequence: 500,\r\n      authenticator: FallbackAuthenticator\r\n    }\r\n  ];\r\n});\r\n\n","/**\r\n * This class will be removed as soon as SVF-1020 got resolved.\r\n * For the respective document, please do follow smart/utils/high.contrast/doc/detector.md file.\r\n */\r\n\r\n\r\ncsui.define('csui/utils/high.contrast/detector',[],function () {\r\n  'use strict';\r\n\r\n  var highContrast;\r\n\r\n  function detectHighContrast() {\r\n    // See https://github.com/hanshillen/HCMDS\r\n    var testBackgroundColor = \"rgb(127, 127, 127)\";\r\n    var lightBackgroundColor = \"rgb(255, 255, 255)\";\r\n    // var darkBackgroundColor = \"rgb(0, 0, 0)\";\r\n    var div = document.createElement('div');\r\n    var style = div.style;\r\n    style.backgroundColor = testBackgroundColor;\r\n    style.borderWidth = '1px';\r\n    style.borderStyle = 'solid';\r\n    style.borderTopColor = '#ff0000';\r\n    style.borderRightColor = '#00ffff';\r\n    style.position = 'absolute';\r\n    style.left = '-9999px';\r\n    style.width = div.style.height = '2px';\r\n    var body = document.body;\r\n    body.appendChild(div);\r\n    style = window.getComputedStyle(div);\r\n    var backgroundColor = style.backgroundColor;\r\n    if (backgroundColor === testBackgroundColor) {\r\n      highContrast = 0;\r\n    } else {\r\n      if (backgroundColor === lightBackgroundColor) {\r\n        highContrast = 2; // dark on light\r\n      } else {\r\n        highContrast = 1; // light on dark\r\n      }\r\n    }\r\n\r\n    //    highContrast = style.borderTopColor === style.borderRightColor;\r\n    body.removeChild(div);\r\n    var method = highContrast ? 'add' : 'remove';\r\n    var hcMode = 'csui-highcontrast-light-on-dark';\r\n    if (highContrast === 2) {\r\n      hcMode = 'csui-highcontrast-dark-on-light';\r\n    }\r\n    document.documentElement.classList[method]('csui-highcontrast');\r\n    document.documentElement.classList[method](hcMode);\r\n  }\r\n\r\n  return {\r\n    load: function (name, _require, onLoad, config) {\r\n      function ensureHighContrastDetection() {\r\n        if (document.readyState === 'complete') {\r\n          if (highContrast === undefined) {\r\n            detectHighContrast();\r\n          }\r\n          onLoad(highContrast);\r\n          return true;\r\n        }\r\n      }\r\n\r\n      if (config.isBuild) {\r\n        onLoad(null);\r\n      } else {\r\n        if (!ensureHighContrastDetection()) {\r\n          document.addEventListener('readystatechange',\r\n              ensureHighContrastDetection);\r\n        }\r\n      }\r\n    }\r\n  };\r\n});\r\n\n","csui.define('csui/models/view.state.model',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/utils/log', 'csui/utils/url', 'csui/utils/namedsessionstorage'\r\n\r\n], function (module, _, Backbone, log, Url, NamedSessionStorage) {\r\n  'use strict';\r\n\r\n  var PublicLang;\r\n  require(['i18n!csui/pages/start/nls/lang'\r\n  ], function (publicLang) {\r\n    PublicLang = publicLang;\r\n  }.bind(this));\r\n\r\n  var MAX_ROUTERS_INFO_STACK = 50;\r\n\r\n  var constants = Object.freeze({\r\n    LAST_ROUTER: 'lastRouter',\r\n    CURRENT_ROUTER: 'currentRouter',\r\n    CURRENT_ROUTER_FRAGMENT: 'currentRouterFragment',\r\n    CURRENT_ROUTER_NAVIGATE_OPTIONS: 'currentRouterNavigateOptions',\r\n    CURRENT_ROUTER_SCOPE_ID: 'currentRouterScopeId',\r\n    BACK_TO_TITLE: 'back_to_title',\r\n    METADATA_CONTAINER: 'metadata_container',\r\n    STATE: 'state',\r\n    DEFAULT_STATE: 'default_state',\r\n    SESSION_STATE: 'session_state',\r\n    NAVIGATION_HISTORY_ARRAY: 'navigationHistoryArray',\r\n    URL_PARAMS: 'urlParams',\r\n    ALLOW_WIDGET_URL_PARAMS: 'allowWidgetUrlParams',\r\n    START_ID: 'start_id',\r\n    BREADCRUMB: 'breadcrumb',\r\n    QUERY_STRING_PARAMS: 'query_string_params'\r\n  });\r\n\r\n  var counter = 0;\r\n\r\n  /*var noExpanding = /\\bno_expand\\b(?:=([^&]*)?)?/i.exec(location.search);\r\n  noExpanding = noExpanding && noExpanding[1] !== 'false';*/\r\n    \r\n  // The view state model stores variables in the state attribute. Those variables are used to build\r\n  // the url parameters. In this sense the url is the long term storage.\r\n  // The session session_state contains variables that are stored in the browser session storage.\r\n  var ViewStateModel = Backbone.Model.extend({\r\n\r\n    constructor: function ViewStateModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n      if (counter === 0) {\r\n        this.storage = new NamedSessionStorage(module.id);\r\n      } else {\r\n        this.storage = new NamedSessionStorage(module.id + '_' + counter);\r\n        this.storage.destroy();\r\n      }\r\n\r\n      counter++;\r\n\r\n      this.set('enabled', attributes ? attributes.enabled : false);\r\n\r\n      this._navigationHistory = [];\r\n\r\n      _.values(constants).forEach(function (property) {\r\n        var value = attributes ? attributes[property] : this.storage.get(property);\r\n        if (value && (property.indexOf(\"Array\") !== -1 || property.indexOf(\"urlParams\") !== -1)) {\r\n          value = _.isString(value) ? JSON.parse(value) : value;\r\n        }\r\n        this.listenTo(this, 'change:' + property, this._syncWithStorage.bind(this, property));\r\n        this.set(property, value);\r\n      }.bind(this));\r\n\r\n      this._navigationHistory = this.get(constants.NAVIGATION_HISTORY_ARRAY) || [];\r\n    },\r\n\r\n    CONSTANTS: constants,\r\n\r\n    _setViewStateAttribute: function (attributeName, key, value, options) {\r\n      options || (options = {});\r\n      if (this._getViewStateAttribute(attributeName, key) === value) {\r\n        return;\r\n      }\r\n\r\n      var object = this.get(attributeName) || {};\r\n      object = _.clone(object);\r\n      if (value === undefined || value === '') {\r\n        delete object[key];\r\n      } else {\r\n        object[key] = value;\r\n      }\r\n      options = _.omit(options, 'encode');\r\n      this.set(attributeName, object, options);\r\n      this._syncWithStorageIfSilentUpdate(attributeName, options);\r\n      return true;\r\n    },\r\n\r\n    _getViewStateAttribute: function(attributeName, key, decode) {\r\n      var state = this.get(attributeName);\r\n      if (state) {\r\n        return state[key];\r\n      }\r\n    },\r\n\r\n    // All the view state elements are added to the url. These variables are stored in the url.\r\n    setViewState: function (key, value, options) {\r\n      if (key === 'state') {\r\n        this.set(constants.STATE, value, options);\r\n        this._syncWithStorageIfSilentUpdate(constants.STATE, options);\r\n      } else {\r\n        return this._setViewStateAttribute(constants.STATE, key, value, options);\r\n      }\r\n    },\r\n\r\n    getViewState: function (key, decode) {\r\n      return this._getViewStateAttribute(constants.STATE, key, decode);\r\n    },\r\n\r\n    // Default states are not serialized in the url even if they exist in the 'state' object.\r\n    setDefaultViewState: function(key, value, options) {\r\n      return this._setViewStateAttribute(constants.DEFAULT_STATE, key, value, options);\r\n    },\r\n\r\n    getDefaultViewState: function(key, decode) {\r\n      return this._getViewStateAttribute(constants.DEFAULT_STATE, key, decode);\r\n    },\r\n\r\n    // All variables in the session view state are stored in the session local storage.\r\n    // They are used to initialize the widgets view\r\n    setSessionViewState: function (key, value, options) {\r\n      options || (options = {});\r\n      if (this.getSessionViewState(key) === value) {\r\n        return;\r\n      }\r\n      var sessionState = this.get(constants.SESSION_STATE) || {};\r\n      sessionState = _.clone(sessionState);\r\n      sessionState[key] = value;\r\n      this.set(constants.SESSION_STATE, sessionState, options);\r\n      this._syncWithStorageIfSilentUpdate(constants.SESSION_STATE, options);\r\n      return true;\r\n    },\r\n\r\n    getSessionViewState: function (key) {\r\n      var state = this.get(constants.SESSION_STATE);\r\n      if (state) {\r\n        return state[key];\r\n      }\r\n    },\r\n\r\n    _syncWithStorageIfSilentUpdate: function(property, options) {\r\n      if (options && options.silent) {\r\n        this._syncWithStorage(property);\r\n      }\r\n    },\r\n\r\n    _syncWithStorage: function (property) {\r\n      var value = this.get(property);\r\n      if (_.isArray(value)) {\r\n        value = JSON.stringify(value);\r\n      }\r\n      this.storage.set(property, value);\r\n    },\r\n\r\n    getCurrentRouterName: function() {\r\n      return this.get(this.CONSTANTS.CURRENT_ROUTER);\r\n    },\r\n\r\n    onNavigationStarted: function (newRouterInfo, canRestore) {\r\n\r\n      this.trigger('before:navigate');\r\n\r\n      this.set('navigated', true);\r\n\r\n      var restore = this.isSameRoutingInfo(newRouterInfo, this.getLastHistoryEntry());\r\n      if (!canRestore) {\r\n        restore = false;\r\n      }\r\n      // we need to do this for backward compatibility. This is for any code that uses this\r\n      // value from previous implementation.\r\n      this.set(this.CONSTANTS.LAST_ROUTER, this.get(this.CONSTANTS.CURRENT_ROUTER));\r\n\r\n      if (restore) {\r\n        this._currentHistoryEntry = undefined;\r\n        this._restoreStatesFromHistoryEntry(this._navigationHistory.pop());\r\n        this.unset(constants.NAVIGATION_HISTORY_ARRAY, {silent: true});\r\n        this.set(constants.NAVIGATION_HISTORY_ARRAY, this._navigationHistory);\r\n      } else {\r\n        this._savePotentialHistoryEntry();\r\n      }\r\n    },\r\n\r\n    _savePotentialHistoryEntry: function () {\r\n      var storage = this.storage;\r\n      var routerName = storage.get(constants.CURRENT_ROUTER);\r\n      if (routerName) {\r\n\r\n        var state = this.get('saved_viewstate');\r\n        if (!state) {\r\n          state = this.storage.get(constants.STATE);\r\n        }\r\n\r\n        // some context plugins could change the urlParams in the viewState\r\n        // make sure we take the urlParams from the router and not the viewStateModel.\r\n        var router = this.get('PerspectiveRouting').getRouter(routerName);\r\n        \r\n        this._currentHistoryEntry = {\r\n          'router': routerName,\r\n          'back_to_title': this.storage.get(constants.BACK_TO_TITLE),\r\n          'urlParam': router && router.urlParams,\r\n          'fragment': this.storage.get(constants.CURRENT_ROUTER_FRAGMENT),\r\n          'scopeId': this.storage.get(constants.CURRENT_ROUTER_SCOPE_ID),\r\n          'navigateOptions': this.storage.get(constants.CURRENT_ROUTER_NAVIGATE_OPTIONS),\r\n          'state': state,\r\n          'sessionState': this.storage.get(constants.SESSION_STATE),\r\n          'defaultState': this.storage.get(constants.DEFAULT_STATE)\r\n        };\r\n      }\r\n    },\r\n\r\n    getPotentialHistoryEntry: function () {\r\n      return this._currentHistoryEntry;\r\n    },\r\n\r\n    onContextFetch: function () {\r\n      this.trigger('navigate', this._currentHistoryEntry);\r\n      this.unset(\"isFromHistory\", {silent: true});\r\n      this._currentHistoryEntry && this._addRouterInfoToHistory(this._currentHistoryEntry);\r\n    },\r\n\r\n    _restoreStatesFromHistoryEntry : function(historyInfo) {\r\n      if (historyInfo) {\r\n        var restoreStates = {\r\n          'isFromHistory': true,\r\n          'state': historyInfo.state,\r\n          'default_state': historyInfo.defaultState,\r\n          'session_state': historyInfo.sessionState\r\n        };\r\n        this.set(restoreStates, {silent: true});\r\n        ['state', 'default_state', 'session_state'].forEach(function (property) {\r\n          this._syncWithStorage(property);\r\n        }.bind(this));\r\n      }\r\n    },\r\n\r\n    _addRouterInfoToHistory: function (historyEntry) {\r\n\r\n      // do not add duplicate entries\r\n      if (this._navigationHistory.length > 0 &&\r\n            JSON.stringify(historyEntry) === JSON.stringify(this._navigationHistory[this._navigationHistory.length - 1])) {\r\n        return;\r\n      }\r\n\r\n      this._navigationHistory.push(historyEntry);\r\n\r\n      if (this._navigationHistory.length > MAX_ROUTERS_INFO_STACK) {\r\n        this._navigationHistory.shift();\r\n      }\r\n\r\n      this.unset(constants.NAVIGATION_HISTORY_ARRAY, {silent: true});\r\n      this.set(constants.NAVIGATION_HISTORY_ARRAY, this._navigationHistory);\r\n    },\r\n\r\n    _copyAttributes: function (viewStateModel) {\r\n      Object.keys(viewStateModel.attributes).forEach(function (attributeName) {\r\n        this.unset(attributeName);\r\n        this.set(attributeName, viewStateModel.get(attributeName));\r\n      }.bind(this));\r\n    },\r\n\r\n    saveHistory: function() {\r\n      this.savedViewStateModel = this.clone();\r\n      this.savedViewStateModel._copyAttributes(this);\r\n      this._resetAttributes();\r\n    },\r\n\r\n    _resetAttributes: function() {\r\n\r\n      this._navigationHistory = [];\r\n\r\n      this.unset(constants.NAVIGATION_HISTORY_ARRAY, {silent: true});\r\n      this.set(constants.NAVIGATION_HISTORY_ARRAY, this._navigationHistory);\r\n\r\n      this.set(constants.LAST_ROUTER, undefined);\r\n      this.set(constants.CURRENT_ROUTER, undefined);\r\n      this.set(constants.CURRENT_ROUTER_FRAGMENT, undefined);\r\n      this.set(constants.CURRENT_ROUTER_NAVIGATE_OPTIONS, undefined);\r\n      this.set(constants.CURRENT_ROUTER_SCOPE_ID, undefined);\r\n      this.set(constants.BACK_TO_TITLE, undefined);\r\n      this.set(constants.METADATA_CONTAINER, undefined);\r\n      this.set(constants.STATE, undefined);\r\n      this.set(constants.DEFAULT_STATE, undefined);\r\n      this.set(constants.SESSION_STATE, undefined);\r\n      this.set(constants.URL_PARAMS, undefined);\r\n      this.set(constants.ALLOW_WIDGET_URL_PARAMS, undefined);\r\n      this.set(constants.SESSION_STATE, undefined);\r\n      this.set(constants.START_ID, undefined);\r\n      this.set(constants.BREADCRUMB, undefined);\r\n    },\r\n\r\n    restoreHistory: function () {\r\n      if (this.savedViewStateModel) {\r\n        this._copyAttributes(this.savedViewStateModel);\r\n        this.savedViewStateModel.clean();\r\n        this.savedViewStateModel = undefined;\r\n\r\n        var value = this.storage.get(constants.NAVIGATION_HISTORY_ARRAY);\r\n        if (value) {\r\n          value = JSON.parse(value);\r\n          this._navigationHistory = value;\r\n        }\r\n      }\r\n    },\r\n\r\n    hasRouted: function () {\r\n      return this._navigationHistory.length > 0;\r\n    },\r\n\r\n    isSameRoutingInfo: function (router1Info, router2Info) {\r\n      return router1Info && router2Info &&\r\n             router1Info.router === router2Info.router &&\r\n             router1Info.fragment === router2Info.fragment;\r\n    },\r\n\r\n    /**\r\n     * Warning: Cleaning of state will eventually clears the internals session storage. \r\n     * Thus, restoring the state (perhaps on page refresh or navigating between pages) will not be possible after this operation.\r\n     */\r\n    clean: function() {\r\n      // Clear model state\r\n      this.clear(); \r\n      // Clear session storage\r\n      this.storage.destroy();\r\n    },\r\n\r\n    getBackToTitle: function () {\r\n\r\n      var title = PublicLang.back;\r\n      if (this._currentHistoryEntry) {\r\n        title = this._currentHistoryEntry.back_to_title || title;\r\n      } else {\r\n        var index = this.getLastRouterIndex();\r\n        if (index !== -1) {\r\n          var lastRouterInfo = this._navigationHistory[index];\r\n          if (lastRouterInfo) {\r\n            title = lastRouterInfo.back_to_title || title;\r\n          }\r\n        }\r\n      }\r\n\r\n      return title;\r\n    },\r\n\r\n    clearHistory: function() {\r\n      this._navigationHistory = [];\r\n      this.unset(constants.NAVIGATION_HISTORY_ARRAY, {silent: true});\r\n      this.set(constants.NAVIGATION_HISTORY_ARRAY, this._navigationHistory);\r\n    },\r\n\r\n    clearCurrentHistoryEntry: function () {\r\n      this._currentHistoryEntry = undefined;\r\n    },\r\n\r\n    getLastRouterIndex: function () {\r\n      var index = -1,\r\n          navigationHistory = this._navigationHistory;\r\n      if (navigationHistory && navigationHistory.length > 0) {\r\n        for (var i = navigationHistory.length - 1; i >= 0; i--) {\r\n          if (navigationHistory[i].router !== this.get(constants.CURRENT_ROUTER)) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return index;\r\n    },\r\n\r\n    getIndexOfOfLastApplicationScope: function () {\r\n      var index = -1,\r\n          navigationHistory = this._navigationHistory;\r\n      if (navigationHistory && navigationHistory.length > 0) {\r\n        for (var i = navigationHistory.length - 1; i >= 0; i--) {\r\n          if (navigationHistory[i].scopeId !== this.get(constants.CURRENT_ROUTER_SCOPE_ID)) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return index;\r\n    },\r\n\r\n    getLastHistoryEntry: function () {\r\n      return this._navigationHistory && this._navigationHistory.length > 0 &&\r\n             this._navigationHistory[this._navigationHistory.length - 1];\r\n    },\r\n\r\n    getHistory: function () {\r\n      return this._navigationHistory;\r\n    },\r\n\r\n    restoreRouterOfLastApplicationScope: function () {\r\n      this._restoreHistoryEntryByIndex(this.getIndexOfOfLastApplicationScope());\r\n    },\r\n\r\n    restoreLastRouter: function () {\r\n      this._restoreHistoryEntryByIndex(this.getLastRouterIndex());\r\n    },\r\n\r\n    restoreLastFragment: function () {\r\n      this._restoreHistoryEntryByIndex(this._navigationHistory.length - 1);\r\n    },\r\n\r\n    restoreHistoryEntryByIndex: function(index) {\r\n      return this._restoreHistoryEntryByIndex(index);\r\n    },\r\n\r\n    _restoreHistoryEntryByIndex: function (index) {\r\n      if (index !== -1 && index < this._navigationHistory.length) {\r\n        this._navigationHistory.length = index + 1;\r\n        var historyEntryInfo = this.getLastHistoryEntry();\r\n        this._restoreStatesFromHistoryEntry(historyEntryInfo);\r\n        this.get('PerspectiveRouting').restoreRouter(historyEntryInfo);\r\n      } else {\r\n        // Just go back if no history. It should not happen really.\r\n        window.history.back();\r\n      }\r\n    },\r\n\r\n    addUrlParameters: function (urlParameters, context, replace, force) {\r\n      if (!force && !this.get(this.CONSTANTS.ALLOW_WIDGET_URL_PARAMS)) {\r\n        return;\r\n      }\r\n      var perspectiveRouting = this.get('PerspectiveRouting');\r\n      // The activeRouterInstance gets inserted in the viewStateModel\r\n      // once the new router is activated and before the routing happens\r\n      // But the new router from that time on will start listening to the viewState change.\r\n      var activeRouter = this.get(\"activeRouterInstance\");\r\n      var routerName = activeRouter && activeRouter.name;\r\n      routerName = routerName || this.get(constants.CURRENT_ROUTER);\r\n      return perspectiveRouting &&\r\n                   perspectiveRouting.addUrlParameters(routerName, urlParameters, replace);\r\n    },\r\n\r\n    clear: function () {\r\n      this.storage.destroy();\r\n      // init also all variables, just incase someone wants to use this viewStateModel instance again.\r\n      // see SAPSSF-7778\r\n      this._navigationHistory = [];\r\n      this._currentHistoryEntry = undefined;\r\n      Backbone.Model.prototype.clear.call(this, {silent: true});\r\n    },\r\n\r\n    hasNotNavigatedAndNotJustStarted:function() {\r\n    }\r\n\r\n  }, {\r\n    CONSTANTS: constants,\r\n    clean: function() {\r\n      var storage = new NamedSessionStorage(module.id);\r\n      storage.destroy();\r\n    }\r\n  });\r\n\r\n  return ViewStateModel;\r\n});\r\n\n","csui.define('csui/utils/contexts/impl/csui.context.plugin',[\r\n  'csui/utils/contexts/context.plugin', 'csui/models/view.state.model'\r\n], function (ContextPlugin, ViewStateModel) {\r\n  'use strict';\r\n\r\n  var CsuiContextPlugin = ContextPlugin.extend({\r\n    constructor: function CsuiContextPlugin(options) {\r\n      ContextPlugin.call(this, options);\r\n\r\n      var context = this.context;\r\n      context.viewStateModel = new ViewStateModel();\r\n      context.listenTo(context, 'request', propagateRequestEventToViewState.bind(this))\r\n             .listenTo(context, 'destroy', clearViewState.bind(this));\r\n    }\r\n  });\r\n\r\n  function propagateRequestEventToViewState() {\r\n    this.context.viewStateModel.onContextFetch();\r\n  }\r\n\r\n  function clearViewState() {\r\n    this.context.viewStateModel.clear();\r\n  }\r\n\r\n  return CsuiContextPlugin;\r\n});\r\n\n","csui.define('bundles/csui-signin',[\r\n  // Pages\r\n  'csui/pages/signin/signin.page.view',\r\n\r\n  // Utilities\r\n  'csui/utils/authenticators/core.authenticators',\r\n  'csui/utils/high.contrast/detector',\r\n\r\n  // Contexts\r\n  'csui/utils/contexts/impl/csui.context.plugin'\r\n], {});\r\n\r\ncsui.require(['require', 'css'], function (require, css) {\r\n  css.styleLoad(require, 'csui/bundles/csui-signin', true);\r\n});\r\n\n"]}