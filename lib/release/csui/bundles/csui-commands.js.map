{"version":3,"sources":["../../src/utils/command.error.js","../../src/utils/commands/nls/localized.strings.js","../../src/utils/commands/nls/root/localized.strings.js","../../src/utils/commands/nls/localized.strings!i18n","../../src/utils/commands/versions/nls/localized.strings.js","../../src/utils/commands/versions/nls/root/localized.strings.js","../../src/utils/commands/versions/nls/localized.strings!i18n","../../src/utils/commandhelper.js","../../src/models/command.js","../../src/utils/commands/back.to.last.fragment.js","../../src/integration/folderbrowser/commands/nls/localized.strings.js","../../src/integration/folderbrowser/commands/go.to.node.history.js","../../src/integration/folderbrowser/commands/nls/root/localized.strings.js","../../src/integration/folderbrowser/commands/nls/localized.strings!i18n","../../src/integration/folderbrowser/commands/open.full.page.container.js","../../src/integration/folderbrowser2/commands/nls/localized.strings.js","../../src/integration/folderbrowser2/commands/nls/root/localized.strings.js","../../src/integration/folderbrowser2/commands/nls/localized.strings!i18n","../../src/integration/folderbrowser2/commands/open.full.page.container.js","../../src/models/commands.js","../../src/utils/commands!csui-ext","../../src/utils/commands.js","../../src/dialogs/file.open/impl/file.open!hbs","../../src/dialogs/file.open/file.open.dialog.js","../../src/utils/commands/add/add.mixin.js","../../src/utils/commands/add.categories.js","../../src/utils/commands/compound.document/compound.document.util.js","../../src/utils/commands/add.js","../../src/utils/commands/add.item.metadata.js","../../src/utils/commands/add.version.js","../../src/utils/commands/open.node.perspective.js","../../src/utils/commands/browse.js","../../src/utils/commands/collection/nls/lang.js","../../src/utils/commands/collection/nls/root/lang.js","../../src/utils/commands/collection/nls/lang!i18n","../../src/utils/commands/collection/collect.items.js","../../src/utils/commands/multiple.items.js","../../src/utils/commands/confirmable.js","../../src/utils/commands/collection/remove.collected.items.js","../../src/utils/commands/copy.move.js","../../src/utils/commands/copy.js","../../src/utils/routing.js","../../src/utils/node.links/node.links!csui-ext","../../src/utils/node.links/node.links.js","../../src/utils/commands/copy.link.js","../../src/models/perspective/perspective.model.js","../../src/utils/commands/create.perspective.js","../../src/utils/commands/node.js","../../src/utils/commands/delete.js","../../src/utils/commands/delete/delete.self.handler.js","../../src/utils/commands/preview.plugins/preview.plugins!csui-ext","../../src/utils/commands/preview.plugins/preview.plugins.js","../../src/utils/commands/doc.preview.js","../../src/utils/commands/download.js","../../src/utils/commands/open.base.js","../../src/utils/commands/open.document/delegates/open.document.delegates!csui-ext","../../src/utils/commands/open.document/delegates/open.document.delegates.js","../../src/utils/commands/open.document/open.document.js","../../src/utils/commands/zipanddownload.js","../../src/utils/commands/open.classic.page.js","../../src/utils/commands/edit.js","../../src/utils/commands/editactivex.js","../../src/utils/commands/editofficeonline.js","../../src/models/perspective/server.adaptor.mixin.js","../../src/models/perspective/perspective.template.model.js","../../src/utils/commands/edit.perspective.js","../../src/utils/commands/editwebdav.js","../../src/utils/commands/nls/lang.js","../../src/utils/commands/nls/root/lang.js","../../src/utils/commands/nls/lang!i18n","../../src/utils/commands/email.link.js","../../src/utils/commands/execute.saved.query.js","../../src/utils/commands/execute.search.form.query.js","../../src/utils/commands/favorite.add.js","../../src/utils/commands/favorite.remove.js","../../src/utils/commands/inlineedit.js","../../src/utils/commands/move!csui-ext","../../src/utils/commands/move.js","../../src/utils/commands/navigate.js","../../src/utils/commands/open.plugins/open.plugins!csui-ext","../../src/utils/commands/open.plugins/open.plugins.js","../../src/utils/commands/open.js","../../src/utils/commands/open.discussion.js","../../src/utils/commands/open.milestone.js","../../src/utils/commands/open.channel.js","../../src/utils/commands/open.news.js","../../src/utils/commands/open.poll.js","../../src/utils/commands/open.prospector.js","../../src/utils/commands/open.specific.classic.page.js","../../src/utils/commands/open.specific.node.perspective.js","../../src/utils/commands/open.task.js","../../src/utils/commands/open.taskgroup.js","../../src/utils/commands/open.tasklist.js","../../src/utils/commands/open.topic.js","../../src/utils/commands/permissions.js","../../src/utils/commands/properties.js","../../src/utils/commands/rename.js","../../src/utils/commands/rename.favorite.js","../../src/utils/commands/reserve.js","../../src/utils/commands/compound.document/compound.document.js","../../src/utils/commands/compound.document/create.revision.js","../../src/utils/commands/compound.document/create.release.js","../../src/utils/commands/compound.document/reorganize.js","../../src/utils/commands/compound.document/lock.js","../../src/utils/commands/unreserve.js","../../src/utils/commands/compound.document/unlock.js","../../src/utils/commands/compound.document/view.releases.js","../../src/utils/commands/compound.document/properties.js","../../src/utils/commands/compound.document/releases.commands!csui-ext","../../src/utils/commands/compound.document/releases.commands.js","../../src/utils/commands/run.livereport.js","../../src/utils/commands/sign.out.js","../../src/utils/commands/switch.to.classic.js","../../src/utils/commands/user.profile.js","../../src/utils/commands/versions/delete.js","../../src/utils/commands/versions/download.js","../../src/utils/commands/versions/open.js","../../src/utils/commands/versions/properties.js","../../src/utils/commands/versions/promote.version.js","../../src/utils/commands/versions/doc.version.preview.js","../../src/utils/commands/versions/open.version/delegates/open.version.delegates!csui-ext","../../src/utils/commands/versions/open.version/delegates/open.version.delegates.js","../../src/utils/commands/versions/open.version/open.version.delegate.js","../../src/utils/commands/versions/open.version.perspective.js","../../src/utils/commands/versions!csui-ext","../../src/utils/commands/versions.js","../../src/utils/commands/filter.js","../../src/utils/accessibility.js","../../src/utils/commands/description.toggle.js","../../src/utils/commands/thumbnail.toggle.js","../../src/utils/commands/save.filter.js","../../src/utils/commands/save.query.js","../../src/utils/commands/update.query.js","../../src/utils/commands/maximize.widget.view.js","../../src/utils/commands/restore.widget.size.js","../../src/utils/commands/permissions/apply.permission.js","../../src/utils/commands/permissions/permission.util.js","../../src/utils/commands/permissions/edit.permission.js","../../src/utils/commands/permissions/change.owner.permission.js","../../src/utils/commands/permissions/delete.permission.js","../../src/utils/commands/permissions/add.user.group.js","../../src/utils/commands/permissions/add.owner.group.js","../../src/utils/commands/permissions/restore.public.access.js","../../src/utils/commands/personalize.page.js","../../src/utils/commands/version.settings.js","../../src/controls/treebrowse/navigation.tree!csui-ext","../../src/controls/treebrowse/navigation.tree.js","../../src/utils/commands/tree.browse.js","../../src/utils/commands/content.server.administration.js","../../src/utils/commands/about.box.js","../../src/utils/commands/nls/root/localized.strings!i18n","../../src/utils/commands/restructure.command.js","../../src/temporary/cop/commands/open.blog.js","../../src/temporary/cop/commands/open.faq.js","../../src/temporary/cop/commands/open.forum.js","../../src/temporary/cop/commands/open.wiki.js","../../src/temporary/cop/commands/open.mailstore.js","../../src/utils/commands/open.document/csui.open.document.delegates.js","../../src/utils/commands/versions/open.version/csui.open.version.delegates.js","../../src/utils/commands/goto.location!csui-ext","../../src/utils/commands/goto.location.js","../../src/utils/commands/collection/collect.js","csui-commands.js"],"names":["csui","define","module","$","_","Backbone","log","base","CommandError","arg1","arg2","applyArg2","isString","this","errorDetails","Model","node","isObject","requestError","requestMessage","RequestErrorMessage","message","Error","stack","statusCode","call","name","prototype","Object","create","root","en-us","en","ShortcutPickerTitle","CommandNameAddItemMetadata","CommandNameAddVersion","AddVersionNotAllowed","CommandTitleCopy","CommandNameCopy","CommandVerbCopy","DialogTitleSingleCopy","DialogTitleCopy","SomeFilesNotCopiedSuccessfully","CopyingNodes","CopyingNode","CopyPageLeavingWarning","CopyingOneItem","CopyItems","CopySomeItems","CopyItemsNoneMessage","CopyOneItemSuccessMessage","CopySomeItemsSuccessMessage","CopyManyItemsSuccessMessage","CopyOneItemFailMessage","CopyManyItemsOneFailMessage","CopySomeItemsFailMessage","CopyManyItemsFailMessage","CopySomeItemsFailMessage2","CopyManyItemsFailMessage2","CopyingLocationLabel","CopiedLocationLabel","CopyNotAllowed","DeleteCommandConfirmDialogTitle","DeleteButtonLabel","DeleteCommandConfirmDialogHtml","DeleteCommandConfirmDialogSingleMessage","DeleteCommandConfirmDialogMultipleMessage","CommandTitleDelete","CommandNameDelete","CommandVerbDelete","DeletePageLeavingWarning","DeleteItemFailed","DeleteItems","DeletingOneItem","DeletingSomeItems","DeleteItemsNoneMessage","DeleteOneItemSuccessMessage","DeleteSomeItemsSuccessMessage","DeleteManyItemsSuccessMessage","DeleteOneItemFailMessage","DeleteManyItemsOneFailMessage","DeleteSomeItemsFailMessage","DeleteManyItemsFailMessage","DeleteSomeItemsFailMessage2","DeleteManyItemsFailMessage2","deletingLocationLabel","deletedLocationLabel","DeleteNotAllowed","ApplyingManyItemsSuccessMessage","ApplyingOneItemFailMessage","ApplyingManyItemsFailMessage2","CommandNameDownload","CommandVerbDownload","CommandNameZipDownload","CommandVerbZipDownload","VerifyZipAndDownloadPrefetch","ExtractingZipAndDownload","CompressingZipAndDownload","CleanUpZipAndDownload","PreFlightDialogBtnContinue","DownloadDialogBtnDownload","DialogBtnCancel","InvalidArchiveCharacters","InvalidArchiveName","TheArchiveNameCannotBeEmpty","TheArchiveNameMaxLength","CommandTitleMove","CommandNameMove","CommandNameVerbMove","DialogTitleSingleMove","DialogTitleMove","SomeFilesNotMovedSuccessfully","MovePageLeavingWarning","MovingNodes","MovingNode","MovingOneItem","MovingItems","MovingSomeItems","MoveItemsNoneMessage","MoveOneItemSuccessMessage","MoveSomeItemsSuccessMessage","MoveManyItemsSuccessMessage","MoveManyItemsOneFailMessage","MoveOneItemFailMessage","MoveSomeItemsFailMessage","MoveManyItemsFailMessage","MoveSomeItemsFailMessage2","MoveManyItemsFailMessage2","MovingLocationLabel","MovedLocationLabel","MoveNotAllowed","CommandNamePaste","CommandNameReserve","CommandVerbReserve","ReservePageLeavingWarning","ReserveItemsNoneMessage","ReserveOneItemSuccessMessage","ReserveSomeItemsSuccessMessage","ReserveManyItemsSuccessMessage","ReserveOneItemFailMessage","ReserveSomeItemsFailMessage","ReserveManyItemsFailMessage","CommandNameFavorite","CommandVerbFavorite","CommandDoneVerbFavorite","CommandRemovedVerbFavorite","updateFavoriteFailTitle","updateFavoriteFailMessage","CommandDescriptionToggle","CommandHideDescription","CommandShowDescription","CommandNameEmailLink","CommandVerbEmailLink","EmailLinkSubject","EmailLinkDesktop","EmailAppleLinkFormat","EmailLinkCommandFailedWithTooMuchItemsErrorMessage","SignOutCommandName","SwitchToClassicCommandName","ContentServerAdministrationCommandName","CommandNameUnreserve","CommandVerbUnreserve","UnreservePageLeavingWarning","UnreserveItemsNoneMessage","UnreserveOneItemSuccessMessage","UnreserveSomeItemsSuccessMessage","UnreserveManyItemsSuccessMessage","UnreserveOneItemFailMessage","UnreserveSomeItemsFailMessage","UnreserveManyItemsFailMessage","UserProfileCommandName","CommandTitleUpload","UploadNotAllowed","CommandVerbRename","CommandNameSaveFilter","CommandVerbSaveFilter","DialogTitleSaveFilter","SaveFilterCommandSuccessfully","NoEditUrl","CommandNameCopyLink","CommandVerbCopyLink","CopyLinkSuccessMessage","CopyLinkFailMessage","DeletePermissionCommandRemoveOwner","DeletePermissionCommandRemoveGroup","DeletePermissionCommandRemovePublicAccess","DeletePermissionCommandRemoveOther","DeletePermissionCommandConfirmDialogTitle","DeletePermissionCommandConfirmDialogSingleMessage","DeletePermissionCommandConfirmDialogPublicAccessMessage","DeletePermissionCommandSuccessMessage","DeletePermissionCommandSuccessMessageWithCount","DeletePermissionCommandFailMessage","publicAccess","RestorePublicAccessSuccessMessage","RestorePublicAccessSuccessMessageWithCount","undefinedCollection","EditPermissionCommandFailMessage","Owner","CommandNameAddOwnerOrOwnerGroup","AddOwnerOrGroup","AddOwner","AddOwnerGroup","CommandNameAddUserorGroup","CommandNameRestorePublicAccess","AddButtonLabel","AddOwnerOrGroupDialogTitle","AddOwnerDialogTitle","AddOwnerGroupDialogTitle","ChangeOwnerPermissionCommand","ChangeOwnerGroupPermissionCommand","AddUserOrGroupSuccess","AddUserOrGroupFailure","AddUserOrGroupSuccessWithCount","formatForNone","formatForOne","formatForTwo","formatForFive","AppliedPermissions","AppliedPermissionsOneSuccess","AppliedPermissionsOnlySuccess","AppliedPermissionsOneFailure","AppliedPermissionsOnlyFailure","AppliedPermissionsSuccessAndFailure","CommandSuccessfullySingular","CommandFailedSingular","CommandSuccessfullyPlural","CommandFailedPlural","CommandFailedPartial","NoConnectivity","GoToOffline","viewTypeUnsupported","MobileIOS","DesktopAndroid","Close","addButton","otheruser","addDocument","allUsersAndGroups","addUsersAndGroups","addGroups","allGroups","cancelButtonLabel","applyButtonLabel","ThumbnailTitle","ListViewTitle","DensityLabel","error","EditPerspective","editPerspectiveErrorMessage","editPageDialogMessage","editPageButton","personalizePageButton","editPageCancelButton","editPageTitle","CreatePerspective","searchButtonMessage","personalizePage","BackButtonToolItem","MissingNodeId","revision","currentRevision","newRevision","revisionName","createRevisionHeaderTitle","submitButton","cancelButton","revisionSuccessMsg","GotoLocationLinkLabel","release","currentRelease","newRelease","releaseName","createReleaseHeaderTitle","releaseSuccessMsg","noneLabel","CommandNameViewReleases","compoundDocumentHeaderTitle","Reorganize","ReorganizeSuccessMsg","brandTitle","CommandNameSaveQuery","CommandVerbSaveQuery","DialogTitleSaveQuery","SaveQueryCommandSuccessfully","saveButtonLabel","CommandNameUpdateQuery","CommandVerbUpdateQuery","UpdateQueryCommandSuccessfully","CommandNameRestructure","RestructureDialogTitle","Restructure","confirmationRestructure","errorRestructure","files","CommandTitleRestructure","DialogTitleSingleRestructure","DialogTitleRestructure","RestructuringNodes","RestructuringNode","RestructureNotAllowed","CommandNameVersionDelete","CommandVerbVersionDelete","VersionDeleteCommandConfirmDialogSingleMessage","VersionDeleteCommandConfirmDialogMultipleMessage","DeleteVersionPageLeavingWarning","DeleteVersions","DeletingSomeVersions","DeletingOneVersion","DeleteVersionItemsNoneMessage","DeleteVersionOneItemSuccessMessage","DeleteVersionSomeItemsSuccessMessage","DeleteVersionManyItemsSuccessMessage","DeleteVersionOneItemFailMessage","DeleteVersionSomeItemsFailMessage","DeleteVersionManyItemsFailMessage","DeleteVersionSomeItemsFailMessage2","DeleteVersionManyItemsFailMessage2","CommandNamePromoteVersion","CommandVerbPromoteVersion","MessageVersionPromoted","DialogPromoteVersion","MissingVersionInfo","require","lang","versionsLang","VersionModel","config","defaultLang","clone","CommandHelper","extend","Events","checkNodeTypesAndRights","nodes","types","rights","isArray","container","contains","length","all","get","right","checkNodeTypes","attributes","isBackbone","type","checkNodeRights","getJustOneNode","status","at","getAtLeastOneNode","Collection","collection","model","updateNode","attributesToUpdate","save","wait","patch","silent","then","fetch","force","commandError","Deferred","reject","handleExecutionResults","promise","options","handleExecutionResultsDeferred","modulePromise","GlobalMessage","resolve","whenAll","always","parameters","results","okCnt","failedCnt","each","result","undefined","cancelled","suppressSuccessMessage","showMessage","str","sformat","command","offlineSupport","suppressFailMessage","customError","_getErrorMessageFromResponse","err","errorMessage","responseJSON","errorHtml","MessageHelper","toHtml","reset","text","refreshModelAttributesFromServer","tempNode","set","original","showOfflineMessage","yesCallBck","noCallBack","self","modalAlert","showInformation","buttons","YesNo","answer","window","location","href","trigger","idAttribute","constructor","apply","arguments","getCommandKey","commandKey","Array","enabled","scope","_getNodesByScope","checkTypes","openable","checkOpenability","signatures","checkPermittedActions","isNonPromoted","checkFn","_getNonPromotedCheckFunctionsForSignatures","find","action","models","_getCheckFunctionsForSignatures","any","signature","actions","findRecursively","every","indexOf","checkNode","_getNodeActionForSignature","CommandModel","defaults","GoBack","context","viewStateModel","getLastHistoryEntry","execute","restoreLastFragment","visitedNodesByContext","GoToHistory","visitedNodes","_ensureGoBackList","cid","deferred","NextNodeModelFactory","nextNode","getModel","pop","clearHistory","NodeModelFactory","visitCurrentNode","Factory","nodeId","push","on","OpenFullPageContainer","nodeLinks","open","getUrl","getSignatures","toolbarItems","sigArray","mapObject","val","key","union","without","getCollection","pluck","commands","commandsToRemove","remove","getAllSignatures","chain","invoke","map","commandKeys","flatten","compact","unique","value","CommandCollection","extraCommands","browse","download","add","navigate","version","Command","hbs","Handlebars","t","template","compiler","main","depth0","helpers","partials","data","helper","lookupProperty","parent","propertyName","hasOwnProperty","escapeExpression","hooks","helperMissing","nullContext","hash","loc","start","line","column","end","registerPartial","Marionette","id","ItemView","className","templateHelpers","multiple","ui","fileInput","events","change @ui.fileInput","earlierElement","document","body","debug","console","last","onDestroy","off","show","render","append","el","_processFiles","event","originalEvent","target","dataTransfer","URL","NodeModel","FileOpenDialog","mixin","_selectFilesForUpload","fileOpenDialog","url","connector","getConnectionUrl","getApiBase","query","combineQueryString","fields","ajaxOptions","combine","contentType","makeAjaxCall","resp","properties","order_next","isActionInProgress","actionType","CommandTitleAdd","listenTo","fileUploadHelper","uploadController","newUpload","addFilesToUpload","excludeAddVersion","excludeAddVersionforFolders","destroy","_getAddableTypeName","addableTypeName","addableTypes","findWhere","addableType","command_key","originalFormCollection","form","additionalProperties","MetadataAddCategoriesController","AddNewCategory","done","addPropertiesCallback","parentView","catModel","fail","warn","verifyNodeAncestors","ancestorCollection","has","_factories","ancestors","property","ancestor","AddMixin","CompoundDocumentsUtil","supportTypes","noFormTypes","extSignatures","extSupportTypes","extNoFormTypes","extAddCommandsSignatures","extAddCommandSignatures","concat","values","AddCommand","newNode","forwardToTable","type_name","_selectShortcutTarget","_executeExtCommands","def","i","noAddCommandMessage","errMsg","commandSignature","NodePicker","pickerOptions","dialogTitle","initialContainer","globalSearch","startLocation","startLocations","unselectableTypes","resolveShortcuts","resultOriginalNode","nodePicker","args","original_id","original_id_expand","isAddableTypeWithoutInlineForm","AddItemMetadataCommand","MetadataAddItemController","displayForm","hideWarningAlert","tableView","lockedForOtherContols","_pickFileAndUpload","file","_addVersionController","AddVersionController","view","originatingView","selectedNode","uploadFile","viewState","omit","unset","OpenNodePerspectiveCommand","collectCommandSignature","addItemsToolTip","collectItemsDialogTitle","selectCollectionDialogTitle","selectButtonLabel","selectCollectButtonLabel","conflictsItemsHeader","conflictsDialogCloseLabel","CollectItemsNoneMessage","CollectOneItemSuccessMessage","CollectManyItemsSuccessMessage","CollectOneItemFailMessage","CollectManyItemsFailMessage","RemoveCollectItemsCommandConfirmDialogHtml","RemoveCommandConfirmDialogSingleMessage","RemoveCommandConfirmDialogMultipleMessage","RemoveCommandConfirmDialogTitle","RemoveItemsNoneMessage","RemoveOneItemSuccessMessage","RemoveSomeItemsSuccessMessage","RemoveManyItemsSuccessMessage","RemoveOneItemFailMessage","RemoveSomeItemsFailMessage","RemoveManyItemsFailMessage","RemoveSomeItemsFailMessage2","RemoveManyItemsFailMessage2","RemoveItems","RemovingOneItem","RemovingSomeItems","CollectingOneItem","CollectingItems","CollectManyItemsFailMessage2","removefromCollection","Url","NodeCollection","parallelism","TaskQueue","UploadFileCollection","PageLeavingBlocker","CollectionConflictView","CollectCommand","successMessages","formatForMany","errorMessages","enableCollectionCanCollect","__super__","_addToCollection","selectedOptions","selectedNodes","state","count","total","targetFolder","uploadCollection","_announceOperationStart","fileUpload","_addSelectedNodesToCollection","promises","hideFileUploadProgress","_checkPromises","failedNodes","_showDialog","resolveOption","dialog","kill","successNodes","_showGlobalMessage","_announceOperationEnd","showError","selectableTypes","showAllTypes","orderBy","selectMultiple","targetCollection","queue","pending","worker","node_id","targetId","_collectNode","_addToCurrentTable","cause","showFileUploadProgress","oneFileTitle","oneFileSuccess","multiFileSuccess","oneFilePending","multiFilePending","oneFileFailure","multiFileFailure","someFileSuccess","someFilePending","someFileFailure","enableCancel","targetFolderID","nodeAttr","collection_id","collectOptions","_getListView","conflictFiles","close","label","toolTip","click","_showConflictDialog","DialogView","failureMessage","formatMessage","title","midSize","iconLeft","successPromises","failedPromises","prom","collectItem","refernce_id","clonedCollectItem","isLocallyCreated","unshift","successCount","successMessage","blockActions","enable","disable","unblockActions","_performActions","_announceStart","index","_performAction","bind","_announceFinish","suppressMultipleSuccessMessage","showSuccess","suppressMultipleFailMessage","checkResult","countFailed","countOk","_getErrorMessage","msg","_getSuccessMessage","showSuccessWithLink","msgOptions","cnt","emessages","smessages","toLowerCase","_setViewStateModelMultiItemOperationStatus","started","deleteBlockAction","pageLeavingWarning","MultipleItemsCommand","ConfirmableCommand","_confirmAction","_getConfirmTemplate","_getConfirmData","html","alertDialog","isFunction","_getButtons","confirmQuestion","arg","RemoveCollectionItemsCommand","allowCollectionRefetch","d","operation","containerCollection","jqxhr","abort","startGlobalMessage","localGlobalMessage","_executeRemoveCollectionItems","first","commandData","showProgressDialog","infiniteScroll","merge","oneSuccess","rejectResults","newStatus","errors","ConflictResolver","ApplyPropertiesSelectorView","ApplicationScope","CommandParent","labels","titleNotAllowed","commandTitle","_selectActionOptions","applyProperties","bundleNumber","Date","getTime","copyToCurrentFolder","namesToResolve","returnObj","mime_type","size","size_formatted","targetLocation","getMetadataLanguageInfo","multilingual_provided","name_multilingual","description_multilingual","actionNamesToResolve","_resolveNamingConflicts","actionInstructions","instruction","_metadataHandling","commandName","sourceNode","aNode","applicationScope","opts","applicationScopeId","_doActionSelectedNodes","_doPostExecute","userAction","_unblockPageActions","contextMenuCopy","numNodes","dialogTitleSingle","initialSelection","includeCombineProperties","propertiesSeletor","disableSearchFromHere","includeResources","nodeNames","h1","actionNode","actionName","h1Label","actionBtnLabel","run","items","_blockingCounter","MetadataCopyMoveItemsController","controllerFunction","openMetadata","openSelectedProperties","metadataController","CopyMoveItemsWithMetadata","APPLY_DESTINATION_PROPERTIES","COMBINE_ALL_PROPERTIES","CopyMoveItemsRequiredMetadata","KEEP_ORIGINAL_PROPERTIES","inheritance","checkMultilingualInfo","params","ActionModel","allowMultipleInstances","verb","exResult","_getCategories","categories","_copyNode","showProgressPanel","multiFileOneFailure","locationLabelPending","locationLabelCompleted","nextNodeModelFactory","targetNodeIncurrentCollection","findNodeFromCollection","parent_id","newName","roles","extended_data","assignTo","connection","getCategoriesOptions","param","response","categoryGroupMapping","forms","readOldSettings","moduleName","developmentPage","oldConfig","requirejs","s","contexts","routesWithSlashes","test","pathname","RulesMatchingMixin","routing","rules","NodeLinkModel","sequence","makeRulesMatching","NodeLinkCollection","comparator","rule","item","matchRules","completeUrl","serverUrl","absoluteUrl","makeAbsoluteUrl","_getApplicationUrlPrefix","currentRouter","urlParams","buildUrlParams","getHomeUrl","applicationUrlPrefix","getCgiScript","origin","getOrigin","search","NodeLinks","urlOptions","nodeLink","success","_copyToClipboard","clipboardData","setData","element","createTextNode","elParent","createElement","style","color","background","backgroundColor","appendChild","getSelection","selection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","removeChild","UploadableMixin","ConnectableMixin","PerspectiveModel","pick","makeUploadable","makeConnectable","getPerspectiveId","getPerspective","setPerspective","update","changes","isNew","urlBase","isNumber","prepareFormData","pData","JSON","stringify","enableInlinePerspectiveEditing","ConnectorFactory","AncestorCollectionFactory","perspective","canEditPerspective","_applicationScope","inlinePerspectiveEditing","_editInline","_editInClassicPMan","_preparePerspectiveConfig","perspectiveConfig","widgets","overrideType","containerType","cascading","nodepath","_getNodePath","PManView","getObject","f","_getForm","submit","attr","_getUrl","appendTo","_getUrlQueryParameters","toString","elements","btn-mode-code","btn-view-general","btn-view-rules","btn-view-layout","btn-view-widgets","view-perspective-action","perspective-action-create","perspective-action-edit","perspective-action-copy","view-perspective-form","perspective-title","perspective-type","perspective-scope","perspective-nodetypes","perspective-node","perspective-cascading","display-size-msg","rules-code","layout-flow","layout-left-center-right","layout-grid","layout-tabbed","widgetGroupsBlacklist","widgetsWhitelist","disableGrouping","NodeCommand","deleteSelfHandler","DeleteCommand","labelYes","labelNo","localUploadFileCollection","localNextNodeModelFactory","_executeDelete","handlerModule","handler","goBackToFolder","historyEntry","fragment","hasModel","PreviewPluginModel","plugin","PreviewPluginCollection","findByNode","previewPlugins","getOpenDelegateSignature","openCommand","delegatableOpenCommand","delegate","getDelegatedCommand","includeContainers","ifNotOpenDelegate","fullView","DocumentPreview","disablePreview","valid","_validateCurrentNode","_getData","cmdData","validateNode","previewInFullMode","nodez","pluginz","WidgetView","widgetView","FullPageModal","viewerView","fullPageModal","$el","firstBtn","filter","firstNode","intersection","ensureSidePanel","docPreviewView","openSidePanel","_openInSidepanel","SidePanelView","DocumentPreviewView","documentPreviewView","resizableWrapperClass","sidePanelView","slides","content","sidePanelClassName","layout","header","footer","mask","resize","contentView","thresholdWidth","keyboard","cleanup","stopListening","CONSTANTS","STATE","removeClass","hide","doneVerb","CommandDoneVerbDownload","_getNode","isAppleMobile","_openContent","_downloadContent","generationVersionNumber","versionsObj","currentVersion","current_version","cloneNode","forEach","versions","_downloadContentWithPage","openInNewTab","openAuthenticatedPage","cgiUrl","func","nodeid","versionNumber","vernum","downloadUrl","appendQuery","downloadOptions","focus","openDelegates","OpenDocumentDelegateModel","matchOptions","OpenDocumentDelegateCollection","openDocumentDelegates","OpenBaseCommand","PreFlightModel","StagesModel","ModalAlert","selfBlockOnly","flag","zipAndDownloadExists","idx","downloadExists","stagesModel","_deferred","stageAndPrepareDownload","_preFlightCheck","formData","id_list","preFlightModel","preflight","preflightXHR","statusText","showLoader","_getJobId","changeStageMessage","xhr","currentStage","changeLoaderMessage","_checkStage","jobIdModel","some","stage","complete","stageCheckTimeout","setTimeout","clearTimeout","_showDialogBox","dialogOptions","_dialog","onHideDialog","jobs","checkStage","DownloadDialogView","DialogHeaderView","headerView","downloadDialogTitle","describedBy","source","archiveName","fileName","isValidName","nameErrorMsg","trim","toolItem","downloadURL","replace","encodeURIComponent","errorEl","nameErrorId","aria-invalid","aria-describedby","default","disabled","onClickCancelButton","classicUnsupported","_classicUnsupported","_navigateTo","urlQuery","getUrlQueryParameters","shouldCloseTabAfterRedirect","showInfo","closeUrl","isAbsolute","nextURL","parseParam","OpenClassicPageCommand","getUrlUnavailableError","makeServerAdaptor","isFetchableDirectly","parse","perspectives","container_type","constantData","constant_data","override_type","overrideId","override_id","node_path","rule_data","constant_extraction_mode","pnodepath","perspective_node_path","ServerAdaptorMixin","PerspectiveTemplateModel","isFetchable","attrs","perspectiveCollection","PerspectiveUtil","enablePersonalization","_enablePersonalizePage","_enableEditPerspective","_enableCreatePerspective","perspectiveOptions","hasWidgetId","_fetchPerspective","perspectiveModel","_continueExecution","enableEditPerspective","enableCreatePerspective","_promptToChooseEditPage","_doPersonalizePage","_doEditPage","perspectiveId","perspectiveTemplate","allPerspectives","PersonalizationModel","ApplicationScopeModelFactory","UserModelFactory","sourceModel","currentPerspective","overrideInfo","override","defPersonal","perspective_id","personalization","loadPersonalization","mode","MODE_PERSONALIZE","_doEditPerspective","_doCreatePerspective","_createInline","_createInClassicPMan","showYes","showNo","showCancel","labelCancel","_getEditForm","_getEditUrlQueryParameters","_getCreateForm","_getCreateUrlQueryParameters","FilterCollapseTooltip","TreeBrowseCollapseTooltip","CommandNameLock","CommandVerbLock","LockPageLeavingWarning","LockItemsNoneMessage","LockOneItemSuccessMessage","LockSomeItemsSuccessMessage","LockManyItemsSuccessMessage","LockOneItemFailMessage","LockSomeItemsFailMessage","LockManyItemsFailMessage","CommandNameUnlock","CommandVerbUnlock","UnlockPageLeavingWarning","UnlockItemsNoneMessage","UnlockOneItemSuccessMessage","UnlockSomeItemsSuccessMessage","UnlockManyItemsSuccessMessage","UnlockOneItemFailMessage","UnlockSomeItemsFailMessage","UnlockManyItemsFailMessage","publicLang","extraLinksInfo","rewriteApplicationURL","enableAppleSupport","appleNodeLinkBase","applicationUrl","_getApplicationUrl","_getNodesLinks","newHref","_getEMailSubject","_openNewHref","isiOSEnabled","iOSEnabled","iOSText","androidText","desktopText","actionUrl","nodeLinkInfo","lastIndexOf","substr","extraLinkInfo","nodeLinksOptions","NEW_LINE","extraInfo","join","_openFormInSidepanel","_triggerSearchResults","SearchQueryModelFactory","searchQuery","clear","SearchCustomObjectView","SearchCustomQueryFactory","savedQuery","ensureFetched","schema","customSearchForm","savedSearchQueryId","hideSearchButton","showInSearchResultsNewPerspective","sidePanel","triggerMethod","actionButton","loadCustomSearch","isSearchEnabled","SearchFormView","SearchFormQueryFactory","searchFormView","searchFormId","useContainer","FavoriteModel","modelId","selected","addToFavorites","removeFromFavorites","InlineEditCommand","inlineFormViewFactory","inlineFormView","getInlineFormView","MoveCallEndPoint","selectedNodeIds","getExternalBodyParams","extBodyParams","_actionNodeWithMetadata","_moveNode","errObj","bodyParam","moveOptions","method","getAjaxContentType","externalBodyParams","uploadFileModels","applicationScopeIds","replaceParentId","filemodel","parent_id_expand","isDestroyed","findIndex","nodeID","finish","request","OpenPluginModel","OpenPluginCollection","widgetOnly","openWindow","getUrlQuery","openWidget","createWidget","openPlugins","NodeActionCollection","DownloadCommand","forceDownload","checkPermission","permitted","_showOverview","_openWindow","_openWidget","ViewerView","opened","_openURL","needsAuthentication","doCheckActions","openables","objAction","objId","nexturl","order","summaries","classicNodes","isSupported","smartNodes","_executeWithSaveState","navigationView","closest","_getAtLeastOneNode","PermissioNavigationWidget","MetadataFactory","metadataModel","mdv","shortcutNode","shortcut","metadata_info","targetView","navigator","showCloseIcon","showBackIcon","selectedTab","showPermissionView","isExpandedView","nameAttribute","supportOriginatingView","_executeWithoutSaveState","metadatanavigation","MetadataView","PermissionsView","permissionsView","showInDialogView","dialogView","activeTab","metadataTabView","tabLinks","$originatingView","$csProperties","requireSwitched","triggerMethodOn","_showOriginatingView","width","metadataView","isDisplayed","largeSize","metadataDropdownMenuItems","metadataNavigator","noMetadataNavigation","refetchNodeActions","commandSignatures","nonPromotedActionCommands","csuiLazyActionsRetrieved","selectedProperty","isThumbnailView","thumbnailView","_isInMetadataPerspective","metadataInfo","keys","MetadataNavigationWidget","NodeVersionCollection","metadata","showThumbnails","enableViewState","setSessionViewState","_showNode","addClass","rename","RenameFavoriteCommand","inlineFormFavoriteView","isReservedClicked","user","reserved_user_id","CreateRevisionView","BlockingView","releaseNumber","revisionNumber","_view","currentVersionLabel","currentVersionNumber","newVersionLabel","newVersionNumber","versionNameLabel","versionNameNumber","arialabel","headerTitle","standardHeader","headers","class","onClickSubmitButton","dialogTxtAria","nameInput","imbue","successMsg","that","validationSuccess","_validate","isUndefined","NodeChildrenCollection","hasLinks","nodeUrl","childrenCollection","childNode","childNodeId","autoreset","gotoLocation","targetLocationUrl","doAutoClose","responseText","errorObj","CreateReleaseView","newReleaseNumber","ReorganizeView","reorganizeView","listenToOnce","footerView","orderedList","fetched","prop","hasClass","keyCode","shiftKey","preventDefault","stopPropagation","contentHolders","reorganizeListView","focusIndex","firstItem","ReserveCommand","isUnreservedClicked","UnreserveCommand","PropertiesCommand","showReleasesView","ReleasesPropertiesCommand","signInPageUrl","_signOut","authenticator","unauthenticate","reason","token","ClassicNodes","urlQueryParameters","classicNode","_replaceParameters","viewType","classicview","formatMemberName","UserWidgetView","userId","userid","baseElement","showUserProfileLink","showMiniProfile","enableSimpleSettingsModel","enableUploadProfilePicture","loggedUserId","showUserSettings","showUserProfileSessions","showUserProfileDialog","versionLang","VersionDeleteCommand","selectedVersions","allModels","parentNodeName","_getContentUrl","OpenCommand","NextVersionModelFactory","version_number","advanced_versioning","fakeActions","newVersion","DocPreviewCommand","OpenVersionDelegateModel","OpenVersionDelegateCollection","openVersionDelegates","nextVersion","VersionDownloadCommand","VersionOpenCommand","VersionPropertiesCommand","PromoteVersionCommand","DocVersionPreviewCommand","OpenVersionDelegateCommand","OpenVersionPerspectiveCommand","CopyLinkCommand","EmailLinkCommand","showFilter","toolItemAriaExpand","stateIsOn","_isSupported","notSupportedObjects","inArray","_accessibleMode","_accessibleTable","accessibleTable","_enforceDescriptionColumn","enforceDescriptionColumn","isAccessibleMode","isAccessibleTable","shouldEnforceDescriptionColumn","Accessibility","thumbnailViewState","showDescriptions","langStr","aria-label","backbone","enableGridView","iconName","contents","replaceWith","_selectSaveFilterOptions","facets","filterName","multiLingualData","selectedFacets","filters","facet","facettypes","facetArrayType","facettype","ajaxFormData","location_id","selected_facets","saveFilterOptions","virtualFolderId","virtualFolderNode","link_url","dets","saveFilter","MetadataSaveQueryController","_selectSaveQueryOptions","queryName","searchQueryModel","_checkForRequiredMetadata","search_cache_id","searching","cache_id","previousSavedQuery","savedQueryParentNode","updateQueryOptions","queryId","updatedQueryParentNode","checkMaximizeMode","generateSuccessMessage","failure","errObject","errObjects","failedFilesCollection","errCollection","langTitle","showPermissionApplyingProgress","PermissionUtil","permissionModel","right_id","permissionType","filterId","nodeModel","userHasEditPermissions","failureMsg","_getMessageWithUserDisplayName","EditPermissionHelper","PermissionPreCheck","loginUserId","editPermissionHelper","popoverPlacement","popoverAtBodyElement","popoverTargetElement","permissions","readonly","applyTo","_showSelectPermissionLevelPopover","userSelection","saveAttr","apply_to","include_sub_types","includeSubTypes","unformattedMsg","displayName","memberTypeSupport","isDisable","icon","userExpandDetails","currentRow","permissionsContentView","UserPickerView","MemberModelFactory","NodePermissionModel","memberFilter","userPickerView","userPickerModel","userpickerRegion","Region","currentView","getReadPermissions","right_id_expand","DeletePermissionCommand","confirmDialogMessage","setCommandTitle","ApplyPermissionView","ApplyPermissionHeaderView","removePermission","_executeDeletePermission","_deletePermission","origView","permissionModelType","subFolderSelected","destroyDialog","processForEmptyOwner","handleFailure","failedPermissionsCollection","GrantAccessGroupOnly","_selectAddUserOrGroupOptions","selectedMember","members","selectedPermissions","permissionModelData","nodePermissionModel","MembersPickerDialog","unSelectableMembers","originalCollection","permissionCollection","member","grantAccessGrpOnly","dialogClass","adduserorgroup","addButtonLabel","availablePermissions","unselectableMembers","owner","noOwnerOrGroup","noGroup","adminPrivilege","authUser","AdminRestoreOwner","AdminRestoreOwnerGroup","_selectAddOwnerOrOwnerGroupOptions","include_sub_type","addOwnerGroup","_user","userHasEditPermissionsAction","AdminRestorePublic","_executeApplyPermission","restorePublicAccess","addPublicAccess","_initPersonalization","toJSON","personalizationModel","moduleConfigs","enableSystemLevel","configModel","configCollection","mConfig","treeData","NavigationTree","showTree","initialResponse","privilege_system_admin_rights","enableAboutBox","aboutBoxContentView","showAboutBox","PublicLang","AboutBoxView","aboutBoxView","ProductName","RestructureView","ensureDependencies","once","arg3","arg4","arg5","arg6","arg7","arg8","restructureCommand","restructureDialog","subTitle","onClickRestructureButton","_performRestructure","titleIcon","_showError","_unblockActions","restructureFormView","startProcess","notifyUsers","reference","comment","selectedNodeIDs","getValues","startProcessAt","dataid","_restructureNodeWithMetadata","instructions","cmdErr","_blockActions","collectionView","resultsView","startdate","userstobenotified","subject","AttrSourceType","restructureOptions","extendAjaxOptions","faq","OpenSpecificNodePerspectiveCommand","OpenDocumentContentCommand","allowViewContent","allowPerspective","decides","OpenVersionContentCommand","moduleConfig","navExtensions","currentNode","parentNode","theSameNode","_makeAccessible","nodeParent","navOptions","executeDefaultAction","cancel","reduce","previousPromise","navExtension","catch","CollectCommandParent","unsupportedObjects","_checkPromisess","targetNodeInCurrentCollection"],"mappings":"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AA,GAGA,OADAkU,GAAAtL,OACAsL,KAKAmC,eAAA,SAAAC,GAEA,MADA,IAAA5D,GAAAlsB,EAAAuU,WAAAuB,aAAAga,MAIA7C,0BAAA,SAAAvX,GACA,GAAA0T,GAAA1T,EAAA0T,eACAA,GAAAgI,cACAhI,EAAAgI,eAEAnF,EAAAoF,OAAA5wB,KAAAyU,IAAA,wBAGA4Y,wBAAA,SAAApY,GACAuW,EAAAqF,SACA,IAAAlI,GAAA1T,EAAA0T,eACAA,GAAAmI,gBACAnI,EAAAmI,mBAMA,OAAApF,KAIAvsB,KAAAC,OAAA,yBC3VA,4CACA,6DACA,mEACA,oEACA,sBACA,oCACA,qCACA,0BACA,wCACA,kCACA,6BACA,+CACA,wDACA,kCACA,2BACA,gCACA,yCACA,6BACA,iDACA,kCACA,+BACA,gCACA,kDACA,qCACA,2BAGA,kCACA,uCACA,uCACA,iCACA,iCACA,0CACA,gDACA,mCACA,sCACA,iCACA,2BACA,qCACA,+BACA,2BACA,2BACA,4CACA,wCACA,sCACA,qCACA,mCACA,gCACA,gCACA,sCACA,iDACA,qDACA,gCACA,qCACA,oCACA,iCACA,kCACA,iCACA,6BACA,sCACA,8BACA,0DACA,wDACA,uDACA,mDACA,6CACA,+CACA,sDACA,0DACA,mDACA,+DACA,qCACA,+BACA,wCACA,gCACA,mCACA,+BACA,sCACA,wCACA,oCACA,+CACA,0CACA,mDACA,wDACA,kEACA,6BACA,yCACA,uCACA,kCACA,iCACA,mCACA,2CACA,0CACA,mDACA,kDACA,0DACA,oDACA,iDACA,kDACA,wDACA,kDACA,uCACA,uCACA,kCACA,oDACA,gCACA,0CAIA,iDACA,iDACA,+CACA,+CAIA,wCACA,uCACA,yCACA,wCACA,6CAGA,0CACA,sBACA,uBACA,2BACA,2BACA,2BACA,iEACA,sEACA,wEACA,6EACA,gDACA,oCACA,yCACA,mCACA","file":"csui-commands.js","sourcesContent":["csui.define('csui/utils/command.error',[\"module\",\r\n  \"csui/lib/jquery\",\r\n  \"csui/lib/underscore\",\r\n  'csui/lib/backbone',\r\n  \"csui/utils/log\",\r\n  \"csui/utils/base\"\r\n], function (module, $, _, Backbone, log, base) {\r\n\r\n  // constructor!!\r\n  function CommandError(arg1, arg2) {\r\n\r\n    if (!arg1) {\r\n      throw new Error(\"No argument passed\");\r\n    }\r\n\r\n    function applyArg2() {\r\n      // the second argument can be a object with errorDetails and/or node members or just\r\n      // a single errorDetails string or a NodeModel\r\n      if (arg2 && _.isString(arg2)) {\r\n        this.errorDetails = arg2;\r\n      } else {\r\n        if (arg2 instanceof Backbone.Model) {\r\n          this.node = arg2;\r\n        } else {\r\n          if (arg2 && _.isObject(arg2)) {\r\n            if (arg2.errorDetails && _.isString(arg2.errorDetails)) {\r\n              this.errorDetails = arg2.errorDetails;\r\n            }\r\n            if (arg2.node instanceof Backbone.Model) {\r\n              this.node = arg2.node;\r\n            }\r\n            if (arg2.requestError && _.isObject(arg2.requestError)) {\r\n              var requestMessage = new base.RequestErrorMessage(arg2.requestError);\r\n              if (this.message) {\r\n                if (!this.errorDetails) {\r\n                  this.errorDetails = requestMessage.message;\r\n                }\r\n              } else {\r\n                this.message = requestMessage.message;\r\n                if (!this.errorDetails) {\r\n                  this.errorDetails = requestMessage.errorDetails;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (arg1 instanceof Error) {\r\n      this.message = arg1.message;\r\n      if (arg1.stack) {\r\n        this.stack = arg1.stack;\r\n      }\r\n    } else {\r\n      if (_.isString(arg1)) {\r\n        this.message = arg1;\r\n      } else {\r\n        var requestMessage = new base.RequestErrorMessage(arg1);\r\n        this.message = requestMessage.message;\r\n        this.errorDetails = requestMessage.errorDetails;\r\n        this.statusCode = requestMessage.statusCode;\r\n      }\r\n    }\r\n    applyArg2.call(this);\r\n    this.name = \"CommandError\";\r\n  }\r\n\r\n  CommandError.prototype = Object.create(Error.prototype);\r\n\r\n  return CommandError;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/nls/root/localized.strings',{\r\n\r\n  // Add\r\n  ShortcutPickerTitle: \"Select target for Shortcut\",\r\n\r\n  // AddItemMetadata\r\n  CommandNameAddItemMetadata: \"Add Item with metadata\",\r\n\r\n  CommandNameAddVersion: \"AddVersion\",\r\n  AddVersionNotAllowed : 'Unable to add version. Please try again when the current operation is finished',\r\n\r\n  // Copy\r\n  CommandTitleCopy: \"Copy items\",\r\n  CommandNameCopy: \"Copy\",\r\n  CommandVerbCopy: \"copy\",\r\n  DialogTitleSingleCopy: \"Copy {0} item\",\r\n  DialogTitleCopy: \"Copy {0} items\",\r\n  SomeFilesNotCopiedSuccessfully: 'Some items were not successfully copied.',\r\n  CopyingNodes: 'Copying {0} nodes',\r\n  CopyingNode: 'Copying 1 node',\r\n  CopyPageLeavingWarning: \"If you leave the page now, pending items will not be copied.\",\r\n  CopyingOneItem: 'Copying \"{0}\"',\r\n  CopyItems: 'Copying {0} items',\r\n  CopySomeItems: 'Copying {0} items',\r\n  CopyItemsNoneMessage: \"No items copied.\",\r\n  CopyOneItemSuccessMessage: '\"{0}\" copied',\r\n  CopySomeItemsSuccessMessage: '{0} items successfully copied.',\r\n  CopyManyItemsSuccessMessage: '{0} items successfully copied.',\r\n  CopyOneItemFailMessage: '\"{0}\" failed to copy',\r\n  CopyManyItemsOneFailMessage: \"1 item failed to copy.\",\r\n  CopySomeItemsFailMessage: '{0} items failed to copy.',\r\n  CopyManyItemsFailMessage: '{0} items failed to copy.',\r\n  CopySomeItemsFailMessage2: '{2} items failed to copy.',    // {2} !!\r\n  CopyManyItemsFailMessage2: '{2} items failed to copy.',    // {2} !!\r\n  CopyingLocationLabel :  'Copying to \"{0}\"',\r\n  CopiedLocationLabel : 'Copied to \"{0}\"',\r\n  CopyNotAllowed : 'Unable to copy. Please try again when the current operation is finished',\r\n\r\n  // Delete\r\n  DeleteCommandConfirmDialogTitle: \"Delete\",\r\n  DeleteButtonLabel: \"Delete\",\r\n  DeleteCommandConfirmDialogHtml: \"<span class='msgIcon WarningIcon'>\" +\r\n                                  \"<%- message %>\" +\r\n                                  \"</span>\",\r\n  DeleteCommandConfirmDialogSingleMessage: 'Do you want to delete \"{0}\"?',\r\n  DeleteCommandConfirmDialogMultipleMessage: \"Do you want to delete {0} items?\",\r\n  CommandTitleDelete: \"Delete items\",\r\n  CommandNameDelete: \"Delete\",\r\n  CommandVerbDelete: \"delete\",\r\n  DeletePageLeavingWarning: \"If you leave the page now, pending items will not be deleted.\",\r\n  DeleteItemFailed: 'Deleting item \"{0}\" failed.',\r\n  DeleteItems: 'Deleting {0} items',\r\n  DeletingOneItem: 'Deleting \"{0}\"',\r\n  DeletingSomeItems: 'Deleting {0} items',\r\n  DeleteItemsNoneMessage: \"No items deleted.\",\r\n  DeleteOneItemSuccessMessage: '\"{0}\" deleted.',\r\n  DeleteSomeItemsSuccessMessage: \"{0} items successfully deleted.\",\r\n  DeleteManyItemsSuccessMessage: \"{0} items successfully deleted.\",\r\n  DeleteOneItemFailMessage: '\"{0}\" failed to delete.',\r\n  DeleteManyItemsOneFailMessage: \"1 item failed to delete.\",\r\n  DeleteSomeItemsFailMessage: \"{0} items failed to delete.\",\r\n  DeleteManyItemsFailMessage: \"{0} items failed to delete.\",\r\n  DeleteSomeItemsFailMessage2: \"{2} items failed to delete.\",   // {2} !!\r\n  DeleteManyItemsFailMessage2: \"{2} items failed to delete.\",   // {2} !!\r\n  deletingLocationLabel: 'Deleting from \"{0}\"',\r\n  deletedLocationLabel: 'Deleted from \"{0}\"',\r\n  DeleteNotAllowed : 'Unable to delete. Please try again when the current operation is finished',\r\n\r\n  ApplyingManyItemsSuccessMessage: \"Applied successfully to {0} items.\",\r\n  ApplyingOneItemFailMessage: \"Failed to apply to 1 item.\",\r\n  ApplyingManyItemsFailMessage2: \"Failed to apply to {0} items.\",\r\n\r\n  // Download\r\n  CommandNameDownload: \"Download\",\r\n  CommandVerbDownload: \"download\",\r\n\r\n  // Zip & Download\r\n  CommandNameZipDownload: \"Download\",\r\n  CommandVerbZipDownload: \"Download\",\r\n  VerifyZipAndDownloadPrefetch: \"Verifying items\",\r\n  ExtractingZipAndDownload: \"Extracting items\",\r\n  CompressingZipAndDownload: \"Compressing items\",\r\n  CleanUpZipAndDownload: \"Cleaning up\",\r\n  PreFlightDialogBtnContinue: \"Continue\",\r\n  DownloadDialogBtnDownload: \"Download\",\r\n  DialogBtnCancel: \"Cancel\",\r\n  InvalidArchiveCharacters: \"Special characters cannot be used in archive name: *\\\\?:<>|\\\"\\/&\",\r\n  InvalidArchiveName: \"Invalid archive name.\",\r\n  TheArchiveNameCannotBeEmpty: \"Archive name cannot be empty.\",\r\n  TheArchiveNameMaxLength: \"Archive name is greater than the maximum length (248)\",\r\n\r\n  // Move\r\n  CommandTitleMove: \"Move items\",\r\n  CommandNameMove: \"Move\",\r\n  CommandNameVerbMove: \"move\",\r\n  DialogTitleSingleMove: \"Move {0} item\",\r\n  DialogTitleMove: \"Move {0} items\",\r\n  SomeFilesNotMovedSuccessfully: 'Some items were not successfully moved.',\r\n  MovePageLeavingWarning: \"If you leave the page now, pending items will not be moved.\",\r\n  MovingNodes: 'Moving {0} nodes',\r\n  MovingNode: 'Moving 1 node',\r\n  MovingOneItem: 'Moving \"{0}\"',\r\n  MovingItems: 'Moving {0} items',\r\n  MovingSomeItems: 'Moving {0} items',\r\n  MoveItemsNoneMessage: \"No items moved.\",\r\n  MoveOneItemSuccessMessage: '\"{0}\" moved',\r\n  MoveSomeItemsSuccessMessage: '{0} items successfully moved.',\r\n  MoveManyItemsSuccessMessage: '{0} items successfully moved.',\r\n  MoveManyItemsOneFailMessage: \"1 item failed to move.\",\r\n  MoveOneItemFailMessage: '\"{0}\" failed to move',\r\n  MoveSomeItemsFailMessage: '{0} items failed to move.',\r\n  MoveManyItemsFailMessage: '{0} items failed to move.',\r\n  MoveSomeItemsFailMessage2: '{2} items failed to move.',    // {2} !!\r\n  MoveManyItemsFailMessage2: '{2} items failed to move.',    // {2} !!\r\n  MovingLocationLabel :  'Moving to \"{0}\"',\r\n  MovedLocationLabel : 'Moved to \"{0}\"',\r\n  MoveNotAllowed : 'Unable to move. Please try again when the current operation is finished',\r\n\r\n  // Paste\r\n  CommandNamePaste: \"Paste\",\r\n\r\n  // Reserve\r\n  CommandNameReserve: \"Reserve\",\r\n  CommandVerbReserve: \"reserve\",\r\n  ReservePageLeavingWarning: \"If you leave the page now, pending items will not be reserved.\",\r\n  ReserveItemsNoneMessage: \"No items reserved.\",\r\n  ReserveOneItemSuccessMessage: \"1 item successfully reserved.\",\r\n  ReserveSomeItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveManyItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveOneItemFailMessage: \"1 item failed to reserve.\",\r\n  ReserveSomeItemsFailMessage: \"{0} items failed to reserve.\",\r\n  ReserveManyItemsFailMessage: \"{0} items failed to reserve.\",\r\n\r\n  //Add Favorite\r\n  CommandNameFavorite: \"Add Favorite\",\r\n  CommandVerbFavorite: \"update Favorites\",\r\n  CommandDoneVerbFavorite: \"added to Favorites\",\r\n  CommandRemovedVerbFavorite: \"removed from Favorites\",\r\n  updateFavoriteFailTitle: \"Update Favorite\",\r\n  updateFavoriteFailMessage: 'Failed to update Favorite for node \"{0}\". \\n\\n{1}',\r\n\r\n  //Description\r\n  CommandDescriptionToggle: \"Description Toggle\",\r\n  CommandHideDescription: \"Hide description\",\r\n  CommandShowDescription: \"Show description\",\r\n\r\n  // Share\r\n  CommandNameEmailLink: \"Send to\",\r\n  CommandVerbEmailLink: \"send\",\r\n  EmailLinkSubject: 'I want to share the following links with you',\r\n  EmailLinkDesktop: \"Link for Desktop and Android\",\r\n  EmailAppleLinkFormat: \"Link for iOS Mobile\",\r\n  EmailLinkCommandFailedWithTooMuchItemsErrorMessage: \"Mail as link failed. Too many items were selected.\",\r\n\r\n  // SignOut\r\n  SignOutCommandName: \"Sign Out\",\r\n\r\n  // SwitchToClassic\r\n  SwitchToClassicCommandName: \"Classic View\",\r\n\r\n  //ContentServerAdministration\r\n  ContentServerAdministrationCommandName: \"Administration\",\r\n\r\n  // Unreserve\r\n  CommandNameUnreserve: \"Unreserve\",\r\n  CommandVerbUnreserve: \"unreserve\",\r\n  UnreservePageLeavingWarning: \"If you leave the page now, pending items will not be unreserved.\",\r\n  UnreserveItemsNoneMessage: \"No items unreserved.\",\r\n  UnreserveOneItemSuccessMessage: \"1 item successfully unreserved.\",\r\n  UnreserveSomeItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveManyItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveOneItemFailMessage: \"1 item failed to unreserve.\",\r\n  UnreserveSomeItemsFailMessage: \"{0} items failed to unreserve.\",\r\n  UnreserveManyItemsFailMessage: \"{0} items failed to unreserve.\",\r\n\r\n  // UserProfile\r\n  UserProfileCommandName: \"Profile\",\r\n\r\n  // Upload\r\n  CommandTitleUpload: \"Upload documents\",\r\n  UploadNotAllowed : 'Unable to upload. Please try again when the current operation is finished',\r\n  // remaining see src/controls/globalmessage/impl/progresspanel/impl/nls/root/progresspanel.lang.js\r\n\r\n  //Rename\r\n  CommandVerbRename: \"rename\",\r\n\r\n  //Filter Save\r\n  CommandNameSaveFilter: \"Save As\",\r\n  CommandVerbSaveFilter: \"Save As\",\r\n  DialogTitleSaveFilter: \"Save as\",\r\n  SaveFilterCommandSuccessfully: \"{0} virtual folder created successfully.\",\r\n\r\n  // Edit\r\n  NoEditUrl: 'Web page for editing of this document is not available.',\r\n\r\n  // Copy Link\r\n  CommandNameCopyLink: \"Copy link\",\r\n  CommandVerbCopyLink: \"copy link\",\r\n  CopyLinkSuccessMessage: \"Link copied to clipboard.\",\r\n  CopyLinkFailMessage: \"Copy link has failed to copy the link to clipboard.\",\r\n\r\n  //permissions commands\r\n  DeletePermissionCommandRemoveOwner: \"Remove owner\",\r\n  DeletePermissionCommandRemoveGroup: \"Remove owner group\",\r\n  DeletePermissionCommandRemovePublicAccess: \"Remove Public Access\",\r\n  DeletePermissionCommandRemoveOther: \"Remove from list\",\r\n  DeletePermissionCommandConfirmDialogTitle: 'Remove {0}',\r\n  DeletePermissionCommandConfirmDialogSingleMessage: 'Do you want to remove {0}' +\r\n                                                     ' from this permissions list?',\r\n  DeletePermissionCommandConfirmDialogPublicAccessMessage: 'Are you sure you want to remove' +\r\n                                                           ' {0} from this permissions list?',\r\n  DeletePermissionCommandSuccessMessage: \"{0} was removed from the permissions list.\",\r\n  DeletePermissionCommandSuccessMessageWithCount: \"{0} was removed from the permissions list of\" +\r\n                                                  \" {1}.\",\r\n  DeletePermissionCommandFailMessage: \"Failed to remove {0} from the permissions list.\",\r\n  publicAccess: 'Public Access',\r\n  RestorePublicAccessSuccessMessage: \"{0} restored\",\r\n  RestorePublicAccessSuccessMessageWithCount: \"{0} restored to the permission list of {1}\",\r\n  undefinedCollection: 'Collection is undefined',\r\n  EditPermissionCommandFailMessage: \"Failed to edit {0} from the permissions list.\",\r\n  Owner: 'owner',\r\n\r\n  CommandNameAddOwnerOrOwnerGroup: \"Add Owner Or Owner Group\",\r\n  AddOwnerOrGroup: \"Add owner or owner group\",\r\n  AddOwner: \"Add owner\",\r\n  AddOwnerGroup: \"Add owner group\",\r\n  CommandNameAddUserorGroup: 'Add user or group',\r\n  CommandNameRestorePublicAccess: 'Restore public access',\r\n  AddButtonLabel: 'Add',\r\n  AddOwnerOrGroupDialogTitle: \"Add Owner or Owner group\",\r\n  AddOwnerDialogTitle: \"Add Owner\",\r\n  AddOwnerGroupDialogTitle: \"Add Owner group\",\r\n\r\n  ChangeOwnerPermissionCommand: 'Change owner',\r\n  ChangeOwnerGroupPermissionCommand: 'Change owner group',\r\n\r\n  AddUserOrGroupSuccess: '{0} added successfully',\r\n  AddUserOrGroupFailure: '{0} failed to add',\r\n  AddUserOrGroupSuccessWithCount: '{0} was added to the permissions list of {1}.',\r\n\r\n  formatForNone: \"{0} items\",\r\n  formatForOne: \"{0} item\",\r\n  formatForTwo: \"{0} items\",\r\n  formatForFive: \"{0} items\",\r\n\r\n  AppliedPermissions: 'Permissions applied selected item',\r\n  AppliedPermissionsOneSuccess: 'Permissions applied to {0} item',\r\n  AppliedPermissionsOnlySuccess: 'Permissions applied to {0} items',\r\n  AppliedPermissionsOneFailure: 'Permissions failed to apply {0} item',\r\n  AppliedPermissionsOnlyFailure: 'Permissions failed to apply {0} items',\r\n  AppliedPermissionsSuccessAndFailure: 'Permissions applied to {0} items and failed to apply {1}' +\r\n                                       ' items',\r\n\r\n  // CommandHelper\r\n  CommandSuccessfullySingular: \"{0} item successfully {1}.\",\r\n  CommandFailedSingular: \"{0} item failed to {1}.\",\r\n  CommandSuccessfullyPlural: \"{0} items successfully {1}.\",\r\n  CommandFailedPlural: \"{0} items failed to {1}.\",\r\n  CommandFailedPartial: \"{0} of {1} items failed to {2}.\",\r\n\r\n  NoConnectivity: \"No connectivity\",\r\n  GoToOffline: \"Go to offline files?\",\r\n\r\n  viewTypeUnsupported: 'This content type is not currently supported on a mobile device.',\r\n\r\n  MobileIOS: \"iOS Mobile\",\r\n  DesktopAndroid: \"Desktop and Android\",\r\n  Close: 'Close',\r\n  addButton: \"Add\",\r\n  otheruser: \"other user\",\r\n  addDocument: \"Add Document\",\r\n  allUsersAndGroups: \"Users and Groups\",\r\n  addUsersAndGroups: \"Add users or groups\",\r\n  addGroups:\"Add Groups\",\r\n  allGroups: \"Groups\",\r\n  cancelButtonLabel: \"Cancel\",\r\n  applyButtonLabel: \"Apply\",\r\n  ThumbnailTitle: \"Grid view\",\r\n  ListViewTitle: \"Browse view\",\r\n  DensityLabel: \"Density\",\r\n  error: \"Error\",\r\n\r\n  //edit perspective\r\n  EditPerspective: \"Edit page\",\r\n  editPerspectiveErrorMessage: \"The page cannot be edited. It is used as template for multiple pages\",\r\n  editPageDialogMessage: \"Who will see the page edits?\",\r\n  editPageButton: \"Everyone\",\r\n  personalizePageButton: \"Only you\",\r\n  editPageCancelButton: \"Cancel\",\r\n  editPageTitle: \"Edit page\",\r\n\r\n  //create perspective\r\n  CreatePerspective: \"Create new perspective\",\r\n  //custom view form as side panel\r\n  searchButtonMessage: \"Search\",\r\n  personalizePage: \"Personalize page\",\r\n\r\n  BackButtonToolItem: \"Go Back\",\r\n\r\n  MissingNodeId: \"invalid node or missing node id.\",\r\n\r\n  //Create revision\r\n  revision: \"Revision \",\r\n  currentRevision: \"Current revision\",\r\n  newRevision: \"New revision\",\r\n  revisionName: \"Revision name\",\r\n  createRevisionHeaderTitle: \"Create revision\",\r\n  submitButton: \"Submit\",\r\n  cancelButton: \"Cancel\",\r\n  revisionSuccessMsg: 'Created new revision' + ' ‘{0}’ '+ 'successfully.',\r\n  \r\n  //Create release\r\n  GotoLocationLinkLabel: \"Go to location\",\r\n  release: \"Release \",\r\n  currentRelease: \"Current release\",\r\n  newRelease: \"New release\",\r\n  releaseName: \"Release name\",\r\n  createReleaseHeaderTitle: \"Create release\",\r\n  releaseSuccessMsg: 'Created new release' + ' ‘{0}’ ' + 'successfully.',\r\n  noneLabel: '<None>',\r\n\r\n   // View releases\r\n   CommandNameViewReleases: \"View Releases\",\r\n\r\n   // Compound documents\r\n   compoundDocumentHeaderTitle: \"Compound document\",\r\n\r\n   // Reorganize\r\n   Reorganize :\"Reorganize\",\r\n   ReorganizeSuccessMsg: \"Reorganization of items completed successfully.\",\r\n\r\n  // About box\r\n   brandTitle: \"opentext | \",\r\n\r\n  //Save Query\r\n  CommandNameSaveQuery: \"Save As query\",\r\n  CommandVerbSaveQuery: \"Save As query\",\r\n  DialogTitleSaveQuery: \"Save search as\",\r\n  SaveQueryCommandSuccessfully: \"{0} created successfully.\",\r\n  saveButtonLabel: \"Save\",\r\n\r\n  //Update Query\r\n  CommandNameUpdateQuery: \"Update query\",\r\n  CommandVerbUpdateQuery: \"Update query\",\r\n  UpdateQueryCommandSuccessfully: \"{0} updated successfully.\",\r\n\r\n  //Restructure command\r\n  CommandNameRestructure: \"Restructure\",\r\n  RestructureDialogTitle: 'Restructure',\r\n  Restructure: 'Restructure',\r\n  confirmationRestructure: \"Restructuring will start as scheduled. Assigned users will be notified about the progress.\",\r\n  errorRestructure: \"Unable to start restructuring.\",\r\n  files: 'files',\r\n  CommandTitleRestructure: \"Restructure items\", \r\n  DialogTitleSingleRestructure: \"Restructure {0} item\", \r\n  DialogTitleRestructure: \"Restructure {0} items\", \r\n  RestructuringNodes: 'Restructure {0} nodes', \r\n  RestructuringNode: 'Restructure 1 node', \r\n  RestructureNotAllowed : 'Unable to Restructure. Please try again when the current operation is finished', \r\n});\n","\n","csui.define('csui/utils/commands/versions/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/versions/nls/root/localized.strings',{\r\n\r\n  // DeleteVersion\r\n  CommandNameVersionDelete: \"Delete Version\",\r\n  CommandVerbVersionDelete: \"delete\",\r\n  DeleteCommandConfirmDialogTitle: \"Delete\",\r\n  VersionDeleteCommandConfirmDialogSingleMessage: 'Do you want to delete version {0} from \"{1}\"?',\r\n  VersionDeleteCommandConfirmDialogMultipleMessage: \"Do you want to delete {0} versions?\",\r\n  DeleteVersionPageLeavingWarning: \"If you leave the page now, pending versions will not be\" +\r\n                                   \" deleted.\",\r\n\r\n  DeleteVersions: 'Deleting {0} versions',\r\n  DeletingSomeVersions: 'Deleting {0} versions',\r\n  DeletingOneVersion: 'Deleting version',\r\n  DeleteVersionItemsNoneMessage: \"No versions deleted.\",\r\n  DeleteVersionOneItemSuccessMessage: \"1 version succeeded to delete.\",\r\n  DeleteVersionSomeItemsSuccessMessage: \"{0} versions succeeded to delete.\",\r\n  DeleteVersionManyItemsSuccessMessage: \"{0} versions succeeded to delete.\",\r\n  DeleteVersionOneItemFailMessage: \"1 version failed to delete.\",\r\n  DeleteVersionSomeItemsFailMessage: \"{0} versions failed to delete.\",\r\n  DeleteVersionManyItemsFailMessage: \"{0} versions failed to delete.\",\r\n  DeleteVersionSomeItemsFailMessage2: \"{2} versions failed to delete.\",   // {2} !!!\r\n  DeleteVersionManyItemsFailMessage2: \"{2} versions failed to delete.\",   // {2} !!!\r\n\r\n  //PromoteVersion\r\n  CommandNamePromoteVersion: 'Promote to Major Version',\r\n  CommandVerbPromoteVersion: 'Promote to Major Version',\r\n  MessageVersionPromoted: 'Version successfully promoted',\r\n  DialogPromoteVersion: 'version {0} promoting to {1}',\r\n\r\n  // TODO: this is only here, because the CommandHelper.handleExecutionResults does an extension\r\n  // TODO: remove this if the handleExecutionResults is not used anymore or the extension is removed\r\n  CommandSuccessfullySingular: \"{0} version successfully {1}.\",\r\n  CommandFailedSingular: \"{0} version failed to {1}.\",\r\n  CommandSuccessfullyPlural: \"{0} versions successfully {1}.\",\r\n  CommandFailedPlural: \"{0} versions failed to {1}.\",\r\n  CommandFailedPartial: \"{0} of {1} versions failed to {2}.\",\r\n\r\n  MissingVersionInfo: \"invalid version or missing required version info.\",\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commandhelper',[\r\n  'require', 'module', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/lib/backbone', 'csui/utils/base', 'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'i18n!csui/utils/commands/versions/nls/localized.strings',\r\n  'csui/models/version', 'csui/lib/jquery.when.all'\r\n], function (require, module, $, _, Backbone, base, CommandError,\r\n    lang, versionsLang, VersionModel) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  var defaultLang = _.clone(lang);\r\n  var CommandHelper = function () {};\r\n\r\n  _.extend(CommandHelper.prototype, Backbone.Events, {\r\n\r\n    checkNodeTypesAndRights: function (nodes, types, rights) {\r\n      _.isArray(nodes) || nodes && (nodes = [nodes]);\r\n      var container = _.contains(types, -1);\r\n      return nodes && nodes.length && _.all(nodes, function (node) {\r\n            return (_.contains(types, node.get(\"type\")) ||\r\n                    container && node.get(\"container\")) &&\r\n                   _.all(rights, function (right) {\r\n                     return node.get(\"perm_\" + right);\r\n                   });\r\n          });\r\n    },\r\n\r\n    checkNodeTypes: function (nodes, types) {\r\n      _.isArray(nodes) || nodes && (nodes = [nodes]);\r\n      var container = _.contains(types, -1);\r\n      return nodes && nodes.length && _.all(nodes, function (node) {\r\n            var attributes = base.isBackbone(node) ? node.attributes : node;\r\n            return _.contains(types, attributes.type) ||\r\n                   container && attributes.container;\r\n          });\r\n    },\r\n\r\n    checkNodeRights: function (nodes, rights) {\r\n      _.isArray(nodes) || nodes && (nodes = [nodes]);\r\n      return nodes && nodes.length && _.all(nodes, function (node) {\r\n            var attributes = base.isBackbone(node) ? node.attributes : node;\r\n            return _.all(rights, function (right) {\r\n              return attributes[\"perm_\" + right];\r\n            });\r\n          });\r\n    },\r\n\r\n    getJustOneNode: function (status) {\r\n      var node = status.nodes && status.nodes.length === 1 && status.nodes.at(0);\r\n      return node;\r\n    },\r\n\r\n    getAtLeastOneNode: function (status) {\r\n      if (status.nodes) {\r\n        return status.nodes;\r\n      }\r\n\r\n      var ViewCollection = Backbone.Collection.extend(\r\n          status.collection ? {model: status.collection.model} : {}\r\n      );\r\n\r\n      return new ViewCollection();\r\n    },\r\n\r\n    updateNode: function (node, attributesToUpdate) {\r\n      var self = this;\r\n      return node\r\n          .save(attributesToUpdate, {\r\n            wait: true,\r\n            patch: true,\r\n            silent: true\r\n          })\r\n          .then(function () {\r\n            return node.fetch({force:true});\r\n          })\r\n          .then(function () {\r\n            return node;\r\n          }, function (error) {\r\n            var commandError = new CommandError(error, node);\r\n            return $.Deferred().reject(commandError);\r\n          });\r\n    },\r\n\r\n    // TODO: The drawback of this function is that it uses localized strings where text gets composed with help of placeholders (doneVerb).\r\n    // TODO: This introduces great problems for localization.\r\n    // Returns a promise which is resolved when all given promises are resolved. The returned\r\n    // promise gets an array with the collected results of all given promises.\r\n    // If options.suppressSuccessMessage == true then no success message is displayed.\r\n    handleExecutionResults: function (promise, options) {\r\n      var handleExecutionResultsDeferred = $.Deferred(),\r\n          modulePromise = $.Deferred();\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function(GlobalMessage) {\r\n        modulePromise.resolve(GlobalMessage);\r\n      }, modulePromise.reject);\r\n\r\n      $.whenAll(modulePromise, promise)\r\n       .always(function (parameters) {\r\n        var GlobalMessage = parameters[0],\r\n            results = parameters[1];\r\n        if (!_.isArray(results)) {\r\n          results = [results];\r\n        }\r\n\r\n        // At this point all promises from all commands are either resolved or rejected\r\n        // If the command execution was successful, the node is in the results. If the command\r\n        // failed the result is Error\r\n        var okCnt = 0;\r\n        var failedCnt = 0;\r\n        _.each(results, function (result) {\r\n          if (result !== undefined && !result.cancelled) {\r\n            if (result instanceof Error) {\r\n              failedCnt++;\r\n            } else {\r\n              okCnt++;\r\n            }\r\n          }\r\n        });\r\n        if (failedCnt === 0 && okCnt === 0) {\r\n          // user canceled confirmation dialog or\r\n          // no parameter was intentionally specified for e.g. resolve and reject to skip error handling\r\n          handleExecutionResultsDeferred.reject();\r\n          return;\r\n        }\r\n        var commandError = results[0];\r\n        // the command itself took care of the status  and error handling\r\n\r\n        if (commandError instanceof VersionModel) {\r\n          // let's override language bundles based on model type.\r\n          _.extend(defaultLang, versionsLang);\r\n        } else {\r\n          _.extend(defaultLang, lang);\r\n        }\r\n\r\n        if (results.length === 1) {\r\n          if (okCnt === 1) {\r\n            if (!options.suppressSuccessMessage) {\r\n              GlobalMessage.showMessage(\"success\",\r\n                  _.str.sformat(defaultLang.CommandSuccessfullySingular, okCnt,\r\n                      options.command.get('doneVerb')));\r\n            }\r\n          } else {\r\n            var message = commandError.errorDetails || commandError.message;\r\n\r\n            if (config.offlineSupport && commandError.statusCode === 0) {\r\n              handleExecutionResultsDeferred.reject(commandError);\r\n            }\r\n            else if (!options.suppressFailMessage && !commandError.suppressFailMessage) {\r\n              GlobalMessage.showMessage(\"error\",\r\n                  _.str.sformat(defaultLang.CommandFailedSingular, failedCnt,\r\n                      options.command.get('verb')),\r\n                  message);\r\n            }\r\n          }\r\n        } else {\r\n          if (failedCnt === 0) {\r\n            // all were successful\r\n            if (!options.suppressSuccessMessage) {\r\n              GlobalMessage.showMessage(\"success\",\r\n                  _.str.sformat(defaultLang.CommandSuccessfullyPlural, okCnt,\r\n                      options.command.get('doneVerb')\r\n                  ));\r\n            }\r\n          } else {\r\n            if (okCnt === 0) {\r\n              // all failed\r\n              if (config.offlineSupport && commandError.statusCode === 0) {\r\n                handleExecutionResultsDeferred.reject(commandError);\r\n              }\r\n              else if (!options.suppressFailMessage && !commandError.suppressFailMessage) {\r\n                GlobalMessage.showMessage(\"error\",\r\n                    _.str.sformat(defaultLang.CommandFailedPlural, failedCnt,\r\n                        options.command.get('verb')\r\n                    ));\r\n              }\r\n            } else if (!options.suppressFailMessage && !commandError.suppressFailMessage) {\r\n              if (!!options.customError) {\r\n                GlobalMessage.showMessage('error', results[1]);\r\n              } else {\r\n                // some failed, some were successful\r\n                GlobalMessage.showMessage(\"error\",\r\n                  _.str.sformat(defaultLang.CommandFailedPartial, failedCnt, results.length,\r\n                      options.command.get('verb')\r\n                ));\r\n              }\r\n            }\r\n          }\r\n        }\r\n        handleExecutionResultsDeferred.resolve(results);\r\n      });\r\n      // return a promise - table toolbar waits for it to do anything else after command\r\n      // execution (like display inline form)\r\n      return handleExecutionResultsDeferred.promise();\r\n    },\r\n\r\n    _getErrorMessageFromResponse: function (err) {\r\n      var errorMessage;\r\n      if (err && err.responseJSON && err.responseJSON.error) {\r\n        errorMessage = err.responseJSON.error;\r\n      } else {\r\n        var errorHtml = base.MessageHelper.toHtml();\r\n        base.MessageHelper.reset();\r\n        errorMessage = $(errorHtml).text();\r\n      }\r\n      return errorMessage;\r\n    },\r\n\r\n    // TODO: Deprecate and remove this method in favour of node.fetch.\r\n    refreshModelAttributesFromServer: function (node, collection) {\r\n      var tempNode = node.clone();\r\n      tempNode.collection = collection || node.collection;\r\n      return tempNode.fetch()\r\n                     .then(function () {\r\n                       node.set(tempNode.attributes);\r\n                       if (tempNode.original) {\r\n                         node.original = tempNode.original;\r\n                       }\r\n                       return node;\r\n                     });\r\n    },\r\n\r\n    showOfflineMessage: function (error, yesCallBck, noCallBack) {\r\n      if (error && error.statusCode === 0 && config.offlineSupport) {\r\n        var self = this;\r\n\r\n        require(['csui/dialogs/modal.alert/modal.alert'],\r\n            function (modalAlert) {\r\n\r\n              modalAlert.showInformation(defaultLang.GoToOffline, defaultLang.NoConnectivity,\r\n                  {\r\n                    buttons: modalAlert.buttons.YesNo\r\n                  })\r\n                  .always(function (answer) {\r\n                    if (answer) {\r\n                      yesCallBck ? yesCallBck() : window.location.href = \"#offline.list\";\r\n                    }\r\n                    else {\r\n                      noCallBack ? noCallBack() : self.trigger('offline:refused');\r\n                    }\r\n                  });\r\n            });\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  var helperInstance = new CommandHelper();\r\n  return helperInstance;\r\n\r\n});\r\n\n","csui.define('csui/models/command',[\r\n  'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/commandhelper'\r\n], function (_, Backbone, CommandHelper) {\r\n\r\n  // {\r\n  //   defaults: {\r\n  //     signature:   unique identifier among all commands\r\n  //     name:        title to show in the UI by default\r\n  //     command_key: permitted action identifier(s) returned by the server\r\n  //     openable:    use the \"openable\" node attribute to enable the command\r\n  //     types:       node types supported by the command\r\n  //     scope:       node scope to work at: singe|multiple\r\n  //  },\r\n  //\r\n  //   getCommandKey: function () {\r\n  //     returns an array of signatures of required permitted actions\r\n  //     (optional, the attribute command_key will be checked otherwise)\r\n  //   },\r\n  //\r\n  //   enabled: function (status) {\r\n  //     returns boolean if this command should be enabled or available;\r\n  //     the default implementation checks the presence of a permitted\r\n  //     action (command_key) or openability, with consideration of the\r\n  //     supported scope and types\r\n  //     (optional, the attributes command_key, openable, types and scope\r\n  //      will be checked otherwise)\r\n  //   },\r\n  //\r\n  //   execute: function (status, options) {\r\n  //     executes this command; no default implementation\r\n  //   }\r\n  // }\r\n\r\n  var CommandModel = Backbone.Model.extend({\r\n    idAttribute: 'signature',\r\n\r\n    constructor: function CommandModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    getCommandKey: function () {\r\n      var commandKey = this.get('command_key');\r\n      return commandKey ? Array.isArray(commandKey) ? commandKey : [commandKey] : [];\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var scope = this.get('scope');\r\n      var nodes = this._getNodesByScope(status, scope);\r\n      if (scope && !(nodes && nodes.length)) {\r\n        return false;\r\n      }\r\n\r\n      var types = this.get('types') || [];\r\n      if (types.length && !this.checkTypes(nodes, types)) {\r\n        return false;\r\n      }\r\n\r\n      var openable = this.get('openable');\r\n      // If openability was requested and all nodes are openable,\r\n      // no permitted actions checks will be performed.\r\n      if (openable && this.checkOpenability(nodes)) {\r\n        return true;\r\n      }\r\n\r\n      var signatures = this.getCommandKey && this.getCommandKey()\r\n        || this.get('command_key') || [];\r\n      // If sole openability was requested and is not granted\r\n      // and no permitted actions were requested in addition,\r\n      // the command will be disabled.\r\n      if (openable && !signatures.length) {\r\n        return false;\r\n      }\r\n      // If either no permissions were requested or all were granted,\r\n      // the command will be enabled.\r\n      return !signatures.length || this.checkPermittedActions(nodes, signatures);\r\n    },\r\n\r\n    isNonPromoted: function (status) {\r\n      var scope         = this.get(\"scope\"),\r\n          nodes         = this._getNodesByScope(status, scope),\r\n          signatures    = this.getCommandKey && this.getCommandKey()\r\n                            || this.get('command_key') || [],\r\n          isNonPromoted = false;\r\n\r\n      // if at least one node is selected and at least one selected node\r\n      // has action which is non-promoted\r\n      if (nodes && nodes.length) {\r\n        var checkFn = this._getNonPromotedCheckFunctionsForSignatures(signatures);\r\n        if (checkFn) {\r\n          _.find(nodes, function (node) {\r\n            var action = checkFn(node);\r\n            if (action && action.get('csuiNonPromotedAction') === true) {\r\n              isNonPromoted = true;\r\n              return true;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      return isNonPromoted;\r\n    },\r\n\r\n    _getNodesByScope: function (status, scope) {\r\n      // get the array of nodes which the command should apply to\r\n      // according to the scope which the command is capable of\r\n      var nodes;\r\n      switch (scope) {\r\n      case \"single\":\r\n        nodes = CommandHelper.getJustOneNode(status);\r\n        nodes && (nodes = [nodes]);\r\n        break;\r\n      default: // without a specific scope, use case \"multiple\"\r\n        // the checks below use an array; not a Backbone.Collection\r\n        nodes = CommandHelper.getAtLeastOneNode(status).models;\r\n        break;\r\n      }\r\n      return nodes;\r\n    },\r\n\r\n    _getCheckFunctionsForSignatures: function (signatures) {\r\n      if (signatures && signatures.length) {\r\n        if (_.isArray(signatures)) {\r\n          return function (node) {\r\n            return _.any(signatures, function (signature) {\r\n              return node.actions && node.actions.findRecursively(signature);\r\n            });\r\n          };\r\n        }\r\n        return function (node) {\r\n          return node.actions && node.actions.findRecursively(signatures);\r\n        };  \r\n      }\r\n    },\r\n\r\n    _getNonPromotedCheckFunctionsForSignatures: function (signatures) {\r\n      var checkFn;\r\n      if (signatures) {\r\n        if (_.isArray(signatures) && signatures.length) {\r\n          checkFn = function (node) {\r\n            var action;\r\n            _.find(signatures, function (signature) {\r\n              action = node.actions && node.actions.findRecursively(signature);\r\n              return !!action;\r\n            });\r\n            return action;\r\n          };\r\n        } else if (_.isString(signatures)) {\r\n          checkFn = function (node) {\r\n            return node.actions && node.actions.findRecursively(signatures);\r\n          };\r\n        }\r\n      }\r\n      return checkFn;\r\n    },\r\n\r\n    checkTypes: function (nodes, types) {\r\n      // if at least one node is selected and each selected node\r\n      // has its type among the supported ones, the command is enabled\r\n      if (nodes) {\r\n        if (!_.isArray(nodes)) {\r\n          nodes = [nodes];\r\n        }\r\n        if (nodes.length) {\r\n          return nodes.every(function (node) {\r\n            return types.indexOf(node.get('type')) >= 0;\r\n          });\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    checkOpenability: function (nodes) {\r\n      // if at least one node is selected and each selected node\r\n      // has the \"openable\" attribute set, the command is enabled\r\n      if (nodes) {\r\n        if (!_.isArray(nodes)) {\r\n          nodes = [nodes];\r\n        }\r\n        if (nodes.length) {\r\n          return nodes.every(function (node) {\r\n            return node.get('openable');\r\n          });\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    checkPermittedActions: function (nodes, signatures) {\r\n      // if at least one node is selected and each selected node\r\n      // has the right action in actions, the command is enabled\r\n      if (nodes) {\r\n        if (!_.isArray(nodes)) {\r\n          nodes = [nodes];\r\n        }\r\n        if (nodes.length) {\r\n          // If no action signatures were specified, default to permitted\r\n          // actions requested bu this command.\r\n          if (!signatures) {\r\n            signatures = this.getCommandKey && this.getCommandKey()\r\n              || this.get('command_key') || [];\r\n          }\r\n          var checkNode = this._getCheckFunctionsForSignatures(signatures);\r\n          // if no command_key is specified, the descended command is\r\n          // always enabled; but it usually overrides the enabled() method\r\n          return !checkNode || _.all(nodes, checkNode);\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    _getNodeActionForSignature: function (node, signatures) {\r\n      var action;\r\n      if (node) {\r\n        var checkNode = this._getCheckFunctionsForSignatures(signatures);\r\n        if (!!checkNode) {\r\n          action = checkNode.call(this, node);\r\n        }\r\n      }\r\n      return action;\r\n    }\r\n  });\r\n\r\n  return CommandModel;\r\n});\r\n\n","csui.define('csui/utils/commands/back.to.last.fragment',['module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command', 'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, $, _, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var BackToLastFragment = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'BackToLastFragment',\r\n      name: lang.GoBack\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n\r\n      var config = _.extend({\r\n            enabled: false\r\n          }, module.config()),\r\n          context = status.context || options && options.context;\r\n\r\n      if (!context || !config.enabled) {\r\n        return false;\r\n      }\r\n\r\n      var viewStateModel = context && context.viewStateModel;\r\n      if (viewStateModel) {\r\n        return !!viewStateModel.getLastHistoryEntry();\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var context = status.context || options && options.context,\r\n          viewStateModel = context && context.viewStateModel;\r\n\r\n      if (viewStateModel) {\r\n        viewStateModel.set('browsing', true);\r\n        viewStateModel.restoreLastFragment();\r\n      }\r\n\r\n      return $.Deferred().resolve().promise();\r\n    }\r\n\r\n  });\r\n\r\n  return BackToLastFragment;\r\n\r\n});\r\n\n","csui.define('csui/integration/folderbrowser/commands/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/integration/folderbrowser/commands/go.to.node.history',['module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command', 'csui/integration/folderbrowser/commands/nls/localized.strings'\r\n], function (module, require, $, _, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var visitedNodesByContext = {};\r\n\r\n  var GoToNodeHistoryCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Back',\r\n      name: lang.GoToHistory\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      // Module configuration can change later, than this module has been\r\n      // required and its callback executed. Repeat reading its config.\r\n      var config = _.extend({\r\n            enabled: false\r\n          }, module.config()),\r\n          context = status.context || options && options.context,\r\n          visitedNodes;\r\n      // Context us not mandatory; some commands can work without it,\r\n      // and those, which cannot, should say it\r\n      if (!context) {\r\n        return false;\r\n      }\r\n      if (config.enabled) {\r\n        this._ensureGoBackList(context);\r\n      }\r\n      visitedNodes = visitedNodesByContext[context.cid] || [];\r\n      // Top node is the current one. At least one more node below is needed\r\n      // for being able to go back to it.\r\n      return config.enabled && visitedNodes.length > 1;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/contexts/factories/next.node'\r\n      ], function (NextNodeModelFactory) {\r\n        var context = status.context || options && options.context,\r\n            nextNode = context.getModel(NextNodeModelFactory),\r\n            visitedNodes = visitedNodesByContext[context.cid] || [];\r\n        // Do not crash if somebody executed this command without asking\r\n        // if it is enabled first. Sanity check.\r\n        if (visitedNodes.length > 1) {\r\n          // Top node is the current one. Pop it, so that the previous one\r\n          // on the stack can become the current one.\r\n          visitedNodes.pop();\r\n          nextNode.set('id', visitedNodes[visitedNodes.length - 1]);\r\n        }\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    clearHistory: function (context) {\r\n      delete visitedNodesByContext[context.cid];\r\n    },\r\n\r\n    _ensureGoBackList: function (context) {\r\n      // There is only one command instance on the page, once the command\r\n      // has been required, but there can be multiple contexts.\r\n      var visitedNodes = visitedNodesByContext[context.cid];\r\n      if (visitedNodes) {\r\n        return;\r\n      }\r\n      visitedNodes = visitedNodesByContext[context.cid] = [];\r\n      require(['csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/next.node'\r\n      ], function (NodeModelFactory, NextNodeModelFactory) {\r\n        var nextNode = context.getModel(NextNodeModelFactory);\r\n        // Ensure, that the initially empty stack start with the current node.\r\n        visitCurrentNode(NodeModelFactory);\r\n        // Whenever the context is fetched, ensure, that the new node gets\r\n        // pushed on the top of the stack.\r\n        context.on('request', function () {\r\n          visitCurrentNode(NodeModelFactory);\r\n        });\r\n        // Some components either do not wait for context's \"request\" event,\r\n        // or they registered their listener earlier, than this command.\r\n        // Get the new node before a context plugin decides to fetch context.\r\n        nextNode.on('change:id', function () {\r\n          visitCurrentNode(NextNodeModelFactory);\r\n        });\r\n        function visitCurrentNode(Factory) {\r\n          var node = context.getModel(Factory),\r\n              nodeId = node.get('id');\r\n          // Node ID could be reset, if nextNode event has been caught.\r\n          // If both nextNode's and node's events are triggered, this\r\n          // function will be called with the same node ID.\r\n          if (nodeId && visitedNodes[visitedNodes.length - 1] !== nodeId) {\r\n            visitedNodes.push(nodeId);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  return GoToNodeHistoryCommand;\r\n\r\n});\r\n\n","csui.define('csui/integration/folderbrowser/commands/nls/root/localized.strings',{\r\n  \"GoToHistory\": \"Go Back\",\r\n  \"OpenFullPageContainer\": \"Open Full Page Container\"\r\n});\r\n\n","\n","csui.define('csui/integration/folderbrowser/commands/open.full.page.container',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command',\r\n  'i18n!csui/integration/folderbrowser/commands/nls/localized.strings'\r\n], function (module, require, $, _, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var OpenFullPageWorkpsace = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'Page',\r\n      name: lang.OpenFullPageContainer\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var config = _.extend({\r\n        enabled: false\r\n      }, module.config());\r\n      return config.enabled && !!status.container;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/node.links/node.links'], function (nodeLinks) {\r\n        window.open(nodeLinks.getUrl(status.container));\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return OpenFullPageWorkpsace;\r\n});\r\n\n","csui.define('csui/integration/folderbrowser2/commands/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/integration/folderbrowser2/commands/nls/root/localized.strings',{\r\n  \"OpenFullPageContainer\": \"Open Full Page Container\"\r\n});\r\n\n","\n","csui.define('csui/integration/folderbrowser2/commands/open.full.page.container',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command',\r\n  'i18n!csui/integration/folderbrowser2/commands/nls/localized.strings'\r\n], function (module, require, $, _, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var OpenFullPageWorkpsace = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'Page',\r\n      name: lang.OpenFullPageContainer\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var config = _.extend({\r\n        enabled: false\r\n      }, module.config());\r\n      return config.enabled && !!status.container;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/node.links/node.links'], function (nodeLinks) {\r\n        window.open(nodeLinks.getUrl(status.container));\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return OpenFullPageWorkpsace;\r\n});\r\n\n","csui.define('csui/models/commands',['csui/lib/underscore', 'csui/lib/backbone', 'csui/models/command'\r\n], function (_, Backbone, CommandModel) {\r\n\r\n  var CommandCollection = Backbone.Collection.extend({\r\n\r\n    model: CommandModel,\r\n\r\n    constructor: function CommandCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    clone: function () {\r\n      // Provide the options; they may include other parameters\r\n      var clone = new this.constructor(this.models, this.options);\r\n      clone.signatures = _.clone(this.signatures);\r\n      return clone;\r\n    },\r\n\r\n    // Get 'command_key' filtering by toolbarItems using signatures.\r\n    getSignatures: function (toolbarItems) {\r\n      var sigArray = [];\r\n      _.mapObject(toolbarItems, function (val, key) {\r\n        sigArray = _.union(sigArray, _.without(val.getCollection().pluck('signature'), 'disabled'));\r\n      });\r\n\r\n      var commands = this.clone();\r\n      var commandsToRemove = [];\r\n      commands.each(function (command) {\r\n        if (sigArray.indexOf(command.get('signature')) === -1) {\r\n          commandsToRemove.push(command);\r\n        }\r\n      });\r\n      commands.remove(commandsToRemove, {silent: true});\r\n\r\n      return commands.getAllSignatures();\r\n    },\r\n\r\n    getAllSignatures: function () {\r\n      return _\r\n          .chain(this.models)\r\n          .invoke('getCommandKey')\r\n          .map(function (commandKeys) {\r\n            // If there are multiple command keys to check, take just the\r\n            // first one, which is the V2 one needed for the URL query\r\n            var firstCommandKey = commandKeys[0];\r\n            // If the 'default' command key is requested, add the concrete\r\n            // key too; v1 expects 'default' and v2 'open', while the\r\n            // concrete action would be at the third place then.\r\n            if (firstCommandKey === 'default') {\r\n              return ['default', 'open', commandKeys[2]];\r\n            }\r\n            return commandKeys;\r\n          })\r\n          .flatten()\r\n          .compact()\r\n          .invoke('toLowerCase')\r\n          .unique()\r\n          .value();\r\n    }\r\n\r\n  });\r\n\r\n  return CommandCollection;\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands',[\r\n  'csui/lib/underscore', 'csui/models/commands',\r\n  // Load extra commands to be added to the common collection\r\n  'csui-ext!csui/utils/commands'\r\n], function (_, CommandCollection, extraCommands) {\r\n  'use strict';\r\n\r\n  var commands = new CommandCollection();\r\n\r\n  _.extend(commands, {\r\n    signatures: {\r\n      browse: 'Browse',\r\n      open: 'Open',\r\n      download: 'Download',\r\n      add: 'Add',\r\n      navigate: 'Navigate',\r\n      original: 'Original'\r\n    },\r\n    version: '1.0'\r\n  });\r\n\r\n  if (extraCommands) {\r\n    commands.add(\r\n        _.chain(extraCommands)\r\n         .flatten(true)\r\n         .map(function (Command) {\r\n           return new Command();\r\n         })\r\n         .value()\r\n    );\r\n  }\r\n\r\n  return commands;\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/dialogs/file.open/impl/file.open',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<input type=\\\"file\\\" style=\\\"display:none\\\" \"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"multiple\") || (depth0 != null ? lookupProperty(depth0,\"multiple\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"multiple\",\"hash\":{},\"loc\":{\"start\":{\"line\":1,\"column\":40},\"end\":{\"line\":1,\"column\":52}}}) : helper)))\n    + \">\\r\\n\";\n}});\nHandlebars.registerPartial('csui_dialogs_file.open_impl_file.open', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/dialogs/file.open/file.open.dialog',['module', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/marionette', 'csui/utils/log', 'csui/utils/base',\r\n  'hbs!csui/dialogs/file.open/impl/file.open'\r\n], function (module, _, $, Marionette, log, base, template) {\r\n  'use strict';\r\n\r\n  log = log(module.id);\r\n\r\n  var FileOpenDialog = Marionette.ItemView.extend({\r\n\r\n    className: 'csui-file-open',\r\n\r\n    template: template,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        multiple: this.options.multiple ? 'multiple' : ''\r\n      };\r\n    },\r\n\r\n    ui: {\r\n      fileInput: 'input'\r\n    },\r\n\r\n    events: {\r\n      'change @ui.fileInput': '_processFiles'\r\n    },\r\n\r\n    constructor: function FileOpenDialog(options) {\r\n      // Memoize properties, which can be provided as functions\r\n      this.className = _.result(this, 'className');\r\n\r\n      // If the previous caller didn't destroy the dialog, do it now.\r\n      // The view should be garbage collected. There should be just\r\n      // one dialog on the page at the same time.\r\n      var earlierElement = $(document.body).find('> .' + this.className);\r\n      if (earlierElement.length) {\r\n        log.debug('Removing an earlier file-open input element.')\r\n        && console.log(log.last);\r\n        earlierElement.remove();\r\n      }\r\n\r\n      Marionette.ItemView.prototype.constructor.call(this, options);\r\n    },\r\n\r\n    onDestroy: function(){\r\n      this.ui.fileInput.off();\r\n    },\r\n\r\n    show: function () {\r\n      log.debug('Showing a file-open input element.')\r\n      && console.log(log.last);\r\n      this.render();\r\n      $(document.body).append(this.el);\r\n      this.ui.fileInput.trigger('click');\r\n      this.ui.fileInput.trigger('focus');\r\n    },\r\n\r\n    _processFiles: function (event) {\r\n      var originalEvent = event.originalEvent,\r\n          files = originalEvent.target.files ||\r\n                  originalEvent.dataTransfer &&\r\n                  originalEvent.dataTransfer.files;\r\n      log.debug(files.length + ' file(s) selected by a file-open input element.')\r\n      && console.log(log.last);\r\n      this.trigger('add:files', files);\r\n    }\r\n\r\n  });\r\n\r\n  return FileOpenDialog;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add/add.mixin',[\"require\", \"csui/lib/jquery\", \"csui/lib/underscore\",\r\n  \"csui/utils/url\", \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/log\", \"csui/utils/base\", \"csui/utils/commandhelper\",\r\n  'csui/models/node/node.model',\r\n  'csui/dialogs/file.open/file.open.dialog'\r\n], function (require, $, _, URL, lang, log, base, CommandHelper,\r\n  NodeModel, FileOpenDialog) {\r\n  'use strict';\r\n\r\n  var AddMixin = {\r\n\r\n    mixin: function (prototype) {\r\n      return _.extend(prototype, {\r\n\r\n        _selectFilesForUpload: function (status, options) {\r\n          var fileOpenDialog,\r\n              deferred = $.Deferred();\r\n          var container = status.container || options.container;\r\n          if (container && container.get('type') === 136 && !container.get(\"fileOrder\")) { //fetch order_next value before each upload set\r\n            var url = container.connector.getConnectionUrl().getApiBase('v2'),\r\n              query = URL.combineQueryString({\r\n                fields: ['properties{order_next}'],\r\n              }),\r\n            ajaxOptions = {\r\n              url: URL.combine(url, 'nodes', container && container.get('id'), '?' + query),\r\n              type: 'GET',\r\n              contentType: 'application/x-www-form-urlencoded'\r\n            };\r\n            container && container.connector.makeAjaxCall(ajaxOptions).always(function (resp) {\r\n              //ignoring the failed scenario as it is not required, handling with .always\r\n                resp.results && container.set(\"order_next\", resp.results.data.properties.order_next);\r\n            });\r\n          }\r\n          // View to provide the area for the drag'n'drop overlay-view, which will\r\n          // turn up when files are dragged over it and trigger an event when the\r\n          // files are dropped on it.\r\n          require(['csui/controls/globalmessage/globalmessage'\r\n          ], function (GlobalMessage) {\r\n            if (GlobalMessage.isActionInProgress(options.actionType, lang.UploadNotAllowed,\r\n                lang.CommandTitleAdd)) {\r\n              return deferred.resolve();\r\n            }\r\n            fileOpenDialog = new FileOpenDialog({multiple: true});\r\n            deferred.resolve(); // resolve immediately because fileOpenDialog can't trigger anything\r\n            // on cancel\r\n            fileOpenDialog\r\n              .listenTo(fileOpenDialog, 'add:files', function (files) {\r\n                require(['csui/controls/fileupload/fileupload'\r\n                ], function (fileUploadHelper) {\r\n                  deferred.resolve();\r\n                  var uploadController = fileUploadHelper.newUpload(status, options);\r\n                  uploadController.addFilesToUpload(files, {\r\n                    collection: status.collection,\r\n                    excludeAddVersion: options.excludeAddVersion,\r\n                    excludeAddVersionforFolders: options.excludeAddVersion\r\n                  });\r\n                  uploadController.listenTo(uploadController, 'destroy', function () {\r\n                    fileOpenDialog.destroy();\r\n                  });\r\n                });\r\n              }).show();\r\n          });\r\n          return deferred.promise();\r\n        },\r\n\r\n        // The type_name is used before the actual node is created to supply\r\n        // the right icon, to provide the placeholder text for entering the\r\n        // node name, to make the title of the creation dialog etc.\r\n        _getAddableTypeName: function (status, options) {\r\n          // The command caller can override the type name returned by\r\n          // /addablenodetypes\r\n          if (options.addableTypeName) {\r\n            return options.addableTypeName;\r\n          }\r\n          // The enable method checks, that the type exists\r\n          var addableType = status.data.addableTypes.findWhere({\r\n            type: options.addableType\r\n          });\r\n          // The type_name is he same as returned by the server from the node\r\n          // info calls; nodeSpriteCollection should be used to show the\r\n          // displayable node type name and icon\r\n          return addableType.get('type_name');\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  return AddMixin;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add.categories',[\"require\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/utils/base\", \"csui/utils/log\",\r\n  \"csui/models/command\"\r\n], function (require, $, _, base, log, CommandModel) {\r\n\r\n  var AddCategories = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'AddCategory',\r\n      command_key: ['addcategory', 'AddCategory'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var scope = this.get(\"scope\");\r\n      var nodes = this._getNodesByScope(status, scope);\r\n\r\n      if (nodes && nodes.length > 0) {\r\n        // since this is a 'single' scope command, just check one node\r\n        if (nodes[0].get('id') === undefined) {\r\n          // ********* NOTE: **********\r\n          // For Create scenario, the server team does not deliver a RestAPI call to get the\r\n          // actions. Both Stefan Greim from CWS and Alex Gerasimov from RM have special\r\n          // requirements to enable/disable the actions based on the workflow/object state.\r\n          // Ferda came up with a solution by checking:\r\n          // - if there is no form[role_name='categories'], then allow the 'AddCategory' command\r\n          // - or if there is form[role_name='categories'], then check custom field in Alpaca form:\r\n          //   >> options.forms[role_name='categories'].schema.additionalProperties = true/false\r\n          // Then enable/disable the 'AddCategory' action based on this value.\r\n          //\r\n          // Stefan and Alex will set this value in their code if they want to override and control\r\n          // the 'AddCategory' command.  For their commands such as 'AddClassifications', they will\r\n          // implement similar logics as of this 'add.categories' command in their command\r\n          // implementation of the enabled() method.\r\n\r\n          var enabled = true;\r\n          if (status.originalFormCollection) {\r\n            status.originalFormCollection.each(function (form) {\r\n              if (form.get('role_name') === 'categories' &&\r\n                  form.get('schema').additionalProperties === false) {\r\n                enabled = false;\r\n              }\r\n            });\r\n          }\r\n          return enabled;\r\n        } else {\r\n          // For Edit/Copy/Move scenario, check the node for the actions\r\n          return CommandModel.prototype.enabled.apply(this, arguments);\r\n        }\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/widgets/metadata/metadata.add.categories.controller'\r\n      ], function (MetadataAddCategoriesController) {\r\n\r\n        /* Options needed:\r\n        var options = {\r\n          action: this.options.action,\r\n          node: this.options.node,\r\n          collection: this.options.collection,\r\n          container: this.options.container,\r\n          inheritance: this.options.inheritance,\r\n          context: this.options.context,\r\n          parentView: this.options.parentView,  // use for blocking view and callback\r\n          addPropertiesCallback: this.options.addPropertiesCallback  // to insert the new Category\r\n        }; */\r\n\r\n        var metadataAddCatController = new MetadataAddCategoriesController();\r\n        metadataAddCatController.AddNewCategory(options)\r\n            .done(function (resp) {\r\n              if (options.addPropertiesCallback) {\r\n                options.addPropertiesCallback.call(options.parentView, resp.catModel);\r\n              }\r\n              deferred.resolve();\r\n            })\r\n            .fail(function (err) {\r\n              deferred.reject(err);\r\n            });\r\n\r\n      }, function (error) {\r\n        log.warn('Failed to load MetadataAddCategoriesController. {0}', error)\r\n        && console.warn(log.last);\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return AddCategories;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/compound.document/compound.document.util',['csui/lib/underscore'],\r\n  function (_) {\r\n\r\n    function verifyNodeAncestors(context) {\r\n      var ancestorCollection, isAncestorReleaseOrRevision;\r\n      ancestorCollection = _.has(context._factories.ancestors.property, \"models\") &&\r\n        context._factories.ancestors.property.models;\r\n      isAncestorReleaseOrRevision = _.find(ancestorCollection, function (ancestor) {\r\n        return _.contains([138, 139], ancestor.attributes.type);\r\n      });\r\n      // restricting commands only to compound documents which are not part\r\n      // of any release/revision (type 138/139)\r\n      if (!!isAncestorReleaseOrRevision) {\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    }\r\n    return {\r\n      verifyNodeAncestors: verifyNodeAncestors,\r\n    };\r\n  });\n","csui.define('csui/utils/commands/add',[\"module\", \"require\", \"csui/lib/jquery\", \"csui/lib/underscore\",\r\n  \"csui/utils/log\", \"csui/models/command\", 'csui/models/node/node.model',\r\n  'csui/utils/commands/add/add.mixin',\r\n  'csui/utils/commands/compound.document/compound.document.util',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\"\r\n], function (module, require, $, _, log, CommandModel, NodeModel, AddMixin, CompoundDocumentsUtil, lang) {\r\n  'use strict';\r\n\r\n  var config                   = module.config(),\r\n    supportTypes               = [0, 1, 140, 144, 298, 1307, 1308, 800, 801],\r\n    noFormTypes                = [144, 801, 1307],\r\n      extSignatures            = [],\r\n      extSupportTypes          = config.extSupportTypes || {},\r\n      extNoFormTypes           = config.extNoFormTypes || {},\r\n      extAddCommandsSignatures = config.extAddCommandSignatures || {};\r\n\r\n  supportTypes = Array.prototype.concat.apply(supportTypes, _.values(extSupportTypes));\r\n  noFormTypes = Array.prototype.concat.apply(noFormTypes, _.values(extNoFormTypes));\r\n  extSignatures = Array.prototype.concat.apply(extSignatures, _.values(extAddCommandsSignatures));\r\n\r\n  var AddCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"Add\"\r\n    },\r\n\r\n    enabled: function (status) {\r\n      status || (status = {});\r\n      if (status.container && status.container.get('container')) {\r\n        //Hide the add toolbar for the type collection 298\r\n        if (status.container.get(\"type\") === 298 || (status.container.get(\"type\") === 136 && !CompoundDocumentsUtil.verifyNodeAncestors(status.context))) {\r\n          return false;\r\n        }\r\n        status.data || (status.data = {});\r\n        var addableTypes = status.data.addableTypes;\r\n        return addableTypes && _.any(supportTypes, function (type) {\r\n          return !!addableTypes.get(type);\r\n        });\r\n      }\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      if (options && options.addableType === undefined) {\r\n        throw new Error('Missing options.addableType');\r\n      }\r\n      // the command handles multiple addable types (Content Server SubType)\r\n      var newNode, promise,\r\n          addableTypeName = this._getAddableTypeName(status, options);\r\n      // if status.forwardToTable == true then tabletoolbar (the command controller) can\r\n      // delegate the action to the table.view (used for inline forms)\r\n      switch (options.addableType) {\r\n      case 0: // folder\r\n      case 298: // collection\r\n      case 1308: // Support Asset Folder\r\n      case 800: // Intelligent Filing Folder\r\n        status.forwardToTable = true;\r\n        newNode = new NodeModel({\r\n          \"type\": options.addableType,\r\n          \"type_name\": addableTypeName,\r\n          \"container\": true,\r\n          \"name\": \"\" // start with empty name\r\n        }, {\r\n          connector: status.container.connector,\r\n          collection: status.collection\r\n        });\r\n        promise = $.Deferred().resolve(newNode).promise();\r\n        break;\r\n      case 136: // compound document\r\n        status.forwardToTable = true;\r\n        newNode = new NodeModel({\r\n          \"type\": options.addableType,\r\n          \"type_name\": addableTypeName,\r\n          \"container\": true,\r\n          \"name\": \"\" // start with empty name\r\n        }, {\r\n          connector: status.container.connector,\r\n          collection: status.collection\r\n        });\r\n        promise = $.Deferred().resolve(newNode).promise();\r\n        break;\r\n      case 140: // url (Content Server SubType)\r\n        status.forwardToTable = true;\r\n        newNode = new NodeModel({\r\n          \"type\": options.addableType,\r\n          \"type_name\": addableTypeName,\r\n          \"container\": false,\r\n          \"name\": \"\" // start with empty name\r\n        }, {\r\n          connector: status.container.connector,\r\n          collection: status.collection\r\n        });\r\n        promise = $.Deferred().resolve(newNode).promise();\r\n        break;\r\n      case 1: // short-cut (Content Server SubType)\r\n        status.forwardToTable = true;\r\n        promise = this._selectShortcutTarget(status, options);\r\n        break;\r\n      case 144: // document (Content Server SubType)\r\n      case 1307: // Support Asset\r\n      case 801: // Document (to be filled)\r\n        status.suppressSuccessMessage = true;\r\n        options.actionType = 'UPLOAD';\r\n        promise = this._selectFilesForUpload(status, options);\r\n        break;\r\n      default :\r\n        promise = this._executeExtCommands(status, options);\r\n      }\r\n      // TODO: The add command is no actual command.  It cannot say when it\r\n      // is finished - the node has been added.  Client which report the\r\n      // command status show immediately success.  It should be redesigned.\r\n\r\n      return promise;\r\n    },\r\n\r\n    _executeExtCommands: function(status, options) {\r\n      var def = $.Deferred(),\r\n          self = this;\r\n\r\n      require(['csui/utils/commands'\r\n      ], function (commands) {\r\n        for (var i = 0; i < extSignatures.length; i++) {\r\n          var command = commands.get(extSignatures[i]);\r\n          if (command.supportTypes &&\r\n              _.indexOf(command.supportTypes, options.addableType) > -1) {\r\n            command.execute(status, options)\r\n              .done(def.resolve)\r\n              .fail(def.reject);\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (i === extSignatures.length){\r\n          self.noAddCommandMessage(options)\r\n            .fail(def.reject);\r\n        }\r\n      });\r\n      return def.promise();\r\n    },\r\n\r\n    noAddCommandMessage: function (options) {\r\n      var errMsg = \"The \\\"Add\\\" action for the addableType \" +\r\n                   options.addableType + \" is not implemented\";\r\n      log.debug(errMsg) && console.log(log.last);\r\n      return $.Deferred().reject({\r\n        error: errMsg,\r\n        commandSignature: this.signature\r\n      }).promise();\r\n    },\r\n\r\n    _selectShortcutTarget: function (status, options) {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n      require(['csui/dialogs/node.picker/node.picker'\r\n      ], function (NodePicker) {\r\n        var pickerOptions   = {\r\n              dialogTitle: lang.ShortcutPickerTitle,\r\n              connector: status.container.connector,\r\n              context: options.context,\r\n              initialContainer: status.container,\r\n              globalSearch: true,\r\n              startLocation: 'recent.containers',\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              unselectableTypes: [141, 142, 133],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            },\r\n            addableTypeName = self._getAddableTypeName(status, options);\r\n        self.nodePicker = new NodePicker(pickerOptions);\r\n        return self.nodePicker\r\n          .show()\r\n          .then(function (args) {\r\n            var node = args.nodes[0];\r\n            var newNode = new NodeModel({\r\n              \"type\": 1,\r\n              \"type_name\": addableTypeName,\r\n              \"container\": false,\r\n              \"name\": node.get('name'),\r\n              \"original_id\": node.get('id'),\r\n              // Show the right icon for this not-yet-saved node\r\n              \"original_id_expand\": node.attributes\r\n            }, {\r\n              connector: status.container.connector,\r\n              collection: status.collection\r\n            });\r\n            return newNode;\r\n          })\r\n          .done(function () {\r\n            deferred.resolve.apply(deferred, arguments);\r\n          })\r\n          .fail(function () {\r\n            deferred.reject.apply(deferred, arguments);\r\n          });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  }, {\r\n\r\n    isAddableTypeWithoutInlineForm: function (addableType) {\r\n      return noFormTypes.indexOf( addableType) !== -1;\r\n    }\r\n\r\n  });\r\n\r\n  AddMixin.mixin(AddCommand.prototype);\r\n\r\n  return AddCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add.item.metadata',[\"module\", \"require\", \"csui/lib/underscore\", \"csui/lib/jquery\", \"csui/lib/backbone\",\r\n  \"csui/utils/log\", \"csui/utils/commandhelper\", \"csui/models/command\"\r\n], function (module, require, _, $, Backbone, log, CommandHelper, CommandModel) {\r\n\r\n  var AddItemMetadataCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"AddItemMetadata\",\r\n      command_key: \"Add_Item\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/widgets/metadata/metadata.add.item.controller'\r\n      ], function (MetadataAddItemController) {\r\n        var metadataAddItemController = new MetadataAddItemController();\r\n        metadataAddItemController\r\n            .displayForm(status, options)\r\n            .done(function () {\r\n              deferred.resolve.apply(deferred, arguments);\r\n            })\r\n            .fail(function () {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  AddItemMetadataCommand.version = \"1.0\";\r\n\r\n  return AddItemMetadataCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add.version',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/dialogs/file.open/file.open.dialog'\r\n], function (module, require, $, _, lang, CommandModel, CommandHelper,\r\n    FileOpenDialog) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    actionType: 'ADD_VERSION',\r\n    hideWarningAlert: false\r\n  });\r\n\r\n  var GlobalMessage;\r\n  var AddVersionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"AddVersion\",\r\n      command_key: \"addversion\",\r\n      name: lang.CommandNameAddVersion,\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status || (status = {});\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n\r\n      this.trigger('close:dialogView:form');\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        if (GlobalMessage.isActionInProgress(config.actionType, lang.AddVersionNotAllowed, lang.CommandNameAddVersion)) {\r\n          return deferred.resolve();\r\n        }\r\n        if (!!status.tableView) {\r\n          status.tableView.lockedForOtherContols = false;\r\n        }\r\n        self._pickFileAndUpload(status, options).done(deferred.resolve);\r\n        status.suppressSuccessMessage = true;\r\n        var file = status.file;\r\n\r\n        if (file) {\r\n          self\r\n              ._addVersionController(file, status)\r\n              .done(deferred.resolve)\r\n              .fail(deferred.reject);\r\n        }\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _pickFileAndUpload: function (status, options) {\r\n      var fileOpenDialog = new FileOpenDialog({multiple: false}),\r\n          deferred       = $.Deferred(),\r\n          self           = this;\r\n      deferred.resolve();\r\n      fileOpenDialog\r\n          .listenTo(fileOpenDialog, 'add:files', function (files) {\r\n            self._addVersionController(files[0], status)\r\n                .done(deferred.resolve)\r\n                .fail(deferred.reject)\r\n                .always(function () {\r\n                  fileOpenDialog.destroy();\r\n                });\r\n          })\r\n          .show();\r\n      return deferred.promise();\r\n    },\r\n\r\n    _addVersionController: function (file, status) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/controls/fileupload/impl/addversion.controller'\r\n      ], function (AddVersionController) {\r\n        var node = CommandHelper.getJustOneNode(status);\r\n        var addVersionController = new AddVersionController({\r\n          status: status,\r\n          view: status.originatingView,\r\n          selectedNode: node\r\n        });\r\n\r\n        return addVersionController\r\n            .uploadFile(file, config).done(deferred.resolve);\r\n\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n  });\r\n\r\n  return AddVersionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.node.perspective',['require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (require, $, _, CommandModel, CommandHelper, lang) {\r\n  'use strict';\r\n\r\n  var OpenNodePerspectiveCommand = CommandModel.extend({\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      options && options.originatingView && options.originatingView.trigger('destroy:gallery');\r\n      require(['csui/utils/contexts/factories/next.node'\r\n      ], function (NextNodeModelFactory) {\r\n        var context = status.context || options && options.context,\r\n            nextNode = context.getModel(NextNodeModelFactory),\r\n            node = CommandHelper.getJustOneNode(status);\r\n        if (!node || !node.get('id')) {\r\n          deferred.reject({message: lang.MissingNodeId});\r\n          return;\r\n        }\r\n\r\n        var viewState = context.viewStateModel.get('state');\r\n        if (viewState) {\r\n          context.viewStateModel.set('state', _.omit(viewState, 'filter'), {silent: true});\r\n        }\r\n\r\n        // The nodestable uses this event to remove the order_by from the viewStateModel\r\n        nextNode.trigger('before:change:id', node, options && options.originatingView);\r\n        // If the nextNode and node are the same we will lose the id if we do unset on\r\n        // the nextNode\r\n        var id = node.get('id');\r\n        nextNode.unset('id', { silent: true }).set('id', id);\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return OpenNodePerspectiveCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/browse',['csui/utils/commands/open.node.perspective', 'csui/utils/commandhelper'\r\n], function (OpenNodePerspectiveCommand, CommandHelper) {\r\n  'use strict';\r\n\r\n  var BrowseCommand = OpenNodePerspectiveCommand.extend({\r\n    defaults: {\r\n      signature: 'Browse',\r\n      // The server has no concrete action for children browsing;\r\n      // the 'default' command key has to be the first one\r\n      // WARNING: No other command should use the 'default'/'open'\r\n      // command key.  Always request a concrete command key from\r\n      // your REST API developer.\r\n      command_key: ['default', 'open', 'browse', 'Browse'],\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('container') && (\r\n          // Some scenarios receive nodes only with the open-ability flag.\r\n          node.get('openable')\r\n          // Other scenarios receive nodes with permitted actions, but because\r\n          // they are older, they do not include the open-ability flag.\r\n          || this.checkPermittedActions(node));\r\n    }\r\n  });\r\n\r\n  return BrowseCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/collection/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/collection/nls/root/lang',{\r\n  collectCommandSignature: 'Collect',\r\n  addItemsToolTip: 'Add Items',\r\n  collectItemsDialogTitle: 'Add items',\r\n  selectCollectionDialogTitle: 'Select collection',\r\n  selectButtonLabel: 'Add',\r\n  selectCollectButtonLabel: 'Collect',\r\n  conflictsItemsHeader: 'Listed items will not be added',\r\n  conflictsDialogCloseLabel: 'Close',\r\n  CollectItemsNoneMessage: \"No items added.\",\r\n  CollectOneItemSuccessMessage: '1 new item was successfully added',\r\n  CollectManyItemsSuccessMessage: '{0} new items were successfully added',\r\n  CollectOneItemFailMessage: '1 of your collected items already added',\r\n  CollectManyItemsFailMessage: '{0} of your collected items are already added',\r\n  RemoveCollectItemsCommandConfirmDialogHtml: \"<span class='msgIcon WarningIcon'>\" +\r\n                                              \"<%- message %>\" +\r\n                                              \"</span>\",\r\n  RemoveCommandConfirmDialogSingleMessage: 'Do you want to remove \"{0}\" from collection?',\r\n  RemoveCommandConfirmDialogMultipleMessage: \"Do you want to remove {0} items from collection?\",\r\n  RemoveCommandConfirmDialogTitle: \"Remove from collection\",\r\n  RemoveItemsNoneMessage: \"No items removed from collection.\",\r\n  RemoveOneItemSuccessMessage: \"1 item successfully removed from collection.\",\r\n  RemoveSomeItemsSuccessMessage: \"{0} items successfully removed from collection.\",\r\n  RemoveManyItemsSuccessMessage: \"{0} items successfully removed from collection.\",\r\n  RemoveOneItemFailMessage: \"1 item failed to remove from collection.\",\r\n  RemoveSomeItemsFailMessage: \"{0} items failed to remove from collection.\",\r\n  RemoveManyItemsFailMessage: \"{0} items failed to remove from collection.\",\r\n  RemoveSomeItemsFailMessage2: \"{2} items failed to remove from collection.\",\r\n  RemoveManyItemsFailMessage2: \"{2} items failed to remove from collection.\",\r\n  RemoveItems: 'Removing {0} items from collection',\r\n  RemovingOneItem: 'Removing item from collection',\r\n  RemovingSomeItems: 'Removing {0} items from collection',\r\n  CollectingOneItem: 'Collecting item',\r\n  CollectingItems: 'Collecting {0} items',\r\n  CollectManyItemsFailMessage2: '{2} items failed to Collecting.',\r\n  removefromCollection: \"Remove from collection\"\r\n});\n","\n","csui.define('csui/utils/commands/collection/collect.items',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/backbone', 'csui/utils/url', 'csui/utils/command.error',\r\n  'csui/models/command', 'i18n!csui/utils/commands/collection/nls/lang',\r\n  'csui/utils/base', 'csui/models/nodes',\r\n  'csui/lib/underscore.string'\r\n], function (module, require, _, $, Backbone, Url, CommandError, CommandModel,\r\n    lang, base, NodeCollection) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  var GlobalMessage, TaskQueue, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory, CollectionConflictView,\r\n      CollectCommand = CommandModel.extend({\r\n        defaults: {\r\n          signature: 'CollectionCanCollect',\r\n          name: lang.addItemsToolTip,\r\n          command_key: ['collectionCanCollect'],\r\n          scope: 'single',\r\n          successMessages: {\r\n            formatForOne: lang.CollectOneItemSuccessMessage,\r\n            formatForTwo: lang.CollectManyItemsSuccessMessage,\r\n            formatForMany: lang.CollectManyItemsSuccessMessage,\r\n            formatForFive: lang.CollectManyItemsSuccessMessage\r\n          },\r\n          errorMessages: {\r\n            formatForOne: lang.CollectOneItemFailMessage,\r\n            formatForTwo: lang.CollectManyItemsFailMessage,\r\n            formatForMany: lang.CollectManyItemsFailMessage,\r\n            formatForFive: lang.CollectManyItemsFailMessage\r\n          }\r\n        },\r\n\r\n        enabled: function (status) {\r\n          var enableCollectionCanCollect = false;\r\n          if (status.container.get('type') === 298) {\r\n            status.nodes = new NodeCollection([status.container]);\r\n\r\n            enableCollectionCanCollect = CollectCommand.__super__.enabled.apply(this, arguments);\r\n\r\n            // front-end workaround as there is no support from REST-API side (LPAD-94582).\r\n            // \"workaround\": if the current container is asking for \"collect\" command along with\r\n            // 'collectioncancollect' in REST API request, then if there is no 'collect' action\r\n            // is returned in the REST API response for the current user, let's not enable this\r\n            // 'collectioncancollect' command as well.\r\n            if (enableCollectionCanCollect) {\r\n              var commands = status.container.commands;\r\n              if (commands &&\r\n                  (commands.indexOf('Collect') > 0 || commands.indexOf('collect') > 0)) {\r\n                enableCollectionCanCollect = !!(status.container.actions.get('Collect') ||\r\n                                                status.container.actions.get('collect'));\r\n              }\r\n            }\r\n\r\n          }\r\n          return enableCollectionCanCollect;\r\n        },\r\n\r\n        execute: function (status, options) {\r\n          var deferred = $.Deferred(),\r\n              self     = this;\r\n\r\n          require(['csui/controls/globalmessage/globalmessage',\r\n            'csui/controls/conflict.resolver/impl/collection.conflicts/collection.conflicts.view',\r\n            'csui/utils/taskqueue',\r\n            'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n            'csui/utils/contexts/factories/next.node'\r\n          ], function () {\r\n            GlobalMessage = arguments[0];\r\n            CollectionConflictView = arguments[1];\r\n            TaskQueue = arguments[2];\r\n            UploadFileCollection = arguments[3];\r\n            PageLeavingBlocker = arguments[4];\r\n            NextNodeModelFactory = arguments[5];\r\n            self._addToCollection(status, options)\r\n                .done(function (selectedOptions) {\r\n                  var selectedNodes    = selectedOptions.nodes,\r\n                      nodes            = _.map(selectedNodes, function (node) {\r\n                        return {\r\n                          name: node.get('name'),\r\n                          state: 'pending',\r\n                          count: 0,\r\n                          total: 1,\r\n                          node: node\r\n                        };\r\n                      }),\r\n                      targetFolder     = status.container,\r\n                      uploadCollection = new UploadFileCollection(nodes, {connector: connector}),\r\n                      connector        = status.container && status.container.connector;\r\n                  status.container.collection = status.collection;\r\n                  self._announceOperationStart(status);\r\n                  uploadCollection.each(function (fileUpload) {\r\n                    var node = fileUpload.get('node');\r\n                    fileUpload.node = node;\r\n                    fileUpload.unset('node');\r\n                    fileUpload.set('mime_type', node.get('mime_type'));\r\n                  });\r\n\r\n                  self._addSelectedNodesToCollection(uploadCollection, connector, targetFolder,\r\n                      status.collection)\r\n                      .then(function (promises) {\r\n                        GlobalMessage.hideFileUploadProgress();\r\n                        var result = self._checkPromises(promises);\r\n                        if (result.failedNodes.length) {\r\n                          self._showDialog(result.failedNodes).then(\r\n                              function (resolveOption, dialog) {\r\n                                dialog.kill();\r\n                                //if any success items are there then show global message\r\n                                if (result.successNodes.length) {\r\n                                  self._showGlobalMessage(result.successNodes.length);\r\n                                }\r\n                              });\r\n\r\n                        } else if (result.successNodes.length) {\r\n                          self._showGlobalMessage(result.successNodes.length);\r\n                        }\r\n                      });\r\n                  self._announceOperationEnd(status);\r\n                  deferred.resolve();\r\n                })\r\n                .fail(function (error) {\r\n                  if (error && !error.cancelled) {\r\n                    self.showError(error);\r\n                  }\r\n                  deferred.reject();\r\n                });\r\n          });\r\n          return deferred.promise();\r\n        },\r\n\r\n        _addToCollection: function (status, options) {\r\n          var self     = this,\r\n              deferred = $.Deferred();\r\n\r\n          require(['csui/dialogs/node.picker/node.picker'],\r\n              function (NodePicker) {\r\n                var pickerOptions = _.extend({\r\n                  selectableTypes: [],\r\n                  showAllTypes: true,\r\n                  orderBy: 'type asc',\r\n                  dialogTitle: lang.collectItemsDialogTitle,\r\n                  selectButtonLabel: lang.selectButtonLabel,\r\n                  globalSearch: true,\r\n                  selectMultiple: true,\r\n                  context: options ? options.context : status.context,\r\n                  startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                    'favorites', 'recent.containers'],\r\n                  resolveShortcuts: true\r\n                }, status);\r\n\r\n                self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n                self.nodePicker\r\n                    .show()\r\n                    .done(function () {\r\n                      deferred.resolve.apply(deferred, arguments);\r\n                    })\r\n                    .fail(function () {\r\n                      deferred.reject.apply(deferred, arguments);\r\n                    });\r\n              }, function (error) {\r\n                deferred.reject(error);\r\n              });\r\n          return deferred.promise();\r\n        },\r\n\r\n        _addSelectedNodesToCollection: function (uploadCollection, connector, targetFolder,\r\n            targetCollection) {\r\n          var self     = this,\r\n              queue    = new TaskQueue({\r\n                parallelism: config.parallelism\r\n              }),\r\n              count    = 0,\r\n              promises = _.map(uploadCollection.models, function (model) {\r\n                var deferred = $.Deferred();\r\n                queue.pending.add({\r\n                  worker: function () {\r\n                    var node     = model.node,\r\n                        node_id  = node.get('id'),\r\n                        targetId = targetFolder.get('id');\r\n                    self._collectNode(connector, targetId, node_id)\r\n                        .done(function () {\r\n                          // self._addToCurrentTable(model, targetCollection);\r\n                          model.set('count', 1);\r\n                          model.deferred.resolve(model);\r\n                          self._addToCurrentTable(model.node, targetCollection, targetId);\r\n                          deferred.resolve(model);\r\n                        })\r\n                        .fail(function (cause) {\r\n                          deferred.resolve(model);\r\n                        });\r\n                    return deferred.promise();\r\n                  }\r\n                });\r\n                count++;\r\n                return deferred.promise(promises);  // return promises\r\n              });\r\n          GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n            oneFileTitle: lang.CollectingOneItem,\r\n            oneFileSuccess: lang.CollectOneItemSuccessMessage,\r\n            multiFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n            oneFilePending: lang.CollectingOneItem,\r\n            multiFilePending: lang.CollectingItems,\r\n            oneFileFailure: lang.CollectOneItemFailMessage,\r\n            multiFileFailure: lang.CollectManyItemsFailMessage2,\r\n            someFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n            someFilePending: lang.CollectingItems,\r\n            someFileFailure: lang.CollectManyItemsFailMessage2,\r\n            enableCancel: false\r\n          });\r\n\r\n          return $.whenAll.apply($, promises);\r\n        },\r\n\r\n        _collectNode: function (connector, targetFolderID, node_id) {\r\n          var deferred = $.Deferred();\r\n          var nodeAttr = {\r\n            \"collection_id\": targetFolderID\r\n          };\r\n\r\n          var collectOptions = {\r\n            url: Url.combine(connector.getConnectionUrl().getApiBase('v2'), '/nodes/' + node_id),\r\n            type: 'PUT',\r\n            data: nodeAttr,\r\n            contentType: 'application/x-www-form-urlencoded'\r\n          };\r\n\r\n          connector.makeAjaxCall(collectOptions).done(function (resp) {\r\n            deferred.resolve(resp);\r\n\r\n          }).fail(function (resp) {\r\n            deferred.reject(resp);\r\n          });\r\n          return deferred.promise();\r\n        },\r\n\r\n        _getListView: function (conflictFiles) {\r\n          var retVal = new CollectionConflictView(_.extend({}, {collection: conflictFiles}));\r\n          return retVal;\r\n        },\r\n\r\n        _showDialog: function (conflictFiles) {\r\n          var deferred = $.Deferred(),\r\n              buttons  = [{\r\n                id: 'close',\r\n                close: true,\r\n                label: lang.conflictsDialogCloseLabel,\r\n                toolTip: lang.conflictsDialogCloseLabel,\r\n                click: function (args) {\r\n                  deferred.resolve('close', args.dialog);\r\n                }\r\n              }];\r\n          this._showConflictDialog(conflictFiles, buttons);\r\n          return deferred;\r\n        },\r\n\r\n        _showConflictDialog: function (collection, buttons) {\r\n          var self     = this,\r\n              deferred = $.Deferred();\r\n          require(['csui/controls/dialog/dialog.view'], function (DialogView) {\r\n            var failureMessage = base.formatMessage(collection.length, self.get(\"errorMessages\")),\r\n                dialog         = new DialogView({\r\n                  title: failureMessage,\r\n                  midSize: true,\r\n                  iconLeft: 'csui-icon-notification-information',\r\n                  className: \"csui-collection-conflicts-dialog\",\r\n                  view: self._getListView(collection),\r\n                  buttons: buttons\r\n                });\r\n            dialog.show();\r\n            return dialog;\r\n          });\r\n\r\n        },\r\n\r\n        _checkPromises: function (promises) {\r\n          if (!_.isArray(promises)) {\r\n            promises = [promises];\r\n          }\r\n\r\n          var successPromises = new Backbone.Collection(),\r\n              failedPromises  = new Backbone.Collection();\r\n\r\n          _.each(promises, function (prom) {\r\n            if (prom !== undefined) {\r\n              if (!prom.cancelled) {\r\n                if (prom.get(\"count\") === undefined) {\r\n                  //which is not resolved or rejected\r\n                } else if (prom.get(\"count\")) {\r\n                  successPromises.push(prom);\r\n                }\r\n                else {\r\n                  failedPromises.push(prom);\r\n                }\r\n              }\r\n            }\r\n          });\r\n\r\n          return {\r\n            successNodes: successPromises,\r\n            failedNodes: failedPromises\r\n          };\r\n        },\r\n\r\n        _addToCurrentTable: function (collectItem, targetCollection, targetId) {\r\n          collectItem.refernce_id = targetId;\r\n          collectItem.fetch({collection: targetCollection})\r\n              .then(function () {\r\n                var clonedCollectItem = collectItem.clone();\r\n                clonedCollectItem.isLocallyCreated = true;\r\n                targetCollection.unshift(clonedCollectItem);\r\n              });\r\n        },\r\n\r\n        _showGlobalMessage: function (successCount) {\r\n          var successMessage = base.formatMessage(successCount, this.get(\"successMessages\"));\r\n          GlobalMessage.showMessage(\"success\", successMessage);\r\n        },\r\n        _announceOperationStart: function (status) {\r\n          var originatingView = status.originatingView;\r\n          if (originatingView.blockActions) {\r\n            originatingView.blockActions();\r\n          }\r\n          PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n        },\r\n\r\n        _announceOperationEnd: function (status) {\r\n          PageLeavingBlocker.disable();\r\n          var originatingView = status.originatingView;\r\n          if (originatingView.unblockActions) {\r\n            originatingView.unblockActions();\r\n          }\r\n        }\r\n      });\r\n\r\n  return CollectCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/multiple.items',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/base', 'csui/utils/commandhelper', 'csui/utils/command.error'\r\n], function (module, require, _, $, base, CommandHelper, CommandError) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  // Dependencies initialized during execution\r\n  var PageLeavingBlocker;\r\n\r\n  var MultipleItemsCommand = {\r\n\r\n    execute: function (status, options) {\r\n      // avoid messages from handleExecutionResults\r\n      // we use our own evaluation here and show message\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      return this._performActions(status, options);\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self = this,\r\n          promises;\r\n      require(['csui/utils/taskqueue', 'csui/utils/page.leaving.blocker'\r\n      ], function (TaskQueue) {\r\n        PageLeavingBlocker = arguments[1];\r\n        options = options || {};\r\n        if (!options.context) {\r\n          options.context = status.context;\r\n        }\r\n        self._announceStart(status);\r\n        var nodes = CommandHelper.getAtLeastOneNode(status),\r\n            queue = new TaskQueue({\r\n              parallelism: options.parallelism || config.parallelism\r\n            });\r\n\r\n        promises = nodes.map(function (node, index) {\r\n          var deferred = $.Deferred();\r\n          queue.pending.add({\r\n            worker: function () {\r\n              self._performAction(node, options)\r\n                  .done(deferred.resolve)\r\n                  .fail(function(error){\r\n                    deferred.reject(error);\r\n                  });\r\n              return deferred.promise();\r\n            }\r\n          });\r\n          return deferred.promise();\r\n        });\r\n\r\n        // return a promise that has an array with results of original promises\r\n        $.whenAll\r\n            .apply($, promises)\r\n            .always(_.bind(self._announceFinish, self, status))\r\n            .done(function () {\r\n              if(!status.suppressMultipleSuccessMessage) {\r\n                self.showSuccess(promises);\r\n              }\r\n              deferred.resolve.apply(deferred, arguments);      // pass the original arguments to handler, so that events are triggered\r\n            })\r\n            .fail(function () {\r\n              if(!status.suppressMultipleFailMessage) {\r\n                self.showError(promises);\r\n              }\r\n              deferred.reject.apply(deferred, arguments);      // pass the original arguments to handler, so that events are triggered\r\n            });\r\n\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    showError: function(promises) {\r\n      var errorMessage,\r\n          successMessage;\r\n\r\n      var checkResult = this._checkPromises(promises);\r\n      if(checkResult) {\r\n        var countFailed = checkResult.countFailed;\r\n        var countOk = checkResult.countOk;\r\n\r\n        errorMessage = this._getErrorMessage(countFailed);\r\n\r\n        var msg;\r\n        if(countOk > 0) {\r\n          successMessage = this._getSuccessMessage(countOk);\r\n          msg = successMessage + \" \" + errorMessage;\r\n        } else {\r\n          msg = errorMessage;\r\n        }\r\n\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"error\", msg, undefined, {});\r\n        });\r\n      }\r\n    },\r\n\r\n    showSuccess: function(promises) {\r\n      var successMessage;\r\n\r\n      var checkResult = this._checkPromises(promises);\r\n      if (checkResult) {\r\n        var countOk = checkResult.countOk;\r\n\r\n        successMessage = this._getSuccessMessage(countOk);\r\n\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"success\", successMessage, undefined, {});\r\n        });\r\n      }\r\n    },\r\n\r\n    showSuccessWithLink: function(promises, msgOptions) {\r\n      var successMessage;\r\n\r\n      var checkResult = this._checkPromises(promises);\r\n      if (checkResult) {\r\n        var countOk = checkResult.countOk;\r\n\r\n        successMessage = this._getSuccessMessage(countOk);\r\n\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"success_with_link\", successMessage, undefined, msgOptions);\r\n        });\r\n      }\r\n    },\r\n\r\n    // helper\r\n    _getErrorMessage: function(cnt) {\r\n      var emessages = this.get(\"errorMessages\");\r\n      var errorMessage = base.formatMessage(cnt, emessages);\r\n\r\n      return errorMessage;\r\n    },\r\n\r\n    // helper\r\n    _getSuccessMessage: function(cnt) {\r\n      var smessages = this.get(\"successMessages\");\r\n      var successMessage = base.formatMessage(cnt, smessages);\r\n\r\n      return successMessage;\r\n    },\r\n\r\n    // Analyzes the given promises and returns a result object with:\r\n    // {\r\n    //   countOk: okCnt,\r\n    //   countFailed: failedCnt\r\n    // }\r\n    //\r\n    _checkPromises: function(promises) {\r\n      if (!_.isArray(promises)) {\r\n        promises = [promises];\r\n      }\r\n\r\n      var okCnt = 0;\r\n      var failedCnt = 0;\r\n\r\n      // At this point all promises from all commands must either be resolved or rejected.\r\n      _.each(promises, function (prom) {\r\n        if (prom !== undefined) {\r\n          // an error or a node can be cancelled, skip it from counting.\r\n          // pressing \"cancel\" button may result in object with cancelled flag set.\r\n          if (!prom.cancelled) {\r\n            if (prom instanceof CommandError) {\r\n              failedCnt++;\r\n            } else if (typeof prom.state !== 'undefined' && typeof prom.state === 'function') {\r\n              // if state exists, evaluate it\r\n              if (prom.state() && prom.state().toLowerCase() === 'resolved') {\r\n                okCnt++;\r\n              } else {\r\n                failedCnt++;\r\n              }\r\n            } else {\r\n              // some model or anything else\r\n              okCnt++;\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return {\r\n        countOk: okCnt,\r\n        countFailed: failedCnt\r\n      };\r\n    },\r\n\r\n    _setViewStateModelMultiItemOperationStatus: function (context, started) {\r\n      var viewStateModel = context && context.viewStateModel;\r\n      viewStateModel && viewStateModel.set('multiItemOperationRunning', started);\r\n    },\r\n\r\n    _announceStart: function (status) {\r\n     if(!status.deleteBlockAction){\r\n        var originatingView = status.originatingView;\r\n        if (originatingView && originatingView.blockActions) {\r\n          originatingView.blockActions();\r\n        }\r\n        var pageLeavingWarning = this.get('pageLeavingWarning');\r\n        if (pageLeavingWarning) {\r\n          PageLeavingBlocker.enable(pageLeavingWarning);\r\n        }\r\n      }\r\n      this._setViewStateModelMultiItemOperationStatus(status.context, true);\r\n    },\r\n\r\n    _announceFinish: function (status) {\r\n      this._setViewStateModelMultiItemOperationStatus(status.context, false);\r\n\r\n      if (this.get('pageLeavingWarning')) {\r\n        PageLeavingBlocker.disable();\r\n      }\r\n      var originatingView = status.originatingView;\r\n      if (originatingView && originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  return MultipleItemsCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/confirmable',['csui/lib/underscore', 'csui/lib/jquery',\r\n  'require', 'csui/utils/commands/multiple.items'\r\n], function (_, $, require, MultipleItemsCommand) {\r\n\r\n  var ConfirmableCommand = {\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      return this\r\n          ._confirmAction(status, options)\r\n          .then(function () {\r\n            return self._performActions(status, options);\r\n          }, function (error) {\r\n            return $.Deferred().reject().promise();\r\n          });\r\n    },\r\n\r\n    _confirmAction: function (status, options) {\r\n      var deferred = $.Deferred();\r\n\r\n      if (this._getConfirmTemplate) {\r\n        var data = this._getConfirmData(status, options),\r\n            // FIXME: Use text instead of HTML template\r\n            html = this._getConfirmTemplate(status, options)(data);\r\n        require(['csui/dialogs/modal.alert/modal.alert'], _.bind(function (alertDialog) {\r\n\r\n          // apply custom buttons and labels if any, from respective views.\r\n          var buttons = _.isFunction(this._getButtons) ? this._getButtons() : {};\r\n\r\n          alertDialog.confirmQuestion($(html).text(), data.title, buttons)\r\n              .done(function (arg) {\r\n                deferred.resolve(arg);\r\n              })\r\n              .fail(function (arg) {\r\n                deferred.reject(arg);\r\n              });\r\n        }, this));\r\n\r\n      }\r\n      else {\r\n        deferred.resolve();\r\n      }\r\n      return deferred.promise();\r\n    }\r\n\r\n  };\r\n\r\n  _.extend(ConfirmableCommand, _.omit(MultipleItemsCommand, 'execute'));\r\n\r\n  return ConfirmableCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/collection/remove.collected.items',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/collection/nls/lang',\r\n  'csui/utils/commands/confirmable', 'csui/utils/commands/multiple.items',\r\n  'csui/utils/command.error'\r\n], function (module, require, _, $, CommandModel, CommandHelper, Url, lang,\r\n    ConfirmableCommand, MultipleItemsCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 1\r\n  });\r\n\r\n  var GlobalMessage;\r\n\r\n  var RemoveCollectionItemsCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'RemoveCollectedItems',\r\n      command_key: 'removefromcollection',\r\n      name: lang.removefromCollection,\r\n      pageLeavingWarning: lang.DeletePageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: lang.RemoveItemsNoneMessage,\r\n        formatForOne: lang.RemoveOneItemSuccessMessage,\r\n        formatForTwo: lang.RemoveSomeItemsSuccessMessage,\r\n        formatForFive: lang.RemoveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.RemoveItemsNoneMessage,\r\n        formatForOne: lang.RemoveOneItemFailMessage,\r\n        formatForTwo: lang.RemoveSomeItemsFailMessage,\r\n        formatForFive: lang.RemoveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _getConfirmTemplate: function (status, options) {\r\n      return _.template(lang.RemoveCollectItemsCommandConfirmDialogHtml);\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      var msg = (nodes.length === 1 ?\r\n                 _.str.sformat(lang.RemoveCommandConfirmDialogSingleMessage,\r\n                     nodes.at(0).get('name')) :\r\n                 _.str.sformat(lang.RemoveCommandConfirmDialogMultipleMessage,\r\n                     nodes.length) );\r\n      return {\r\n        title: lang.RemoveCommandConfirmDialogTitle,\r\n        message: msg\r\n      };\r\n    },\r\n\r\n    _performAction: function (model, options) {\r\n      var node                = model.node,\r\n          d                   = $.Deferred(),\r\n          nodeAttr            = {\r\n            \"collection_id\": options.container.get(\"id\"),\r\n            \"operation\": \"remove\"\r\n          },\r\n          connector           = options.container.connector,\r\n          containerCollection = options.containerCollection,\r\n\r\n          collectOptions      = {\r\n            url: Url.combine(connector.getConnectionUrl().getApiBase('v2'), '/nodes/' + node.get(\"id\")),\r\n            type: 'PUT',\r\n            data: nodeAttr,\r\n            contentType: 'application/x-www-form-urlencoded'\r\n          },\r\n\r\n          jqxhr               = connector.makeAjaxCall(collectOptions).done(function (resp) {\r\n            model.set('count', 1);\r\n            containerCollection.remove(node);\r\n            model.deferred.resolve(model);\r\n            d.resolve(model);\r\n          }).fail(function (error) {\r\n            var commandError = error ? new CommandError(error, model) :\r\n                               error;\r\n            model.deferred.reject(model, commandError);\r\n            if (!error) {\r\n              jqxhr.abort();\r\n            }\r\n            d.reject(commandError);\r\n          });\r\n\r\n      return d.promise();\r\n    },\r\n\r\n    startGlobalMessage: function (uploadCollection) {\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.RemovingOneItem,\r\n        oneFileSuccess: lang.RemoveOneItemSuccessMessage,\r\n        multiFileSuccess: lang.RemoveManyItemsSuccessMessage,\r\n        oneFilePending: lang.RemovingOneItem,\r\n        multiFilePending: lang.RemoveItems,\r\n        oneFileFailure: lang.RemoveOneItemFailMessage,\r\n        multiFileFailure: lang.RemoveManyItemsFailMessage2,\r\n        someFileSuccess: lang.RemoveSomeItemsSuccessMessage,\r\n        someFilePending: lang.RemovingSomeItems,\r\n        someFileFailure: lang.RemoveSomeItemsFailMessage2,\r\n        enableCancel: false\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(RemoveCollectionItemsCommand.prototype, ConfirmableCommand, {\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (localGlobalMessage) {\r\n        GlobalMessage = localGlobalMessage;\r\n        self._executeRemoveCollectionItems(status, options)\r\n            .then(deferred.resolve, deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeRemoveCollectionItems: function (status, options) {\r\n      var self = this;\r\n      options || (options = {});\r\n      var nodes       = CommandHelper.getAtLeastOneNode(status),\r\n          node        = nodes.length === 1 && nodes.first(),\r\n          deferred    = $.Deferred(),\r\n          commandData = status.data || {},\r\n          context     = status.context || options.context;\r\n\r\n      options.parallelism || (options.parallelism = config.parallelism);\r\n\r\n      var showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true;\r\n\r\n      ConfirmableCommand.execute.apply(this, arguments)\r\n          .done(function (results) {\r\n            if (showProgressDialog) {\r\n              GlobalMessage.hideFileUploadProgress();\r\n            }\r\n            // For mobile we refresh last page in order to retrieve pushed\r\n            // up items after a delete.\r\n            if (options.infiniteScroll) {\r\n              status.collection.fetch({\r\n                reset: false,\r\n                remove: false,\r\n                merge: true\r\n              });\r\n            }\r\n            //to refetch collection in table View\r\n            self.allowCollectionRefetch = true;\r\n            deferred.resolve(results);\r\n          })\r\n          .fail(function (args) {\r\n            //only return a result if there is at least one successful delete.\r\n            //This way the waiting CommandHelper in the tabletoolbar.view will trigger\r\n            //an execute complete event.\r\n            var oneSuccess = args && _.find(args, function (result) {\r\n                  return !(result instanceof CommandError);\r\n                });\r\n            var rejectResults = oneSuccess ? oneSuccess : args;\r\n            deferred.reject(rejectResults);\r\n          });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      options || (options = {});\r\n      var self               = this,\r\n          deferred           = $.Deferred(),\r\n          commandData        = status.data || {},\r\n          showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true;\r\n\r\n      options.container || (options.container = status.container);\r\n      options.containerCollection = status.collection;\r\n      require(['csui/models/fileuploads'\r\n      ], function (UploadFileCollection) {\r\n        var models = status.nodes.models;\r\n        var nodes = _.map(models, function (node) {\r\n          return {\r\n            name: node.get('name'),\r\n            state: 'pending',\r\n            count: 0,\r\n            total: 1,\r\n            node: node\r\n          };\r\n        });\r\n        var connector = models && models[0] && models[0].connector;\r\n        var uploadCollection = new UploadFileCollection(nodes, {connector: connector});\r\n        var newStatus = _.defaults({nodes: uploadCollection}, status);\r\n        uploadCollection.each(function (fileUpload) {\r\n          // Replace the new node in the file upload model with the existing\r\n          // one to be able to destroy it; sync and destroy events will be\r\n          // triggered on it and the parent collection and view will see them.\r\n          var node = fileUpload.get('node');\r\n          fileUpload.node = node;\r\n          fileUpload.unset('node');\r\n          fileUpload.set('mime_type', node.get('mime_type'));\r\n\r\n        });\r\n\r\n        if (showProgressDialog) {\r\n          self.startGlobalMessage(uploadCollection);\r\n        }\r\n\r\n        // do not display our result messages in _performActions\r\n        newStatus.suppressMultipleSuccessMessage = true;\r\n        newStatus.suppressMultipleFailMessage = true;\r\n\r\n        MultipleItemsCommand._performActions.call(self, newStatus, options)\r\n            .done(function (results) {\r\n              if (showProgressDialog) {\r\n                GlobalMessage.hideFileUploadProgress();\r\n              }\r\n              self.showSuccess(results);\r\n              deferred.resolve(results);\r\n            })\r\n            .fail(function (errors) {\r\n              if (!showProgressDialog) {\r\n                self.showError(errors);\r\n              }\r\n              return deferred.reject(errors);\r\n            });\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return RemoveCollectionItemsCommand;\r\n});\r\n\n","/**\r\n *\r\n * This command shouldn't be used directly, this command is only for `copy` and `move`.\r\n * `copy` and `move` commands should extend this parent command and must provide the required information.\r\n * This parent command contains the common API for both `copy` and `move` actions.\r\n *\r\n **/\r\n\r\ncsui.define('csui/utils/commands/copy.move',[\r\n  'module', 'require', 'csui/lib/underscore', \"csui/utils/base\",\r\n  'csui/lib/jquery', 'csui/utils/log', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/models/command',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/commands/multiple.items'\r\n], function (module, require, _, base, $, log, Url, lang, CommandModel, CommandHelper,\r\n    MultipleItemsCommand) {\r\n  'use strict';\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ConflictResolver,\r\n      ApplyPropertiesSelectorView, UploadFileCollection, PageLeavingBlocker, nodeLinks,actionType, ApplicationScope;\r\n\r\n  // create a helper parent where we can derive from and do additional function modifications\r\n  var CommandParent = CommandModel.extend({\r\n    constructor: function (options) {\r\n      CommandModel.prototype.constructor.call(this, options);\r\n    }\r\n  });\r\n  _.extend(CommandParent.prototype, MultipleItemsCommand);     // apply needed mixin\r\n\r\n  var CopyMoveCommand = CommandParent.extend({\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      var labels = self.get('labels');\r\n      actionType = self.get('command');\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressSuccessMessage = true;\r\n      status.suppressFailMessage = true;\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/controls/conflict.resolver/conflict.resolver',\r\n        'csui/dialogs/node.picker/impl/header/apply.properties.selector/apply.properties.selector.view',\r\n        'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n        'csui/utils/node.links/node.links',\r\n        'csui/utils/contexts/factories/application.scope.factory'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        ConflictResolver = arguments[1];\r\n        ApplyPropertiesSelectorView = arguments[2];\r\n        UploadFileCollection = arguments[3];\r\n        PageLeavingBlocker = arguments[4];\r\n        nodeLinks = arguments[5];\r\n        ApplicationScope = arguments[6];\r\n        if (GlobalMessage.isActionInProgress(actionType, labels.titleNotAllowed,\r\n                labels.commandTitle)) {\r\n          return deferred.resolve();\r\n        }\r\n        self._selectActionOptions(status, options, labels)\r\n            .done(function (selectedOptions) {\r\n              var selectedNodes = status.nodes;\r\n              var targetFolder = selectedOptions.nodes[0];\r\n              var applyProperties = selectedOptions.applyProperties;\r\n              var bundleNumber = new Date().getTime();\r\n\r\n              // note: in some scenarios such as expanded tile, the status.container is undefined\r\n              var copyToCurrentFolder = status.container ?\r\n                                        (targetFolder.get('id') === status.container.get('id')) :\r\n                                        false;\r\n\r\n              self._announceOperationStart(status);\r\n\r\n              var namesToResolve = selectedNodes.map(function (node) {\r\n                var returnObj = {\r\n                  id: node.get('id'),\r\n                  name: node.get('name'),\r\n                  container: node.get('container'),\r\n                  mime_type: node.get('mime_type'),\r\n                  original_id: node.get('original_id'),\r\n                  original: node.original,\r\n                  type: node.get('type'),\r\n                  size: node.get('size'),\r\n                  type_name: node.get('type_name'),\r\n                  state: 'pending',\r\n                  count: 0,\r\n                  total: 1,\r\n                  enableCancel: false,\r\n                  bundleNumber: bundleNumber\r\n                };\r\n                var type = node.get('type');\r\n                if (type === 144 || type === 749 || type === 736 || type === 30309) {\r\n                  returnObj.size_formatted = node.get('size_formatted');\r\n                } else if (type === 140) {\r\n                  returnObj.url = node.get('url');\r\n                }\r\n                returnObj.actions = node.actions;\r\n                returnObj.targetLocation = {\r\n                  id: targetFolder.get('id'),\r\n                  url: nodeLinks.getUrl(targetFolder)\r\n                };\r\n                var mlDataEnabled = base.getMetadataLanguageInfo().enabled;\r\n                if (mlDataEnabled) {\r\n                  returnObj.multilingual_provided = true,\r\n                  !!node.has(\"name_multilingual\") &&\r\n                  (returnObj.name_multilingual = node.get(\"name_multilingual\"));\r\n                  !!node.has(\"description_multilingual\") &&\r\n                  (returnObj.description_multilingual = node.get(\"description_multilingual\"));\r\n                }\r\n                return returnObj;\r\n              });\r\n              var actionNamesToResolve = _.map(namesToResolve, function (name) {\r\n                return _.clone(name);\r\n              });\r\n              self._resolveNamingConflicts(targetFolder, actionNamesToResolve, labels)\r\n                  .done(function (actionInstructions) {\r\n\r\n                    _.each(actionInstructions, function (instruction) {\r\n                      if (instruction.id === undefined) {\r\n                        instruction.id = _.findWhere(namesToResolve,\r\n                            {name: instruction.name}).id;\r\n                      }\r\n                    });\r\n\r\n                    self._metadataHandling(actionInstructions, labels,\r\n                        _.extend(selectedOptions, {context: context, targetFolder: targetFolder}))\r\n                        .done(function () {\r\n                          // TODO: Make the progressbar a reusable component; do not\r\n                          // misuse the file-upload-progressbar for other scenarios.\r\n                          // TODO: Handle this in the multi-item command to be consistent\r\n                          // with other commands; do not override the delete command only.\r\n                          var uploadCollection = new UploadFileCollection(actionInstructions, {\r\n                            container: targetFolder ? targetFolder.clone() : undefined\r\n                          });\r\n                          // Replace the new node in the file upload model with the existing\r\n                          // one to be able to destroy it; sync and destroy events will be\r\n                          // triggered on it and the parent collection and view will see them.\r\n                          if (labels.commandName === lang.CommandNameMove) {\r\n                            uploadCollection.each(function (model) {\r\n                              model.node = selectedNodes.findWhere({\r\n                                id: model.get('id')\r\n                              });\r\n                            });\r\n                          } else {\r\n                            uploadCollection.each(function (model) {\r\n                              var sourceNode = selectedNodes.findWhere({\r\n                                id: model.get('id')\r\n                              });\r\n                              model.node.set(_.omit(sourceNode.attributes, 'id'));\r\n                            });\r\n\r\n                          }\r\n\r\n                          // note: in some scenarios such as expanded tile, the status.container is undefined\r\n                          var connector = status.container && status.container.connector;\r\n                          if (connector === undefined) {\r\n                            var aNode = CommandHelper.getAtLeastOneNode(status).first();\r\n                            aNode && (connector = aNode.connector);\r\n                          }\r\n                          var applicationScope = status.originatingView && status.originatingView.context && status.originatingView.context.getModel(ApplicationScope);\r\n                          var opts = {\r\n                                uploadCollection: uploadCollection,\r\n                                connector: connector,\r\n                                targetFolder: targetFolder,\r\n                                applyProperties: applyProperties,\r\n                                status: status,\r\n                                context: context,\r\n                                copyToCurrentFolder: copyToCurrentFolder,\r\n                                collection: status.collection,\r\n                                applicationScopeId : applicationScope && applicationScope.id\r\n                              };\r\n                          self._doActionSelectedNodes(opts)\r\n                              .done(function () {\r\n                                deferred.resolve(self._doPostExecute(opts));\r\n                              }).always(function () {\r\n                                self._announceOperationEnd(status);\r\n                                (labels.commandName === lang.CommandNameMove) &&\r\n                                opts.context.trigger('current:folder:changed');\r\n                              }).fail(function () {\r\n                                // Returning nothing prevents the common error message\r\n                                // from being shown.\r\n                                deferred.reject();\r\n                              });\r\n\r\n                        })\r\n                        .fail(function () {\r\n                          self._announceOperationEnd(status);\r\n                          deferred.reject();\r\n                        });\r\n\r\n                  })\r\n                  .fail(function (error) {\r\n                    // resolve namingConflicts\r\n                    if (error && error.userAction && error.userAction ===\r\n                                                     \"cancelResolveNamingConflicts\") {\r\n                      self.trigger(\"resolve:naming:conflicts:cancelled\");\r\n                    } else if (error && !error.cancelled) {  // if not undefined (cancel) then display error\r\n                      self.showError(error);\r\n                    }\r\n                    self._announceOperationEnd(status);\r\n                    deferred.reject();\r\n                  });\r\n            })\r\n            .fail(function (error) {\r\n              if (error && !error.cancelled) { // if not undefined (cancel) then display error\r\n                self.showError(error);\r\n              }\r\n              deferred.reject();\r\n            });\r\n\r\n      }, deferred.reject);          // require\r\n\r\n      return deferred.promise();    // return empty promise!\r\n    },\r\n\r\n    _announceOperationStart: function (status) {\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.blockActions) {\r\n        originatingView.blockActions();\r\n      }\r\n      PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n    },\r\n\r\n    _announceOperationEnd: function (status) {\r\n      PageLeavingBlocker.disable();\r\n      this._unblockPageActions(status);\r\n    },\r\n\r\n    _unblockPageActions: function(status) {\r\n       var originatingView = status.originatingView;\r\n       originatingView.unblockActions && originatingView.unblockActions();\r\n    },\r\n\r\n    _selectActionOptions: function (status, options, labels) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodePicker) {\r\n            //account for a copy command coming from a folders context menu.\r\n            // note: in some scenarios such as expanded tile, the status.container is undefined\r\n            var contextMenuCopy = status.container ?\r\n                                  (status.container.get('id') ===\r\n                                   status.nodes.models[0].get('id')) : false;\r\n            var numNodes = status.nodes.length;\r\n            var dialogTitle = _.str.sformat(\r\n                numNodes > 1 ? labels.dialogTitle : labels.dialogTitleSingle, numNodes);\r\n            var pickerOptions = _.extend({\r\n              command: actionType,\r\n              selectableTypes: [-1],\r\n              unselectableTypes: [899],\r\n              addableTypes: [0], // Allowing folders to add from picker. Revisit when LPAD-61637 done.\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: dialogTitle,\r\n              initialContainer: status.container || status.nodes.models[0].parent,\r\n              initialSelection: status.nodes,\r\n              startLocation: contextMenuCopy ? 'recent.containers' : '',\r\n              includeCombineProperties: (numNodes === 1),\r\n              propertiesSeletor: true,\r\n              globalSearch: true,\r\n              disableSearchFromHere: true,\r\n              context: options ? options.context : status.context,\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true,\r\n              includeResources: ['show_hidden']\r\n            }, status);\r\n\r\n            self.nodePicker = new NodePicker(pickerOptions);\r\n            self.originatingView = status.originatingView;\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function () {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _resolveNamingConflicts: function (targetFolder, nodeNames, labels) {\r\n      var h1 = (nodeNames.length === 1) ? labels.actionNode :\r\n               _.str.sformat(labels.actionName, nodeNames.length);\r\n      var conflictResolver = new ConflictResolver({\r\n        h1Label: h1,\r\n        actionBtnLabel: labels.commandName,\r\n        excludeAddVersion: true,\r\n        container: targetFolder,\r\n        files: nodeNames,\r\n        originatingView: this.originatingView\r\n      });\r\n      return conflictResolver.run();\r\n    },\r\n\r\n    _metadataHandling: function (items, labels, options) {\r\n      var deferred = $.Deferred();\r\n      this.originatingView && this.originatingView._blockingCounter === 0 &&\r\n      this.originatingView.blockActions();\r\n      require(['csui/widgets/metadata/metadata.copy.move.items.controller'\r\n      ], function (MetadataCopyMoveItemsController) {\r\n        var openMetadata = options.openSelectedProperties;\r\n        var applyProperties = options.applyProperties;\r\n        var metadataController = new MetadataCopyMoveItemsController();\r\n        var controllerFunction;\r\n\r\n        // open the metadata view\r\n        if (openMetadata) {\r\n          controllerFunction = metadataController.CopyMoveItemsWithMetadata;\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES ||\r\n                   applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          // check for required metadata\r\n          controllerFunction = metadataController.CopyMoveItemsRequiredMetadata;\r\n        } else {\r\n          return deferred.resolve();\r\n        }\r\n\r\n        if (applyProperties === ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES) {\r\n          options.inheritance = 'original';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES) {\r\n          options.inheritance = 'destination';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          options.inheritance = 'merged';\r\n        }\r\n\r\n        options.action = actionType;\r\n        controllerFunction.call(metadataController, items, options)\r\n            .done(function () {\r\n              deferred.resolve();\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n\r\n      }, function (error) {\r\n        log.warn('Failed to load MetadataCopyMoveItemsController. {0}', error)\r\n        && console.warn(log.last);\r\n        deferred.reject(error);\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _addToCurrentTable: function (node, targetCollection) {\r\n      node.isLocallyCreated = true;\r\n      node.fetch({collection: targetCollection})\r\n          .then(function () {\r\n            targetCollection.unshift(node);\r\n          });\r\n    },\r\n    checkMultilingualInfo : function (instruction, params) {\r\n        if (!!instruction.multilingual_provided) {\r\n            _.extend(params, {\r\n                name_multilingual: instruction.name_multilingual\r\n            });\r\n            instruction.description_multilingual &&  _.extend(params, {\r\n              description_multilingual: instruction.description_multilingual\r\n          });\r\n        }\r\n    }\r\n  });\r\n\r\n  return CopyMoveCommand;\r\n});\r\n  \n","csui.define('csui/utils/commands/copy',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commands/copy.move',\r\n  'csui/utils/command.error'\r\n], function (module, require, _, $, lang, ActionModel, CommandError) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  _.defaults(config, {\r\n    actionType: 'copy',\r\n    parallelism: 3,\r\n    allowMultipleInstances: true\r\n  });\r\n\r\n\r\n  // create helper parent\r\n  var CopyCommand = ActionModel.extend({\r\n    defaults: {\r\n      signature: \"Copy\",\r\n      command_key: ['copy', 'Copy'],\r\n      name: lang.CommandNameCopy,\r\n      verb: lang.CommandVerbCopy,\r\n      pageLeavingWarning: lang.CopyPageLeavingWarning,\r\n      allowMultipleInstances: config.allowMultipleInstances,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: lang.CopyItemsNoneMessage,\r\n        formatForOne: lang.CopyOneItemSuccessMessage,\r\n        formatForTwo: lang.CopySomeItemsSuccessMessage,\r\n        formatForFive: lang.CopyManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.CopyItemsNoneMessage,\r\n        formatForOne: lang.CopyOneItemFailMessage,\r\n        formatForTwo: lang.CopySomeItemsFailMessage,\r\n        formatForFive: lang.CopyManyItemsFailMessage\r\n      },\r\n      labels: {\r\n        actionName: lang.CopyingNodes,\r\n        actionNode: lang.CopyingNode,\r\n        commandTitle: lang.CommandTitleCopy,\r\n        commandName: lang.CommandNameCopy,\r\n        dialogTitle: lang.DialogTitleCopy,\r\n        dialogTitleSingle: lang.DialogTitleSingleCopy,\r\n        titleNotAllowed: lang.CopyNotAllowed\r\n      },\r\n      command: config.actionType\r\n\r\n    },\r\n\r\n    _doActionSelectedNodes: function (opts) {\r\n      var exResult = $.Deferred();\r\n      require(['csui/utils/contexts/factories/next.node',\r\n            'csui/controls/globalmessage/globalmessage', 'csui/utils/taskqueue'],\r\n          _.bind(function (NextNodeModelFactory, GlobalMessage, TaskQueue) {\r\n            var self     = this,\r\n                queue    = new TaskQueue({\r\n                  parallelism: config.parallelism\r\n                }),\r\n                promises = _.map(opts.uploadCollection.models, function (model) {\r\n                  var deferred = $.Deferred();\r\n                  queue.pending.add({\r\n                    worker: function () {\r\n                      var attributes = model.attributes,\r\n                          targetId   = opts.targetFolder.get('id');\r\n\r\n                      self._getCategories(attributes, opts.connector, targetId,\r\n                          opts.applyProperties)\r\n                          .done(function (categories) {\r\n                            self._copyNode(categories, attributes, opts.connector, targetId,\r\n                                model.node)\r\n                                .done(function () {\r\n                                  model.set('count', 1);\r\n                                  model.deferred.resolve(model);\r\n                                  opts.copyToCurrentFolder &&\r\n                                  self._addToCurrentTable(model.node, opts.collection);\r\n                                  deferred.resolve(attributes);\r\n                                })\r\n                                .fail(function (cause) {\r\n                                  var errMsg = new CommandError(cause);\r\n                                  model.deferred.reject(model, errMsg);\r\n                                  deferred.reject(errMsg);\r\n                                });\r\n                          })\r\n                          .fail(function (cause) {\r\n                            var errMsg = new CommandError(cause);\r\n                            model.deferred.reject(model, errMsg);\r\n                            deferred.reject(errMsg);\r\n                          });\r\n                      return deferred.promise();\r\n                    }\r\n                  });\r\n                  return deferred.promise(promises);      // return promises\r\n                });\r\n\r\n            GlobalMessage.showProgressPanel(opts.uploadCollection, {\r\n              oneFileTitle: lang.CopyingOneItem,\r\n              oneFileSuccess: lang.CopyOneItemSuccessMessage,\r\n              multiFileSuccess: lang.CopyManyItemsSuccessMessage,\r\n              oneFilePending: lang.CopyingOneItem,\r\n              multiFilePending: lang.CopyItems,\r\n              multiFileOneFailure: lang.CopyManyItemsOneFailMessage,\r\n              oneFileFailure: lang.CopyOneItemFailMessage,\r\n              multiFileFailure: lang.CopyManyItemsFailMessage,\r\n              someFileSuccess: lang.CopySomeItemsSuccessMessage,\r\n              someFilePending: lang.CopySomeItems,\r\n              someFileFailure: lang.CopySomeItemsFailMessage2,\r\n              locationLabelPending: lang.CopyingLocationLabel,\r\n              locationLabelCompleted: lang.CopiedLocationLabel,\r\n              enableCancel: false,\r\n              actionType: config.actionType,\r\n              allowMultipleInstances: config.allowMultipleInstances,\r\n              context: opts.context,\r\n              nextNodeModelFactory: NextNodeModelFactory\r\n            });\r\n\r\n            this._unblockPageActions(opts.status);\r\n            return $.whenAll.apply($, promises).then(exResult.resolve, exResult.reject);\r\n\r\n          }, this), exResult.reject);\r\n      return exResult.promise();\r\n    },\r\n\r\n    _doPostExecute: function (opts) {\r\n      var targetNodeIncurrentCollection;\r\n      if (opts.status.collection && opts.status.originatingView &&\r\n          opts.status.originatingView.findNodeFromCollection) {\r\n        targetNodeIncurrentCollection = opts.status.originatingView.findNodeFromCollection(\r\n            opts.status.collection, opts.targetFolder);\r\n      } else if (opts.status.collection) {\r\n        targetNodeIncurrentCollection = opts.status.collection.get(\r\n            opts.targetFolder.get('id')) ||\r\n                                        opts.status.collection.findWhere({\r\n                                          id: opts.targetFolder.get('id')\r\n                                        });\r\n      }\r\n      !opts.copyToCurrentFolder && targetNodeIncurrentCollection &&\r\n      targetNodeIncurrentCollection.fetch();\r\n      return opts.uploadCollection;\r\n\r\n    },\r\n    _copyNode: function (categories, instruction, connector, targetFolderID, node) {\r\n      var nodeAttr = {\r\n        \"original_id\": instruction.id,\r\n        \"parent_id\": targetFolderID,\r\n        \"name\": instruction.newName ? instruction.newName : instruction.name,\r\n        \"roles\": categories\r\n      };\r\n      _.extend(nodeAttr, instruction.extended_data);\r\n      _.isFunction(this.checkMultilingualInfo) && this.checkMultilingualInfo(instruction, nodeAttr);\r\n      // FileUploadModel should be created with a container or connector\r\n      // to make its node cloneable.  But if not needed, use the default\r\n      // container of the upload controller to provide the connector.\r\n      if (!node.connector) {\r\n        connector.assignTo(node);\r\n      }\r\n\r\n      return node.save(undefined, {\r\n        data: nodeAttr,\r\n        url: connector.connection.url + '/nodes'\r\n      });\r\n    },\r\n\r\n    _getCategories: function (attributes, connector, targetFolderID, applyProperties) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      if (attributes.extended_data && attributes.extended_data.roles) {\r\n        deferred.resolve(attributes.extended_data.roles);\r\n      } else if (!!applyProperties && applyProperties === 1) { // keep the original categories.\r\n        deferred.resolve({});\r\n      } else {\r\n        var getCategoriesOptions = {\r\n          url: connector.connection.url + '/forms/nodes/copy?' +\r\n               $.param({\r\n                 id: attributes.id,\r\n                 parent_id: targetFolderID\r\n               })\r\n        };\r\n\r\n        connector.makeAjaxCall(getCategoriesOptions)\r\n            .then(function (response) {\r\n              var form = response.forms[1],\r\n                  data = form && form.data || {};\r\n              var categoryGroupMapping;\r\n              categoryGroupMapping = {};\r\n              require(['csui/dialogs/node.picker/impl/header/apply.properties.selector/apply.properties.selector.view'],\r\n                function (ApplyPropertiesSelectorView) {\r\n                  categoryGroupMapping[ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES] = 'original';\r\n                  categoryGroupMapping[ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES] = 'destination';\r\n                  categoryGroupMapping[ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES] = 'merged';\r\n                  var categories = data[categoryGroupMapping[applyProperties]];\r\n                  deferred.resolve({ \"categories\": categories });\r\n                });\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n      }\r\n      return deferred.promise();\r\n    }\r\n  });\r\n  return CopyCommand;\r\n});\r\n\n","csui.define('csui/utils/routing',['module', 'csui/lib/underscore'\r\n], function (module, _) {\r\n  'use strict';\r\n\r\n  var developmentPage = module.config().developmentPage;\r\n  // TODO: Deprecate and remove configurability for the two muodules.\r\n  readOldSettings('csui/pages/start/perspective.routing');\r\n  readOldSettings('csui/pages/start/impl/perspective.router');\r\n\r\n  function readOldSettings(moduleName) {\r\n    if (developmentPage === undefined) {\r\n      var oldConfig = window.csui.requirejs.s.contexts._.config\r\n        .config[moduleName] || {};\r\n      developmentPage = oldConfig.developmentPage;\r\n    }\r\n  }\r\n\r\n  return {\r\n    routesWithSlashes: function () {\r\n      // Append the client application paths to the \"server\" page path, when\r\n      // we run on the server; append the client application paths in back of\r\n      // the hash, when we run on a development HTML page\r\n      return /\\/app(?:\\/.*)?$/.test(location.pathname) || !developmentPage;\r\n    }  \r\n  };\r\n});\r\n\n","\n","csui.define('csui/utils/node.links/node.links',[\r\n  'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/url',\r\n  'csui/models/mixins/rules.matching/rules.matching.mixin',\r\n  'csui/utils/routing',\r\n  // Load and register external node link rules\r\n  'csui-ext!csui/utils/node.links/node.links'\r\n], function (_, Backbone, Url, RulesMatchingMixin, routing, rules) {\r\n  'use strict';\r\n\r\n  var routesWithSlashes = routing.routesWithSlashes();\r\n\r\n  var NodeLinkModel = Backbone.Model.extend({\r\n    defaults: {\r\n      sequence: 100,\r\n      url: null\r\n    },\r\n\r\n    constructor: function NodeLinkModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      this.makeRulesMatching(options);\r\n    }\r\n  });\r\n\r\n  RulesMatchingMixin.mixin(NodeLinkModel.prototype);\r\n\r\n  var NodeLinkCollection = Backbone.Collection.extend({\r\n    model: NodeLinkModel,\r\n    comparator: 'sequence',\r\n\r\n    constructor: function NodeLinkCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.call(this, models, options);\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      // Make the URLs point to the original node, if the current node is\r\n      // a shortcut; leave generation point to itself for now, until\r\n      // we support it properly\r\n      var type = node.get('type');\r\n      if (type === 1 && node.original && node.original.get('id') > 0) {\r\n        node = node.original;\r\n      }\r\n      var rule = this.find(function (item) {\r\n        return item.matchRules(node, item.attributes);\r\n      });\r\n      if (rule) {\r\n        var url = rule.get('getUrl')(node, options);\r\n        return this.completeUrl(node, url, options);\r\n      }\r\n    },\r\n\r\n    completeUrl: function (node, url, options) {\r\n      if (!url) {\r\n        return location.href;\r\n      }\r\n\r\n      var connector = node.connector || options && options.connector;\r\n      var serverUrl = new Url(connector && connector.connection.url ||\r\n                              location.href);\r\n      var absoluteUrl = serverUrl.makeAbsoluteUrl(url, this._getApplicationUrlPrefix(serverUrl));      \r\n      var context = options && options.context,\r\n          viewStateModel = context && context.viewStateModel,\r\n          currentRouter = viewStateModel && viewStateModel.get('activeRouterInstance'),\r\n          urlParams = currentRouter && currentRouter.nextNode &&\r\n                      currentRouter.nextNode.get('id') === node.get('id') && currentRouter.buildUrlParams();\r\n      if (urlParams) {\r\n        absoluteUrl += '?' + urlParams;\r\n      }\r\n      return absoluteUrl;\r\n    },\r\n\r\n    _getApplicationUrlPrefix: function (serverUrl) {\r\n      return this.getHomeUrl(serverUrl);\r\n    },\r\n\r\n    getHomeUrl: function (serverUrl) {\r\n\r\n      // Application URLs start after '#' on the development pages, while\r\n      // on the actual server they are merged with the main access point\r\n      var applicationUrlPrefix;\r\n      if (routesWithSlashes) {\r\n        applicationUrlPrefix = Url.combine(serverUrl.getCgiScript(), '/app/');\r\n      } else {\r\n        // Robustness for FF browser returning string 'null' instead of 'file://' in location.origin.\r\n        var origin = (location.origin && location.origin.indexOf('://') > 0) ? location.origin : new Url(location.href).getOrigin();\r\n        applicationUrlPrefix = origin + location.pathname +\r\n                               location.search + '#';\r\n      }\r\n      return applicationUrlPrefix;\r\n    }\r\n  });\r\n\r\n  var nodeLinks = new NodeLinkCollection();\r\n\r\n  if (rules) {\r\n    nodeLinks.add(_.flatten(rules, true));\r\n  }\r\n\r\n  return nodeLinks;\r\n});\r\n\n","csui.define('csui/utils/commands/copy.link',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command','csui/utils/commandhelper',\r\n  'csui/utils/node.links/node.links',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel,\r\n    CommandHelper, NodeLinks, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var CopyLinkCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'CopyLink',\r\n      name: lang.CommandNameCopyLink\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return !!node;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          node     = CommandHelper.getJustOneNode(status),\r\n          urlOptions = {context: status.context},\r\n          nodeLink = status.url ? NodeLinks.completeUrl(node, status.url, urlOptions) : NodeLinks.getUrl(node, urlOptions),\r\n          success  = this._copyToClipboard(nodeLink);\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        if (success) {\r\n          deferred.resolve();\r\n          GlobalMessage.showMessage('success', lang.CopyLinkSuccessMessage);\r\n        } else {\r\n          deferred.reject();\r\n          GlobalMessage.showMessage('error', lang.CopyLinkFailMessage);\r\n        }\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _copyToClipboard: function (nodeLink) {\r\n      if (window.clipboardData) { /*Workaround for IE*/\r\n        window.clipboardData.setData('Text', nodeLink);\r\n        return true;\r\n      } else {\r\n        /* Create a fake text node in body, select it by creating a range, trigger copy command,\r\n         remove fake text node*/\r\n        var success  = false,\r\n            element  = document.createTextNode(nodeLink),\r\n            elParent = document.createElement('span');\r\n        //Set styles for span, so that text node doesn't use widget styles\r\n        elParent.style.color = 'black';\r\n        elParent.style.background = 'tranparent';\r\n        elParent.style.backgroundColor = 'white';\r\n\r\n        elParent.appendChild(element);\r\n        document.body.appendChild(elParent);\r\n        if (window.getSelection) { // moz, opera, webkit, ie11\r\n          var selection = window.getSelection();\r\n          selection.removeAllRanges();\r\n          var range = document.createRange();\r\n          range.selectNodeContents(element);\r\n          selection.addRange(range);\r\n          success = document.execCommand(\"copy\");\r\n          selection.removeAllRanges();\r\n        }\r\n        document.body.removeChild(elParent);\r\n        return success;\r\n      }\r\n    }\r\n  });\r\n\r\n  return CopyLinkCommand;\r\n});\r\n\n","//TODO Check if this should be moved to pman \r\ncsui.define('csui/models/perspective/perspective.model',[\"module\", 'csui/lib/underscore', \"csui/lib/backbone\",\r\n  'csui/models/mixins/uploadable/uploadable.mixin',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  \"csui/utils/log\", \"csui/utils/base\", 'csui/utils/url'\r\n], function (module, _, Backbone, UploadableMixin, ConnectableMixin, log,\r\n    base, Url) {\r\n  \"use strict\";\r\n\r\n  var config = _.extend({\r\n    idAttribute: null\r\n  }, module.config());\r\n\r\n  var PerspectiveModel = Backbone.Model.extend({\r\n    idAttribute: config.idAttribute,\r\n\r\n    constructor: function PerspectiveModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n      this.options = _.pick(options, ['connector']);\r\n      this.makeUploadable(options)\r\n          .makeConnectable(options);\r\n    },\r\n\r\n    getPerspectiveId: function() {\r\n      return this.get('id');\r\n    },\r\n\r\n    getPerspective: function () {\r\n      return this.get('perspective');\r\n    },\r\n\r\n    setPerspective: function (attributes, options) {\r\n      this.set('perspective', attributes, options);\r\n    },\r\n\r\n    update: function (changes) {\r\n      this.set.apply(this, arguments);\r\n    },\r\n\r\n    isNew: function () {\r\n      return !this.get('id') || this.get('id') === 0;\r\n    },\r\n\r\n    urlBase: function () {\r\n      var id  = this.get('id'),\r\n          url = this.connector.connection.url;\r\n      if (!id) {\r\n        // Create a new node by POST /perspectives\r\n        url = Url.combine(url, 'perspectives');\r\n      } else if (!_.isNumber(id) || id > 0) {\r\n        // Access an existing node by VERB /perspectives/:id\r\n        url = Url.combine(url, 'perspectives', id);\r\n      } else {\r\n        throw new Error('Unsupported id value');\r\n      }\r\n      return url;\r\n    },\r\n\r\n    url: function () {\r\n      var url = this.urlBase();\r\n      return url;\r\n    },\r\n\r\n    prepareFormData: function (data, options) {\r\n      return {pData: JSON.stringify(data)};\r\n    }\r\n  });\r\n\r\n  UploadableMixin.mixin(PerspectiveModel.prototype);\r\n  ConnectableMixin.mixin(PerspectiveModel.prototype);\r\n\r\n  return PerspectiveModel;\r\n\r\n});\n","csui.define('csui/utils/commands/create.perspective',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'csui/models/perspective/perspective.model',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, CommandHelper,\r\n    Url, PerspectiveModel, lang) {\r\n  'use strict';\r\n\r\n  var config = window.csui.requirejs.s.contexts._.config\r\n                   .config['csui/utils/contexts/perspective'] || {};\r\n  config = _.extend({\r\n    enableInlinePerspectiveEditing: true\r\n  }, config, module.config());\r\n\r\n  var ConnectorFactory, NodeModelFactory, AncestorCollectionFactory;\r\n\r\n  var CreatePerspectiveCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'CreatePerspective',\r\n      name: lang.CreatePerspective\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var context    = status.context || options && options.context,\r\n          attributes = context.perspective.attributes;\r\n      if (attributes.id === undefined && attributes.canEditPerspective &&\r\n          context._applicationScope.attributes.id === \"node\") {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var context         = status.context || options && options.context,\r\n          isInlineEditing = (options && options.inlinePerspectiveEditing) ||\r\n                            config.enableInlinePerspectiveEditing;\r\n      if (isInlineEditing) {\r\n        // Edit perspective of page inline in SmartUI\r\n        return this._editInline(status, options, context);\r\n      } else {\r\n        // Navigate to class Perspective Management console\r\n        return this._editInClassicPMan(status, options, context);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Prepare new perspective config required for current node since no perspective is configured yet.\r\n     */\r\n    _preparePerspectiveConfig: function (context) {\r\n      var perspectiveConfig = {\r\n            \"perspective\": {\r\n              \"type\": \"flow\",\r\n              \"options\": {\r\n                \"widgets\": [\r\n                  {\r\n                    \"type\": \"csui/widgets/nodestable\"\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"overrideType\": \"genericContainer\",\r\n            \"scope\": \"local\",\r\n            \"containerType\": \"-1\",\r\n            \"cascading\": \"false\"\r\n          },\r\n          node              = CommandHelper.getJustOneNode(status) ||\r\n                              context.getModel(NodeModelFactory),\r\n          collection        = context.getCollection(AncestorCollectionFactory);\r\n      perspectiveConfig.nodepath = this._getNodePath(collection);\r\n      perspectiveConfig.node = node.get('id');\r\n      perspectiveConfig.containerType = node.get('type');\r\n      perspectiveConfig.title = node.get('name');\r\n      return perspectiveConfig;\r\n    },\r\n\r\n    _editInline: function (status, options, context) {\r\n      var deferred = $.Deferred(), self = this;\r\n      require(['csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/ancestors',\r\n        'csui/perspective.manage/pman.view'\r\n      ], function () {\r\n        NodeModelFactory = arguments[0];\r\n        ConnectorFactory = arguments[1];\r\n        AncestorCollectionFactory = arguments[2];\r\n        var PManView          = arguments[3],\r\n            // Create new perspective\r\n            perspectiveConfig = self._preparePerspectiveConfig(context, NodeModelFactory,\r\n                AncestorCollectionFactory);\r\n        // Append current timestamp to avoid name conflicts in perspective volume\r\n        perspectiveConfig.title = perspectiveConfig.title + ' ' + new Date().getTime();\r\n        var perspective = new PerspectiveModel(perspectiveConfig,\r\n            {connector: context.getObject(ConnectorFactory)});\r\n        var pmanView = new PManView({\r\n          context: context,\r\n          perspective: perspective\r\n        });\r\n        pmanView.show();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _editInClassicPMan: function (status, options, context) {\r\n      var deferred = $.Deferred(), self = this;\r\n      require(['csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/ancestors'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        NodeModelFactory = arguments[1];\r\n        AncestorCollectionFactory = arguments[2];\r\n        var f = self._getForm(context, status);\r\n        f.submit();\r\n        f.remove();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getForm: function (context, status) {\r\n      var f = $(\"<form target='_blank' method='POST' style='display:none;'></form>\").attr({\r\n        action: this._getUrl(context, status)\r\n      }).appendTo(document.body);\r\n\r\n      var params = this._getUrlQueryParameters(context, status);\r\n\r\n      for (var i in params) {\r\n        if (params.hasOwnProperty(i)) {\r\n          $('<input type=\"hidden\" />').attr({\r\n            name: i,\r\n            value: params[i]\r\n          }).appendTo(f);\r\n        }\r\n      }\r\n\r\n      return f;\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector      = context.getObject(ConnectorFactory),\r\n          cgiUrl         = new Url(connector.connection.url).getCgiScript(),\r\n          perspectiveUrl = cgiUrl.toString() + \"/perspectivemgr\";\r\n\r\n      return perspectiveUrl;\r\n    },\r\n\r\n    _getUrlQueryParameters: function (context, status) {\r\n      var perspectiveConfig = this._preparePerspectiveConfig(context, NodeModelFactory,\r\n          AncestorCollectionFactory);\r\n      perspectiveConfig.ui = {\r\n        \"elements\": {\r\n          \"btn-mode-code\": true,\r\n          \"btn-view-general\": true,\r\n          \"btn-view-rules\": false,\r\n          \"btn-view-layout\": true,\r\n          \"btn-view-widgets\": true,\r\n\r\n          \"view-perspective-action\": true,\r\n          \"perspective-action-create\": true,\r\n          \"perspective-action-edit\": true,\r\n          \"perspective-action-copy\": true,\r\n\r\n          \"view-perspective-form\": true,\r\n          \"perspective-title\": true,\r\n          \"perspective-type\": true,\r\n          \"perspective-scope\": true,\r\n          \"perspective-nodetypes\": true,\r\n          \"perspective-node\": true,\r\n          \"perspective-cascading\": true,\r\n\r\n          \"display-size-msg\": false,\r\n          \"rules-code\": true,\r\n\r\n          \"layout-flow\": true,\r\n          \"layout-left-center-right\": true,\r\n          \"layout-grid\": false,\r\n          \"layout-tabbed\": false\r\n        },\r\n        \"widgetGroupsBlacklist\": [],\r\n        \"widgetsWhitelist\": [],\r\n        \"disableGrouping\": false\r\n      };\r\n      return {\r\n        config: JSON.stringify(perspectiveConfig)\r\n      };\r\n    },\r\n\r\n    _getNodePath: function (collection) {\r\n      var nodepath = \"\";\r\n      collection.each(function (model) {\r\n        nodepath += nodepath ? ':' : '';\r\n        nodepath += model.get('name');\r\n      });\r\n      return nodepath;\r\n    }\r\n\r\n  });\r\n\r\n  return CreatePerspectiveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/node',['csui/lib/underscore', 'csui/models/command',\r\n  'csui/utils/commands/multiple.items'\r\n], function (_, CommandModel, MultipleItemsCommand) {\r\n\r\n  var NodeCommand = CommandModel.extend({\r\n\r\n    _performAction: function (node, options) {\r\n      throw new Error('Method not implemented in the descendant command.');\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(NodeCommand.prototype, MultipleItemsCommand);\r\n\r\n  return NodeCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/delete',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/log', 'csui/utils/commandhelper', 'csui/utils/commands/node',\r\n  'csui/utils/commands/multiple.items', 'csui/utils/commands/confirmable',\r\n  'csui/utils/command.error'\r\n], function (module, require, _, $, lang, log, CommandHelper, NodeCommand,\r\n    MultipleItemsCommand, ConfirmableCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 1,\r\n    actionType: 'DELETE',\r\n    allowMultipleInstances: true,\r\n    deleteSelfHandler: null\r\n  });\r\n\r\n  var UploadFileCollection, NextNodeModelFactory, GlobalMessage;\r\n\r\n  var DeleteCommand = NodeCommand.extend({\r\n    defaults: {\r\n      signature: 'Delete',\r\n      command_key: ['delete', 'Delete'],\r\n      name: lang.CommandNameDelete,\r\n      verb: lang.CommandVerbDelete,\r\n      pageLeavingWarning: lang.DeletePageLeavingWarning,\r\n      allowMultipleInstances: config.allowMultipleInstances,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: lang.DeleteItemsNoneMessage,\r\n        formatForOne: lang.DeleteOneItemSuccessMessage,\r\n        formatForTwo: lang.DeleteSomeItemsSuccessMessage,\r\n        formatForFive: lang.DeleteManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.DeleteItemsNoneMessage,\r\n        formatForOne: lang.DeleteOneItemFailMessage,\r\n        formatForTwo: lang.DeleteSomeItemsFailMessage,\r\n        formatForFive: lang.DeleteManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _getConfirmTemplate: function (status, options) {\r\n      return _.template(lang.DeleteCommandConfirmDialogHtml);\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      var msg = (nodes.length === 1 ?\r\n                 _.str.sformat(lang.DeleteCommandConfirmDialogSingleMessage,\r\n                     nodes.at(0).get('name')) :\r\n                 _.str.sformat(lang.DeleteCommandConfirmDialogMultipleMessage,\r\n                     nodes.length));\r\n      return {\r\n        title: lang.DeleteCommandConfirmDialogTitle,\r\n        message: msg\r\n      };\r\n    },\r\n\r\n    _getButtons: function () {\r\n      var buttons = {\r\n        'buttons': {\r\n          labelYes: lang.DeleteButtonLabel,\r\n          labelNo: lang.DialogBtnCancel\r\n        }\r\n      };\r\n\r\n      return buttons;\r\n    },\r\n\r\n    // Perform the delete action. Return a promise, which is resolved with the deleted node if\r\n    // successful or rejected with the error.\r\n    // Note, that the node is used later to display the name of the deleted item.\r\n    _performAction: function (model, options) {\r\n      var node = model.node;\r\n      var d = $.Deferred();\r\n      node.trigger('before:delete', node);\r\n      var jqxhr = node.destroy({\r\n            wait: true\r\n          })\r\n          .done(function () {\r\n            node.trigger('delete', node);\r\n            model.set('count', 1);\r\n            model.deferred.resolve(model);\r\n            d.resolve(node);\r\n          })\r\n          .fail(function (error) {\r\n            var commandError = error ? new CommandError(error, node) :\r\n                               error;\r\n            model.deferred.reject(model, commandError);\r\n            if (!error) {\r\n              jqxhr.abort();\r\n            }\r\n            d.reject(commandError);\r\n          });\r\n\r\n      var originatingView = options.originatingView;\r\n      if (originatingView && originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n\r\n      return d.promise();\r\n    },\r\n\r\n    // keep in sync with versions/delete.js\r\n    startGlobalMessage: function (uploadCollection, options) {\r\n      /* GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: isVersionModel ? versionLang.DeletingOneVersion : lang.DeletingOneFile,\r\n        oneFileSuccess: isVersionModel ? versionLang.DeleteVersionOneItemSuccessMessage : lang.DeleteOneItemSuccessMessage,\r\n        multiFileSuccess: isVersionModel ? versionLang.DeleteVersionManyItemsSuccessMessage : lang.DeleteManyItemsSuccessMessage,\r\n        oneFilePending: isVersionModel ? versionLang.DeletingOneVersion : lang.DeletingOneFile,\r\n        multiFilePending: isVersionModel ? versionLang.DeleteVersions : lang.DeleteFiles,\r\n        oneFileFailure: isVersionModel ? versionLang.DeleteVersionOneItemFailMessage : lang.DeleteOneItemFailMessage,\r\n        multiFileFailure: isVersionModel ? versionLang.DeleteVersionManyItemsFailMessage2 : lang.DeleteManyItemsFailMessage2,\r\n        someFileSuccess: isVersionModel ? versionLang.DeleteVersionSomeItemsSuccessMessage : lang.DeleteSomeItemsSuccessMessage,\r\n        someFilePending: isVersionModel ? versionLang.DeletingSomeVersions : lang.DeletingSomeFiles,\r\n        someFileFailure: isVersionModel ? versionLang.DeleteVersionSomeItemsFailMessage2 : lang.DeleteSomeItemsFailMessage2,\r\n        enableCancel: false\r\n      }); */\r\n      GlobalMessage.showProgressPanel(uploadCollection, {\r\n        oneFileTitle: lang.DeletingOneItem,\r\n        oneFileSuccess: lang.DeleteOneItemSuccessMessage,\r\n        multiFileSuccess: lang.DeleteManyItemsSuccessMessage,\r\n        oneFilePending: lang.DeletingOneItem,\r\n        multiFilePending: lang.DeleteItems,\r\n        multiFileOneFailure: lang.DeleteManyItemsOneFailMessage,\r\n        oneFileFailure: lang.DeleteOneItemFailMessage,\r\n        multiFileFailure: lang.DeleteManyItemsFailMessage,\r\n        someFileSuccess: lang.DeleteSomeItemsSuccessMessage,\r\n        someFilePending: lang.DeletingSomeItems,\r\n        someFileFailure: lang.DeleteSomeItemsFailMessage,\r\n        enableCancel: false,\r\n        originatingView: options.originatingView,\r\n        locationLabelPending: lang.deletingLocationLabel,\r\n        locationLabelCompleted: lang.deletedLocationLabel,\r\n        allowMultipleInstances: config.allowMultipleInstances,\r\n        actionType: config.actionType\r\n      });\r\n    }\r\n  });\r\n\r\n  _.extend(DeleteCommand.prototype, ConfirmableCommand, {\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n\r\n      // avoid messages from handleExecutionResults (must be set here and not in any async\r\n      // callbacks, because it is used in the calling code immediately after calling execute)\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n      status.deleteBlockAction = true;\r\n\r\n      require([\r\n        'csui/models/fileuploads',\r\n        'csui/utils/contexts/factories/next.node',\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (localUploadFileCollection, localNextNodeModelFactory,\r\n          localGlobalMessage) {\r\n        UploadFileCollection = localUploadFileCollection;\r\n        NextNodeModelFactory = localNextNodeModelFactory;\r\n        GlobalMessage = localGlobalMessage;\r\n        if (GlobalMessage.isActionInProgress(config.actionType, lang.DeleteNotAllowed,\r\n                lang.CommandTitleDelete)) {\r\n          return deferred.resolve();\r\n        }\r\n        self._executeDelete(status, options)\r\n            .then(deferred.resolve, deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeDelete: function (status, options) {\r\n      var self = this;\r\n      options || (options = {});\r\n      var nodes    = CommandHelper.getAtLeastOneNode(status),\r\n          node     = nodes.length === 1 && nodes.first(),\r\n          deferred = $.Deferred(),\r\n          context  = status.context || options.context;\r\n\r\n      options.parallelism || (options.parallelism = config.parallelism);\r\n      options.originatingView = status.originatingView;\r\n\r\n      // Do not use 'apply' with 'arguments' array because the 'options' parameter that is\r\n      // undefined and locally set will not be passed on with the locally set value.\r\n      // Use 'call' with parameters list.\r\n      ConfirmableCommand.execute.call(this, status, options)\r\n          .done(function (results) {\r\n\r\n            // If the current container is deleted, open its parent\r\n            if (node && node === status.container) {\r\n              var handlerModule = config.deleteSelfHandler ||\r\n                                  'csui/utils/commands/delete/delete.self.handler';\r\n              require([handlerModule], function (handler) {\r\n                handler(node, _.extend({}, status, options));\r\n                deferred.resolve();\r\n              }, deferred.reject);\r\n            }\r\n            // For mobile we refresh last page in order to retrieve pushed\r\n            // up items after a delete.\r\n            else if (options.infiniteScroll) {\r\n              status.collection.fetch({\r\n                reset: false,\r\n                remove: false,\r\n                merge: true\r\n              });\r\n            }\r\n            //to refetch collection in table View\r\n            self.allowCollectionRefetch = true;\r\n            deferred.resolve(results);\r\n          })\r\n          .fail(function (args) {\r\n            //only return a result if there is at least one successful delete.\r\n            //This way the waiting CommandHelper in the tabletoolbar.view will trigger\r\n            //an execute complete event.\r\n            var oneSuccess = args && _.find(args, function (result) {\r\n                  return !(result instanceof CommandError);\r\n                });\r\n            var rejectResults = oneSuccess ? oneSuccess : args;\r\n            deferred.reject(rejectResults);\r\n          });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var self               = this,\r\n          deferred           = $.Deferred(),\r\n          commandData        = status.data || {},\r\n          showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true,\r\n          models             = status.nodes.models;\r\n      var nodes = _.map(models, function (node) {\r\n        return {\r\n          name: node.get('name'),\r\n          state: 'pending',\r\n          count: 0,\r\n          total: 1,\r\n          node: node\r\n        };\r\n      });\r\n      var connector = models && models[0] && models[0].connector;\r\n      var uploadCollection = new UploadFileCollection(nodes, {\r\n        connector: connector,\r\n        container: status.container ? status.container.clone() : undefined\r\n      });\r\n      var newStatus = _.defaults({nodes: uploadCollection}, status);\r\n      var bundleNumber = new Date().getTime();\r\n      // TODO: Make the progressbar a reusable component; do not\r\n      // misuse the file-upload-progressbar for other scenarios.\r\n      // TODO: Handle this in the multi-item command to be consistent\r\n      // with other commands; do not override the delete command only.\r\n      uploadCollection.each(function (fileUpload) {\r\n        // Replace the new node in the file upload model with the existing\r\n        // one to be able to destroy it; sync and destroy events will be\r\n        // triggered on it and the parent collection and view will see them.\r\n        var node = fileUpload.get('node');\r\n        fileUpload.node = node;\r\n        fileUpload.unset('node');\r\n        fileUpload.set('bundleNumber', bundleNumber);\r\n        fileUpload.set('mime_type', node.get('mime_type'));\r\n\r\n      });\r\n\r\n      // var isVersionModel = uploadCollection.models[0].node instanceof VersionModel;\r\n      if (showProgressDialog) {\r\n        this.startGlobalMessage(uploadCollection, options);\r\n      }\r\n\r\n      var originatingView = status.originatingView;\r\n      if (originatingView && originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n\r\n      // do not display our result messages in _performActions\r\n      newStatus.suppressMultipleSuccessMessage = true;\r\n      newStatus.suppressMultipleFailMessage = true;\r\n\r\n      MultipleItemsCommand._performActions.call(this, newStatus, options)\r\n          .done(function (results) {\r\n            deferred.resolve(results);\r\n          })\r\n          .fail(function (errors) {\r\n            if (!showProgressDialog) {\r\n              self.showError(errors);\r\n            }\r\n            return deferred.reject(errors);\r\n          });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return DeleteCommand;\r\n});\r\n\n","csui.define( 'csui/utils/commands/delete/delete.self.handler',[\r\n  \"csui/lib/jquery\", \"csui/lib/underscore\"\r\n], function ($, _) {\r\n\r\n  function goBackToFolder(id, context) {\r\n    var viewStateModel = context.viewStateModel;\r\n    if (viewStateModel) {\r\n      var historyEntry = viewStateModel.getLastHistoryEntry();\r\n      if (historyEntry && historyEntry.fragment === 'nodes/' + id) {\r\n        viewStateModel.restoreLastFragment();\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return function (node, options) {\r\n    var context = options && options.context;\r\n    if (context && context.hasModel('nextNode')) {\r\n      var nextNode = context.getModel('nextNode');\r\n      var parent = node.get('parent_id');\r\n\r\n      if (parent) {\r\n        var id = parent.id || parent;\r\n        if (!goBackToFolder(id, context)) {\r\n          // if we can't go back then go forward. The next command will add entry to the viewStateModel history\r\n          nextNode.set('id', id);\r\n        }\r\n      }\r\n    }\r\n  };\r\n});\r\n\n","\n","csui.define('csui/utils/commands/preview.plugins/preview.plugins',[\r\n  'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/models/mixins/rules.matching/rules.matching.mixin',\r\n  'csui-ext!csui/utils/commands/preview.plugins/preview.plugins'\r\n], function (_, Backbone, RulesMatchingMixin, rules) {\r\n  'use strict';\r\n\r\n  var PreviewPluginModel = Backbone.Model.extend({\r\n    defaults: {\r\n      sequence: 100,\r\n      plugin: null\r\n    },\r\n\r\n    constructor: function OpenPluginModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      this.makeRulesMatching(options);\r\n    }\r\n  });\r\n\r\n  RulesMatchingMixin.mixin(PreviewPluginModel.prototype);\r\n\r\n  var PreviewPluginCollection = Backbone.Collection.extend({\r\n    model: PreviewPluginModel,\r\n    comparator: 'sequence',\r\n\r\n    constructor: function PreviewPluginCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.call(this, models, options);\r\n    },\r\n\r\n    findByNode: function (node, options) {\r\n      var rule = this.find(function (item) {\r\n        return item.matchRules(node, item.attributes, options);\r\n      });\r\n      return rule && rule.get('plugin');\r\n    }\r\n  });\r\n\r\n  var previewPlugins = new PreviewPluginCollection();\r\n\r\n  if (rules) {\r\n    previewPlugins.add(_\r\n      .chain(rules)\r\n      .flatten(true)\r\n      .map(function (rule) {\r\n        return _.defaults({\r\n          plugin: new rule.plugin()\r\n        }, rule);\r\n      })\r\n      .value());\r\n  }\r\n\r\n  return previewPlugins;\r\n});\r\n\n","csui.define('csui/utils/commands/doc.preview',[\r\n  'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/commands/preview.plugins/preview.plugins',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (require, _, $, CommandModel, CommandHelper, previewPlugins, lang) {\r\n  'use strict';\r\n\r\n  var commandData = {\r\n    includeContainers: true,\r\n    ifNotOpenDelegate: true,\r\n    fullView: false\r\n  };\r\n\r\n  var DocPreviewCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'DocPreview',\r\n      command_key: ['docpreview', 'DocPreview'],\r\n      scope: 'multiple',\r\n      name: lang.DocumentPreview\r\n    },\r\n\r\n    delegatableOpenCommand: 'OpenDocument',\r\n\r\n    enabled: function (status, options) {\r\n      var disablePreview = status.originatingView && status.originatingView.disablePreview;\r\n      if (disablePreview) {\r\n        return false;\r\n      }\r\n\r\n      var nodes = CommandHelper.getAtLeastOneNode(status),\r\n          valid = true;\r\n\r\n      // check each selected node, if at least one failed to preview, return false.\r\n      if (nodes && nodes.length) {\r\n        nodes.each(_.bind(function (node) {\r\n          var validateCurrentNode = valid && this._validateCurrentNode(node, status, options);\r\n          if (!validateCurrentNode) {\r\n            valid = false;\r\n          }\r\n        }, this));\r\n      } else {\r\n        valid = false;\r\n      }\r\n\r\n      return valid;\r\n    },\r\n\r\n    _getData: function (status) {\r\n      var data    = status && status.data ? status.data : {},\r\n          cmdData = _.defaults(data, commandData);\r\n      return cmdData;\r\n    },\r\n\r\n    _validateCurrentNode: function (node, status, options) {\r\n\r\n      var context = status.context || options && options.context,\r\n          plugin  = previewPlugins.findByNode(node, {context: context}),\r\n          cmdData = this._getData(status);\r\n\r\n      if (!plugin) {\r\n        return false;\r\n      }\r\n\r\n      // if the current toolbar item's command data want to skip doc preview command for containers, then return\r\n      // false.\r\n      if (!cmdData.includeContainers && !!node.get('container')) {\r\n        return false;\r\n      }\r\n\r\n      // get custom validateNode from plugin, if not available execute default validateNode.\r\n      var validateNode = plugin.validateNode || this.validateNode;\r\n\r\n      if (!validateNode(node, status)) {\r\n        return false;\r\n      }\r\n\r\n      // TODO: Is it better to implement ifNotOpenDelegate and ifNotDefaultAction\r\n      // in the command controller instead of in each command like this?\r\n      var isOpenDelegate = cmdData && cmdData.ifNotOpenDelegate &&\r\n                           getOpenDelegateSignature(this, status, options) ===\r\n                           this.get('signature');\r\n      if (isOpenDelegate) {\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * By default, this command should not be enabled for all viewers.\r\n     *\r\n     * @param node\r\n     * @param status\r\n     * @returns {boolean}\r\n     */\r\n    validateNode: function (node, status) {\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var nodes           = CommandHelper.getAtLeastOneNode(status),\r\n          context         = status.context || options && options.context,\r\n          originatingView = status.originatingView || options.originatingView,\r\n          cmdData         = this._getData(status),\r\n          fullViewMode    = (cmdData && cmdData.fullView) || (options && options.fullView) ||\r\n                            (status.originatingView && status.originatingView.previewInFullMode);\r\n\r\n      if (fullViewMode) {\r\n        var nodez      = nodes.models[0],\r\n            pluginz    = previewPlugins.findByNode(nodez, {context: context}),\r\n            WidgetView = pluginz.widgetView;\r\n\r\n        var deferred = $.Deferred();\r\n        require([\r\n          'csui/utils/commands/impl/full.page.modal/full.page.modal.view',\r\n          WidgetView\r\n        ], function (FullPageModal, widgetView) {\r\n          var viewerView    = new widgetView({\r\n                context: context,\r\n                model: nodez\r\n              }),\r\n              fullPageModal = new FullPageModal({\r\n                view: viewerView\r\n              });\r\n          fullPageModal.on('destroy', function () {\r\n                deferred.resolve();\r\n              })\r\n              .show();\r\n\r\n          // set the focus on the first tool item in viewer's toolbar.\r\n          fullPageModal.$el.on('shown.binf.modal', function () {\r\n            var firstBtn = $(fullPageModal.$el.find('button')[0]);\r\n            firstBtn && firstBtn.trigger('focus');\r\n          });\r\n\r\n        }, deferred.reject);\r\n        return deferred.promise();\r\n\r\n      } else {\r\n\r\n        originatingView = originatingView.options && originatingView.options.originatingView ||\r\n                          originatingView;\r\n\r\n        // obtain first node from the selected nodes\r\n        // if items selected from the current page only, then it renders the first document in the\r\n        // current list, if items selected from previous or next pages, then either first item in\r\n        // the current page select or if none of the items from the current page is selected, then\r\n        // considers the first item from the selected nodes.\r\n        var selectedNodes = originatingView.collection && originatingView.collection.length ?\r\n                            _.filter(originatingView.collection.models, function (model) {\r\n                              var id = model.get('id');\r\n                              if (nodes.find(id)) {\r\n                                return model;\r\n                              }\r\n                            }) : nodes.models[0],\r\n            firstNode     = selectedNodes.length ?\r\n                            _.intersection(originatingView.collection.models, nodes.models)[0] :\r\n                            nodes.models[0];\r\n        // null check if first node is undefined\r\n        firstNode = !firstNode ? nodes.models[0] : firstNode;\r\n\r\n        // if side panel is already opened then pass the new node to existing side panel.\r\n        if (!!originatingView.ensureSidePanel ||\r\n            ( this.docPreviewView && !!this.docPreviewView.openSidePanel)) {\r\n          this.docPreviewView.trigger('open:new:doc:preview', firstNode, originatingView);\r\n        } else {\r\n          originatingView.ensureSidePanel = true;\r\n          var plugin = previewPlugins.findByNode(firstNode, {context: context});\r\n\r\n          this._openInSidepanel(firstNode, plugin, originatingView, context);\r\n        }\r\n\r\n        return $.Deferred().resolve().promise();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * This method opens the side panel, and integrate `docpreview.view` inside side panel as\r\n     * content view.\r\n     *\r\n     * @param status\r\n     * @param node\r\n     * @param context\r\n     * @private\r\n     */\r\n    _openInSidepanel: function (node, plugin, originatingView, context) {\r\n      var self = this;\r\n      require([\r\n        'csui/controls/side.panel/side.panel.view',\r\n        'csui/controls/doc.preview/doc.preview.view'\r\n      ], function (SidePanelView, DocumentPreviewView) {\r\n        var documentPreviewView = new DocumentPreviewView({\r\n              model: node,\r\n              plugin: plugin,\r\n              originatingView: originatingView,\r\n              context: context,\r\n              resizableWrapperClass: '.csui-sidepanel-container'\r\n            }),\r\n            sidePanelView       = new SidePanelView({\r\n              slides: [{\r\n                content: documentPreviewView\r\n              }],\r\n              sidePanelClassName: 'csui-sidepanel-doc-preview',\r\n              layout: {header: false, footer: false, mask: false, resize: true, size: 'medium'},\r\n              contentView: documentPreviewView,\r\n              thresholdWidth: 95,\r\n              context: context,\r\n              keyboard: false\r\n            });\r\n\r\n        sidePanelView.show();\r\n        documentPreviewView.openSidePanel = true;\r\n        self.docPreviewView = documentPreviewView;\r\n        /**\r\n         * This anonymous function cleans side panel view created as part of this action by\r\n         * listening it's integrated view's `before:destroy` event.\r\n         */\r\n        var viewStateModel = context.viewStateModel,\r\n            cleanup        = function () {\r\n              sidePanelView.stopListening(viewStateModel,\r\n                  'change:' + viewStateModel.CONSTANTS.STATE);\r\n              // as side panel is going to destroy, reset `ensureSidePanel` to false.\r\n              originatingView.ensureSidePanel = false;\r\n              documentPreviewView.openSidePanel = false;\r\n              // remove highlighted rows if any...\r\n              $('.csui-doc-preview-state').removeClass('csui-doc-preview-state');\r\n              self.docPreviewView.trigger(\"destroy\");\r\n              self.docPreviewView = undefined;\r\n              // hide and destroy side panel view.\r\n              sidePanelView.hide();\r\n              sidePanelView.destroy();\r\n              // Inform the originating view that current document preview has been closed.\r\n              originatingView && originatingView.trigger('doc:preview:closed');\r\n            };\r\n\r\n        sidePanelView.listenTo(documentPreviewView, 'before:destroy', cleanup);\r\n        // on clicking on another tab in a business workspace or other cases where viewstate is modified\r\n        viewStateModel && sidePanelView.listenTo(viewStateModel,\r\n            'change:' + viewStateModel.CONSTANTS.STATE, cleanup);\r\n      });\r\n    }\r\n  });\r\n\r\n  function getOpenDelegateSignature(command, status, options) {\r\n    var commands = command.collection;\r\n    if (commands) {\r\n      var openCommand = commands.get(command.delegatableOpenCommand);\r\n      if (openCommand) {\r\n        var delegate = openCommand.getDelegatedCommand(status, options);\r\n        return delegate && delegate.get('signature');\r\n      }\r\n    }\r\n  }\r\n\r\n  return DocPreviewCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/download',[\r\n  'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/url', 'csui/utils/commandhelper',\r\n  'csui/models/command', 'csui/models/version'\r\n], function (_, $, base, lang, Url, CommandHelper,\r\n    CommandModel, VersionModel) {\r\n  'use strict';\r\n\r\n  // TODO: Introduce a shared configuration concept.\r\n  var config = window.csui.requirejs.s.contexts._.config.config['csui/utils/commands/open'];\r\n\r\n  var DownloadCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"Download\",\r\n      command_key: ['download', 'Download'],\r\n      name: lang.CommandNameDownload,\r\n      verb: lang.CommandVerbDownload,\r\n      doneVerb: lang.CommandDoneVerbDownload,\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node = this._getNode(status);\r\n\r\n      if (base.isAppleMobile()) {\r\n        // in case of iOS open the document in a new tab\r\n        return this._openContent(node, options);\r\n      } else {\r\n        return this._downloadContent(node, options);\r\n      }\r\n    },\r\n\r\n    _getNode: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      var type = node.get('type');\r\n      // In search results, Generation node carries the version_number (not in the original node).\r\n      var generationVersionNumber = node.get('version_number');\r\n\r\n      // Apply the open/download command always to the Shortcut or Generation target.\r\n      // The original node reference must be expanded.\r\n      if (node.original && node.original.get('id') > 0) {\r\n        if (type === 1 || type === 2) {  // Shortcut or Generation\r\n          node = node.original;\r\n        }\r\n        if (type === 2 && generationVersionNumber !== undefined) {  // Generation\r\n          node.set('version_number', generationVersionNumber, {silent: true});\r\n        }\r\n      }\r\n\r\n      // In Search Results, the collection can contain models with non current version but these\r\n      // models are not of type VersionModel.  Such models need the version_number.\r\n      // Check for the 'current_version=false' that is set explicitly.\r\n      // Note: the Search Results code does not always set/have 'current_version=true' explicitly.\r\n      var versionsObj = node.get('versions');\r\n      var currentVersion = !(versionsObj && (versionsObj.current_version === false));\r\n\r\n      // Always open or download with the latest version.\r\n      // Remove the version number properties if the node is not a VersionModel nor Generation.\r\n      // Same for Search Results latest/current version.\r\n      if (!(node instanceof VersionModel) && type !== 2 && currentVersion) {\r\n        var cloneNode = node.clone();\r\n        var versionNumProps = ['version_number', 'version_number_major', 'version_number_minor',\r\n          'version_number_name'];\r\n        versionNumProps.forEach(function (property) {\r\n          cloneNode.unset(property, {silent: true});\r\n          if (cloneNode.attributes.versions && _.isObject(cloneNode.attributes.versions)) {\r\n            delete cloneNode.attributes.versions[property];\r\n          }\r\n        });\r\n        return cloneNode;\r\n      }\r\n\r\n      return node;\r\n    },\r\n\r\n    _downloadContent: function (node, options) {\r\n      return this._downloadContentWithPage(node, options);\r\n    },\r\n\r\n    _downloadContentWithPage: function (node, options) {\r\n      var deferred = $.Deferred();\r\n      options || (options = {});\r\n      options.openInNewTab = !!options.openInNewTab;    // default should be false\r\n      require(['csui/utils/open.authenticated.page'], function (openAuthenticatedPage) {\r\n        var cgiUrl = new Url(node.connector.connection.url).getCgiScript();\r\n        var query = {\r\n          func: 'doc.fetchcsui',\r\n          nodeid: node.get('id'),\r\n          action: 'download'\r\n        };\r\n        var versionNumber = node.get('version_number');\r\n        if (versionNumber != null) {\r\n          query.vernum = versionNumber;\r\n        }\r\n        var downloadUrl = Url.appendQuery(cgiUrl, Url.combineQueryString(query));\r\n        return openAuthenticatedPage(node.connector, downloadUrl, options)\r\n          .then(deferred.resolve, deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _openContent: function (node, options) {\r\n      options || (options = {});\r\n      var content = window.open(\"\");\r\n      var downloadOptions = { window: content };\r\n      // Calling window.open(\"\") returns null in the SAP Fiori Client.\r\n      if (!content || !content.location) {\r\n        downloadOptions = { window: parent.window };\r\n        content = null;\r\n      }\r\n      return this._downloadContentWithPage(node, _.extend(options, downloadOptions))\r\n      .then(function() {\r\n        if (content) {\r\n          content.focus();\r\n        }\r\n        return $.Deferred().resolve();\r\n      }, function() {\r\n        if (content) {\r\n          content.close();\r\n        }\r\n        return $.Deferred().reject();\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  return DownloadCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.base',[\r\n    'csui/lib/underscore', 'csui/models/command', 'csui/utils/commandhelper'\r\n  ], function (_, CommandModel, CommandHelper) {\r\n    'use strict';\r\n\r\n    var OpenBaseCommand = CommandModel.extend({\r\n      // The command that extends this base command must provide an\r\n      // 'openDelegates' prioritized colletion that contains the list\r\n      // of specific delegatable commands.\r\n      openDelegates: null,\r\n\r\n      // Collect required permitted actions from all delegates, so that these\r\n      // actions will be requested ahead for a proper command enabling.\r\n      getCommandKey: function () {\r\n        if(!this.openDelegates) {\r\n          return [];\r\n        }\r\n\r\n        var commandKeys = this.openDelegates.map(function (delegate) {\r\n          var command = delegate.get('command');\r\n          return command.getCommandKey && command.getCommandKey()\r\n            || command.get('command_key') || [];\r\n        });\r\n        return _\r\n          .chain(commandKeys)\r\n          .flatten()\r\n          .invoke('toLowerCase')\r\n          .unique()\r\n          .value();\r\n      },\r\n\r\n      enabled: function (status, options) {\r\n        // The execution is possible only if the command extending this base command provides\r\n        // the delegates collection.\r\n        if(!this.openDelegates) {\r\n          return false;\r\n        }\r\n\r\n        var node = CommandHelper.getJustOneNode(status);\r\n        // Allow only a single node to be opened.\r\n        if (!node) {\r\n          return false;\r\n        }\r\n        // TODO: Ask for content:true to be added to the REST API. They added\r\n        // versionable:true, which will be great for the version history enabling,\r\n        // but not for content opening, because containers can be versionable too.\r\n        // TODO: Move E-mail and Drawing to their modules\r\n        var type = node.get('type');\r\n        if (!(type && _.contains(['144', '749', '736', '801'], type.toString()))) {\r\n          return false;\r\n        }\r\n        // Check permissions of the least demanding command - the fallback,\r\n        // which is evaluated at the end of the prioritized collection.\r\n        var fallbackCommand = this.openDelegates.last().get('command');\r\n        return fallbackCommand.enabled(status, options);\r\n      },\r\n\r\n      execute: function (status, options) {\r\n        var delegatedCommand = this.getDelegatedCommand(status, options);\r\n        return delegatedCommand.execute(status, options);\r\n      },\r\n\r\n      getDelegatedCommand: function (status, options) {\r\n        var node = CommandHelper.getJustOneNode(status);\r\n        return node && this.openDelegates.findByNode(node, status, options);\r\n      }\r\n    });\r\n\r\n    return OpenBaseCommand;\r\n  });\r\n\n","\n","csui.define('csui/utils/commands/open.document/delegates/open.document.delegates',[\r\n  'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/models/mixins/rules.matching/rules.matching.mixin',\r\n  // Load and register external document opening command delegates\r\n  'csui-ext!csui/utils/commands/open.document/delegates/open.document.delegates'\r\n], function (_, Backbone, RulesMatchingMixin, rules) {\r\n  'use strict';\r\n\r\n  var OpenDocumentDelegateModel = Backbone.Model.extend({\r\n    defaults: {\r\n      sequence: 100,\r\n      command: null\r\n    },\r\n\r\n    constructor: function OpenDocumentDelegateModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      this.makeRulesMatching(options);\r\n    },\r\n\r\n    enabled: function (node, status, options) {\r\n      var context = status.context || options && options.context;\r\n      var matchOptions = { context: context };\r\n      return this.matchRules(node, this.attributes, matchOptions) &&\r\n        this.get('command').enabled(status, options);\r\n    }\r\n  });\r\n\r\n  RulesMatchingMixin.mixin(OpenDocumentDelegateModel.prototype);\r\n\r\n  var OpenDocumentDelegateCollection = Backbone.Collection.extend({\r\n    model: OpenDocumentDelegateModel,\r\n    comparator: 'sequence',\r\n\r\n    constructor: function OpenDocumentDelegateCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.call(this, models, options);\r\n    },\r\n\r\n    findByNode: function (node, status, options) {\r\n      var rule = this.find(function (rule) {\r\n        return rule.enabled(node, status, options);\r\n      });\r\n      return rule && rule.get('command');\r\n    }\r\n  });\r\n\r\n  var openDocumentDelegates = new OpenDocumentDelegateCollection();\r\n\r\n  if (rules) {\r\n    openDocumentDelegates.add(_\r\n      .chain(rules)\r\n      .flatten(rules)\r\n      .map(function (rule) {\r\n        return _.defaults({\r\n          command: new rule.command()\r\n        }, rule);\r\n      })\r\n      .value());\r\n  }\r\n\r\n  return openDocumentDelegates;\r\n});\r\n\n","csui.define('csui/utils/commands/open.document/open.document',[\r\n  'csui/lib/underscore', 'csui/utils/commands/open.base',\r\n  'csui/utils/commands/open.document/delegates/open.document.delegates'\r\n], function (_, OpenBaseCommand, openDocumentDelegates) {\r\n  'use strict';\r\n\r\n  var OpenDocumentCommand = OpenBaseCommand.extend({\r\n    defaults: { signature: 'OpenDocument' },\r\n\r\n    openDelegates: openDocumentDelegates\r\n  });\r\n\r\n  return OpenDocumentCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/zipanddownload',[\"module\", \"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  \"i18n!csui/utils/commands/nls/localized.strings\", \"csui/utils/command.error\",\r\n  \"csui/utils/commandhelper\", \"csui/models/command\", \"csui/utils/url\"\r\n], function (module, require, _, $, lang, CommandError, CommandHelper,\r\n    CommandModel, URL) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, PreFlightModel, StagesModel, ModalAlert, stageInterval = 2000;\r\n\r\n  var ZipAndDownloadCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"ZipAndDownload\",\r\n      command_key: ['ZipAndDownload', 'zipanddownload'],\r\n      name: lang.CommandNameZipDownload,\r\n      verb: lang.CommandVerbZipDownload,\r\n      doneVerb: lang.CommandDoneVerbDownload,\r\n      scope: \"multiple\",\r\n      selfBlockOnly: true\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var flag = false;\r\n      if(!status.nodes || !status.nodes.models){\r\n        return false;\r\n      }\r\n\r\n      if (status.nodes.models.length === 1) {\r\n        var node = CommandHelper.getJustOneNode(status),\r\n            zipAndDownloadExists;\r\n        for (var idx = 0; idx < status.nodes.models.length; idx++) {\r\n          zipAndDownloadExists = _.filter(\r\n              status.nodes.models && status.nodes.models[idx].actions &&\r\n              status.nodes.models[idx].actions.models,\r\n              function (action) { return action.id === \"zipanddownload\"; });\r\n        }\r\n        if (node.get(\"container\") && zipAndDownloadExists.length > 0) {\r\n          flag = true;\r\n        }\r\n      } else if (status.nodes.models.length > 1) {\r\n        var count = 0;\r\n        for (var index = 0; index < status.nodes.models.length; index++) {\r\n          var downloadExists = _.filter(status.nodes.models && status.nodes.models[index].actions &&\r\n                                        status.nodes.models[index].actions.models,\r\n              function (action) { return action.id === \"zipanddownload\"; });\r\n          if (downloadExists.length > 0) {\r\n            count++;\r\n          }\r\n        }\r\n        if (count > 0 && count === status.nodes.models.length) {\r\n          flag = true;\r\n        }\r\n      }\r\n      return flag;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      this.set('isExecuting', true);\r\n      if (this.stagesModel) {\r\n        delete this.stagesModel;  // to prepare fresh model with new job id\r\n      }\r\n      var nodes = CommandHelper.getAtLeastOneNode(status),\r\n          self  = this;\r\n      this.options = options || {};\r\n      this._deferred = $.Deferred();\r\n      this.connector = this.options.connector ||\r\n                       status.collection && status.collection.connector ||\r\n                       status.container && status.container.connector ||\r\n                       nodes.models && nodes.models[0].connector;\r\n\r\n      require(['csui/controls/globalmessage/globalmessage',\r\n        \"csui/models/zipanddownload/zipanddownload.preflight\",\r\n        \"csui/models/zipanddownload/zipanddownload.stages\",\r\n        \"csui/dialogs/modal.alert/modal.alert\"\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        PreFlightModel = arguments[1];\r\n        StagesModel = arguments[2];\r\n        ModalAlert = arguments[3];\r\n        //Verify the selected nodes will able to zip and download\r\n        //TODO: enable preflight once rest api handles the permissions check\r\n        /*self._preFlightCheck(status, nodes).done(\r\n          function (preFlightModel) {\r\n            if (preFlightModel.get('results').data.jobs.total_skipped > 0) {\r\n              require([\r\n                'csui/controls/zipanddownload/impl/preflight.dialog/preflight.dialog.view'\r\n              ], function (PreflightDialogView) {\r\n                var dialogOptions = {\r\n                  model: preFlightModel,\r\n                  buttons: [\r\n                    {\r\n                      id: 'zipDownload',\r\n                      label: lang.PreFlightDialogBtnContinue,\r\n                      click: _.bind(self.stageAndPrepareDownload, self, status, nodes, preFlightModel),\r\n                      'default': true\r\n                    },\r\n                    {\r\n                      label: lang.DialogBtnCancel,\r\n                      click: _.bind(self.onClickCancelButton, self)\r\n\r\n                    }\r\n                  ]\r\n                };\r\n                self._showDialogBox(PreflightDialogView, status, nodes, dialogOptions);\r\n              });\r\n            } else {\r\n              self.stageAndPrepareDownload(status, nodes, preFlightModel);\r\n            }\r\n          });*/\r\n        self.stageAndPrepareDownload(status, nodes, {});\r\n      });\r\n      // this._deferred.resolve();  // Do not block other actions\r\n      this._deferred.always(function () {\r\n        self.set('isExecuting', false);\r\n      });\r\n      return this._deferred.promise();\r\n    },\r\n\r\n    _preFlightCheck: function (status, nodes) {\r\n      var deferred = $.Deferred();\r\n      var self     = this,\r\n          formData = {\r\n            id_list: nodes.pluck('id'),\r\n            type: 'ZipAndDownload'\r\n          };\r\n      var preFlightModel = new PreFlightModel(formData, status);\r\n      preFlightModel.preflight = true;\r\n      var preflightXHR = preFlightModel.save(formData, {\r\n        silent: true,\r\n        wait: true\r\n      }).done(function () {\r\n        deferred.resolve(preFlightModel);\r\n      }).fail(function (error) {\r\n        var commandError = error ? new CommandError(error, preFlightModel) :\r\n                           error;\r\n        if (error.statusText !== 'abort') {\r\n          ModalAlert.showError(commandError.message, lang.error);\r\n        }\r\n        self._deferred.reject({cancelled: true});\r\n        deferred.reject(preFlightModel, commandError);\r\n      });\r\n      GlobalMessage.showLoader(preflightXHR, {\r\n        label: lang.VerifyZipAndDownloadPrefetch\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getJobId: function (status, nodes) {\r\n      var url         = this.connector.getConnectionUrl().getApiBase('v2'),\r\n          formData    = {\r\n            id_list: nodes.pluck('id'),\r\n            type: 'ZipAndDownload'\r\n          },\r\n          ajaxOptions = {\r\n            url: URL.combine(url, 'zipanddownload'),\r\n            type: 'POST',\r\n            data: formData,\r\n            contentType: 'application/x-www-form-urlencoded'\r\n          };\r\n      return this.connector.makeAjaxCall(ajaxOptions);\r\n    },\r\n\r\n    changeStageMessage: function (xhr) {\r\n      // better pass a model to global message loader panel and update that model so that loader\r\n      // panel view re-renders itself\r\n      var currentStage = this.stagesModel && this.stagesModel.get('current_stage') || 0;\r\n      var message = currentStage === 0 ? lang.ExtractingZipAndDownload :\r\n                    (currentStage === 1 ? lang.CompressingZipAndDownload :\r\n                     lang.CleanUpZipAndDownload);\r\n      GlobalMessage.changeLoaderMessage(message, xhr);\r\n    },\r\n\r\n    _checkStage: function (status, jobIdModel, deferred) {\r\n      deferred = deferred || $.Deferred();\r\n      this.stagesModel || (this.stagesModel = new StagesModel(jobIdModel, {\r\n        connector: this.connector\r\n      }));\r\n      var self    = this,\r\n          promise = deferred.promise(),\r\n          xhr     = this.stagesModel.fetch();\r\n      this.changeStageMessage(xhr);\r\n      xhr.done(function () {\r\n        if (self.stagesModel.get('complete')) {\r\n          deferred.resolve(self.stagesModel);\r\n        } else {\r\n          if (self.stagesModel.get('stage_summary').some(function (stage) {\r\n                return !stage.complete;\r\n              })) {\r\n            self.stageCheckTimeout = setTimeout(function () {\r\n              clearTimeout(self.stageCheckTimeout);\r\n              self.stageCheckTimeout = undefined;\r\n              self._checkStage(status, jobIdModel, deferred);\r\n            }, stageInterval);\r\n          } else {\r\n            deferred.resolve(self.stagesModel);\r\n          }\r\n        }\r\n      });\r\n      promise.abort = xhr.abort;   // helper for loader panel view cancel\r\n      return promise;\r\n    },\r\n\r\n    _showDialogBox: function (view, status, nodes, dialogOptions) {\r\n      var self = this;\r\n      // dialog view\r\n      self._dialog = new view(_.extend(dialogOptions, {\r\n        status: status,\r\n        nodes: nodes,\r\n        iconLeft: 'notification_warning'\r\n      }));\r\n      self._dialog.listenTo(self._dialog, 'hide', _.bind(self.onHideDialog, self));\r\n      self._dialog.show();\r\n    },\r\n\r\n    onHideDialog: function () {\r\n      if (this._deferred) {\r\n        if (this._deferred.state() === 'pending') {\r\n          this._deferred.reject({cancelled: true});\r\n        }\r\n      }\r\n    },\r\n\r\n    stageAndPrepareDownload: function (status, nodes, preFlightModel) {\r\n      var self         = this,\r\n          deferred     = $.Deferred(),\r\n          currentStage = self.stagesModel && self.stagesModel.get('current_stage') || 0;\r\n      self._getJobId(status, nodes).done(function (jobIdModel) {\r\n        jobIdModel = jobIdModel.results.data.jobs;\r\n        var checkStage = self._checkStage(status, jobIdModel);\r\n        GlobalMessage.showLoader(checkStage, {\r\n          label: currentStage === 0 ? lang.ExtractingZipAndDownload :\r\n                 (currentStage === 1 ? lang.CompressingZipAndDownload :\r\n                  lang.CleanUpZipAndDownload),\r\n          onDestroy: function (success) {\r\n            if (self.stageCheckTimeout) {\r\n              clearTimeout(self.stageCheckTimeout);\r\n            }\r\n            success ? self._deferred.resolve() : self._deferred.reject();\r\n          }\r\n        });\r\n        checkStage.done(\r\n            function (stagesModel) {\r\n              deferred.resolve();\r\n              if (stagesModel && stagesModel.get('complete') &&\r\n                  stagesModel.get('current_stage') === stagesModel.get('stage_summary').length) {\r\n                require([\r\n                  'csui/controls/zipanddownload/impl/download.dialog/download.dialog.view', \r\n                  'csui/utils/base', \r\n                  'csui/utils/open.authenticated.page',\r\n                  'csui/controls/zipanddownload/impl/dialog.header/dialog.header.view'\r\n                ], function (DownloadDialogView, base, openAuthenticatedPage, DialogHeaderView) {\r\n                  deferred.resolve();\r\n                  var dialogOptions = {\r\n                    model: stagesModel,\r\n                    status: status,\r\n                    // title: lang.downloadDialogTitle,\r\n                    headerView: new DialogHeaderView({\r\n                          title: lang.downloadDialogTitle,\r\n                          describedBy: \"download-zip-file\",\r\n                          source: 'downloadZip'\r\n                        }),\r\n                    //preFlightModel: preFlightModel,\r\n                    buttons: [\r\n                      {\r\n                        id: 'zipDownload',\r\n                        label: lang.DownloadDialogBtnDownload,\r\n                        click: _.bind(function () {\r\n                          //validate the name\r\n                          var archiveName = this._dialog.ui.fileName.val(),\r\n                              isValidName = false;\r\n                          if (/^[\\W]+/.test(archiveName)) {\r\n                            //Allowing download of other languages(non-english)\r\n                            if (/[^\\u0000-\\u007F]/g.test(archiveName)) {\r\n                              isValidName = true;\r\n                            }\r\n                          }\r\n                          var nameErrorMsg = '';\r\n                          if (archiveName.trim().length === 0) {\r\n                            nameErrorMsg = lang.TheArchiveNameCannotBeEmpty;\r\n                          } else if (archiveName.trim().length > 248) {\r\n                            nameErrorMsg = lang.TheArchiveNameMaxLength;\r\n                          } else if (archiveName.search(\r\n                                  /[\\?\\:<>\\*\\|\\\"\\\\\\/\\\\&]/g) !== -1) {\r\n                            nameErrorMsg = lang.InvalidArchiveCharacters;\r\n                          } else if (/^[\\W]+/.test(archiveName) && !isValidName) {\r\n                            nameErrorMsg = lang.InvalidArchiveName;\r\n                          } else {\r\n                            if (this._dialog.options.status &&\r\n                                this._dialog.options.status.originatingView) {\r\n                              var toolItem = this._dialog.options.status.originatingView.$el.find(\r\n                                  '[data-csui-command=' + this.get(\"signature\").toLowerCase() +\r\n                                  '] a.binf-disabled');\r\n                              if (toolItem.length > 0) {\r\n                                toolItem.removeClass(\"binf-disabled\");\r\n                              }\r\n                            }\r\n                            if (!/(.)+(.zip)$/i.test(archiveName)) {\r\n                              archiveName += '.zip';\r\n                            }\r\n                            /*  window.open(URL.combine(this.connector.connection.url.replace(/\\/api\\/v[1|2]\\/?/gi, ''),\r\n                             StagesModel.get('link')));  */\r\n                            // Resource interpreted as Document but transferred with MIME type\r\n                            // application/octet-stream:\r\n                            var downloadURL = URL.appendQuery(URL.combine(\r\n                              this.connector.connection.url.replace(/\\/api\\/v[1|2]/gi, ''),\r\n                              stagesModel.get('link')),\r\n                              'downloadName=' + encodeURIComponent(archiveName));\r\n                            openAuthenticatedPage(this.connector, downloadURL, { openInNewTab: false })\r\n                              .then(deferred.resolve, deferred.reject);\r\n                             this._dialog.destroy();\r\n                            delete this._dialog;\r\n                          }\r\n                          if (nameErrorMsg.length) {\r\n                            this._dialog.ui.errorEl.html(nameErrorMsg).attr('role','alert');\r\n                            var nameErrorId = this._dialog.ui.errorEl.attr('id');\r\n                            this._dialog.ui.fileName.attr({'aria-invalid': true, 'aria-describedby': nameErrorId} );\r\n                          }\r\n                        }, self),\r\n                        'default': true,\r\n                        disabled: stagesModel.get('total_completed') === 0\r\n                      }, {\r\n                        label: lang.DialogBtnCancel,\r\n                        close: true,\r\n                        click: _.bind(self.onClickCancelButton, self)\r\n                      }\r\n                    ]\r\n                  };\r\n                  self._showDialogBox(DownloadDialogView, status, nodes, dialogOptions);\r\n                });\r\n              } else {\r\n                ModalAlert.showError(stagesModel.get('status_formatted'));\r\n              }\r\n            }).fail(function (error) {\r\n          GlobalMessage.showMessage('error', error.statusText);\r\n          deferred.reject(error);\r\n        });\r\n      });\r\n      if (this._dialog) {\r\n        this._dialog.destroy();\r\n        delete this._dialog;\r\n      }\r\n    },\r\n\r\n    onClickCancelButton: function () {\r\n      if (this._dialog.options.status && this._dialog.options.status.originatingView) {\r\n        var toolItem = this._dialog.options.status.originatingView.$el.find(\r\n            '[data-csui-command=' + this.get(\"signature\").toLowerCase() +\r\n            '] a.binf-disabled');\r\n        if (toolItem.length > 0) {\r\n          toolItem.removeClass(\"binf-disabled\");\r\n        }\r\n      }\r\n      this._dialog.destroy();\r\n      delete this._dialog;\r\n    }\r\n  });\r\n  return ZipAndDownloadCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.classic.page',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/url',\r\n  'csui/utils/commandhelper', 'csui/models/command',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, Url, CommandHelper, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    openInNewTab: true\r\n  }, module.config());\r\n\r\n  var OpenClassicPageCommand = CommandModel.extend({\r\n\r\n    execute: function (status, options) {\r\n      // TODO: Remove this. Commands have to return false from enabled()\r\n      // in this case.\r\n      if (config.classicUnsupported) {\r\n        return this._classicUnsupported(status);\r\n      }\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      // TODO: Merge status and options on a higher level\r\n      return this._navigateTo(node, _.extend({}, status, options));\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var connector = node.connector || options.connector,\r\n          url = new Url(connector.connection.url).getCgiScript(),\r\n          urlQuery = this.getUrlQueryParameters(node, options);\r\n      if (urlQuery && !_.isString(urlQuery)) {\r\n        urlQuery = $.param(urlQuery);\r\n      }\r\n      if (urlQuery) {\r\n        url += '?' + urlQuery;\r\n      }\r\n      return url;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n    },\r\n\r\n    openInNewTab: function () {\r\n      return config.openInNewTab;\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: false,\r\n\r\n    _classicUnsupported: function (status) {\r\n      var deferred = $.Deferred();\r\n      status.suppressFailMessage = true;\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlert) {\r\n        ModalAlert.showInfo(lang.viewTypeUnsupported);\r\n      });\r\n      return deferred.reject();\r\n    },\r\n\r\n    _navigateTo: function (node, options) {\r\n      var url, openInNewTab, shouldCloseTabAfterRedirect,\r\n          config, closeUrl, connection;\r\n\r\n      // If no URL is available, the terminal command can formulate\r\n      // a meaningful message\r\n      try {\r\n        url = this.getUrl(node, options);\r\n      } catch (error) {\r\n        return $\r\n            .Deferred()\r\n            .reject(error)\r\n            .promise();\r\n      }\r\n\r\n      openInNewTab = this.openInNewTab;\r\n      if (_.isFunction(openInNewTab)) {\r\n        openInNewTab = openInNewTab.call(this);\r\n      }\r\n\r\n      shouldCloseTabAfterRedirect = this.shouldCloseTabAfterRedirect;\r\n      if (_.isFunction(shouldCloseTabAfterRedirect)) {\r\n        shouldCloseTabAfterRedirect = shouldCloseTabAfterRedirect.call(this);\r\n      }\r\n\r\n      // Append nextURL parameter pointing to the current or to a\r\n      // self-closing page, when the classic page has been submitted\r\n      if (shouldCloseTabAfterRedirect) {\r\n        // Use the self-closing page, only if a new window is opened;\r\n        // otherwise go back to the current page\r\n        if (openInNewTab) {\r\n          connection = (node.connector || options.connector).connection;\r\n          // Ask for the configuration first here; it can be set later\r\n          // during requiring of other modules\r\n          closeUrl = module.config().closeUrl ||\r\n                     Url.appendQuery( new Url(connection.url).getCgiScript(),\r\n                         'func=csui.closewindow' );\r\n\r\n          if (!new Url(closeUrl).isAbsolute()) {\r\n            if (closeUrl[0] !== '/') {\r\n              closeUrl = Url.appendQuery(\r\n                  new Url(connection.url).getCgiScript(), closeUrl);\r\n            } else {\r\n              closeUrl = Url.combine(\r\n                  new Url(connection.url).getOrigin(), closeUrl);\r\n            }\r\n          }\r\n        } else {\r\n          closeUrl = location.href;\r\n        }\r\n        url = Url.appendQuery(url, Url.combineQueryString({\r\n          nextURL: closeUrl\r\n        }));\r\n      }\r\n\r\n      if (openInNewTab) {\r\n        window\r\n            .open(url, '_blank')\r\n            .focus();\r\n      } else {\r\n        location.href = url;\r\n      }\r\n\r\n      return $.Deferred().resolve().promise();\r\n    }\r\n\r\n  }, {\r\n    openInNewTab: config.openInNewTab\r\n  });\r\n\r\n  return OpenClassicPageCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/edit',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'Edit',\r\n      command_key: 'edit',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\t\r\n\tgetUrlUnavailableError: function() {\r\n\t\treturn lang.NoEditUrl;\r\n\t},\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(this.getUrlUnavailableError());\r\n    }\r\n\r\n  });\r\n\r\n  return EditCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/editactivex',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditActiveX = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditActiveX',\r\n      command_key: 'editactivex',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n\t      signature = this.get('command_key'),\r\n          action = this._getNodeActionForSignature(node, signature);\r\n      // Set the value of name and promoted from the /nodes/actions response\r\n      if (action) {\r\n        var toolItem = status.toolItem || options && options.toolItem;\r\n        if (toolItem) {\r\n          var name = action.get('name');\r\n          if (name) {\r\n            toolItem.set('name', name);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditActiveX;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/editofficeonline',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditOfficeOnline = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditOfficeOnline',\r\n      command_key: 'editofficeonline',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n\t      signature = this.get('command_key'),\r\n          action = this._getNodeActionForSignature(node, signature);\r\n      // Set the value of name and promoted from the /nodes/actions response\r\n      if (action) {\r\n        var toolItem = status.toolItem || options && options.toolItem;\r\n        if (toolItem) {\r\n          var name = action.get('name');\r\n          if (name) {\r\n            toolItem.set('name', name);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditOfficeOnline;\r\n\r\n});\r\n\n","csui.define('csui/models/perspective/server.adaptor.mixin',[\r\n  'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/url'\r\n], function (_, $, Url) {\r\n  'use strict';\r\n\r\n  var ServerAdaptorMixin = {\r\n    mixin: function (prototype) {\r\n      return _.extend(prototype, {\r\n        makeServerAdaptor: function (options) {\r\n          return this;\r\n        },\r\n\r\n        isFetchableDirectly: function () {\r\n          return this.get('id') > 0;\r\n        },\r\n\r\n        urlBase: function () {\r\n          var id  = this.get('id'),\r\n              url = this.connector.connection.url;\r\n          if (!id) {\r\n            // Create a new node by POST /perspectives\r\n            url = Url.combine(url, 'perspectives');\r\n          } else if (!_.isNumber(id) || id > 0) {\r\n            // Access an existing node by VERB /perspectives/:id\r\n            url = Url.combine(url, 'perspectives', id);\r\n          } else {\r\n            throw new Error('Unsupported id value');\r\n          }\r\n          return url;\r\n        },\r\n\r\n        url: function () {\r\n          var url = this.urlBase();\r\n          return url;\r\n        },\r\n\r\n        parse: function (response) {\r\n\r\n          var perspectives = response.perspectives;\r\n          if (!perspectives) {\r\n            // Update response\r\n            return response;\r\n          }\r\n\r\n          if(perspectives.length === 0){\r\n            // Perspectives are empty for GET request\r\n            return {};\r\n          }\r\n          perspectives = _.each(perspectives, function (perspective) {\r\n            perspective.cascading = perspective.cascading + '';\r\n            perspective.containerType = perspective.container_type;\r\n            perspective.constantData = perspective.constant_data;\r\n            perspective.overrideType = perspective.override_type;\r\n            perspective.overrideId = perspective.override_id;\r\n            perspective.nodepath = perspective.node_path;\r\n            perspective.rules = perspective.rule_data;\r\n            perspective.perspective = JSON.parse(perspective.perspective);\r\n            perspective.constant_extraction_mode = perspective.container_type;\r\n            perspective.pnodepath = perspective.perspective_node_path;\r\n          });\r\n          return {\r\n            'perspectives': perspectives\r\n          };\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return ServerAdaptorMixin;\r\n});\r\n  \n","//TODO Check if this should be moved to pman\r\ncsui.define('csui/models/perspective/perspective.template.model',[\"module\", 'csui/lib/underscore', \"csui/lib/backbone\",\r\n  \"csui/models/perspective/server.adaptor.mixin\",\r\n  'csui/models/mixins/uploadable/uploadable.mixin',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  'csui/models/perspective/perspective.model',\r\n  \"csui/utils/log\", \"csui/utils/base\"\r\n], function (module, _, Backbone, ServerAdaptorMixin, UploadableMixin, ConnectableMixin,\r\n    PerspectiveModel, log,\r\n    base) {\r\n  \"use strict\";\r\n\r\n  var config = _.extend({\r\n    idAttribute: null\r\n  }, module.config());\r\n\r\n  var PerspectiveTemplateModel = Backbone.Model.extend({\r\n    idAttribute: config.idAttribute,\r\n\r\n    constructor: function PerspectiveTemplateModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n      this.options = _.pick(options, ['connector']);\r\n      this.makeUploadable(options)\r\n          .makeConnectable(options)\r\n          .makeServerAdaptor(options);\r\n    },\r\n\r\n    isNew: function () {\r\n      return !this.get('id') || this.get('id') === 0;\r\n    },\r\n\r\n    isFetchable: function () {\r\n      return !!this.get('id');\r\n    },\r\n\r\n    set: function (key, value, options) {\r\n      var attrs;\r\n      if (key == null) {\r\n        return this;\r\n      }\r\n      if (typeof key === 'object') {\r\n        attrs = key;\r\n        options = value;\r\n      } else {\r\n        (attrs = {})[key] = value;\r\n      }\r\n      if (attrs.perspectives) {\r\n        key = 'perspectives';\r\n        var perspectiveCollection = new Backbone.Collection();\r\n        options = _.pick(this.options, ['connector']);\r\n\r\n        _.each(attrs.perspectives, function (perspective) {\r\n          //default 'id' for the current perspective model will be replaced with perspective 'id'\r\n          //later  as models in the collection need to have unique 'id'\r\n          perspectiveCollection.add(new PerspectiveModel(perspective, options));\r\n        });\r\n        value = perspectiveCollection;\r\n        (attrs = {})[key] = value;\r\n      }\r\n      // do the usual set\r\n      return Backbone.Model.prototype.set.call(this, attrs, options);\r\n    }\r\n  });\r\n\r\n  UploadableMixin.mixin(PerspectiveTemplateModel.prototype);\r\n  ConnectableMixin.mixin(PerspectiveTemplateModel.prototype);\r\n  ServerAdaptorMixin.mixin(PerspectiveTemplateModel.prototype);\r\n\r\n  return PerspectiveTemplateModel;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/edit.perspective',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'csui/models/perspective/perspective.template.model',\r\n  'csui/models/perspective/perspective.model',\r\n  'csui/utils/perspective/perspective.util',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, CommandHelper,\r\n    Url, PerspectiveTemplateModel, PerspectiveModel, PerspectiveUtil, lang) {\r\n  'use strict';\r\n  var config = window.csui.requirejs.s.contexts._.config\r\n                   .config['csui/utils/contexts/perspective'] || {};\r\n  config = _.extend({\r\n    enableInlinePerspectiveEditing: true,\r\n    enablePersonalization: true\r\n  }, config, module.config());\r\n\r\n  var ConnectorFactory, NodeModelFactory, AncestorCollectionFactory;\r\n\r\n  var EditPerspectiveCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditPerspective',\r\n      name: lang.EditPerspective\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var context     = status.context || options && options.context,\r\n          perspective = context.perspective;\r\n      if (!perspective) {\r\n        return false;\r\n      }\r\n      return this._enablePersonalizePage(perspective, options, context) ||\r\n             this._enableEditPerspective(perspective) ||\r\n             this._enableCreatePerspective(perspective, context);\r\n    },\r\n\r\n    /**\r\n     * Enable \"Personalize Page\" only when\r\n     *  - Current page is Landing Page\r\n     *  - Perspective Type is \"flow\"\r\n     *  - All of the widgets of flow perspective are having \"w_id\".\r\n     *  - Version info available in perspective\r\n     *\r\n     * @param {Backbone.Model} perspective - context.perspective\r\n     * @param {status.options} options\r\n     * @param {PerspectiveContext} context\r\n     */\r\n    _enablePersonalizePage: function (perspective, options, context) {\r\n      var enable = (config.enablePersonalization || options.enablePersonalization) &&\r\n                   !context._applicationScope.get('id') && // Landing Page only\r\n                   (perspective.get('type') === 'flow' ||\r\n                   perspective.get('type') === 'sidepanel-right' || \r\n                   perspective.get('type') === 'sidepanel-left')/** && perspective.has('override') &&\r\n           !!perspective.get('override').perspective_version*/;\r\n      if (!enable) {\r\n        return enable;\r\n      }\r\n      // TODO move this prerequisite check to respective perspective view since it perspective payload varies from type to type\r\n      var perspectiveOptions = perspective.get('options');\r\n      var allWidgetsHasIds = perspectiveOptions &&\r\n                             _.every(perspectiveOptions.widgets, PerspectiveUtil.hasWidgetId);\r\n      return allWidgetsHasIds;\r\n    },\r\n\r\n    _enableEditPerspective: function (perspective) {\r\n      return (perspective.has('id') || perspective.has('perspective_id')) &&\r\n             perspective.get('canEditPerspective');\r\n    },\r\n\r\n    _enableCreatePerspective: function (perspective, context) {\r\n      return !(perspective.has('id') || perspective.has('perspective_id')) &&\r\n             perspective.get('canEditPerspective') &&\r\n             context._applicationScope.get('id') === \"node\";\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred    = $.Deferred(),\r\n          context     = status.context || options && options.context,\r\n          perspective = context.perspective;\r\n\r\n      if (perspective.has('id')) {\r\n        this._fetchPerspective(context, perspective).then(_.bind(function (perspectiveModel) {\r\n          if (perspectiveModel) {\r\n            this._continueExecution(status, options, deferred, perspectiveModel);\r\n          }\r\n        }, this), deferred.reject);\r\n      } else {\r\n        // Create new perspective.\r\n        this._continueExecution(status, options, deferred);\r\n      }\r\n      return deferred.promise();\r\n    },\r\n\r\n    _continueExecution: function (status, options, deferred, perspectiveModel) {\r\n      var context                 = status.context || options && options.context,\r\n          perspective             = context.perspective,\r\n          enablePersonalization   = this._enablePersonalizePage(perspective, options, context),\r\n          enableEditPerspective   = this._enableEditPerspective(perspective),\r\n          enableCreatePerspective = this._enableCreatePerspective(perspective, context);\r\n      if (enablePersonalization) {\r\n        if (enableEditPerspective || enableCreatePerspective) {\r\n          this._promptToChooseEditPage(status, options, context, deferred, perspectiveModel);\r\n        } else {\r\n          this._doPersonalizePage(status, options, context, deferred);\r\n        }\r\n      } else {\r\n        this._doEditPage(status, options, context, deferred, perspectiveModel);\r\n      }\r\n    },\r\n\r\n    _fetchPerspective: function (context, perspective) {\r\n      var deferred      = $.Deferred(),\r\n          perspectiveId = perspective.get('id') ||\r\n                          perspective.get('perspective_id');\r\n      require(['csui/utils/contexts/factories/connector', 'csui/dialogs/modal.alert/modal.alert'],\r\n          _.bind(function (ConnectorFactory, alertDialog) {\r\n            var perspectiveTemplate = new PerspectiveTemplateModel(\r\n                {id: perspectiveId},\r\n                {connector: context.getObject(ConnectorFactory)});\r\n            perspectiveTemplate.fetch().then(_.bind(function () {\r\n              var allPerspectives = perspectiveTemplate.get('perspectives');\r\n              if (allPerspectives && allPerspectives.length != 1) {\r\n                //show warning dialog as the perspective template is used by multiple nodes\r\n                alertDialog.showError(lang.editPerspectiveErrorMessage)\r\n                    .done(function () {\r\n                      deferred.resolve();\r\n                    })\r\n                    .fail(deferred.reject);\r\n              } else {\r\n                deferred.resolve(allPerspectives.at(0));\r\n              }\r\n\r\n            }, this), deferred.reject);\r\n          }, this));\r\n      return deferred.promise();\r\n    },\r\n\r\n    _doPersonalizePage: function (status, options, context, deferred) {\r\n      require(['csui/perspective.manage/pman.view', 'csui/utils/contexts/factories/node',\r\n            'csui/models/perspective/personalization.model', 'csui/utils/contexts/factories/connector',\r\n            'csui/utils/contexts/factories/application.scope.factory',\r\n            'csui/utils/contexts/factories/user'],\r\n          function (PManView, NodeModelFactory, PersonalizationModel, ConnectorFactory,\r\n              ApplicationScopeModelFactory, UserModelFactory) {\r\n            var applicationScope = context.getModel(ApplicationScopeModelFactory),\r\n                sourceModel;\r\n            if (applicationScope.id == 'node') {\r\n              sourceModel = CommandHelper.getJustOneNode(status) ||\r\n                            context.getModel(NodeModelFactory);\r\n            } else {\r\n              sourceModel = context.getModel(UserModelFactory);\r\n            }\r\n            var currentPerspective = sourceModel.get('perspective'),\r\n                overrideInfo       = currentPerspective.override,\r\n                defPersonal        = _.pick(currentPerspective, 'type', 'options',\r\n                    'perspective_version',\r\n                    'perspective_id');\r\n            defPersonal = _.defaults(defPersonal,\r\n                _.pick(overrideInfo, 'perspective_version', 'perspective_id'));\r\n            defPersonal.perspective_id = defPersonal.perspective_id ||\r\n                                         currentPerspective.id;\r\n            var personalization = new PersonalizationModel({},\r\n                {\r\n                  context: context,\r\n                  connector: context.getObject(ConnectorFactory),\r\n                  sourceModel: sourceModel,\r\n                  perspective: currentPerspective,\r\n                });\r\n            personalization.setPerspective(defPersonal);\r\n            PersonalizationModel.loadPersonalization(sourceModel, context).then(\r\n                function (result) {\r\n                  if (!!result) {\r\n                    personalization.setPerspective(result);\r\n                  }\r\n                  var pmanView = new PManView({\r\n                    context: context,\r\n                    perspective: personalization,\r\n                    mode: PerspectiveUtil.MODE_PERSONALIZE\r\n                  });\r\n                  pmanView.show();\r\n                  deferred.resolve();\r\n                });\r\n          }, deferred.reject);\r\n    },\r\n\r\n    _doEditPage: function (status, options, context, deferred, perspectiveModel) {\r\n      if (this._enableEditPerspective(context.perspective)) {\r\n        this._doEditPerspective(status, options, context, deferred, perspectiveModel);\r\n      } else if (this._enableCreatePerspective(context.perspective, context)) {\r\n        this._doCreatePerspective(status, options, context, deferred);\r\n      }\r\n    },\r\n\r\n    _doCreatePerspective: function (status, options, context, deferred) {\r\n      var isInlineEditing = (options && options.inlinePerspectiveEditing) ||\r\n                            config.enableInlinePerspectiveEditing;\r\n      if (isInlineEditing) {\r\n        // Edit perspective of page inline in SmartUI\r\n        this._createInline(status, options, context, deferred);\r\n      } else {\r\n        // Navigate to class Perspective Management console\r\n        this._createInClassicPMan(status, options, context, deferred);\r\n      }\r\n    },\r\n\r\n    _doEditPerspective: function (status, options, context, deferred, perspectiveModel) {\r\n      var isInlineEditing = (options && options.inlinePerspectiveEditing) ||\r\n                            config.enableInlinePerspectiveEditing;\r\n      if (isInlineEditing) {\r\n        // Edit perspective of page inline in SmartUI\r\n        this._editInline(perspectiveModel, context, deferred);\r\n      } else {\r\n        // Navigate to class Perspective Management console\r\n        this._editInClassicPMan(status, options, context, deferred);\r\n      }\r\n    },\r\n\r\n    _promptToChooseEditPage: function (status, options, context, deferred, perspectiveModel) {\r\n      var self = this;\r\n      //   deferred = $.Deferred();\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n        self.dialog = alertDialog.confirmQuestion(lang.editPageDialogMessage,\r\n            lang.editPageTitle,\r\n            {\r\n              buttons: {\r\n                showYes: true,\r\n                labelYes: lang.editPageButton,\r\n                showNo: true,\r\n                labelNo: lang.personalizePageButton,\r\n                showCancel: true,\r\n                labelCancel: lang.editPageCancelButton\r\n              },\r\n            }).then(function (result) {\r\n          if (result === true) {\r\n            // Edit Page\r\n            self._doEditPage(status, options, context, deferred, perspectiveModel);\r\n          }\r\n        }, function (result) {\r\n          if (result === false) {\r\n            // Personalize Page\r\n            self._doPersonalizePage(status, options, context, deferred);\r\n          } else {\r\n            // Cancel\r\n            deferred.resolve();\r\n          }\r\n        });\r\n      }, deferred.reject);\r\n    },\r\n\r\n    _editInline: function (perspectiveModel, context, deferred) {\r\n      require(['csui/perspective.manage/pman.view'],\r\n          function (PManView) {\r\n            var perspectiveId = context.perspective.get('id') ||\r\n                                context.perspective.get('perspective_id');\r\n            var currentPerspective = perspectiveModel;\r\n            currentPerspective.set('id', perspectiveId);\r\n            var pmanView = new PManView({\r\n              context: context,\r\n              perspective: currentPerspective\r\n            });\r\n            pmanView.show();\r\n            deferred.resolve();\r\n          }, deferred.reject);\r\n    },\r\n\r\n    _editInClassicPMan: function (status, options, context, deferred) {\r\n      var self = this;\r\n      require(['csui/utils/contexts/factories/connector'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        var f = self._getEditForm(context, status);\r\n        f.submit();\r\n        f.remove();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n    },\r\n\r\n    _getEditForm: function (context, status) {\r\n      var f = $(\"<form target='_blank' method='POST' style='display:none;'></form>\").attr({\r\n        action: this._getUrl(context, status)\r\n      }).appendTo(document.body);\r\n\r\n      var params = this._getEditUrlQueryParameters(context);\r\n\r\n      for (var i in params) {\r\n        if (params.hasOwnProperty(i)) {\r\n          $('<input type=\"hidden\" />').attr({\r\n            name: i,\r\n            value: params[i]\r\n          }).appendTo(f);\r\n        }\r\n      }\r\n\r\n      return f;\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector      = context.getObject(ConnectorFactory),\r\n          cgiUrl         = new Url(connector.connection.url).getCgiScript(),\r\n          perspectiveUrl = cgiUrl.toString() + \"/perspectivemgr\";\r\n      return perspectiveUrl;\r\n    },\r\n\r\n    _getEditUrlQueryParameters: function (context) {\r\n      var perspective_id = context.perspective.attributes.id,\r\n          parameters;\r\n      if (perspective_id !== undefined && perspective_id > 0) {\r\n        parameters = {\r\n          perspective_id: perspective_id\r\n        };\r\n      } else {\r\n        parameters = {};\r\n      }\r\n      return parameters;\r\n    },\r\n\r\n    /**\r\n     * Prepare new perspective config required for current node since no perspective is configured yet.\r\n     */\r\n    _preparePerspectiveConfig: function (context) {\r\n      var perspectiveConfig = {\r\n            \"perspective\": {\r\n              \"type\": \"flow\",\r\n              \"options\": {\r\n                \"widgets\": [\r\n                  {\r\n                    \"type\": \"csui/widgets/nodestable\"\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"overrideType\": \"genericContainer\",\r\n            \"scope\": \"local\",\r\n            \"containerType\": \"-1\",\r\n            \"cascading\": \"false\"\r\n          },\r\n          node              = CommandHelper.getJustOneNode(status) ||\r\n                              context.getModel(NodeModelFactory),\r\n          collection        = context.getCollection(AncestorCollectionFactory);\r\n      perspectiveConfig.nodepath = this._getNodePath(collection);\r\n      perspectiveConfig.node = node.get('id');\r\n      perspectiveConfig.containerType = node.get('type');\r\n      perspectiveConfig.title = node.get('name');\r\n      return perspectiveConfig;\r\n    },\r\n\r\n    _createInline: function (status, options, context, deferred) {\r\n      var self = this;\r\n      require(['csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/ancestors',\r\n        'csui/perspective.manage/pman.view'\r\n      ], function () {\r\n        NodeModelFactory = arguments[0];\r\n        ConnectorFactory = arguments[1];\r\n        AncestorCollectionFactory = arguments[2];\r\n        var PManView          = arguments[3],\r\n            // Create new perspective\r\n            perspectiveConfig = self._preparePerspectiveConfig(context, NodeModelFactory,\r\n                AncestorCollectionFactory);\r\n        // Append current timestamp to avoid name conflicts in perspective volume\r\n        perspectiveConfig.title = perspectiveConfig.title + ' ' + new Date().getTime();\r\n        var perspective = new PerspectiveModel(perspectiveConfig,\r\n            {connector: context.getObject(ConnectorFactory)});\r\n        var pmanView = new PManView({\r\n          context: context,\r\n          perspective: perspective\r\n        });\r\n        pmanView.show();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n    },\r\n\r\n    _createInClassicPMan: function (status, options, context, deferred) {\r\n      var self = this;\r\n      require(['csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/ancestors'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        NodeModelFactory = arguments[1];\r\n        AncestorCollectionFactory = arguments[2];\r\n        var f = self._getCreateForm(context, status);\r\n        f.submit();\r\n        f.remove();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n    },\r\n\r\n    _getCreateForm: function (context, status) {\r\n      var f = $(\"<form target='_blank' method='POST' style='display:none;'></form>\").attr({\r\n        action: this._getUrl(context, status)\r\n      }).appendTo(document.body);\r\n\r\n      var params = this._getCreateUrlQueryParameters(context, status);\r\n\r\n      for (var i in params) {\r\n        if (params.hasOwnProperty(i)) {\r\n          $('<input type=\"hidden\" />').attr({\r\n            name: i,\r\n            value: params[i]\r\n          }).appendTo(f);\r\n        }\r\n      }\r\n\r\n      return f;\r\n    },\r\n\r\n    _getCreateUrlQueryParameters: function (context, status) {\r\n      var perspectiveConfig = this._preparePerspectiveConfig(context, NodeModelFactory,\r\n          AncestorCollectionFactory);\r\n      perspectiveConfig.ui = {\r\n        \"elements\": {\r\n          \"btn-mode-code\": true,\r\n          \"btn-view-general\": true,\r\n          \"btn-view-rules\": false,\r\n          \"btn-view-layout\": true,\r\n          \"btn-view-widgets\": true,\r\n\r\n          \"view-perspective-action\": true,\r\n          \"perspective-action-create\": true,\r\n          \"perspective-action-edit\": true,\r\n          \"perspective-action-copy\": true,\r\n\r\n          \"view-perspective-form\": true,\r\n          \"perspective-title\": true,\r\n          \"perspective-type\": true,\r\n          \"perspective-scope\": true,\r\n          \"perspective-nodetypes\": true,\r\n          \"perspective-node\": true,\r\n          \"perspective-cascading\": true,\r\n\r\n          \"display-size-msg\": false,\r\n          \"rules-code\": true,\r\n\r\n          \"layout-flow\": true,\r\n          \"layout-left-center-right\": true,\r\n          \"layout-grid\": false,\r\n          \"layout-tabbed\": false\r\n        },\r\n        \"widgetGroupsBlacklist\": [],\r\n        \"widgetsWhitelist\": [],\r\n        \"disableGrouping\": false\r\n      };\r\n      return {\r\n        config: JSON.stringify(perspectiveConfig)\r\n      };\r\n    },\r\n\r\n    _getNodePath: function (collection) {\r\n      var nodepath = \"\";\r\n      collection.each(function (model) {\r\n        nodepath += nodepath ? ':' : '';\r\n        nodepath += model.get('name');\r\n      });\r\n      return nodepath;\r\n    }\r\n\r\n  });\r\n\r\n  return EditPerspectiveCommand;\r\n});\n","csui.define('csui/utils/commands/editwebdav',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditWebDAV = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditWebDAV',\r\n      command_key: 'editwebdav',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n\t      signature = this.get('command_key'),\r\n          action = this._getNodeActionForSignature(node, signature);\r\n      // Set the value of name and promoted from the /nodes/actions response\r\n      if (action) {\r\n        var toolItem = status.toolItem || options && options.toolItem;\r\n        if (toolItem) {\r\n          var name = action.get('name');\r\n          if (name) {\r\n            toolItem.set('name', name);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditWebDAV;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/nls/root/lang',{\r\n  // Filter\r\n  FilterCollapseTooltip: 'Hide filters',\r\n  TreeBrowseCollapseTooltip: 'Hide navigation tree',\r\n\r\n  // Share\r\n  EmailLinkSubject: 'I want to share the following links with you',\r\n  EmailLinkDesktop: \"Link for Desktop and Android\",\r\n  EmailAppleLinkFormat: \"Link for iOS Mobile\",\r\n\r\n  // Reserve\r\n  CommandNameReserve: \"Reserve\",\r\n  CommandVerbReserve: \"reserve\",\r\n  ReservePageLeavingWarning: \"If you leave the page now, pending items will not be reserved.\",\r\n  ReserveItemsNoneMessage: \"No items reserved.\",\r\n  ReserveOneItemSuccessMessage: \"1 item successfully reserved.\",\r\n  ReserveSomeItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveManyItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveOneItemFailMessage: \"1 item failed to reserve.\",\r\n  ReserveSomeItemsFailMessage: \"{0} items failed to reserve.\",\r\n  ReserveManyItemsFailMessage: \"{0} items failed to reserve.\",\r\n\r\n  // Unreserve\r\n  CommandNameUnreserve: \"Unreserve\",\r\n  CommandVerbUnreserve: \"unreserve\",\r\n  UnreservePageLeavingWarning: \"If you leave the page now, pending items will not be unreserved.\",\r\n  UnreserveItemsNoneMessage: \"No items unreserved.\",\r\n  UnreserveOneItemSuccessMessage: \"1 item successfully unreserved.\",\r\n  UnreserveSomeItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveManyItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveOneItemFailMessage: \"1 item failed to unreserve.\",\r\n  UnreserveSomeItemsFailMessage: \"{0} items failed to unreserve.\",\r\n  UnreserveManyItemsFailMessage: \"{0} items failed to unreserve.\",\r\n\r\n   // Lock\r\n   CommandNameLock: \"Lock\",\r\n   CommandVerbLock: \"lock\",\r\n   LockPageLeavingWarning: \"If you leave the page now, pending items will not be locked.\",\r\n   LockItemsNoneMessage: \"No items locked.\",\r\n   LockOneItemSuccessMessage: \"1 item successfully locked.\",\r\n   LockSomeItemsSuccessMessage: \"{0} items successfully locked.\",\r\n   LockManyItemsSuccessMessage: \"{0} items successfully locked.\",\r\n   LockOneItemFailMessage: \"1 item failed to lock.\",\r\n   LockSomeItemsFailMessage: \"{0} items failed to lock.\",\r\n   LockManyItemsFailMessage: \"{0} items failed to lock.\",\r\n\r\n    // Unlock\r\n    CommandNameUnlock: \"Unlock\",\r\n    CommandVerbUnlock: \"unlock\",\r\n    UnlockPageLeavingWarning: \"If you leave the page now, pending items will not be unlocked.\",\r\n    UnlockItemsNoneMessage: \"No items unlocked.\",\r\n    UnlockOneItemSuccessMessage: \"1 item successfully unlocked.\",\r\n    UnlockSomeItemsSuccessMessage: \"{0} items successfully unlocked.\",\r\n    UnlockManyItemsSuccessMessage: \"{0} items successfully unlocked.\",\r\n    UnlockOneItemFailMessage: \"1 item failed to unlock.\",\r\n    UnlockSomeItemsFailMessage: \"{0} items failed to unlock.\",\r\n    UnlockManyItemsFailMessage: \"{0} items failed to unlock.\",\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands/email.link',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/url', 'csui/utils/command.error',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/models/version',\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/node.info.sprites',\r\n  'csui/lib/underscore.string'\r\n], function (module, require, _, $, Url, CommandError, CommandModel,\r\n    CommandHelper, VersionModel, publicLang, lang, extraLinksInfo) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    rewriteApplicationURL: false,\r\n    enableAppleSupport: false,\r\n    appleNodeLinkBase: 'x-otm-as-cs16://?launchUrl=nodes/'\r\n  }, module.config());\r\n\r\n  var nodeLinks, GlobalMessage,\r\n      NEW_LINE = '\\n'; // constant variable to add new line.\r\n\r\n  var EmailLinkCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'EmailLink',\r\n      name: lang.CommandNameEmailLink,\r\n      verb: lang.CommandVerbEmailLink\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      return nodes && nodes.length;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      status.suppressFailMessage = true;\r\n\r\n      require([\r\n        'csui/utils/node.links/node.links',\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function () {\r\n        nodeLinks = arguments[0];\r\n        GlobalMessage = arguments[1];\r\n        if (status.originatingView && status.originatingView.blockActions) {\r\n          status.originatingView.blockActions();\r\n        }\r\n        var context = status.context || (options && options.context);\r\n        // LPAD-83785: The _getNodesLinks() function calls 'getCustomUrl', which is currently coded as a synchronous\r\n        // ajax call.  This causes the browser to lock up while waiting for the synchronous call to finish for each\r\n        // selected node.  We need to use setTimeout to create a small delay to allow things like the progressblocker\r\n        // display the spinning wheel before these calls start.  Once they fix their code and make the calls\r\n        // asynchronous, this hack can be removed.\r\n        setTimeout(function () {\r\n          // TODO: Share the node e-mail link gathering code and the e-mail formatting code by creating a new module for it\r\n          var nodes = CommandHelper.getAtLeastOneNode(status);\r\n          var applicationUrl = self._getApplicationUrl(nodes, context);\r\n          var body = self._getNodesLinks(nodes, applicationUrl, context);\r\n          var newHref = 'mailto:?subject=' + self._getEMailSubject(nodes) + '&body=' + encodeURIComponent(body);\r\n          var error = self._openNewHref(newHref);\r\n\r\n          if (error) {\r\n            var message = error.errorDetails || error.message;\r\n            GlobalMessage.showMessage(\"error\", message);\r\n            deferred.reject(error);\r\n          } else {\r\n            deferred.resolve();\r\n          }\r\n\r\n          if (status.originatingView && status.originatingView.unblockActions) {\r\n            status.originatingView.unblockActions();\r\n          }\r\n        }, 100);\r\n      }, deferred.reject);\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getEMailSubject: function(nodes) {\r\n      var title = \" \";\r\n      if (nodes && nodes.length === 1) {\r\n        title = nodes.first().get('name');\r\n      }\r\n      return encodeURIComponent(title);\r\n    },\r\n\r\n    _getApplicationUrl: function (nodes) {\r\n      var connector = nodes.first().connector;\r\n      return Url.combine(new Url(connector.connection.url).getCgiScript(), '/app');\r\n    },\r\n\r\n    _openNewHref: function (newHref) {\r\n      if (newHref.length > 2048) {\r\n        return new CommandError(lang.EmailLinkCommandFailedWithTooMuchItemsErrorMessage);\r\n      } else {\r\n        window.location.href = newHref;\r\n      }\r\n    },\r\n\r\n    isiOSEnabled: function (nodes) {\r\n      // currently there is no mobile support for versions and also the iOSText is not formed\r\n      // using nodeLinks.getUrl but instead uses only nodeId. So, disabling this flag if it being\r\n      // executed for a version.\r\n      return config.enableAppleSupport && !(nodes.first() instanceof VersionModel);\r\n    },\r\n\r\n    _getNodesLinks: function (nodes, applicationUrl, context) {\r\n\r\n      var iOSEnabled  = this.isiOSEnabled(nodes),\r\n          iOSText     = lang.EmailAppleLinkFormat,\r\n          androidText = publicLang.EmailLinkDesktop + NEW_LINE,\r\n          desktopText = nodes.map(function (node) {\r\n            var name         = node.get('name') + \":\",\r\n                actionUrl = nodeLinks.getUrl(node, {context: context}),\r\n                nodeLinkInfo = '';\r\n            \r\n            if (config.rewriteApplicationURL) {\r\n              // This disallows using the hash part, when the slash-based routing is enabled.\r\n              // But it should be no problem, because it is temporary for the mobile\r\n              // application only. and it didn't offer such contract for the old scenarios.\r\n              var hash = actionUrl.lastIndexOf('#');\r\n              if (hash >= 0) {\r\n                actionUrl = applicationUrl + '/' + actionUrl.substr(hash + 1);\r\n              }\r\n            }\r\n\r\n            if (iOSEnabled) {\r\n              // This is not the node ID returned by nodeLinks.getUrl.\r\n              // There is no extensibility applied, which can happen there.\r\n              // I am not sure, if it is worth to fix it.\r\n              var nodeId = (node.get('type') === 1) ? node.original.get('id') : node.get('id');\r\n              iOSText += NEW_LINE + name + NEW_LINE + config.appleNodeLinkBase +\r\n                         nodeId;\r\n            }\r\n\r\n            nodeLinkInfo = name + NEW_LINE + actionUrl;\r\n\r\n            // Currently, the version model doesn't expect any additional info.\r\n            // TODO: As the command seems dependent on a node model, see if it would be better\r\n            // for this to be refactored and extended by another command specifically written\r\n            // for versions.\r\n            if (extraLinksInfo && !(node instanceof VersionModel)) {\r\n              extraLinksInfo.each(function (extraLinkInfo) {\r\n                // TODO: need to check what parameters to be include in nodeLinksOptions\r\n                var nodeLinksOptions = {\r\n                      NEW_LINE: NEW_LINE,\r\n                      context: context,\r\n                      node: node\r\n                    },\r\n                    extraInfo        = '';\r\n                try {\r\n                  extraInfo = $.trim(extraLinkInfo.get('getCustomUrl')(nodeLinksOptions));\r\n                } catch (error) {\r\n                  console.error(error);\r\n                }\r\n                nodeLinkInfo += extraInfo.length ? (NEW_LINE + extraInfo + NEW_LINE) : '';\r\n              });\r\n            }\r\n\r\n            return nodeLinkInfo;\r\n          }).join(NEW_LINE);\r\n\r\n      return iOSEnabled ? androidText + desktopText + NEW_LINE + NEW_LINE + iOSText : desktopText;\r\n\r\n    }\r\n  });\r\n\r\n  return EmailLinkCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/execute.saved.query',[\r\n  'require', 'csui/lib/jquery', 'csui/utils/commandhelper',\r\n  'csui/models/command', 'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (require, $, CommandHelper, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var ExecuteSavedQueryCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'ExecuteSavedQuery',\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 258\r\n             // If the object data does not contain the open-ability flag, consider\r\n             // the object open-able for compatibility with older REST API.\r\n             && node.get('openable') !== false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node    = CommandHelper.getJustOneNode(status),\r\n          context = status.context || options && options.context;\r\n      if (node.get('custom_view_search')) {\r\n        // Custom Search has form created and assigned to it. Open from in sidepanel\r\n        return this._openFormInSidepanel(node, context);\r\n      } else {\r\n        this._triggerSearchResults(node, context);\r\n      }\r\n    },\r\n\r\n    _triggerSearchResults: function (node, context) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/utils/contexts/factories/search.query.factory'\r\n      ], function (SearchQueryModelFactory) {\r\n        var searchQuery = context.getModel(SearchQueryModelFactory);\r\n        searchQuery.clear({silent: true});\r\n        searchQuery.set('query_id', node.get('id'));\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _openFormInSidepanel: function (node, context) {\r\n      var deferred = $.Deferred();\r\n      require(\r\n          ['csui/controls/side.panel/side.panel.view',\r\n            'csui/widgets/search.custom/impl/search.object.view',\r\n            'csui/widgets/search.custom/impl/search.customquery.factory'],\r\n          function (SidePanelView, SearchCustomObjectView, SearchCustomQueryFactory) {\r\n            var savedQuery = context.getCollection(SearchCustomQueryFactory, {\r\n              attributes: {\r\n                id: node.get('id')\r\n              }\r\n            });\r\n            savedQuery.ensureFetched().then(function () {\r\n              var schema = savedQuery.get('schema'),\r\n                  title  = schema.title ? schema.title : node.get('name');\r\n\r\n              var customSearchForm = new SearchCustomObjectView({\r\n                context: context,\r\n                model: savedQuery,\r\n                savedSearchQueryId: node.get('id'),\r\n                hideSearchButton: true,\r\n                showInSearchResultsNewPerspective: true\r\n              });\r\n\r\n              var sidePanel = new SidePanelView({\r\n                slides: [{\r\n                  title: title,\r\n                  content: customSearchForm,\r\n                  footer: {\r\n                    buttons: [{\r\n                      label: lang.searchButtonMessage,\r\n                      type: 'action',\r\n                      id: 'search-btn',\r\n                      className: 'binf-btn binf-btn-primary',\r\n                      disabled: false\r\n                    }]\r\n                  }\r\n                }],\r\n                sidePanelClassName: 'cvs-in-sidepanel'\r\n              });\r\n              customSearchForm.listenTo(customSearchForm, 'render:form', function() {\r\n                sidePanel.triggerMethod('set:focus');\r\n              });\r\n              sidePanel.show();\r\n              sidePanel.listenTo(customSearchForm, \"button:click\", function (actionButton) {\r\n                if (actionButton.id === 'search-btn') {\r\n                  customSearchForm.loadCustomSearch();\r\n                }\r\n                sidePanel.hide();\r\n              });\r\n\r\n              sidePanel.listenTo(customSearchForm, 'enable:search', function (isSearchEnabled) {\r\n                customSearchForm.trigger(\"update:button\", \"search-btn\", {\r\n                  disabled: !isSearchEnabled\r\n                });\r\n              });\r\n\r\n              sidePanel.listenTo(customSearchForm, 'click:search', function () {\r\n                // Close Side panel when search triggered from CVS as it would navigate to search result.\r\n                sidePanel.hide();\r\n              });\r\n              deferred.resolve();\r\n            })\r\n                .fail(function () {\r\n                  deferred.reject();\r\n                });\r\n          }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return ExecuteSavedQueryCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/execute.search.form.query',[\r\n    'require', 'csui/lib/jquery', 'csui/utils/commandhelper',\r\n    'csui/models/command', 'i18n!csui/utils/commands/nls/localized.strings'\r\n  ], function (require, $, CommandHelper, CommandModel, lang) {\r\n    'use strict';\r\n  \r\n    var ExecuteSearchFormQueryCommand = CommandModel.extend({\r\n      defaults: {\r\n        signature: 'ExecuteSearchForm',\r\n        scope: 'single'\r\n      },\r\n  \r\n      enabled: function (status) {\r\n        var node = CommandHelper.getJustOneNode(status);\r\n        return node && node.get('type') === 292;\r\n      },\r\n  \r\n      execute: function (status, options) {\r\n        var node    = CommandHelper.getJustOneNode(status),\r\n            context = status.context || options && options.context;\r\n        if (node.get('type')) {\r\n          // Custom Search has form created and assigned to it. Open from in sidepanel\r\n          return this._openFormInSidepanel(node, context);\r\n        } else {\r\n          this._triggerSearchResults(node, context);\r\n        }\r\n      },\r\n  \r\n      _triggerSearchResults: function (node, context) {\r\n        var deferred = $.Deferred();\r\n        require([\r\n          'csui/utils/contexts/factories/search.formquery.factory'\r\n        ], function (SearchQueryModelFactory) {\r\n          var searchQuery = context.getModel(SearchQueryModelFactory);\r\n          searchQuery.clear({silent: true});\r\n          searchQuery.set('query_id', node.get('id'));\r\n          deferred.resolve();\r\n        }, deferred.reject);\r\n        return deferred.promise();\r\n      },\r\n  \r\n      _openFormInSidepanel: function (node, context) {\r\n        var deferred = $.Deferred();\r\n        require(\r\n            ['csui/controls/side.panel/side.panel.view',\r\n              'csui/widgets/search.forms/search.form.view',\r\n              'csui/widgets/search.forms/search.form.factory'],\r\n            function (SidePanelView, SearchFormView, SearchFormQueryFactory) {\r\n              var savedQuery = context.getCollection(SearchFormQueryFactory, {\r\n                attributes: {\r\n                  id: node.get('id')\r\n                }\r\n              });\r\n              savedQuery.ensureFetched().then(function () {\r\n                var schema = savedQuery.get('schema'),\r\n                    title  = schema.title ? schema.title : node.get('name');\r\n  \r\n                var searchFormView = new SearchFormView({\r\n                  context: context,\r\n                  model: savedQuery,\r\n                  searchFormId: node.get('id'),\r\n                  hideSearchButton: true,\r\n                  showInSearchResultsNewPerspective: true\r\n                });\r\n  \r\n                var sidePanel = new SidePanelView({\r\n                  slides: [{\r\n                    title: title,\r\n                    content: searchFormView,\r\n                    footer: {\r\n                      buttons: [{\r\n                        label: lang.searchButtonMessage,\r\n                        type: 'action',\r\n                        id: 'search-btn',\r\n                        className: 'binf-btn binf-btn-primary',\r\n                        disabled: false\r\n                      }]\r\n                    }\r\n                  }],\r\n                  sidePanelClassName: 'cvs-in-sidepanel'\r\n                });\r\n                searchFormView.listenTo(searchFormView, 'render:form', function() {\r\n                  sidePanel.triggerMethod('set:focus');\r\n                });\r\n                sidePanel.show();\r\n                sidePanel.listenTo(searchFormView, \"button:click\", function (actionButton) {\r\n                  if (actionButton.id === 'search-btn') {\r\n                    searchFormView.loadCustomSearch();\r\n                  }\r\n                  sidePanel.hide();\r\n                });\r\n  \r\n                sidePanel.listenTo(searchFormView, 'enable:search', function (isSearchEnabled) {\r\n                    searchFormView.trigger(\"update:button\", \"search-btn\", {\r\n                    disabled: !isSearchEnabled\r\n                  });\r\n                });\r\n  \r\n                sidePanel.listenTo(searchFormView, 'click:search', function () {\r\n                  // Close Side panel when search triggered from CVS as it would navigate to search result.\r\n                  sidePanel.hide();\r\n                });\r\n                deferred.resolve();\r\n              })\r\n                  .fail(function () {\r\n                    deferred.reject();\r\n                  });\r\n            }, deferred.reject);\r\n        return deferred.promise();\r\n      }\r\n    });\r\n  \r\n    return ExecuteSearchFormQueryCommand;\r\n  });\r\n  \n","csui.define('csui/utils/commands/favorite.add',[\"require\", 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\",\r\n  'csui/utils/command.error'\r\n], function (require, $, base, _, lang, CommandHelper, NodeCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var FavoriteCommand = NodeCommand.extend({\r\n\r\n    defaults: {\r\n      signature: \"Favorite\",\r\n      command_key: ['favorite', 'favorite'],\r\n      scope: \"single\",\r\n      name: lang.CommandNameFavorite,\r\n      verb: lang.CommandVerbFavorite,\r\n      doneVerb: lang.CommandDoneVerbFavorite\r\n    },\r\n\r\n    //only one node allowed at a time\r\n    enabled: function (status, options) {\r\n      if (options && options.data && options.data.useContainer) {\r\n        return status.container && !status.container.get('favorite');\r\n      } else {\r\n        var nodes = CommandHelper.getAtLeastOneNode(status);\r\n        return nodes && (nodes.length === 1) && !nodes.models[0].get('favorite');\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      var originatingView = status.originatingView;\r\n\r\n      require([\r\n        'csui/models/favorite.model',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (FavoriteModel, ModalAlert) {\r\n        var model;\r\n        if (status.data && status.data.useContainer) {\r\n          model = status.container;\r\n        } else {\r\n          model = status.nodes.models[0];\r\n        }\r\n        var modelId = model.get('id');\r\n        var favModel = new FavoriteModel({\r\n              node: model,\r\n              id: modelId,\r\n              selected: false\r\n            },\r\n            {connector: model.connector}\r\n        );\r\n        favModel.addToFavorites()\r\n            .done(function (results) {\r\n              model.set('favorite', true);\r\n              originatingView.trigger('fav:change');\r\n              deferred.resolve(results);\r\n            })\r\n            .fail(function (err) {\r\n              deferred.reject(new CommandError(err));\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return FavoriteCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/favorite.remove',[\"require\", 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\",\r\n  'csui/utils/command.error'\r\n], function (require, $, base, _, lang, CommandHelper, NodeCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var NonFavoriteCommand = NodeCommand.extend({\r\n\r\n    defaults: {\r\n      signature: \"NonFavorite\",\r\n      command_key: ['nonfavorite', 'NonFavorite'],\r\n      scope: \"single\",\r\n      verb: lang.CommandVerbFavorite,\r\n      doneVerb: lang.CommandRemovedVerbFavorite\r\n    },\r\n\r\n    //only one node allowed at a time\r\n    enabled: function (status, options) {\r\n      if (options && options.data && options.data.useContainer) {\r\n        return status.container && status.container.get('favorite');\r\n      } else {\r\n        var nodes = CommandHelper.getAtLeastOneNode(status);\r\n        return nodes && (nodes.length === 1) && nodes.models[0].get('favorite');\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      var originatingView = status.originatingView;\r\n\r\n      require([\r\n        'csui/models/favorite.model',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (FavoriteModel, ModalAlert) {\r\n        var model;\r\n        if (status.data && status.data.useContainer) {\r\n          model = status.container;\r\n        } else {\r\n          model = status.nodes.models[0];\r\n        }\r\n        var modelId = model.get('id');\r\n        var favModel = new FavoriteModel({\r\n              node: model,\r\n              id: modelId,\r\n              selected: false\r\n            },\r\n            {connector: model.connector}\r\n        );\r\n        favModel.removeFromFavorites()\r\n            .done(function (results) {\r\n              model.set('favorite', false);\r\n              originatingView.trigger('fav:change');\r\n              deferred.resolve(results);\r\n            })\r\n          .fail(function (err) {\r\n            deferred.reject(new CommandError(err));\r\n          });\r\n\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return NonFavoriteCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/inlineedit',[\"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  \"csui/models/command\", \"csui/utils/commandhelper\"\r\n], function (require, _, $, CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var InlineEditCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"InlineEdit\",\r\n      // Inline editing may need more permissions than just for renaming;\r\n      // if it was a problem the login would have to be extended.\r\n      command_key: ['rename', 'Rename'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/controls/table/inlineforms/inlineform.factory'\r\n      ], function (inlineFormViewFactory) {\r\n        var node = status.nodes && status.nodes.length === 1 && status.nodes.at(0);\r\n\r\n        var inlineFormView = inlineFormViewFactory.getInlineFormView(node.get('type'));\r\n        if (!inlineFormView) {\r\n          // fallback to generic for rename action\r\n          inlineFormView = inlineFormViewFactory.getInlineFormView(-1);\r\n        }\r\n        if (inlineFormView) {\r\n          node.inlineFormView = inlineFormView;\r\n          node.set('csuiInlineFormErrorMessage', 'dummy', {silent: true});\r\n          node.unset('csuiInlineFormErrorMessage');\r\n        }\r\n\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(InlineEditCommand, {\r\n\r\n    version: \"1.0\"\r\n\r\n  });\r\n\r\n  return InlineEditCommand;\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands/move',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commands/copy.move',\r\n  'csui/utils/url',\r\n  'csui/utils/command.error',\r\n  'csui-ext!csui/utils/commands/move'\r\n], function (module, require, _, $, lang, ActionModel, Url, CommandError, MoveCallEndPoint) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n  _.defaults(config, {\r\n    actionType: 'move',\r\n    parallelism: 3,\r\n    allowMultipleInstances: true\r\n  });\r\n  \r\n  var MoveCommand = ActionModel.extend({\r\n    defaults: {\r\n      signature: \"Move\",\r\n      command_key: ['move', 'Move'],\r\n      name: lang.CommandNameMove,\r\n      verb: lang.CommandNameVerbMove,\r\n      pageLeavingWarning: lang.MovePageLeavingWarning,\r\n      allowMultipleInstances: config.allowMultipleInstances,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: lang.MoveItemsNoneMessage,\r\n        formatForOne: lang.MoveOneItemSuccessMessage,\r\n        formatForTwo: lang.MoveSomeItemsSuccessMessage,\r\n        formatForFive: lang.MoveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.MoveItemsNoneMessage,\r\n        formatForOne: lang.MoveOneItemFailMessage,\r\n        formatForTwo: lang.MoveSomeItemsFailMessage,\r\n        formatForFive: lang.MoveManyItemsFailMessage\r\n      },\r\n      labels: {\r\n        actionName: lang.MovingNodes,\r\n        actionNode: lang.MovingNode,\r\n        commandTitle: lang.CommandTitleMove,\r\n        commandName: lang.CommandNameMove,\r\n        dialogTitle: lang.DialogTitleMove,\r\n        dialogTitleSingle: lang.DialogTitleSingleMove,\r\n        titleNotAllowed: lang.MoveNotAllowed\r\n      },\r\n      command: config.actionType\r\n\r\n    },\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _doActionSelectedNodes: function (opts) {\r\n      var exResult = $.Deferred();\r\n      require(['csui/utils/contexts/factories/next.node',\r\n            'csui/controls/globalmessage/globalmessage', 'csui/utils/taskqueue'],\r\n          _.bind(function (NextNodeModelFactory, GlobalMessage, TaskQueue) {\r\n\r\n            var self     = this,\r\n                queue    = new TaskQueue({\r\n                  parallelism: config.parallelism\r\n              }),\r\n              selectedNodeIds = opts.status && opts.status.nodes && opts.status.nodes.models.map(function (model) {\r\n                return model.get('id');\r\n              });\r\n\r\n            this.getExternalBodyParams(opts.connector, selectedNodeIds).then(function (extBodyParams) {\r\n                  var promises = _.map(opts.uploadCollection.models, function (model) {\r\n                  var deferred = $.Deferred();\r\n                  queue.pending.add({\r\n                    worker: function () {\r\n                      var promise,\r\n                          attributes = model.attributes;\r\n                      model.node.trigger('before:move', model.node);\r\n                      if (attributes.extended_data && attributes.extended_data.roles) {\r\n                        // metadata was already set interactively by the user via MetadataView\r\n                        promise = self._actionNodeWithMetadata(attributes, opts.connector,\r\n                            opts.targetFolder.get('id'), opts.status, extBodyParams);\r\n                      } else {\r\n                        promise = self._moveNode(attributes, opts.connector,\r\n                            opts.targetFolder.get('id'),\r\n                            opts.applyProperties, opts.status, extBodyParams);\r\n                      }\r\n                      promise\r\n                          .done(function () {\r\n                            model.node.trigger('move', model.node);\r\n                            model.set('count', 1);\r\n                            model.deferred.resolve(model);\r\n                            deferred.resolve(model);\r\n                          })\r\n                          .fail(function (cause) {\r\n                            var errObj = new CommandError(cause);\r\n                            model.deferred.reject(model, errObj);\r\n                            deferred.reject(errObj);\r\n                          });\r\n                      return deferred.promise();\r\n                    }\r\n                  });\r\n                  return deferred.promise(promises);      // return promises\r\n                });\r\n                return $.whenAll.apply($, promises).then(exResult.resolve, exResult.reject);\r\n              });\r\n\r\n            GlobalMessage.showProgressPanel(opts.uploadCollection, {\r\n              oneFileTitle: lang.MovingOneItem,\r\n              oneFileSuccess: lang.MoveOneItemSuccessMessage,\r\n              multiFileSuccess: lang.MoveManyItemsSuccessMessage,\r\n              oneFilePending: lang.MovingOneItem,\r\n              multiFilePending: lang.MovingItems,\r\n              multiFileOneFailure: lang.MoveManyItemsOneFailMessage,\r\n              oneFileFailure: lang.MoveOneItemFailMessage,\r\n              multiFileFailure: lang.MoveManyItemsFailMessage,\r\n              someFileSuccess: lang.MoveSomeItemsSuccessMessage,\r\n              someFilePending: lang.MovingSomeItems,\r\n              someFileFailure: lang.MoveSomeItemsFailMessage,\r\n              locationLabelPending: lang.MovingLocationLabel,\r\n              locationLabelCompleted: lang.MovedLocationLabel,\r\n              enableCancel: false,\r\n              actionType: config.actionType,\r\n              allowMultipleInstances: config.allowMultipleInstances,\r\n              context: opts.context,\r\n              nextNodeModelFactory: NextNodeModelFactory\r\n            });\r\n            this._unblockPageActions(opts.status);       \r\n\r\n          }, this), exResult.reject);\r\n      return exResult.promise();\r\n    },\r\n\r\n    _moveNode: function (instruction, connector, targetFolderID, applyProperties, status, extBodyParams) {\r\n      var self = this;\r\n      var deferred= $.Deferred();\r\n      return this._getCategories(connector, instruction.id, targetFolderID, applyProperties)\r\n          .then(function (categories) {\r\n            var categoryGroupMapping;\r\n            var bodyParam;\r\n            var moveOptions;\r\n\r\n            categoryGroupMapping = {};\r\n            require(\r\n              ['csui/dialogs/node.picker/impl/header/apply.properties.selector/apply.properties.selector.view'],\r\n              function (ApplyPropertiesSelectorView) {\r\n                categoryGroupMapping[ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES] = 'original';\r\n                categoryGroupMapping[ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES] = 'destination';\r\n                categoryGroupMapping[ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES] = 'merged';\r\n\r\n                bodyParam = {\r\n                  \"parent_id\": targetFolderID,\r\n                  \"name\": instruction.newName ? instruction.newName : instruction.name,\r\n                  \"roles\": {\r\n                    \"categories\": categories[categoryGroupMapping[applyProperties]]\r\n                  }\r\n                };\r\n                _.extend(bodyParam, instruction.extended_data);\r\n                _.isFunction(self.checkMultilingualInfo) && self.checkMultilingualInfo(instruction, bodyParam);\r\n                bodyParam = _.extend({}, extBodyParams, bodyParam);\r\n                moveOptions = {\r\n                  url: Url.combine(connector.getConnectionUrl().getApiBase('v2'), '/nodes/',\r\n                    instruction.id),\r\n                  method: 'PUT',\r\n                  data: bodyParam,\r\n                  contentType: connector.getAjaxContentType()\r\n                };\r\n\r\n                connector.makeAjaxCall(moveOptions).then(function (model) {\r\n                  deferred.resolve(model);\r\n                }).fail(function (error) {\r\n                  deferred.reject(error);\r\n\r\n                });\r\n\r\n              });\r\n            return deferred.promise();\r\n          });\r\n    },\r\n\r\n    externalBodyParams: {},\r\n\r\n    getExternalBodyParams: function (connector, selectedNodeIds) {\r\n      return $.Deferred().resolve(this.externalBodyParams).promise();\r\n    },\r\n\r\n    _doPostExecute: function (opts) {\r\n      var self = this,\r\n      uploadFileModels = [],\r\n      //After move operation, instead of removing nodes from collection update its location for below application scope ids\r\n      applicationScopeIds = [\"recentlyaccessed\", \"favorites\", \"searchresults\"],\r\n      replaceParentId = applicationScopeIds.indexOf(opts.applicationScopeId) !== -1;\r\n      //Remove uploadable nodes, not selected items\r\n      opts.uploadCollection.models && opts.uploadCollection.models.length > 0 &&\r\n      _.each(opts.uploadCollection.models, function (filemodel) {\r\n        if (replaceParentId) {\r\n          filemodel.node.attributes.parent_id_expand = opts.targetFolder.attributes;\r\n        }\r\n        uploadFileModels.push(filemodel.node);\r\n      });\r\n      // status.collection can be undefined; for example: go to Properties\r\n      // dropdown menu of the current folder in table header, then use the\r\n      // Move command from the item's dropdown menu in Properties view.\r\n      if (self.nodePicker && self.nodePicker._dialog && self.nodePicker._dialog.isDestroyed) {\r\n        if (replaceParentId && opts.status.collection) {\r\n          uploadFileModels.forEach(function (model) {\r\n            var index = opts.status.collection.findIndex(model);\r\n            opts.status.collection.remove(model);\r\n            opts.status.collection.add(model, { at: index });\r\n          });\r\n        } else {\r\n          opts.status.collection && opts.status.collection.remove(uploadFileModels);     // remove only processed nodes and not all selected\r\n        //to refetch collection in table View\r\n          self.allowCollectionRefetch = true;\r\n        }\r\n        return uploadFileModels;\r\n      }\r\n    },\r\n\r\n    _getCategories: function (connector, nodeID, targetFolderID, applyProperties) {\r\n      if (!!applyProperties && applyProperties === 1) { // keep the original categories.\r\n        return $.Deferred().resolve({}).promise();\r\n      }\r\n      var getCategoriesOptions = {\r\n        url: connector.connection.url + '/forms/nodes/move?' +\r\n             $.param({\r\n               id: nodeID,\r\n               parent_id: targetFolderID\r\n             })\r\n      };\r\n\r\n      return connector.makeAjaxCall(getCategoriesOptions)\r\n          .then(function (response) {\r\n            var form = response.forms[1];\r\n            return form && form.data || {};\r\n          });\r\n      },\r\n\r\n      _actionNodeWithMetadata: function (instruction, connector, targetFolderID, status, extBodyParams) {\r\n        var self = this;\r\n          var bodyParam = _.extend({}, extBodyParams, {\r\n            \"parent_id\": targetFolderID,\r\n            \"name\": instruction.newName ? instruction.newName : instruction.name\r\n          }),\r\n            moveOptions = {\r\n              url: Url.combine(connector.getConnectionUrl().getApiBase('v2'), '/nodes/',\r\n                instruction.id),\r\n              method: 'PUT',\r\n              data: bodyParam,\r\n              contentType: connector.getAjaxContentType()\r\n            };\r\n            _.extend(bodyParam, instruction.extended_data);\r\n          return connector.makeAjaxCall(moveOptions);\r\n      }\r\n    });\r\n\r\n    return MoveCommand;\r\n  });\r\n\n","csui.define('csui/utils/commands/navigate',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/base',\r\n  'csui/utils/commandhelper', 'csui/models/command',\r\n  'csui/models/node/node.model', 'csui/utils/node.links/node.links'\r\n], function (module, _, $, base, CommandHelper, CommandModel, NodeModel,\r\n    nodeLinks) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    openInNewTab: true\r\n  }, module.config());\r\n\r\n  var NavigateCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Navigate'\r\n    },\r\n\r\n    // As long as you can see the URL object, you can navigate to the target\r\n    // URL stored on it.\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 140;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return this._navigateTo(node, options);\r\n    },\r\n\r\n    _navigateTo: function (node, options) {\r\n      var url = node.get('url'),\r\n          promise = $.Deferred(),\r\n          content;\r\n\r\n      function finish() {\r\n        content || (content = window);\r\n        content.location.href = nodeLinks.completeUrl(node, url);\r\n        content.focus();\r\n        promise.resolve();\r\n      }\r\n\r\n      if (config.openInNewTab) {\r\n        content = window.open('', '_blank');\r\n        // Calling window.open(\"\") returns null in the SAP Fiori Client.\r\n        if (!content || !content.location) {\r\n          content = null;\r\n        }\r\n      }\r\n\r\n      if (url) {\r\n        finish();\r\n      } else {\r\n        // The node model does not contain the URL information; not every\r\n        // REST API call may return it, unfortunately.\r\n        node = new NodeModel({id: node.get('id')}, {\r\n          connector: node.connector,\r\n          fields: {\r\n            properties: ['url']\r\n          }\r\n        });\r\n        node.fetch()\r\n            .done(function () {\r\n              url = node.get('url');\r\n              if (url) {\r\n                finish();\r\n              } else if (content) {\r\n                content.close();\r\n              }\r\n            })\r\n            .fail(function (request) {\r\n              if (content) {\r\n                content.close();\r\n              }\r\n              promise.reject(new base.Error(request));\r\n            });\r\n      }\r\n      return promise.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return NavigateCommand;\r\n});\r\n\n","\n","csui.define('csui/utils/commands/open.plugins/open.plugins',[\r\n  'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/models/mixins/rules.matching/rules.matching.mixin',\r\n  // Load and register external document opening plugin rules\r\n  'csui-ext!csui/utils/commands/open.plugins/open.plugins'\r\n], function (_, Backbone, RulesMatchingMixin, rules) {\r\n  'use strict';\r\n\r\n  var OpenPluginModel = Backbone.Model.extend({\r\n    defaults: {\r\n      sequence: 100,\r\n      plugin: null\r\n    },\r\n\r\n    constructor: function OpenPluginModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      this.makeRulesMatching(options);\r\n    }\r\n  });\r\n\r\n  RulesMatchingMixin.mixin(OpenPluginModel.prototype);\r\n\r\n  var OpenPluginCollection = Backbone.Collection.extend({\r\n    model: OpenPluginModel,\r\n    comparator: 'sequence',\r\n\r\n    constructor: function OpenPluginCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.call(this, models, options);\r\n    },\r\n\r\n    findByNode: function (node, options) {\r\n      var openInNewTab, widgetOnly;\r\n      if (options) {\r\n        openInNewTab = options.openInNewTab;\r\n        widgetOnly = options.widgetOnly;\r\n      }\r\n      var rule = this.find(function (item) {\r\n        var plugin = item.get('plugin');\r\n        // Plugins opening a full page can be used in both\r\n        // the current and a new windows, unless a widget\r\n        // was requested.\r\n        return (widgetOnly !== true &&\r\n                (plugin.openWindow || plugin.getUrl ||\r\n                plugin.getUrlQuery) ||\r\n                // Plugins supporting only a widget mode can be\r\n                // opened in the current window only (for now).\r\n                widgetOnly !== false && openInNewTab !== true &&\r\n                (plugin.openWidget || plugin.createWidget)\r\n               ) && item.matchRules(node, item.attributes);\r\n      });\r\n      return rule && rule.get('plugin');\r\n    }\r\n  });\r\n\r\n  var openPlugins = new OpenPluginCollection();\r\n\r\n  if (rules) {\r\n    openPlugins.add(_.chain(rules)\r\n                     .flatten(true)\r\n                     .map(function (rule) {\r\n                       return _.defaults({\r\n                         plugin: new rule.plugin()\r\n                       }, rule);\r\n                     })\r\n                     .value());\r\n  }\r\n\r\n  return openPlugins;\r\n});\r\n\n","csui.define('csui/utils/commands/open',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/url', 'csui/models/node.actions', 'csui/utils/commandhelper', 'csui/utils/commands/download',\r\n  'csui/utils/commands/open.plugins/open.plugins'\r\n], function (module, require, _, $, Url, NodeActionCollection, CommandHelper, DownloadCommand, openPlugins) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    // If overridden, true will always open a new window,\r\n    // false will always use the current window.\r\n    openInNewTab: null,\r\n\r\n    // If overridden, true will always download the document;\r\n    // opening it in the viewer or natively will not be offered.\r\n    forceDownload: false,\t\r\n\t\r\n    extSupportTypes: {}\r\n  }, module.config());\r\n  \r\n   var supportTypes = [144, 749, 736, 2];\r\n  supportTypes = Array.prototype.concat.apply(supportTypes, _.values(config.extSupportTypes));\r\n\r\n  var openAuthenticatedPage, NextNodeModelFactory;\r\n\r\n  var OpenCommand = DownloadCommand.extend({\r\n    defaults: {\r\n      signature: 'Open',\r\n      // Open has a different UI behaviour than download, but both are about\r\n      // the content access, which decide the permission.  There is no\r\n      // 'open-document' action anyway in the current REST API response.\r\n      command_key: ['default', 'open', 'download', 'Download'],\r\n      scope: 'single',\r\n\r\n      openable: true,\r\n      types: supportTypes\r\n    },\r\n\r\n    // TODO: Ask for content:true to be added to the REST API. They added\r\n    // versionable:true, which will be great for the version history enabling,\r\n    // but not for content opening, because containers can be versionable too.\r\n    // TODO: Move E-mail and Drawing to their modules\r\n    // TODO: Deprecate this command in favour of OpenDocument. Introduce a new\r\n    // OpenDocumentContent command, which will check permissions properly.\r\n    // Permitted actions for content access are not checked in the enabled method! This was\r\n    // the usability compromise done when \"fast-browsing\" was introduced.\r\n    // The permissions are checked before the execution. If they are missing,\r\n    // the document perspective will be opened instead of the content, which\r\n    // is not what the Open command originally did. It is what the\r\n    // configurable OpenDocument command does.\r\n\r\n    execute: function (status, options) {\r\n      var node = this._getNode(status);\r\n      // check permission before execution, show overview page if not permitted.\r\n      return this.checkPermission(node).then(_.bind(function(permitted) {\r\n        if(!permitted) {\r\n          return this._showOverview(node, options);\r\n        }\r\n\r\n        if (config.forceDownload) {\r\n          return this._downloadContent(node, options, 'download');\r\n        }\r\n\r\n        var plugin = openPlugins.findByNode(node, {\r\n          openInNewTab: config.openInNewTab\r\n        });\r\n\r\n        return plugin ? this._openContent(node, options, plugin) : this._downloadContent(node, options, 'download');\r\n      }, this));\r\n    },\r\n\r\n    _openContent: function (node, options, plugin) {\r\n      if (config.openInNewTab) {\r\n        return this._openWindow(plugin, node, window.open(''), options);\r\n      }\r\n      if (plugin.widgetView) {\r\n        return this._openWidget(plugin.widgetView, node, options);\r\n      }\r\n      var content = config.openInNewTab === false ?\r\n                    window : window.open('');\r\n\r\n      return this._openWindow(plugin, node, content, options);\r\n    },\r\n\r\n    _openWidget: function (view, node, options) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/utils/commands/impl/full.page.modal/full.page.modal.view',\r\n        view\r\n      ], function (FullPageModal, ViewerView) {\r\n        var viewerView = new ViewerView({\r\n              context: options.context,\r\n              model: node\r\n            }),\r\n            fullPageModal = new FullPageModal({\r\n              view: viewerView\r\n            });\r\n        fullPageModal.on('destroy', function () {\r\n                       deferred.resolve();\r\n                     })\r\n                     .show();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _openWindow: function (plugin, node, content, options) {\r\n      var deferred = $.Deferred();\r\n      var self = this;\r\n      require([\r\n        'csui/utils/open.authenticated.page'\r\n      ], function () {\r\n        openAuthenticatedPage = arguments[0];\r\n        // Calling window.open(\"\") returns null in the SAP Fiori Client.\r\n        var opened = true;\r\n        if (!content || !content.location) {\r\n          content = parent.window;\r\n          opened = false;\r\n        }\r\n        // Prefer the full-URL-retrieving method, then try\r\n        // the URL-query-only-retrieving method\r\n        var promise = plugin.getUrl && plugin.getUrl(node) ||\r\n                      plugin.getUrlQuery(node);\r\n        promise.then(function (url) {\r\n          return self._openURL(plugin, node, content, url, options);\r\n        }, function (error) {\r\n          if (opened && content !== window) {\r\n            content.close();\r\n          }\r\n          deferred.reject(error);\r\n          return $.Deferred().reject();\r\n        })\r\n        .then(function () {\r\n          if (opened) {\r\n            content.focus();\r\n          }\r\n          deferred.resolve();\r\n        });\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _openURL: function (plugin, node, content, url, options) {\r\n      var connector = node.connector || options.connector;\r\n      // If the URL-query-only-retrieving method was used,\r\n      // prepend the CGI URL base to complete the URL\r\n      if (!plugin.getUrl) {\r\n        url = Url.appendQuery(\r\n            new Url(connector.connection.url).getCgiScript(),\r\n            Url.combineQueryString(url));\r\n      }\r\n      if (plugin.needsAuthentication && plugin.needsAuthentication(node)) {\r\n        return openAuthenticatedPage(connector, url, {\r\n          window: content,\r\n          openInNewTab: config.openInNewTab\r\n        });\r\n      }\r\n      content.location.href = url;\r\n      return $.Deferred().resolve().promise();\r\n    },\r\n\r\n    // public method for other components to check if permissions are enabled for this command.\r\n    checkPermission: function (node) {\r\n      function doCheckActions () {\r\n        if(node.actions.get('download')) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(!node.actions.length) {\r\n        // fetch the openable actions and append to the node for reuse.\r\n        var openables = new NodeActionCollection(undefined, {\r\n          connector: node.connector,\r\n          nodes: [ node.get('id') ],\r\n          commands: [ 'download' ]\r\n        });\r\n\r\n        var promise = $.Deferred();\r\n\r\n        openables.fetch().then(function () {\r\n          var nodeId = node.get('id');\r\n          var openable = openables.get(nodeId);\r\n          node.actions.add(openable.actions.models);\r\n          var permitted = doCheckActions();\r\n          promise.resolve(permitted);\r\n        });\r\n\r\n        return promise;\r\n      } else {\r\n        // actions are already available, make the check.\r\n        return $.Deferred().resolve(doCheckActions()).promise();\r\n      }\r\n    },\r\n\r\n    _showOverview: function (node, options) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/utils/contexts/factories/next.node'\r\n      ], function () {\r\n        NextNodeModelFactory = arguments[0];\r\n        var nextNode = options.context.getModel(NextNodeModelFactory);\r\n        var nodeId = node.get('id');\r\n\r\n        nextNode.set('id', nodeId);\r\n      }, deferred.reject);\r\n\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return OpenCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.discussion',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenDiscussionCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenDiscussion'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 215;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'view',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenDiscussionCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.milestone',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenMilestoneCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenMilestone'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 212;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseMilestone',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenMilestoneCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.channel',['csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenChannelCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenChannel'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 207;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'ViewChannel',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenChannelCommand;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/open.news',['csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenNewsCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenNews'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 208;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'ViewNews',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenNewsCommand;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/open.poll',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenPollCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenPoll'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 218;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'OpenPoll',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenPollCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.prospector',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenProspectorCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenProspector'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 384;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'ProspectorBrowse',\r\n        objId: node.get('id'),\r\n        order: '-SCORE',\r\n        summaries: 1,\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenProspectorCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.specific.classic.page',[\r\n  'csui/utils/commands/open.classic.page',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/classic.nodes/classic.nodes'\r\n], function (OpenClassicPageCommand, CommandHelper, classicNodes) {\r\n  'use strict';\r\n\r\n  var OpenSpecificClassicPageCommand = OpenClassicPageCommand.extend({\r\n    defaults: {\r\n      signature: 'OpenSpecificClassicPage'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node\r\n          // If the object data does not contain the open-ability flag, consider\r\n          // the object open-able for compatibility with older REST API.\r\n          && node.get('openable') !== false\r\n          && classicNodes.isSupported(node);\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      return classicNodes.getUrl(node);\r\n    }\r\n  });\r\n\r\n  return OpenSpecificClassicPageCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.specific.node.perspective',[\r\n  'csui/utils/commands/open.node.perspective',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/smart.nodes/smart.nodes'\r\n], function (OpenNodePerspectiveCommand, CommandHelper, smartNodes) {\r\n  'use strict';\r\n\r\n  var OpenSpecificNodePerspectiveCommand = OpenNodePerspectiveCommand.extend({\r\n    defaults: {\r\n      signature: 'OpenSpecificNodePerspective'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node\r\n          // If the object data does not contain the open-ability flag, consider\r\n          // the object open-able for compatibility with older REST API.\r\n          && node.get('openable') !== false\r\n          && smartNodes.isSupported(node);\r\n    }\r\n  });\r\n\r\n  return OpenSpecificNodePerspectiveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.task',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTaskCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTask'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 206;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseTask',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTaskCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.taskgroup',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTaskGroupCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTaskGroup'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 205;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseTaskGroup',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTaskGroupCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.tasklist',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTaskListCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTaskList'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 204;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseTaskList',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTaskListCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.topic',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTopicCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTopic'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 130 || type === 134;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'view',\r\n        objId: node.get('id'),\r\n        show: 1,\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTopicCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/permissions',['module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/utils/command.error', 'csui/utils/commandhelper',\r\n  'csui/models/command', 'csui/models/nodes'\r\n], function (module, require, _, $, Backbone, Marionette,\r\n    CommandError, CommandHelper, CommandModel, NodeCollection) {\r\n  'use strict';\r\n\r\n  var PermissionsCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'permissions',\r\n      command_key: ['permissions', 'Permissions'],\r\n      scope: 'multiple',\r\n      commands: 'csui/utils/commands'\r\n    },\r\n\r\n    _executeWithSaveState: function (status, options) {\r\n      var deferred           = $.Deferred(),\r\n          selected           = status.nodes,\r\n          container          = status.container,\r\n          navigationView     = true, nodes,\r\n          metadatanavigation = !!status.originatingView ? status.originatingView.$el.closest(\r\n              '.cs-metadata-navigation-wrapper') : [];\r\n\r\n      if (selected && selected.first() === container) {\r\n        // The container properties were requested for the container\r\n        selected = container;\r\n        navigationView = false;\r\n      } else {\r\n        nodes = this._getAtLeastOneNode(status);\r\n        selected = selected.first();\r\n      }\r\n\r\n      var context = status.context || options && options.context;\r\n\r\n      require(['csui/widgets/metadata/impl/metadatanavigation/metadatanavigation.view',\r\n        this.get('commands'), 'csui/utils/contexts/factories/metadata.factory'\r\n      ], function (PermissioNavigationWidget, commands, MetadataFactory) {\r\n\r\n        var nodeId = selected.get('id'), metadataModel;\r\n\r\n        if (status.originatingView instanceof PermissioNavigationWidget) {\r\n          // bring back shortcut Node and maintain in slected node  if at all node has any..\r\n          !!status.originatingView.mdv && status.originatingView.mdv.model.get('shortcutNode') ?\r\n          selected.attributes.shortcutNode = status.originatingView.mdv.model.get('shortcutNode') :\r\n          selected;\r\n\r\n          var shortcut = status.originatingView.mdv.model.get('shortcutNode');\r\n          if (shortcut) {\r\n            nodeId = shortcut.get('id');\r\n          }\r\n\r\n          metadataModel = context.getModel(MetadataFactory);\r\n          var metadata_info   = metadataModel.get('metadata_info') || {};\r\n\r\n          metadataModel.set('metadata_info', {\r\n            id: nodeId,\r\n            model: selected,\r\n            navigationView: navigationView,\r\n            originatingView: status.originatingView,\r\n            targetView: status.originatingView,\r\n            collection: metadata_info.collection,\r\n            navigator: metadata_info.navigator,\r\n            commands: commands,\r\n            showCloseIcon: status.originatingView ? false : true,\r\n            showBackIcon: status.originatingView ? true : false,\r\n            selectedTab: status.selectedTab,\r\n            showPermissionView: true\r\n          });\r\n\r\n        }\r\n        else if (navigationView) {\r\n          if (status.collection && status.collection.models &&\r\n              status.collection.models.length > 0) {\r\n\r\n            metadataModel = context.getModel(MetadataFactory);\r\n            metadataModel.set('metadata_info', {\r\n              id: nodeId,\r\n              navigator: true,\r\n              model: selected,\r\n              containerCollection: status.collection,  // this is the full collection\r\n              collection: nodes,  // as UX design, this collection can be a subset\r\n              selected: selected,\r\n              originatingView: status.originatingView,\r\n              commands: commands,\r\n              isExpandedView: status.originatingView &&\r\n                              !!status.originatingView.options.isExpandedView,\r\n              nameAttribute: options ? options.nameAttribute : undefined,\r\n              showCloseIcon: status.originatingView ? false : true,\r\n              selectedTab: status.selectedTab,\r\n              showPermissionView: true\r\n            });\r\n\r\n          } else {\r\n\r\n            if (status.originatingView &&\r\n                status.originatingView.supportOriginatingView === undefined) {\r\n              status.originatingView.supportOriginatingView = true;\r\n            }\r\n\r\n            metadataModel = context.getModel(MetadataFactory);\r\n            metadataModel.set('metadata_info', {\r\n              id: nodeId,\r\n              model: selected,\r\n              navigationView: navigationView,\r\n              originatingView: status.originatingView,\r\n              targetView: status.originatingView,\r\n              commands: commands,\r\n              showCloseIcon: status.originatingView ? false : true,\r\n              showBackIcon: status.originatingView ? true : false,\r\n              selectedTab: status.selectedTab,\r\n              showPermissionView: true\r\n            });\r\n\r\n          }\r\n        } else {\r\n          if (status.originatingView &&\r\n              status.originatingView.supportOriginatingView === undefined) {\r\n            status.originatingView.supportOriginatingView = true;\r\n          }\r\n\r\n          metadataModel = context.getModel(MetadataFactory);\r\n          metadataModel.set('metadata_info', {\r\n            id: nodeId,\r\n            model: selected,\r\n            navigationView: navigationView,\r\n            originatingView: status.originatingView,\r\n            targetView: status.originatingView,\r\n            commands: commands,\r\n            showCloseIcon: status.originatingView ? false : true,\r\n            showBackIcon: status.originatingView ? true : false,\r\n            selectedTab: status.selectedTab,\r\n            showPermissionView: true\r\n          });\r\n\r\n        }\r\n\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeWithoutSaveState: function (status, options) {\r\n      var self               = this,\r\n          deferred           = $.Deferred(),\r\n          selected           = status.nodes,\r\n          container          = status.container,\r\n          navigationView     = true, nodes,\r\n          metadatanavigation = !!status.originatingView ? status.originatingView.$el.closest(\r\n              '.cs-metadata-navigation-wrapper') : [];\r\n\r\n      if (selected && selected.first() === container) {\r\n        // The container properties were requested for the container\r\n        selected = container;\r\n        navigationView = false;\r\n      } else {\r\n        nodes = this._getAtLeastOneNode(status);\r\n        selected = selected.first();\r\n      }\r\n\r\n      // The metadatanavigation view gets invoked from the nodestable and the search results\r\n      // differently. In Both cases I did not see a reason why adding the cs-metadata-no-bg-color\r\n      // class. Actually adding it creates an issues when the metadatanavigation is launched from\r\n      // the nodestable.\r\n      /*if (metadatanavigation.length > 0) {\r\n        metadatanavigation.addClass(\"cs-metadata-no-bg-color\");\r\n      }*/\r\n\r\n      var context = status.context || options && options.context;\r\n\r\n      require(['csui/widgets/metadata/impl/metadatanavigation/metadatanavigation.view',\r\n        'csui/widgets/metadata/metadata.view', 'csui/controls/dialog/dialog.view',\r\n        'csui/widgets/permissions/permissions.view', this.get('commands')\r\n      ], function (PermissioNavigationWidget, MetadataView, DialogView, PermissionsView, commands) {\r\n\r\n        var permissionsView, nodeId = selected.get('id'),\r\n            showInDialogView        = status.data && !!status.data.dialogView;\r\n        if (status.originatingView instanceof PermissioNavigationWidget) {\r\n          // bring back shortcut Node and maintain in slected node  if at all node has any..\r\n          !!status.originatingView.mdv && status.originatingView.mdv.model.get('shortcutNode') ?\r\n          selected.attributes.shortcutNode = status.originatingView.mdv.model.get('shortcutNode') :\r\n          selected;\r\n          permissionsView = new MetadataView({\r\n            model: selected,\r\n            originatingView: status.originatingView,\r\n            containerCollection: status.collection,\r\n            context: context,\r\n            commands: commands,\r\n            showCloseIcon: status.originatingView ? false : true,\r\n            showBackIcon: status.originatingView ? false : true,\r\n            activeTab: status.originatingView.mdv && status.originatingView.mdv.metadataTabView &&\r\n                       status.originatingView.mdv.metadataTabView.options.activeTab,\r\n            selectedTab: status.originatingView.mdv && status.originatingView.mdv.metadataTabView &&\r\n                         status.originatingView.mdv.metadataTabView.tabLinks.selected,\r\n            showPermissionView: true\r\n          });\r\n        }\r\n        else if (navigationView) {\r\n          if (status.collection && status.collection.models &&\r\n              status.collection.models.length > 0) {\r\n            permissionsView = new PermissioNavigationWidget({\r\n              container: container,\r\n              containerCollection: status.collection,  // this is the full collection\r\n              collection: nodes,  // as UX design, this collection can be a subset\r\n              selected: selected,\r\n              originatingView: status.originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              isExpandedView: status.originatingView &&\r\n                              !!status.originatingView.options.isExpandedView,\r\n              nameAttribute: options ? options.nameAttribute : undefined,\r\n              showCloseIcon: status.originatingView ? false : true,\r\n              selectedTab: status.selectedTab,\r\n              showPermissionView: true\r\n            });\r\n          } else {\r\n            if (status.originatingView &&\r\n                status.originatingView.supportOriginatingView === undefined) {\r\n              status.originatingView.supportOriginatingView = true;\r\n            }\r\n            permissionsView = new MetadataView({\r\n              model: selected,\r\n              originatingView: status.originatingView,\r\n              targetView: status.originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              showCloseIcon: status.originatingView ? false : true,\r\n              showBackIcon: status.originatingView ? true : false,\r\n              selectedTab: status.selectedTab,\r\n              showPermissionView: true\r\n            });\r\n            if (status.originatingView) {\r\n              status.originatingView.permissionsView = permissionsView;\r\n            }\r\n          }\r\n        } else {\r\n          if (status.originatingView &&\r\n              status.originatingView.supportOriginatingView === undefined) {\r\n            status.originatingView.supportOriginatingView = true;\r\n          }\r\n          permissionsView = new MetadataView({\r\n            model: selected,\r\n            originatingView: status.originatingView,\r\n            targetView: status.originatingView,\r\n            context: context,\r\n            commands: commands,\r\n            showCloseIcon: status.originatingView ? false : true,\r\n            showBackIcon: status.originatingView ? true : false,\r\n            selectedTab: status.selectedTab,\r\n            showPermissionView: true\r\n          });\r\n          if (status.originatingView) {\r\n            status.originatingView.permissionsView = permissionsView;\r\n          }\r\n        }\r\n        //Replace metadata content view with permissions widget\r\n        if (status.originatingView instanceof PermissioNavigationWidget) {\r\n          if (status.originatingView.mdv && status.originatingView.mdv.metadataTabView) {\r\n            self.listenTo(permissionsView, 'metadata:close:without:animation', function () {\r\n              if (status.originatingView.originatingView) {\r\n                var $originatingView = status.originatingView.originatingView.$el,\r\n                    $csProperties = $($originatingView.parent().find('.cs-properties-wrapper')[0]);\r\n                $originatingView.show();\r\n                status.originatingView.triggerMethod('dom:refresh');\r\n                !!status.collection && (status.collection.requireSwitched = false);\r\n                permissionsView.destroy();\r\n                $csProperties.remove();\r\n                deferred.resolve();\r\n              }\r\n            });\r\n            status.originatingView.mdv.destroy();\r\n            status.originatingView.showPermissionView = true;\r\n            permissionsView.render();\r\n            Marionette.triggerMethodOn(permissionsView, 'before:show');\r\n            status.originatingView.$el.find(\".metadata-content\").append(permissionsView.el);\r\n            Marionette.triggerMethodOn(permissionsView, 'show');\r\n          }\r\n        }// replace the originatingView with sliding left/right animation\r\n        else if (status.originatingView && !showInDialogView) {\r\n\r\n          var _showOriginatingView, $csProperties;\r\n          var $originatingView = status.originatingView.$el;\r\n          var ntWidthVal = $originatingView.width();\r\n          var ntWidth = ntWidthVal + 'px';\r\n          $originatingView.parent().append(\"<div class='cs-permissions-wrapper'></div>\");\r\n          $csProperties = $($originatingView.parent().find('.cs-permissions-wrapper')[0]);\r\n          $csProperties.hide();\r\n          permissionsView.render();\r\n          _.isFunction(status.originatingView.unblockActions) && status.originatingView.unblockActions();\r\n          Marionette.triggerMethodOn(permissionsView, 'before:show');\r\n          $csProperties.append(permissionsView.el);\r\n\r\n          $originatingView = $originatingView.parent().find(\".cs-properties-wrapper\").length > 0 ?\r\n                             $originatingView.parent().find(\".cs-properties-wrapper\") :\r\n                             $originatingView;\r\n\r\n          $originatingView.hide();\r\n          $csProperties.show();\r\n          if (status.originatingView.metadataView) {\r\n            $originatingView.parent().find(\".cs-properties-wrapper\").remove();\r\n            status.originatingView.metadataView &&\r\n            status.originatingView.metadataView.destroy();\r\n          }\r\n          Marionette.triggerMethodOn(permissionsView, 'show');\r\n          $originatingView.promise().done(function () {\r\n            status.originatingView.isDisplayed = false;\r\n          });\r\n\r\n          _showOriginatingView = function () {\r\n            if (metadatanavigation.length > 0) {\r\n              metadatanavigation.removeClass(\"cs-metadata-no-bg-color\");\r\n            }\r\n            $csProperties.hide();\r\n            status.originatingView.$el.show();\r\n            status.originatingView.metadataView &&\r\n            status.originatingView.metadataView.destroy();\r\n            status.originatingView.permissionsView &&\r\n            status.originatingView.permissionsView.destroy();\r\n            status.originatingView.triggerMethod('dom:refresh');\r\n            status.originatingView.isDisplayed = true;\r\n            //reset required switch to default.\r\n            !!status.collection && (status.collection.requireSwitched = false);\r\n            // Trigger an event to let originating view aware of closing properties view and going back to it.\r\n            // Hence originatingView can handle it and do necessary actions (if any).\r\n            status.originatingView.trigger('permissions:view:destroyed');\r\n            permissionsView.destroy();\r\n            $csProperties.remove();\r\n            deferred.resolve();\r\n\r\n          };\r\n\r\n          self.listenTo(permissionsView, 'metadata:close',\r\n              _.bind(_showOriginatingView, self));\r\n          self.listenTo(permissionsView, 'metadata:close:without:animation', function () {\r\n            $originatingView.show();\r\n            status.originatingView.triggerMethod('dom:refresh');\r\n            !!status.collection && (status.collection.requireSwitched = false);\r\n            permissionsView.destroy();\r\n            $csProperties.remove();\r\n            deferred.resolve();\r\n          });\r\n\r\n        } else {  // show permissionsView View in a modal dialog\r\n          if (permissionsView.metadataTabView) {\r\n            // edit permission popover should be in dialog element\r\n            // not on body , else we loose focus on first element of popover\r\n            permissionsView.metadataTabView.options.isExpandedView = true;\r\n          }\r\n          self.dialog = new DialogView({\r\n            className: 'cs-permissions',\r\n            largeSize: true,\r\n            view: permissionsView\r\n          });\r\n\r\n          self.dialog.show();\r\n\r\n          // UX specs does not have header bar\r\n          self.dialog.ui.header.hide();\r\n          self.dialog.listenTo(permissionsView, 'metadata:close', function () {\r\n            self.dialog.destroy();\r\n            deferred.resolve();\r\n          });\r\n          self.dialog.listenTo(permissionsView, 'metadata:close:without:animation',\r\n              function () {\r\n                self.dialog.destroy();\r\n                deferred.resolve();\r\n              });\r\n        }\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred           = $.Deferred(),\r\n          selected           = status.nodes,\r\n          container          = status.container,\r\n          navigationView     = true, nodes,\r\n          metadatanavigation = !!status.originatingView ? status.originatingView.$el.closest(\r\n              '.cs-metadata-navigation-wrapper') : [];\r\n\r\n      if (selected && selected.first() === container) {\r\n        // The container properties were requested for the container\r\n        selected = container;\r\n        navigationView = false;\r\n      } else {\r\n        nodes = this._getAtLeastOneNode(status);\r\n        selected = selected.first();\r\n      }\r\n\r\n      var context = status.context || options && options.context;\r\n\r\n      require(['csui/widgets/metadata/impl/metadatanavigation/metadatanavigation.view',\r\n        this.get('commands'), 'csui/utils/contexts/factories/metadata.factory'\r\n      ], function (PermissioNavigationWidget, commands, MetadataFactory) {\r\n\r\n        var nodeId = selected.get('id'), metadataModel;\r\n\r\n        if (status.originatingView instanceof PermissioNavigationWidget) {\r\n          // bring back shortcut Node and maintain in slected node  if at all node has any..\r\n          !!status.originatingView.mdv && status.originatingView.mdv.model.get('shortcutNode') ?\r\n          selected.attributes.shortcutNode = status.originatingView.mdv.model.get('shortcutNode') :\r\n          selected;\r\n\r\n          var shortcut = status.originatingView.mdv.model.get('shortcutNode');\r\n          if (shortcut) {\r\n            nodeId = shortcut.get('id');\r\n          }\r\n\r\n          metadataModel = context.getModel(MetadataFactory);\r\n          var metadata_info   = metadataModel.get('metadata_info') || {};\r\n\r\n          metadataModel.set('metadata_info', {\r\n            id: nodeId,\r\n            model: selected,\r\n            navigationView: navigationView,\r\n            originatingView: status.originatingView,\r\n            targetView: status.originatingView,\r\n            collection: metadata_info.collection,\r\n            navigator: metadata_info.navigator,\r\n            commands: commands,\r\n            showCloseIcon: status.originatingView ? false : true,\r\n            showBackIcon: status.originatingView ? true : false,\r\n            selectedTab: status.selectedTab,\r\n            showPermissionView: true\r\n          });\r\n\r\n        }\r\n        else if (navigationView) {\r\n          if (status.collection && status.collection.models &&\r\n              status.collection.models.length > 0) {\r\n\r\n            metadataModel = context.getModel(MetadataFactory);\r\n            metadataModel.set('metadata_info', {\r\n              id: nodeId,\r\n              navigator: true,\r\n              model: selected,\r\n              containerCollection: status.collection,  // this is the full collection\r\n              collection: nodes,  // as UX design, this collection can be a subset\r\n              selected: selected,\r\n              originatingView: status.originatingView,\r\n              commands: commands,\r\n              isExpandedView: status.originatingView &&\r\n                              !!status.originatingView.options.isExpandedView,\r\n              nameAttribute: options ? options.nameAttribute : undefined,\r\n              showCloseIcon: status.originatingView ? false : true,\r\n              selectedTab: status.selectedTab,\r\n              showPermissionView: true\r\n            });\r\n\r\n          } else {\r\n\r\n            if (status.originatingView &&\r\n                status.originatingView.supportOriginatingView === undefined) {\r\n              status.originatingView.supportOriginatingView = true;\r\n            }\r\n\r\n            metadataModel = context.getModel(MetadataFactory);\r\n            metadataModel.set('metadata_info', {\r\n              id: nodeId,\r\n              model: selected,\r\n              navigationView: navigationView,\r\n              originatingView: status.originatingView,\r\n              targetView: status.originatingView,\r\n              commands: commands,\r\n              showCloseIcon: status.originatingView ? false : true,\r\n              showBackIcon: status.originatingView ? true : false,\r\n              selectedTab: status.selectedTab,\r\n              showPermissionView: true\r\n            });\r\n\r\n          }\r\n        } else {\r\n          if (status.originatingView &&\r\n              status.originatingView.supportOriginatingView === undefined) {\r\n            status.originatingView.supportOriginatingView = true;\r\n          }\r\n\r\n          metadataModel = context.getModel(MetadataFactory);\r\n          metadataModel.set('metadata_info', {\r\n            id: nodeId,\r\n            model: selected,\r\n            navigationView: navigationView,\r\n            originatingView: status.originatingView,\r\n            targetView: status.originatingView,\r\n            commands: commands,\r\n            showCloseIcon: status.originatingView ? false : true,\r\n            showBackIcon: status.originatingView ? true : false,\r\n            selectedTab: status.selectedTab,\r\n            showPermissionView: true\r\n          });\r\n\r\n        }\r\n\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getAtLeastOneNode: function (status) {\r\n      if (!status.nodes) {\r\n        return new NodeCollection();\r\n      }\r\n      if (status.nodes.length === 1 && status.collection) {\r\n        return status.collection;\r\n      } else {\r\n        return status.nodes;\r\n      }\r\n    }\r\n  });\r\n  return PermissionsCommand;\r\n});\n","csui.define('csui/utils/commands/properties',['module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/utils/command.error', 'csui/utils/commandhelper',\r\n  'csui/models/command', 'csui/models/nodes'\r\n], function (module, require, _, $, Backbone, Marionette,\r\n    CommandError, CommandHelper, CommandModel, NodeCollection, MetadataFactory) {\r\n  'use strict';\r\n\r\n  var PropertiesCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Properties',\r\n      command_key: ['properties', 'Properties'],\r\n      openable: true,\r\n      scope: 'multiple',\r\n      commands: 'csui/utils/commands'\r\n    },\r\n\r\n    _executeWithSaveState: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/contexts/factories/metadata.factory',\r\n               'csui/widgets/metadata/header.dropdown.menu.items', this.get('commands')\r\n      ], function (MetadataFactory, metadataDropdownMenuItems, commands) {\r\n        var context         = status.context || options && options.context,\r\n            metadataModel = context.getModel(MetadataFactory),\r\n            node            = CommandHelper.getJustOneNode(status) || (status.nodes && status.nodes.at(0)),\r\n            container = status.container,\r\n            selected = status.nodes,\r\n            originatingView = status.originatingView,\r\n            metadataNavigator = true,\r\n            nodes;\r\n\r\n        var metadata_info = metadataModel.get('metadata_info') || {},\r\n            collection = nodes;\r\n\r\n        if (metadata_info && metadata_info.navigator) {\r\n          metadataNavigator = true;\r\n          collection = metadata_info.collection;\r\n        } else {\r\n          // The third condition of checking for if metadata_info.navigationView is false is\r\n          // to cover for the condition when the single permissions is viewed and the user\r\n          // selects to view properties for single node.\r\n          if (selected && selected.first() === container || !!status.noMetadataNavigation ||\r\n                (metadata_info && metadata_info.navigationView === false) ) {\r\n            // The container properties were requested for the container\r\n            metadataNavigator = false;\r\n          } else {\r\n            nodes = collection = this._getAtLeastOneNode(status);\r\n          }\r\n        }\r\n\r\n        if (!metadataNavigator) {\r\n          if(originatingView && originatingView.options.refetchNodeActions && nodes) {\r\n            var commandSignatures = commands.getSignatures(metadataDropdownMenuItems);\r\n            nodes.each(function (node) {\r\n              if(!!node.refetchNodeActions) {\r\n                node.nonPromotedActionCommands = commandSignatures;\r\n                node.set({csuiLazyActionsRetrieved: false}, {silent:true});\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        var nodeId = node.get('id'),\r\n            shortcut = node.get('shortcutNode');\r\n        if (shortcut) {\r\n          nodeId = shortcut.get('id');\r\n        }\r\n\r\n        metadataModel.set('metadata_info', {\r\n              id: nodeId,\r\n              model: node,\r\n              navigator: metadataNavigator,\r\n              collection: collection,\r\n              selectedTab: status.selectedTab,\r\n              selectedProperty: status.selectedProperty,\r\n              isThumbnailView: status.originatingView && status.originatingView.thumbnailView\r\n        });\r\n\r\n        deferred.resolve();\r\n      }.bind(this), function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _isInMetadataPerspective: function (context) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/contexts/factories/metadata.factory'\r\n      ], function (MetadataFactory) {\r\n        var metadataModel = context.getModel(MetadataFactory);\r\n        var metadataInfo = metadataModel.get('metadata_info');\r\n        if (metadataInfo && _.keys(metadataInfo).length > 0) {\r\n          deferred.resolve();\r\n        } else {\r\n          deferred.reject();\r\n        }\r\n      }.bind(this), function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n\r\n    },\r\n\r\n    _executeWithoutSaveState: function (status, options) {\r\n      var context = status.context || (options && options.context),\r\n          self = this,\r\n          deferred = $.Deferred(),\r\n          selected = status.nodes,\r\n          container = status.container,\r\n          navigationView = true,\r\n          nodes;\r\n\r\n      if (selected && selected.first() === container) {\r\n        // The container properties were requested for the container\r\n        selected = container;\r\n        navigationView = false;\r\n      } else {\r\n        nodes = this._getAtLeastOneNode(status);\r\n      }\r\n\r\n      var originatingView = status.originatingView || (options && options.originatingView);\r\n      require(['csui/widgets/metadata/impl/metadatanavigation/metadatanavigation.view',\r\n        'csui/widgets/metadata/metadata.view', 'csui/controls/dialog/dialog.view',\r\n        'csui/models/nodeversions', this.get('commands')\r\n      ], function (MetadataNavigationWidget, MetadataView, DialogView,\r\n          NodeVersionCollection, commands) {\r\n\r\n        var metadata, showInDialogView = status.data && !!status.data.dialogView;\r\n        if (navigationView) {\r\n          if (status.collection && status.collection.models &&\r\n              status.collection.models.length > 0) {\r\n            metadata = new MetadataNavigationWidget({\r\n              container: container,\r\n              containerCollection: status.collection,  // this is the full collection\r\n              collection: nodes,  // as UX design, this collection can be a subset\r\n              selected: selected,\r\n              originatingView: originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              nameAttribute: options ? options.nameAttribute : undefined,\r\n              showCloseIcon: originatingView ? false : true,\r\n              selectedTab: status.selectedTab,\r\n              selectedProperty: status.selectedProperty,\r\n              showThumbnails: status.showThumbnails,\r\n              enableViewState: false\r\n            });\r\n          } else {\r\n            if (originatingView && originatingView.supportOriginatingView === undefined) {\r\n              originatingView.supportOriginatingView = true;\r\n            }\r\n            metadata = new MetadataView({\r\n              model: selected.get(\"id\") ? selected : selected.models[0],\r\n              navigationView: false,\r\n              originatingView: originatingView,\r\n              targetView: originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              showCloseIcon: originatingView ? false : true,\r\n              showBackIcon: originatingView ? true : false,\r\n              selectedTab: status.selectedTab,\r\n              selectedProperty: status.selectedProperty,\r\n              enableViewState: false\r\n            });\r\n            if (originatingView) {\r\n              originatingView.metadataView = metadata;\r\n            }\r\n          }\r\n        } else {\r\n          if (originatingView && originatingView.supportOriginatingView === undefined) {\r\n            originatingView.supportOriginatingView = true;\r\n          }\r\n          metadata = new MetadataView({\r\n            model: selected,\r\n            navigationView: false,\r\n            originatingView: originatingView,\r\n            targetView: originatingView,\r\n            context: context,\r\n            commands: commands,\r\n            showCloseIcon: originatingView ? false : true,\r\n            showBackIcon: originatingView ? true : false,\r\n            selectedTab: status.selectedTab,\r\n            selectedProperty: status.selectedProperty,\r\n            enableViewState: false\r\n          });\r\n          if (originatingView) {\r\n            originatingView.metadataView = metadata;\r\n          }\r\n        }\r\n\r\n        //if the view is metadata navigation view, then change only metadataview part.\r\n        if (originatingView instanceof MetadataNavigationWidget &&\r\n            !(status.collection instanceof NodeVersionCollection)) {\r\n          if (originatingView.mdv && originatingView.mdv.metadataTabView) {\r\n            metadata = null;\r\n            originatingView.showPermissionView = false;\r\n            context.viewStateModel && context.viewStateModel.setSessionViewState('permissions', false);\r\n            originatingView._showNode(selected.get(\"id\") ? selected : selected.models[0]);\r\n          }\r\n        } // replace the originatingView with sliding left/right animation\r\n        else if (originatingView && !showInDialogView) {\r\n          originatingView.triggerMethod('metadata:created', metadata);\r\n          var _showOriginatingView, $csProperties;\r\n          var $originatingView = originatingView.$el;\r\n          var ntWidthVal = $originatingView.width();\r\n          var ntWidth = ntWidthVal + 'px';\r\n\r\n          $originatingView.parent().append(\"<div class='cs-properties-wrapper'></div>\");\r\n          $originatingView.parent().addClass('csui-node-properties-wrapper');\r\n          $csProperties = $($originatingView.parent().find('.cs-properties-wrapper')[0]);\r\n          $csProperties.hide();\r\n\r\n          metadata.render();\r\n          Marionette.triggerMethodOn(metadata, 'before:show');\r\n          $csProperties.append(metadata.el);\r\n          _.isFunction(originatingView.unblockActions) && originatingView.unblockActions();\r\n          $originatingView = $originatingView.parent().find(\".cs-permissions-wrapper\").length > 0 ?\r\n                             $originatingView.parent().find(\".cs-permissions-wrapper\") :\r\n                             $originatingView;\r\n          $originatingView.hide();\r\n          $csProperties.show();\r\n          if (originatingView.permissionsView) {\r\n            $originatingView.parent().find(\".cs-permissions-wrapper\").remove();\r\n            originatingView.permissionsView &&\r\n            originatingView.permissionsView.destroy();\r\n          }\r\n          Marionette.triggerMethodOn(metadata, 'show');\r\n          $originatingView.promise().done(function () {\r\n            originatingView.isDisplayed = false;\r\n          });\r\n\r\n          _showOriginatingView = function () {\r\n            $csProperties.hide();\r\n            originatingView.$el.show();\r\n            originatingView.metadataView && originatingView.metadataView.destroy();\r\n            originatingView.permissionsView &&\r\n              originatingView.permissionsView.destroy();\r\n            originatingView.triggerMethod('dom:refresh');\r\n            originatingView.isDisplayed = true;\r\n            //reset required switch to default.\r\n            !!status.collection && (status.collection.requireSwitched = false);\r\n            // Trigger an event to let originating view aware of closing properties view and going back to it.\r\n            // Hence originatingView can handle it and do necessary actions (if any).\r\n            // For ex: Coming to properties page from Wiki, delete latest version, and going back,\r\n            // should fetch & update WIKI page with latest available version.\r\n            originatingView.trigger('properties:view:destroyed');\r\n            $originatingView.parent().removeClass('csui-node-properties-wrapper');\r\n            metadata.destroy();\r\n            $csProperties.remove();\r\n            deferred.resolve();\r\n\r\n          };\r\n\r\n          self.listenTo(metadata, 'metadata:close', _.bind(_showOriginatingView, self));\r\n          self.listenTo(metadata, 'metadata:close:without:animation', function () {\r\n                $originatingView.show();\r\n                originatingView.triggerMethod('dom:refresh');\r\n                //reset required switch to default.\r\n                !!status.collection && (status.collection.requireSwitched = false);\r\n\r\n            metadata.destroy();\r\n            $csProperties.remove();\r\n            deferred.resolve();\r\n          });\r\n\r\n        } else {  // show Metadata View in a modal dialog\r\n\r\n          self.dialog = new DialogView({\r\n            className: 'cs-properties',\r\n            largeSize: true,\r\n            view: metadata\r\n          });\r\n\r\n          self.dialog.show();\r\n\r\n          // UX specs does not have header bar\r\n          self.dialog.ui.header.hide();\r\n          self.dialog.listenTo(metadata, 'metadata:close', function () {\r\n            self.dialog.destroy();\r\n          });\r\n\r\n          self.dialog.listenTo(metadata, 'metadata:close:without:animation', function () {\r\n            self.dialog.destroy();\r\n          });\r\n\r\n          self.dialog.listenTo(self.dialog, 'before:hide', function () {\r\n            deferred.resolve();\r\n          });\r\n\r\n        }\r\n\r\n      }, function (error) {\r\n        deferred.reject(new CommandError(error));\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    execute: function (status, options) {\r\n\r\n      var context = status.context || (options && options.context);\r\n\r\n      // When the permissions are displayed in the metadata navigation, it uses this\r\n      // command to display the properties again. So we can't use the routing again when the\r\n      // permissions are displayed.\r\n      // We also will not use the routing when the permissions are displayed in the nodestable.\r\n      // We can't open the properties when the Root router is active because we can't do the\r\n      // back button twice.\r\n      if (context && context.viewStateModel &&\r\n            context.viewStateModel.get('history') &&\r\n            context.viewStateModel.get('enabled')) {\r\n        return this._executeWithSaveState(status, options);\r\n      }\r\n\r\n      return this._executeWithoutSaveState(status, options);\r\n    },\r\n\r\n    _getAtLeastOneNode: function (status) {\r\n      var nodes = new NodeCollection();\r\n      if (!status.nodes) {\r\n        return nodes;\r\n      }\r\n      if (status.nodes.length === 1 && status.collection) {\r\n        if (!status.collection.findWhere({id: status.nodes.models[0].get('id')})) {\r\n          nodes.add(status.nodes.models[0]);\r\n          nodes.add(status.collection.models);\r\n          return nodes;\r\n        } else {\r\n          return status.collection;\r\n        }\r\n      } else {\r\n        return status.nodes;\r\n      }\r\n    }\r\n  });\r\n\r\n  return PropertiesCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/rename',[\r\n  'csui/models/command'\r\n], function (CommandModel) {\r\n  'use strict';\r\n\r\n  var RenameCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'Rename',\r\n      command_key: ['rename', 'Rename'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    // returns promise of node.sync\r\n    rename: function (node, name) {\r\n      return node\r\n          .save({name: name}, {\r\n            wait: true,\r\n            patch: true\r\n          });\r\n    },\r\n\r\n    // This command is not to be executed.\r\n  });\r\n\r\n  return RenameCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/rename.favorite',[\"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  \"csui/models/command\", \"csui/utils/commandhelper\"\r\n], function (require, _, $, CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var RenameFavoriteCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"FavoriteRename\",\r\n      // Inline editing may need more permissions than just for renaming;\r\n      // if it was a problem the login would have to be extended.\r\n      command_key: ['favorite_rename'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/controls/table/inlineforms/favorite/favorite.view'\r\n      ], function (inlineFormFavoriteView) {\r\n        var node = status.nodes && status.nodes.length === 1 && status.nodes.at(0);\r\n\r\n          node.inlineFormView = inlineFormFavoriteView;\r\n          node.set('csuiInlineFormErrorMessage', 'dummy', {silent: true});\r\n          node.unset('csuiInlineFormErrorMessage');\r\n\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(RenameFavoriteCommand, {\r\n\r\n    version: \"1.0\"\r\n\r\n  });\r\n\r\n  return RenameFavoriteCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/reserve',[\r\n  \"require\", \"module\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\", \"csui/models/command\"\r\n], function (require, module, _, $,  publicLang, lang, CommandHelper, NodeCommand, CommandModel) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 2\r\n  });\r\n\r\n  var ReserveCommand = NodeCommand.extend({\r\n    defaults: {\r\n      signature: \"ReserveDoc\",\r\n      command_key: ['reserve', 'ReserveDoc'],\r\n      name: publicLang.CommandNameReserve,\r\n      verb: lang.CommandVerbReserve,\r\n      pageLeavingWarning: lang.ReservePageLeavingWarning,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: publicLang.ReserveItemsNoneMessage,\r\n        formatForOne: publicLang.ReserveOneItemSuccessMessage,\r\n        formatForTwo: publicLang.ReserveSomeItemsSuccessMessage,\r\n        formatForFive: publicLang.ReserveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: publicLang.ReserveItemsNoneMessage,\r\n        formatForOne: publicLang.ReserveOneItemFailMessage,\r\n        formatForTwo: publicLang.ReserveSomeItemsFailMessage,\r\n        formatForFive: publicLang.ReserveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    // Remove the reserve action for previous versions \r\n    enabled: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      //TODO: remove condition specific to release/revision once LPAD-98530 is fixed\r\n      var isReleaseOrRevision = _.find(nodes.models, function (node) {\r\n        return _.contains([138, 139], node.get('type'));\r\n      });\r\n      if (isReleaseOrRevision) {\r\n        return false;\r\n      }\r\n      else {\r\n        if (nodes && nodes.length) {\r\n          var isOlderVersion = nodes.some(function (node) {\r\n            return node.has('versions') && node.get('versions').current_version === false;\r\n          });\r\n          if (isOlderVersion) {\r\n            return false;\r\n          }\r\n        }\r\n        return CommandModel.prototype.enabled.apply(this, arguments);\r\n      }\r\n    },\r\n                                         \r\n    _performAction: function (node, options) {\r\n      var deferred = $.Deferred();\r\n      node.isReservedClicked = true;\r\n      require([\r\n        'csui/utils/contexts/factories/user'\r\n      ], function (UserModelFactory) {\r\n        var user = options.context.getModel(UserModelFactory);\r\n        user.ensureFetched()\r\n            .then(function () {\r\n              return CommandHelper.updateNode(node, {\r\n                reserved_user_id: user.get('id')\r\n              });\r\n            })\r\n            .then(deferred.resolve, deferred.reject);\r\n        }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return ReserveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/compound.document/compound.document',[\"csui/lib/underscore\",\r\n    \"i18n!csui/utils/commands/nls/localized.strings\", \"csui/models/command\",\r\n], function (_, lang,CommandModel) {\r\n    'use strict';\r\n\r\n    var CompoundDocumentCommand = CommandModel.extend({\r\n\r\n        defaults: {\r\n            signature: \"CompoundDocument\",\r\n            // added all command keys related to compound documents, as this command has to be displayed even if any one of them is present\r\n            command_key: ['CompoundDocument', 'compounddocument','createrelease','createrevision','Reorganize','releases'],\r\n            name: lang.compoundDocumentHeaderTitle,\r\n            verb: lang.compoundDocumentHeaderTitle,\r\n            doneVerb: lang.compoundDocumentHeaderTitle,\r\n            scope: \"multiple\"\r\n        }\r\n    });\r\n    return CompoundDocumentCommand;\r\n});\n","csui.define('csui/utils/commands/compound.document/create.revision',[\"csui/lib/underscore\", \"csui/lib/jquery\", \"csui/lib/backbone\",\r\n    \"i18n!csui/utils/commands/nls/localized.strings\",\r\n    \"csui/utils/commandhelper\", \"csui/models/command\", \"csui/utils/url\"\r\n], function (_, $, Backbone, lang, CommandHelper, CommandModel, URL) {\r\n    'use strict';\r\n\r\n    var CreateRevisionCommand = CommandModel.extend({\r\n\r\n        defaults: {\r\n            signature: \"CreateRevision\",\r\n            command_key: ['CreateRevision', 'createrevision'],\r\n            name: lang.createRevisionHeaderTitle,\r\n            verb: lang.createRevisionHeaderTitle,\r\n            doneVerb: lang.createRevisionHeaderTitle,\r\n            scope: \"single\"\r\n        },\r\n\r\n        execute: function (status, options) {\r\n            var nodes = CommandHelper.getAtLeastOneNode(status),\r\n                self = this,\r\n                node = CommandHelper.getJustOneNode(status);\r\n            this.model = node;\r\n            this.options = options || {};\r\n            this.context = status && status.context;\r\n            this._deferred = $.Deferred();\r\n            this.connector = this.options.connector ||\r\n                status.collection && status.collection.connector ||\r\n                status.container && status.container.connector ||\r\n                nodes.models && nodes.models[0].connector;\r\n            self._showDialogBox();\r\n            return this._deferred.promise();\r\n        },\r\n\r\n        _showDialogBox: function () {\r\n            var self = this;\r\n            require([\"csui/controls/dialog/dialog.view\",\r\n                \"csui/controls/compound.document/dialog.view/create.release.revision.view\",\r\n                \"csui/controls/progressblocker/blocker\"\r\n            ], function (DialogView, CreateRevisionView, BlockingView) {\r\n                var nodeId = self.model.get('id'),\r\n                    url = self.connector.getConnectionUrl().getApiBase('v2'),\r\n                    ajaxOptions = {\r\n                        url: URL.combine(url, 'nodes/' + nodeId + '/releases'),\r\n                        type: 'GET',\r\n                        contentType: 'application/x-www-form-urlencoded'\r\n                    };\r\n                self.connector.makeAjaxCall(ajaxOptions).done(function (resp) {\r\n                    var releaseNumber = 0, revisionNumber = 0;\r\n                    _.each(resp.results, function (node) {\r\n                        if (releaseNumber < node.data.properties.release) {\r\n                            releaseNumber = node.data.properties.release;\r\n                            revisionNumber = 0;\r\n                        }\r\n                        if (node.data.properties.type_name === \"Revision\" && releaseNumber === node.data.properties.release) {\r\n                            revisionNumber = revisionNumber > node.data.properties.revision ?\r\n                                revisionNumber : node.data.properties.revision;\r\n                        }\r\n                    });\r\n                    self._view = new CreateRevisionView({\r\n                        iconLeft: 'notification_warning',\r\n                        currentVersionLabel: lang.currentRevision,\r\n                        currentVersionNumber: releaseNumber === 0 && revisionNumber === 0 ? lang.noneLabel : releaseNumber + '.' + revisionNumber,\r\n                        newVersionLabel: lang.newRevision,\r\n                        newVersionNumber: releaseNumber + '.' + (revisionNumber + 1),\r\n                        versionNameLabel: lang.revisionName,\r\n                        versionNameNumber: lang.revision + releaseNumber + '.' + (revisionNumber + 1),\r\n                        originatingView: self,\r\n                        arialabel: lang.createRevisionHeaderTitle,\r\n                        className: 'csui-create-revision'\r\n                    });\r\n                    self._dialog = new DialogView({\r\n                        headerTitle: lang.createRevisionHeaderTitle,\r\n                        view: self._view,\r\n                        standardHeader: false,\r\n                        midSize: true,\r\n                        className: 'csui-create-revision-dialog',\r\n                        headers: [\r\n                            {\r\n                                label: lang.createRevisionHeaderTitle,\r\n                                class: 'csui-heading'\r\n                            }],\r\n                        buttons: [\r\n                            {\r\n                                id: 'submit',\r\n                                label: lang.submitButton,\r\n                                click: _.bind(self.onClickSubmitButton, self),\r\n                                'default': true\r\n                            }, {\r\n                                label: lang.cancelButton,\r\n                                close: true,\r\n                                click: _.bind(self.onClickCancelButton, self)\r\n                            }\r\n                        ],\r\n                        dialogTxtAria: lang.createRevisionHeaderTitle\r\n                    });\r\n                    self._view.listenTo(self._view, 'after:show', function () {\r\n                        self._view.ui.nameInput.trigger('focus');\r\n                    });\r\n                    self._dialog.listenTo(self._dialog, 'hide', _.bind(self.onHideDialog, self));\r\n                    BlockingView.imbue(self._dialog);\r\n                    self._dialog.show();\r\n                });\r\n            });\r\n        },\r\n\r\n        onHideDialog: function () {\r\n            if (this._deferred) {\r\n                if (this._deferred.state() === 'pending') {\r\n                    this._deferred.reject({ cancelled: true });\r\n                }\r\n            }\r\n        },\r\n\r\n        onClickSubmitButton: function () {\r\n            var that = this, successMsg, targetLocation,\r\n                validationSuccess = this._view._validate();\r\n            if (validationSuccess || _.isUndefined(validationSuccess)) {\r\n                require([\"csui/controls/globalmessage/globalmessage\", \"csui/utils/contexts/factories/next.node\", \"csui/utils/node.links/node.links\", \"csui/models/nodechildren\", \"csui/models/node/node.model\"\r\n                ], function (GlobalMessage, NextNodeModelFactory, nodeLinks, NodeChildrenCollection, NodeModel) {\r\n                    that._dialog.blockActions();\r\n                    var value = that._dialog.$el.find('.csui-archive-name').val().trim(),\r\n                        nodeId = that.model.get('id');\r\n                    var url = that.connector.getConnectionUrl().getApiBase('v2'),\r\n                        formData = {\r\n                            \"name\": value\r\n                        },\r\n                        ajaxOptions = {\r\n                            url: URL.combine(url, 'nodes/' + nodeId + '/revisions?'),\r\n                            type: 'POST',\r\n                            data: formData,\r\n                            contentType: 'application/x-www-form-urlencoded'\r\n                        };\r\n                    successMsg = _.str.sformat(lang.revisionSuccessMsg, formData.name);\r\n                    that.connector.makeAjaxCall(ajaxOptions).done(function (response) {\r\n                        that._dialog.unblockActions();\r\n                        that._dialog.destroy();\r\n                        delete that._dialog;\r\n                        that._deferred.resolve();\r\n                        var hasLinks, nodeUrl,\r\n                            node = new NodeModel({\r\n                                id: response.results.data.properties.id\r\n                            }, {\r\n                                connector: that.connector\r\n                            }),\r\n                            childrenCollection, childNode, childNodeId;\r\n                        childrenCollection = new NodeChildrenCollection(undefined, { node: node, autoreset: true });\r\n                        childrenCollection.fetch().done(function (resp) {\r\n                            childNode = _.has(resp.data[0], 'id') && resp.data[0].id;\r\n                            childNodeId = !!childNode ? childNode : node;\r\n                            nodeUrl = new Backbone.Model(resp.data[0]);\r\n                            targetLocation = {\r\n                                id: childNodeId,\r\n                                url: nodeLinks.getUrl(nodeUrl)\r\n                            };\r\n                            hasLinks = targetLocation && targetLocation.url ? true : false;\r\n                            GlobalMessage.showMessage('success', successMsg, '', {\r\n                                gotoLocation: lang.GotoLocationLinkLabel,\r\n                                targetLocation: targetLocation,\r\n                                targetLocationUrl: targetLocation && targetLocation.url,\r\n                                doAutoClose: hasLinks,\r\n                                context: that.context,\r\n                                nextNodeModelFactory: NextNodeModelFactory\r\n                            });\r\n                        });\r\n                    }).fail(function (error) {\r\n                        that._dialog.unblockActions();\r\n                        that._dialog.destroy();\r\n                        delete that._dialog;\r\n                        that._deferred.reject();\r\n                        if (error && error.responseText) {\r\n                            var errorObj = JSON.parse(error.responseText);\r\n                            GlobalMessage.showMessage('error', errorObj.error);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n\r\n        onClickCancelButton: function () {\r\n            this._dialog.destroy();\r\n            delete this._dialog;\r\n        }\r\n    });\r\n    return CreateRevisionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/compound.document/create.release',[\"csui/lib/underscore\", \"csui/lib/jquery\", \"csui/lib/backbone\",\r\n    \"i18n!csui/utils/commands/nls/localized.strings\",\r\n    \"csui/utils/commandhelper\", \"csui/models/command\", \"csui/utils/url\",\r\n], function (_, $, Backbone, lang, CommandHelper, CommandModel, URL) {\r\n    'use strict';\r\n\r\n    var CreateRevisionCommand = CommandModel.extend({\r\n\r\n        defaults: {\r\n            signature: \"CreateRelease\",\r\n            command_key: ['CreateRelease', 'createrelease'],\r\n            name: lang.createReleaseHeaderTitle,\r\n            verb: lang.createReleaseHeaderTitle,\r\n            doneVerb: lang.createReleaseHeaderTitle,\r\n            scope: \"single\"\r\n        },\r\n\r\n        execute: function (status, options) {\r\n            var nodes = CommandHelper.getAtLeastOneNode(status),\r\n                self = this,\r\n                node = CommandHelper.getJustOneNode(status);\r\n            this.model = node;\r\n            this.options = options || {};\r\n            this.context = status && status.context;\r\n            this._deferred = $.Deferred();\r\n            this.connector = this.options.connector ||\r\n                status.collection && status.collection.connector ||\r\n                status.container && status.container.connector ||\r\n                nodes.models && nodes.models[0].connector;\r\n            self._showDialogBox();\r\n            return this._deferred.promise();\r\n        },\r\n\r\n        _showDialogBox: function () {\r\n            var self = this;\r\n            require([\"csui/controls/dialog/dialog.view\",\r\n                \"csui/controls/compound.document/dialog.view/create.release.revision.view\",\r\n                \"csui/controls/progressblocker/blocker\"\r\n            ], function (DialogView, CreateReleaseView, BlockingView) {\r\n                var nodeId = self.model.get('id'),\r\n                    url = self.connector.getConnectionUrl().getApiBase('v2'),\r\n                    ajaxOptions = {\r\n                        url: URL.combine(url, 'nodes/' + nodeId + '/releases'),\r\n                        type: 'GET',\r\n                        contentType: 'application/x-www-form-urlencoded'\r\n                    };\r\n                self.connector.makeAjaxCall(ajaxOptions).done(function (resp) {\r\n                    var releaseNumber = 0, newReleaseNumber;\r\n                    _.each(resp.results, function (node) {\r\n                        if (node.data.properties.type_name === \"Release\") {\r\n                            releaseNumber = releaseNumber > node.data.properties.release ?\r\n                                releaseNumber : node.data.properties.release;\r\n                        }\r\n                    });\r\n                    newReleaseNumber = releaseNumber + 1;\r\n\r\n                    self._view = new CreateReleaseView({\r\n                        iconLeft: 'notification_warning',\r\n                        currentVersionLabel: lang.currentRelease,\r\n                        currentVersionNumber: releaseNumber === 0 ? lang.noneLabel : releaseNumber + '.' + 0,\r\n                        newVersionLabel: lang.newRelease,\r\n                        newVersionNumber: newReleaseNumber + '.' + 0,\r\n                        versionNameLabel: lang.releaseName,\r\n                        versionNameNumber: lang.release + newReleaseNumber + '.' + 0,\r\n                        originatingView: self,\r\n                        arialabel: lang.createReleaseHeaderTitle,\r\n                        className: 'csui-create-release'\r\n                    });\r\n\r\n                    self._dialog = new DialogView({\r\n                        headerTitle: lang.createReleaseHeaderTitle,\r\n                        view: self._view,\r\n                        standardHeader: false,\r\n                        midSize: true,\r\n                        className: 'csui-create-release-dialog',\r\n                        headers: [\r\n                            {\r\n                                label: lang.createReleaseHeaderTitle,\r\n                                class: 'csui-heading'\r\n                            }],\r\n                        buttons: [\r\n                            {\r\n                                id: 'submit',\r\n                                label: lang.submitButton,\r\n                                click: _.bind(self.onClickSubmitButton, self),\r\n                                'default': true\r\n                            }, {\r\n                                label: lang.cancelButton,\r\n                                close: true,\r\n                                click: _.bind(self.onClickCancelButton, self)\r\n                            }\r\n                        ],\r\n                        dialogTxtAria: lang.createReleaseHeaderTitle\r\n                    });\r\n                    self._view.listenTo(self._view, 'after:show', function () {\r\n                        self._view.ui.nameInput.trigger('focus');\r\n                    });\r\n                    BlockingView.imbue(self._dialog);\r\n                    self._dialog.listenTo(self._dialog, 'hide', _.bind(self.onHideDialog, self));\r\n                    self._dialog.show();\r\n                });\r\n            });\r\n        },\r\n\r\n        onHideDialog: function () {\r\n            if (this._deferred) {\r\n                if (this._deferred.state() === 'pending') {\r\n                    this._deferred.reject({ cancelled: true });\r\n                }\r\n            }\r\n        },\r\n\r\n        onClickSubmitButton: function () {\r\n            var that = this, successMsg, targetLocation,\r\n                validationSuccess = this._view._validate();\r\n            if (validationSuccess || _.isUndefined(validationSuccess)) {\r\n                require([\"csui/controls/globalmessage/globalmessage\", \"csui/utils/contexts/factories/next.node\", \"csui/utils/node.links/node.links\", \"csui/models/nodechildren\", \"csui/models/node/node.model\"\r\n                ], function (GlobalMessage, NextNodeModelFactory, nodeLinks, NodeChildrenCollection, NodeModel) {\r\n                    that._dialog.blockActions();\r\n                    var value = that._dialog.$el.find('.csui-archive-name').val().trim(),\r\n                        nodeId = that.model.get('id');\r\n                    var url = that.connector.getConnectionUrl().getApiBase('v2'),\r\n                        formData = {\r\n                            \"name\": value\r\n                        },\r\n                        ajaxOptions = {\r\n                            url: URL.combine(url, 'nodes/' + nodeId + '/releases?'),\r\n                            type: 'POST',\r\n                            data: formData,\r\n                            contentType: 'application/x-www-form-urlencoded'\r\n                        };\r\n                    successMsg = _.str.sformat(lang.releaseSuccessMsg, formData.name);\r\n                    that.connector.makeAjaxCall(ajaxOptions).done(function (response) {\r\n                        that._dialog.unblockActions();\r\n                        that._dialog.destroy();\r\n                        delete that._dialog;\r\n                        that._deferred.resolve();\r\n                        var hasLinks, nodeUrl,\r\n                            node = new NodeModel({\r\n                                id: response.results.data.properties.id\r\n                            }, {\r\n                                connector: that.connector\r\n                            }),\r\n                            childrenCollection, childNode, childNodeId;\r\n                        childrenCollection = new NodeChildrenCollection(undefined, { node: node, autoreset: true });\r\n                        childrenCollection.fetch().done(function (resp) {\r\n                            childNode = _.has(resp.data[0], 'id') && resp.data[0].id;\r\n                            childNodeId = !!childNode ? childNode : node;\r\n                            nodeUrl = new Backbone.Model(resp.data[0]);\r\n                            targetLocation = {\r\n                                id: childNodeId,\r\n                                url: nodeLinks.getUrl(nodeUrl)\r\n                            };\r\n                            hasLinks = targetLocation && targetLocation.url ? true : false;\r\n                            GlobalMessage.showMessage('success', successMsg, '', {\r\n                                gotoLocation: lang.GotoLocationLinkLabel,\r\n                                targetLocation: targetLocation,\r\n                                targetLocationUrl: targetLocation && targetLocation.url,\r\n                                doAutoClose: hasLinks,\r\n                                context: that.context,\r\n                                nextNodeModelFactory: NextNodeModelFactory\r\n                            });\r\n                        });\r\n                    }).fail(function (error) {\r\n                        that._dialog.unblockActions();\r\n                        that._dialog.destroy();\r\n                        delete that._dialog;\r\n                        that._deferred.reject();\r\n                        if (error && error.responseText) {\r\n                            var errorObj = JSON.parse(error.responseText);\r\n                            GlobalMessage.showMessage('error', errorObj.error);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n\r\n        onClickCancelButton: function () {\r\n            this._dialog.destroy();\r\n            delete this._dialog;\r\n        }\r\n    });\r\n    return CreateRevisionCommand;\r\n});\n","csui.define('csui/utils/commands/compound.document/reorganize',[\"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n    \"i18n!csui/utils/commands/nls/localized.strings\",\r\n    \"csui/utils/commandhelper\", \"csui/models/command\"\r\n], function (require, _, $, lang, CommandHelper,\r\n    CommandModel) {\r\n    'use strict';\r\n\r\n    // Dependencies loaded in the execute method first\r\n    var  DialogView;\r\n\r\n    var ReorganizeCommand = CommandModel.extend({\r\n\r\n        defaults: {\r\n            signature: \"Reorganize\",\r\n            command_key: ['Reorganize', 'reorganize'],\r\n            name: lang.Reorganize,\r\n            verb: lang.Reorganize,\r\n            doneVerb: lang.Reorganize,\r\n            scope: \"single\",\r\n            selfBlockOnly: true\r\n        },\r\n\r\n        execute: function (status, options) {\r\n            this.set('isExecuting', true);\r\n            if (this.stagesModel) {\r\n                delete this.stagesModel;  // to prepare fresh model with new job id\r\n            }\r\n            var nodes = CommandHelper.getAtLeastOneNode(status),\r\n                self = this;\r\n                var node = CommandHelper.getJustOneNode(status);\r\n                this.model = node;\r\n            this.options = options || {};\r\n            this._deferred = $.Deferred();\r\n            this.originatingView = status.originatingView;\r\n            this.originatingView.blockActions();\r\n            this.connector = this.options.connector ||\r\n                status.collection && status.collection.connector ||\r\n                status.container && status.container.connector ||\r\n                nodes.models && nodes.models[0].connector;\r\n\r\n            require([\"csui/controls/side.panel/side.panel.view\", \r\n            \"csui/controls/compound.document/reorganize/reorganize.view\",\r\n            'csui/controls/globalmessage/globalmessage',\r\n            'nuc/utils/url'\r\n            ], function (SidePanelView, ReorganizeView, GlobalMessage, URL) {\r\n                DialogView = arguments[0];\r\n                var reorganizeView = new ReorganizeView({\r\n                    context: status.context,\r\n                    connector: self.connector,\r\n                    originatingView: self.originatingView,\r\n                    node: self.model\r\n                    });\r\n                self.sidePanel = new SidePanelView({\r\n                    title: lang.Reorganize,\r\n                    content: reorganizeView,\r\n                    footer: {\r\n                        buttons: [{\r\n                        label: lang.submitButton,\r\n                        id: 'submit',\r\n                        className: 'binf-btn binf-btn-primary csui-submit',\r\n                        }]\r\n                    }\r\n                });\r\n                reorganizeView.options.sidePanel = self.sidePanel;\r\n                reorganizeView.listenToOnce(reorganizeView.collection, 'sync', function() {\r\n                    var sidePanel = self.sidePanel;\r\n                    var collection = sidePanel.options.content.collection;\r\n                    sidePanel.options.footer.buttons[0].disabled = collection.length === 0;\r\n                    sidePanel.show();\r\n                    sidePanel.listenTo(sidePanel.footerView, \"button:click\", function(event) {\r\n                        $('body .ghostElem').remove();\r\n                        sidePanel.hide();\r\n                        if (event.id === 'submit') {\r\n                            var that = self,\r\n                                nodeId = that.model.get('id'),\r\n                                formData = {\r\n                                    \"order\": collection.orderedList,\"compact\": true\r\n                                };\r\n                            var url = that.connector.getConnectionUrl().getApiBase('v2'),\r\n                                ajaxOptions = {\r\n                                    url: URL.combine(url, 'nodes/' + nodeId + '/order'),\r\n                                    type: 'PUT',\r\n                                    data: formData,\r\n                                    contentType: 'application/x-www-form-urlencoded'\r\n                                };\r\n                            that.connector.makeAjaxCall(ajaxOptions).done(function (response) {\r\n                                that._deferred.resolve();\r\n                                GlobalMessage.showMessage('success', lang.ReorganizeSuccessMsg);\r\n                                that.originatingView.collection.fetched = false;\r\n                                that.originatingView.collection.fetch();\r\n                            }).fail(function (error) {\r\n                                that._deferred.reject();\r\n                                if (error && error.responseText) {\r\n                                    var errorObj = JSON.parse(error.responseText);\r\n                                    GlobalMessage.showMessage('error', errorObj.error);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                    self.sidePanel.listenTo(self.sidePanel, 'before:hide', function () {\r\n                       self._deferred.resolve();\r\n                    });\r\n                    self.sidePanel.listenTo(self.sidePanel, 'after:show', function () {\r\n                        if (this.options.content.collection.length && \r\n                            _.contains([1, 2, 136],this.options.content.collection.models[0].get('type'))) {\r\n                            this.footerView.$el.find('.csui-submit').length &&\r\n                            $(this.footerView.$el.find('.csui-submit')).prop('disabled', true);\r\n                        }\r\n                        if (self.sidePanel.$el.find('.binf-switch').hasClass('binf-switch-disabled')) {\r\n                            self.sidePanel.$el.find('.binf-switch-container > input').attr('tabindex', -1);\r\n                            self.sidePanel.$el.find('.csui-sidepanel-close').trigger('focus');\r\n                        }\r\n                        else {\r\n                            self.sidePanel.$el.find('.binf-switch-container > input').trigger('focus');\r\n                        }\r\n                    });\r\n                    self.sidePanel.listenTo(self.sidePanel, 'keydown', function (event) {\r\n                        if (event.target.id === \"submit\" && event.keyCode === 9 && event.shiftKey) {\r\n                            event.preventDefault();\r\n                            event.stopPropagation();\r\n                            this.contentHolders[0].reorganizeListView.focusIndex = 0;\r\n                            $(this.contentHolders[0].reorganizeListView.$el.find('.csui-reorder-item')).removeClass('active');\r\n                            var firstItem = $(this.contentHolders[0].reorganizeListView.$el.find('.csui-reorder-item')[0]);\r\n                            firstItem.trigger('focus');\r\n                            firstItem.addClass('active');\r\n                        }\r\n                    });\r\n                });\r\n                self.originatingView.unblockActions();\r\n            });\r\n            // this._deferred.resolve();  // Do not block other actions\r\n            this._deferred.always(function () {\r\n                self.set('isExecuting', false);\r\n            });\r\n            return this._deferred.promise();\r\n        },\r\n    });\r\n    return ReorganizeCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/compound.document/lock',[\r\n  \"module\", \"csui/lib/underscore\",\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commands/reserve\",\r\n  \"csui/models/command\",\r\n  \"csui/utils/commandhelper\"\r\n], function (module, _, publicLang, lang, ReserveCommand, CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 2\r\n  });\r\n\r\n  var LockCommand = ReserveCommand.extend({\r\n    defaults: {\r\n      signature: \"Lock\",\r\n      command_key: ['reserve','Lock'],\r\n      name: publicLang.CommandNameLock,\r\n      verb: lang.CommandVerbLock,\r\n      pageLeavingWarning: lang.LockPageLeavingWarning,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: publicLang.LockItemsNoneMessage,\r\n        formatForOne: publicLang.LockOneItemSuccessMessage,\r\n        formatForTwo: publicLang.LockSomeItemsSuccessMessage,\r\n        formatForFive: publicLang.LockManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: publicLang.LockItemsNoneMessage,\r\n        formatForOne: publicLang.LockOneItemFailMessage,\r\n        formatForTwo: publicLang.LockSomeItemsFailMessage,\r\n        formatForFive: publicLang.LockManyItemsFailMessage\r\n      }\r\n    },\r\n    enabled: function (status) {\r\n      //TODO: remove condition specific to release/revision once LPAD-98530 is fixed\r\n      var isReleaseOrRevision = _.find(CommandHelper.getAtLeastOneNode(status).models, function (node, index) {\r\n        return _.contains([138, 139], node.get('type'));\r\n      });\r\n      if (isReleaseOrRevision) {\r\n        return CommandModel.prototype.enabled.apply(this, arguments);\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  });\r\n\r\n  return LockCommand;\r\n});\n","csui.define('csui/utils/commands/unreserve',['csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/utils/commands/node',\r\n  \"csui/models/command\"\r\n], function (_, publicLang, lang, CommandHelper, NodeCommand, CommandModel) {\r\n  'use strict';\r\n\r\n  var UnreserveCommand = NodeCommand.extend({\r\n    defaults: {\r\n      signature: 'UnreserveDoc',\r\n      command_key: ['unreserve', 'UnreserveDoc'],\r\n      name: publicLang.CommandNameUnreserve,\r\n      verb: lang.CommandVerbUnreserve,\r\n      pageLeavingWarning: lang.UnreservePageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: publicLang.UnreserveItemsNoneMessage,\r\n        formatForOne: publicLang.UnreserveOneItemSuccessMessage,\r\n        formatForTwo: publicLang.UnreserveSomeItemsSuccessMessage,\r\n        formatForFive: publicLang.UnreserveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: publicLang.UnreserveItemsNoneMessage,\r\n        formatForOne: publicLang.UnreserveOneItemFailMessage,\r\n        formatForTwo: publicLang.UnreserveSomeItemsFailMessage,\r\n        formatForFive: publicLang.UnreserveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n     // Remove the unreserve action for previous versions\r\n    enabled: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      //TODO: remove condition specific to release/revision once LPAD-98530 is fixed\r\n      var isReleaseOrRevision = _.find(nodes.models, function (node) {\r\n        return _.contains([138, 139], node.get('type'));\r\n      });\r\n      if (isReleaseOrRevision) {\r\n        return false;\r\n      }\r\n      else {\r\n        if (nodes && nodes.length) {\r\n          var isOlderVersion = nodes.some(function (node) {\r\n            return node.has('versions') && node.get('versions').current_version === false;\r\n          });\r\n          if (isOlderVersion) {\r\n            return false;\r\n          }\r\n        }\r\n        return CommandModel.prototype.enabled.apply(this, arguments);\r\n      }\r\n    },\r\n\r\n    _performAction: function (node, options) {\r\n      node.isUnreservedClicked = true;\r\n      return CommandHelper.updateNode(node, {\r\n        reserved_user_id: null\r\n      });\r\n    }\r\n  });\r\n\r\n  return UnreserveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/compound.document/unlock',[\r\n  \"module\", \"csui/lib/underscore\",\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n   \"csui/utils/commands/unreserve\",\r\n   \"csui/models/command\",\r\n   \"csui/utils/commandhelper\"\r\n], function (module, _,  publicLang, lang, UnreserveCommand,CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 2\r\n  });\r\n\r\n  var UnlockCommand = UnreserveCommand.extend({\r\n    defaults: {\r\n      signature: \"Unlock\",\r\n      command_key: ['unreserve','Unlock'],\r\n      name: publicLang.CommandNameUnlock,\r\n      verb: lang.CommandVerbUnlock,\r\n      pageLeavingWarning: lang.UnlockPageLeavingWarning,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: publicLang.UnlockItemsNoneMessage,\r\n        formatForOne: publicLang.UnlockOneItemSuccessMessage,\r\n        formatForTwo: publicLang.UnlockSomeItemsSuccessMessage,\r\n        formatForFive: publicLang.UnlockManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: publicLang.UnlockItemsNoneMessage,\r\n        formatForOne: publicLang.UnlockOneItemFailMessage,\r\n        formatForTwo: publicLang.UnlockSomeItemsFailMessage,\r\n        formatForFive: publicLang.UnlockManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    enabled: function (status) {\r\n      //TODO: remove condition specific to release/revision once LPAD-98530 is fixed\r\n      var isReleaseOrRevision = _.find(CommandHelper.getAtLeastOneNode(status).models, function (node, index) {\r\n        return _.contains([138, 139], node.get('type'));\r\n      });\r\n      if (isReleaseOrRevision) {\r\n        return CommandModel.prototype.enabled.apply(this, arguments);\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  });\r\n\r\n  return UnlockCommand;\r\n});\n","csui.define('csui/utils/commands/compound.document/view.releases',[\"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/models/command\", 'csui/models/nodes'\r\n], function (require, _, $, lang, CommandHelper, CommandModel, NodeCollection) {\r\n  'use strict';\r\n\r\n  var ViewReleasesCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"ViewReleases\",\r\n      command_key: ['releases', 'ViewReleases'],\r\n      name: lang.CommandNameViewReleases,\r\n      scope: \"multiple\",\r\n      selfBlockOnly: true,\r\n      commands: 'csui/utils/commands'\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var context = status.context || options && options.context;\r\n      if (status.originatingView && context && context.viewStateModel &&\r\n        context.viewStateModel.get('history') &&\r\n        context.viewStateModel.get('enabled') &&\r\n        !status.showPermissionView) {\r\n        var deferred = $.Deferred();\r\n        require(['csui/utils/contexts/factories/metadata.factory',\r\n          'csui/widgets/metadata/header.dropdown.menu.items', this.get('commands')\r\n        ], function (MetadataFactory, metadataDropdownMenuItems, commands) {\r\n          var metadataModel = context.getModel(MetadataFactory),\r\n            node = CommandHelper.getJustOneNode(status) || (status.nodes && status.nodes.at(0)),\r\n            container = status.container,\r\n            selected = status.nodes,\r\n            originatingView = status.originatingView,\r\n            navigationView = true,\r\n            nodes;\r\n\r\n          if (selected && selected.first() === container || !!status.noMetadataNavigation) {\r\n            // The container properties were requested for the container\r\n            navigationView = false;\r\n          } else {\r\n            nodes = this._getAtLeastOneNode(status);\r\n          }\r\n\r\n          if (originatingView && originatingView.options.refetchNodeActions && nodes) {\r\n            var commandSignatures = commands.getSignatures(metadataDropdownMenuItems);\r\n            nodes.each(function (node) {\r\n              if (!!node.refetchNodeActions) {\r\n                node.nonPromotedActionCommands = commandSignatures;\r\n                node.set({ csuiLazyActionsRetrieved: false }, { silent: true });\r\n              }\r\n            });\r\n          }\r\n          metadataModel.set('metadata_info', {\r\n            id: node.get('id'),\r\n            model: node,\r\n            navigator: navigationView,\r\n            collection: nodes,\r\n            selectedTab: 'releases', // releases of the compound document have to be displayed on navigation\r\n          });\r\n\r\n          deferred.resolve();\r\n        }.bind(this), function (error) {\r\n          deferred.reject(error);\r\n        });\r\n        return deferred.promise();\r\n      }\r\n    },\r\n\r\n    _getAtLeastOneNode: function (status) {\r\n      var nodes = new NodeCollection();\r\n      if (!status.nodes) {\r\n        return nodes;\r\n      }\r\n      if (status.nodes.length === 1 && status.collection) {\r\n        if (!status.collection.findWhere({ id: status.nodes.models[0].get('id') })) {\r\n          nodes.add(status.nodes.models[0]);\r\n          nodes.add(status.collection.models);\r\n          return nodes;\r\n        } else {\r\n          return status.collection;\r\n        }\r\n      } else {\r\n        return status.nodes;\r\n      }\r\n    }\r\n  });\r\n  return ViewReleasesCommand;\r\n});\n","csui.define('csui/utils/commands/compound.document/properties',['csui/utils/commands/properties'\r\n], function (PropertiesCommand) {\r\n  'use strict';\r\n\r\n  var ReleasesPropertiesCommand = PropertiesCommand.extend({\r\n\r\n    defaults: {\r\n        signature: 'ReleasesProperties',\r\n        command_key: ['properties','ReleasesProperties'],\r\n        scope: 'multiple',\r\n        commands: 'csui/utils/commands/compound.document/releases.commands'\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      // execute with save state for multiple compound documents\r\n      \r\n      if (!status.container && status.originatingView.collection) {\r\n        status.originatingView.options.showReleasesView = false;\r\n        return this._executeWithSaveState(status, options);\r\n      } else {\r\n        status.originatingView.options.showReleasesView = false;\r\n        return this._executeWithoutSaveState(status, options);\r\n      }\r\n    },\r\n\r\n    _getAtLeastOneNode: function (status) {\r\n        // for metadata releases, use the collection passed in\r\n        if (status.collection && status.nodes.length === 1) {\r\n          return status.collection;\r\n        }\r\n        return status.nodes;\r\n      }\r\n\r\n  });\r\n\r\n  return ReleasesPropertiesCommand;\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands/compound.document/releases.commands',['csui/lib/underscore', 'csui/models/commands',\r\n  'csui/utils/commands/compound.document/properties',\r\n  'csui-ext!csui/utils/commands/compound.document/releases.commands'\r\n], function (_, CommandCollection,\r\n  ReleasesPropertiesCommand,\r\n    extraCommands) {\r\n  'use strict';\r\n\r\n  var commands = new CommandCollection([\r\n    new ReleasesPropertiesCommand(),\r\n  ]);\r\n\r\n  if (extraCommands) {\r\n    commands.add(\r\n        _.chain(extraCommands)\r\n            .flatten(true)\r\n            .map(function (Command) {\r\n              return new Command();\r\n            })\r\n            .value()\r\n    );\r\n  }\r\n\r\n  return commands;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/run.livereport',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var RunLiveReportCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'RunLiveReport'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 299;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'RunReport',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return RunLiveReportCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/sign.out',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, CommandHelper, Url, lang) {\r\n  'use strict';\r\n\r\n  var ConnectorFactory, routing;\r\n\r\n  var config = _.extend({\r\n    enabled: true,\r\n    signInPageUrl: 'signin.html'\r\n  }, module.config());\r\n  var enabled = config.enabled;\r\n\r\n  var SignOutCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'SignOut',\r\n      name: lang.SignOutCommandName\r\n    },\r\n\r\n    enabled: function () {\r\n      return enabled;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context = status.context || options && options.context,\r\n          self = this;\r\n      require([\r\n        'csui/utils/contexts/factories/connector', 'csui/utils/routing'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        routing = arguments[1];\r\n        self._signOut(context)\r\n            .done(deferred.resolve)\r\n            .fail(deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _signOut: function (context) {\r\n      var connector = context.getObject(ConnectorFactory),\r\n          cgiUrl = new Url(connector.connection.url).getCgiScript();\r\n      // Development HTML pages do not use the OTDS login page\r\n      if (routing.routesWithSlashes()) {\r\n        // Invalidate the authenticated session, get the secure request token\r\n        // for the classic logout page and perform the logout by navigating there\r\n        return connector.makeAjaxCall({\r\n                  url: Url.combine(cgiUrl, 'api/v1/auth/logouttoken')\r\n                })\r\n                .then(function (response) {\r\n                  connector.authenticator.unauthenticate({reason: 'logged-out'});\r\n                  location.href = cgiUrl + '?func=csui.dologout&secureRequestToken=' +\r\n                                  encodeURIComponent(response.token);\r\n                });\r\n      }\r\n\r\n      // Invalidate the authenticated session and navigate to the login\r\n      // page; this is used on the development pages\r\n      connector.authenticator.unauthenticate({reason: 'logged-out'});\r\n      var signInPageUrl = config.signInPageUrl,\r\n          query = location.search;\r\n      query += query ? '&' : '?';\r\n      query += 'nextUrl=' + encodeURIComponent(location.pathname);\r\n      location.href = signInPageUrl + query + location.hash;\r\n      return $.Deferred().resolve().promise();\r\n    }\r\n  });\r\n\r\n  return SignOutCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/switch.to.classic',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commands/open.classic.page',\r\n  'csui/utils/classic.nodes/classic.nodes'\r\n], function (module, require, _, $, CommandModel, CommandHelper,\r\n    Url, lang, OpenClassicPageCommand, ClassicNodes) {\r\n  'use strict';\r\n\r\n  var ConnectorFactory, NodeModelFactory;\r\n\r\n  var config = _.extend({\r\n    enabled: true,\r\n    // Allow defining a value specific for this command\r\n    openInNewTab: null\r\n  }, module.config());\r\n  // If no specific value was set, use the value for all Classic UI pages\r\n  if (config.openInNewTab == null) {\r\n    config.openInNewTab = OpenClassicPageCommand.openInNewTab;\r\n  }\r\n\r\n  var SwitchToClassicCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'SwitchToClassic',\r\n      name: lang.SwitchToClassicCommandName\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      if (!config.enabled) {\r\n        return false;\r\n      }\r\n      var context = status.context || options && options.context,\r\n          applicationScope = context.getModel('applicationScope');\r\n      applicationScope = applicationScope && applicationScope.get('id');\r\n      return applicationScope === '' || applicationScope === 'node';\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context = status.context || options && options.context,\r\n          target = config.openInNewTab && window.open('', '_blank') || window,\r\n          self = this;\r\n      target.focus();\r\n      require(['csui/utils/contexts/factories/connector',\r\n               'csui/utils/contexts/factories/node'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        NodeModelFactory = arguments[1];\r\n        target.location.href = self._getUrl(context, status);\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector = context.getObject(ConnectorFactory),\r\n          cgiUrl = new Url(connector.connection.url).getCgiScript(),\r\n          urlQueryParameters = this._getUrlQueryParameters(context, status),\r\n          urlQuery = Url.combineQueryString(urlQueryParameters);\r\n      return Url.appendQuery(cgiUrl, urlQuery);\r\n    },\r\n\r\n    _getUrlQueryParameters: function (context, status) {\r\n      var node = CommandHelper.getJustOneNode(status) ||\r\n                 context.getModel(NodeModelFactory),\r\n          classicNode = ClassicNodes.find(function (item) {\r\n            return item.matchRules(node, item.attributes);\r\n          }),\r\n          urlQuery    = classicNode && classicNode.get(\"urlQuery\"),\r\n          parameters;\r\n      if (node !== undefined && node.get('id') > 0) {\r\n        parameters = {\r\n          func: 'll',\r\n          objId: node.get('id')\r\n        };\r\n        if (urlQuery) {\r\n          if (typeof urlQuery === 'string') {\r\n            parameters = ClassicNodes._replaceParameters(classicNode.get(\"urlQuery\"),\r\n                node.attributes);\r\n          } else if (typeof urlQuery === 'function') {\r\n            parameters = urlQuery(node);\r\n          }\r\n        } else {\r\n          if (node.get('container')) {\r\n            parameters.objAction = 'browse';\r\n            parameters.viewType = 1;\r\n          } else {\r\n            parameters.objAction = 'properties';\r\n          }\r\n        }\r\n      } else {\r\n        // Compute parameters for the \"landing page\" in Classic View.\r\n        parameters = { classicview: '' };\r\n      }\r\n      return parameters;\r\n    }\r\n\r\n  });\r\n\r\n  return SwitchToClassicCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/user.profile',[\r\n  'require', 'csui/lib/jquery', 'csui/models/command', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (require, $, CommandModel, base, lang) {\r\n  'use strict';\r\n\r\n  var UserProfileCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'UserProfile',\r\n      name: lang.UserProfileCommandName\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var toolItem = status.toolItem || options && options.toolItem;\r\n      if (toolItem) {\r\n        var context = status.context || options && options.context,\r\n            user = context.getModel('user'),\r\n            name = base.formatMemberName(user);\r\n        toolItem.set('name', name);\r\n      }\r\n      return true;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context = status.context || options && options.context;\r\n      require([\r\n        'csui/utils/contexts/factories/user',\r\n        'esoc/controls/userwidget/userwidget.view',\r\n        'esoc/widgets/userwidget/view/userprofile.view',\r\n        'esoc/widgets/userwidget/view/miniprofile.view',\r\n        'esoc/widgets/userwidget/view/simple.userwidget.view'\r\n      ], function (UserModelFactory, UserWidgetView) {\r\n        var user = context.getModel(UserModelFactory),\r\n            userId = user.get('id'),\r\n            userWidgetView = new UserWidgetView({\r\n              model: user,\r\n              connector: user.connector,\r\n              userid: userId,\r\n              context: context,\r\n              baseElement: undefined,\r\n              showUserProfileLink: true,\r\n              showMiniProfile: false,\r\n              enableSimpleSettingsModel: true,\r\n              enableUploadProfilePicture: true,\r\n              loggedUserId: userId,\r\n              showUserSettings: true,\r\n              showUserProfileSessions: true\r\n            });\r\n        userWidgetView.showUserProfileDialog();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return UserProfileCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/versions/delete',[\r\n  'require', 'module', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/versions/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/utils/commands/delete',\r\n], function (require, module, _, $, versionLang, CommandHelper, DeleteCommand) {\r\n  'use strict';\r\n\r\n  var VersionDeleteCommand = DeleteCommand.extend({\r\n    defaults: {\r\n      signature: 'VersionDelete',\r\n      command_key: ['versions_delete','Delete'],\r\n      name: versionLang.CommandNameVersionDelete,\r\n      verb: versionLang.CommandVerbVersionDelete,\r\n      pageLeavingWarning: versionLang.DeleteVersionPageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: versionLang.DeleteVersionItemsNoneMessage,\r\n        formatForOne: versionLang.DeleteVersionOneItemSuccessMessage,\r\n        formatForTwo: versionLang.DeleteVersionSomeItemsSuccessMessage,\r\n        formatForFive: versionLang.DeleteVersionManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: versionLang.DeleteVersionItemsNoneMessage,\r\n        formatForOne: versionLang.DeleteVersionOneItemFailMessage,\r\n        formatForTwo: versionLang.DeleteVersionSomeItemsFailMessage,\r\n        formatForFive: versionLang.DeleteVersionManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      if (!VersionDeleteCommand.__super__.enabled.apply(this, arguments)) {\r\n        return false;\r\n      }\r\n      var selectedVersions = CommandHelper.getAtLeastOneNode(status);\r\n\r\n      if(selectedVersions.length > 0) {\r\n        if(status.container && status.container.versions) {\r\n          return status.container.versions.allModels &&\r\n          selectedVersions.length < status.container.versions.allModels.length;\r\n        } else {\r\n          // if it is a single version in case of which the version collection is not available\r\n          // (like for version.overview widget), just check for permitted actions and check the length\r\n          // of selected versions.\r\n          return selectedVersions.length == 1;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var versions = CommandHelper.getAtLeastOneNode(status);\r\n      var message;\r\n      if(versions.length === 1) {\r\n        var versionNumber = versions.at(0).get('version_number_name'),\r\n            parentNodeName = (status.container && status.container.get('name') || versions.at(0).get    ('id_expand') && versions.at(0).get('id_expand').name);\r\n        message = _.str.sformat(versionLang.VersionDeleteCommandConfirmDialogSingleMessage,\r\n          versionNumber,parentNodeName);\r\n      } else {\r\n        message =  _.str.sformat(versionLang.VersionDeleteCommandConfirmDialogMultipleMessage,\r\n          versions.length);\r\n      }\r\n      return {\r\n        title: versionLang.DeleteCommandConfirmDialogTitle,\r\n        message: message\r\n      };\r\n    },\r\n\r\n    startGlobalMessage: function (uploadCollection) {\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n          oneFileTitle: versionLang.DeletingOneVersion,\r\n          oneFileSuccess: versionLang.DeleteVersionOneItemSuccessMessage,\r\n          multiFileSuccess: versionLang.DeleteVersionManyItemsSuccessMessage,\r\n          oneFilePending: versionLang.DeletingOneVersion,\r\n          multiFilePending: versionLang.DeleteVersions,\r\n          oneFileFailure: versionLang.DeleteVersionOneItemFailMessage,\r\n          multiFileFailure: versionLang.DeleteVersionManyItemsFailMessage,\r\n          someFileSuccess: versionLang.DeleteVersionSomeItemsSuccessMessage,\r\n          someFilePending: versionLang.DeletingSomeVersions,\r\n          someFileFailure: versionLang.DeleteVersionSomeItemsFailMessage,\r\n          enableCancel: false\r\n        });\r\n      });\r\n    }\r\n  });\r\n\r\n  return VersionDeleteCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/versions/download',['csui/utils/commands/download', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (DownloadCommand, Url, lang) {\r\n  'use strict';\r\n\r\n  var VersionDownloadCommand = DownloadCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'VersionDownload',\r\n      command_key: ['versions_download','Open'],\r\n      name: lang.CommandNameDownload,\r\n      verb: lang.CommandVerbDownload,\r\n      doneVerb: lang.CommandDoneVerbDownload,\r\n      scope: 'single'\r\n    },\r\n\r\n    _getContentUrl: function (node, options, action, token) {\r\n      var url = Url.combine(node.connector.connection.url, \"nodes\",\r\n          node.get('id'), \"versions\", node.get('version_number'), \"content\");\r\n      return url + \"?action=\" + action + \"&token=\" + encodeURIComponent(token);\r\n    }\r\n\r\n  });\r\n\r\n  return VersionDownloadCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/versions/open',['csui/lib/jquery', 'csui/utils/commands/open','csui/utils/url'], function ($, OpenCommand, Url) {\r\n  'use strict';\r\n\r\n  // Support for both node and version models is provided\r\n  // by the open command plugins themselves\r\n  var VersionOpenCommand = OpenCommand.extend({\r\n    defaults: {\r\n      signature: 'VersionOpen',\r\n      command_key: ['versions_open','Open'],\r\n      scope: 'single'\r\n    },\r\n\r\n    // TODO: This is being overridden as the command keys for version related\r\n    // commands are incorrect. Once they're fixed, we can check for 'open'\r\n    // and this overridden implementation can be removed in favor of\r\n    // openCommand's implementation where 'open' action can be added to the check.\r\n    checkPermission: function (version) {\r\n      // actions are directly available for versions, so make the check.\r\n      var permitted = false;\r\n      if(version.actions.get('Open')) {\r\n         permitted = true;\r\n      } else {\r\n        permitted = false;\r\n      }\r\n      return $.Deferred().resolve(permitted).promise();\r\n    },\r\n\r\n    _showOverview: function (version, options) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/utils/contexts/factories/next.version'\r\n      ], function (NextVersionModelFactory) {\r\n        var nextVersion = options.context.getModel(NextVersionModelFactory);\r\n        nextVersion.set({ id: version.get('id'), version_number: version.get('version_number') });\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getContentUrl: function (node, options, action, token) {\r\n      var url = Url.combine(node.connector.connection.url, \"nodes\",\r\n          node.get('id'), \"versions\", node.get('version_number'), \"content\");\r\n      return url + \"?action=\" + action + \"&token=\" + encodeURIComponent(token);\r\n    }\r\n  });\r\n\r\n  return VersionOpenCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/versions/properties',['csui/utils/commands/properties', 'csui/models/version'\r\n], function (PropertiesCommand, VersionModel) {\r\n  'use strict';\r\n\r\n  var VersionPropertiesCommand = PropertiesCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'VersionProperties',\r\n      command_key: ['versions_properties','Properties'],\r\n      scope: 'multiple',\r\n      commands: 'csui/utils/commands/versions'\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      return this._executeWithoutSaveState(status, options);\r\n    },\r\n\r\n    _getAtLeastOneNode: function (status) {\r\n      // for metadata version, use the collection passed in\r\n      if (status.collection && status.nodes.length === 1) {\r\n        return status.collection;\r\n      }\r\n      return status.nodes;\r\n    }\r\n\r\n  });\r\n\r\n  return VersionPropertiesCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/versions/promote.version',[\r\n  'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/versions/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command', 'csui/models/version',\r\n  'csui/utils/base', 'csui/utils/url'\r\n], function (_, $, versionLang, CommandHelper, Command, VersionModel, base, Url) {\r\n  'use strict';\r\n\r\n  var PromoteVersionCommand = Command.extend({\r\n    defaults: {\r\n      signature: 'PromoteVersion',\r\n      command_key: ['versions_promote','Promote'],\r\n      name: versionLang.CommandNamePromoteVersion,\r\n      verb: versionLang.CommandVerbPromoteVersion,\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var selectedVersions = CommandHelper.getAtLeastOneNode(status);\r\n      if(selectedVersions && selectedVersions.length === 1) {\r\n        if(status.container) {\r\n          return status.container.get('advanced_versioning');\r\n        } else {\r\n          var version = selectedVersions.first();\r\n          if(version.get('id_expand')) {\r\n            return version.get('id_expand').advanced_versioning;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      this._confirmAction(status, options)\r\n          .done(function () {\r\n            deferred.resolve();\r\n          })\r\n          .fail(function () {\r\n            deferred.reject();\r\n          });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _confirmAction: function (status, options) {\r\n      var deferred   = $.Deferred(),\r\n          node       = status.container,\r\n          newVersion = CommandHelper.getJustOneNode(status).clone(),\r\n          connector  = (status.container && status.container.connector) || newVersion.connector;\r\n      require(['csui/controls/globalmessage/globalmessage'], function (GlobalMessage) {\r\n        var data = {};\r\n        newVersion.save(undefined, {\r\n          data: data,\r\n          type: 'POST',\r\n          wait: true,\r\n          url: Url.combine(connector.getConnectionUrl().getApiBase('v2'), '/nodes/' + newVersion.get(\"id\") +\r\n               '/versions/' + newVersion.get(\"version_number\") + '/promote')\r\n        }).done(function () {\r\n          if(!!node) { // if the container node exists, then\r\n            newVersion.fetch().done(function () {\r\n              if (node.versions || (!!node.attributes && !!node.attributes.versions)) {\r\n                newVersion.isLocallyCreated = true;\r\n                // TODO: Remove this, as soon as the version REST API returns actions\r\n                fakeActions(node, newVersion);\r\n                !!node.versions && node.versions.add(newVersion, {at: 0});\r\n                if (Array.isArray(node.get('versions'))) {\r\n                  !!node.attributes && !!node.attributes.versions &&\r\n                  node.attributes.versions.push(newVersion.attributes);\r\n                }\r\n              }\r\n              deferred.resolve();\r\n              GlobalMessage.showMessage('success', versionLang.MessageVersionPromoted);\r\n            });\r\n          } else { // if the only the version model is fetched directly instead of the collection,\r\n\t           // then just resolve.\r\n            deferred.resolve();\r\n            GlobalMessage.showMessage('success', versionLang.MessageVersionPromoted);\r\n          }\r\n        }).fail(function (error) {\r\n          deferred.reject();\r\n          if (error) {\r\n            var errorObj = new base.Error(error);\r\n            GlobalMessage.showMessage('error', errorObj.message);\r\n          }\r\n        });\r\n      });\r\n      // TODO: Remove this, as soon as the version REST API returns actions\r\n      // (Another workaround could be loading all versions anew)\r\n      function fakeActions(node, version) {\r\n        var actions = [];\r\n        if (node.actions.findRecursively('download') || node.actions.findRecursively('Download')) {\r\n          actions.push({signature: 'versions_download'}, {signature: 'versions_open'});\r\n        }\r\n        if (node.actions.findRecursively('delete') || node.actions.findRecursively('Delete')) {\r\n          actions.push({signature: 'versions_delete'});\r\n        }\r\n        if (node.actions.findRecursively('properties') ||\r\n            node.actions.findRecursively('Properties')) {\r\n          actions.push({signature: 'versions_properties'});\r\n        }\r\n        version.actions.reset(actions);\r\n      }\r\n\r\n      return deferred.promise();\r\n    },\r\n  });\r\n\r\n  return PromoteVersionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/versions/doc.version.preview',[\r\n    'csui/utils/commands/doc.preview',\r\n  ], function (DocPreviewCommand) {\r\n    'use strict';\r\n\r\n    var DocVersionPreviewCommand = DocPreviewCommand.extend({\r\n      defaults: {\r\n        signature: 'DocVersionPreview'\r\n      },\r\n\r\n      delegatableOpenCommand: 'OpenVersionDelegate'\r\n    });\r\n\r\n    return DocVersionPreviewCommand;\r\n  });\r\n\n","\n","csui.define('csui/utils/commands/versions/open.version/delegates/open.version.delegates',[\r\n    'csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/models/mixins/rules.matching/rules.matching.mixin',\r\n    // Load and register external document opening command delegates\r\n    'csui-ext!csui/utils/commands/versions/open.version/delegates/open.version.delegates'\r\n  ], function (_, Backbone, RulesMatchingMixin, rules) {\r\n    'use strict';\r\n\r\n    var OpenVersionDelegateModel = Backbone.Model.extend({\r\n      defaults: {\r\n        sequence: 100,\r\n        command: null\r\n      },\r\n\r\n      constructor: function OpenVersionDelegateModel(attributes, options) {\r\n        Backbone.Model.prototype.constructor.apply(this, arguments);\r\n        this.makeRulesMatching(options);\r\n      },\r\n\r\n      enabled: function (node, status, options) {\r\n        var context = status.context || options && options.context;\r\n        var matchOptions = { context: context };\r\n        return this.matchRules(node, this.attributes, matchOptions) &&\r\n          this.get('command').enabled(status, options);\r\n      }\r\n    });\r\n\r\n    RulesMatchingMixin.mixin(OpenVersionDelegateModel.prototype);\r\n\r\n    var OpenVersionDelegateCollection = Backbone.Collection.extend({\r\n      model: OpenVersionDelegateModel,\r\n      comparator: 'sequence',\r\n\r\n      constructor: function OpenVersionDelegateCollection(models, options) {\r\n        Backbone.Collection.prototype.constructor.call(this, models, options);\r\n      },\r\n\r\n      findByNode: function (node, status, options) {\r\n        var rule = this.find(function (rule) {\r\n          return rule.enabled(node, status, options);\r\n        });\r\n        return rule && rule.get('command');\r\n      }\r\n    });\r\n\r\n    var openVersionDelegates = new OpenVersionDelegateCollection();\r\n\r\n    if (rules) {\r\n      openVersionDelegates.add(_\r\n        .chain(rules)\r\n        .flatten(rules)\r\n        .map(function (rule) {\r\n          return _.defaults({\r\n            command: new rule.command()\r\n          }, rule);\r\n        })\r\n        .value());\r\n    }\r\n\r\n    return openVersionDelegates;\r\n  });\r\n\n","csui.define('csui/utils/commands/versions/open.version/open.version.delegate',[\r\n  'csui/lib/underscore', 'csui/utils/commands/open.base',\r\n  'csui/utils/commands/versions/open.version/delegates/open.version.delegates'\r\n], function (_, OpenBaseCommand, openVersionDelegates) {\r\n  'use strict';\r\n\r\n  var OpenVersionDelegateCommand = OpenBaseCommand.extend({\r\n    defaults: { signature: 'OpenVersionDelegate' },\r\n\r\n    openDelegates: openVersionDelegates\r\n  });\r\n\r\n  return OpenVersionDelegateCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/versions/open.version.perspective',['csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'i18n!csui/utils/commands/versions/nls/localized.strings'\r\n], function ($, _, CommandModel, CommandHelper, lang) {\r\n  'use strict';\r\n\r\n  var OpenVersionPerspectiveCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n        signature: 'OpenVersionPerspective'\r\n    },\r\n\r\n    enabled: function (status) {\r\n        var version = CommandHelper.getJustOneNode(status);\r\n        return version && version.get('id') && version.get('version_number');\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n\r\n      var context = status.context || options && options.context,\r\n          nextVersion = context.getModel('nextVersion'),\r\n          version = CommandHelper.getJustOneNode(status);\r\n\r\n      if (!version || !version.get('id') || !version.get('version_number')) {\r\n        deferred.reject({message: lang.MissingVersionInfo});\r\n        return;\r\n      }\r\n\r\n      nextVersion.set({ id: version.get('id'), version_number: version.get('version_number') });\r\n      deferred.resolve();\r\n\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return OpenVersionPerspectiveCommand;\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands/versions',['csui/lib/underscore', 'csui/models/commands',\r\n  'csui/utils/commands/versions/delete',\r\n  'csui/utils/commands/versions/download',\r\n  'csui/utils/commands/versions/open',\r\n  'csui/utils/commands/versions/properties',\r\n  'csui/utils/commands/versions/promote.version',\r\n  'csui/utils/commands/versions/doc.version.preview',\r\n  'csui/utils/commands/versions/open.version/open.version.delegate',\r\n  'csui/utils/commands/versions/open.version.perspective',\r\n  'csui/utils/commands/copy.link',\r\n  'csui/utils/commands/email.link',\r\n  // Load extra commands to be added to the common collection\r\n  'csui-ext!csui/utils/commands/versions'\r\n], function (_, CommandCollection,\r\n    VersionDeleteCommand,\r\n    VersionDownloadCommand,\r\n    VersionOpenCommand,\r\n    VersionPropertiesCommand,\r\n    PromoteVersionCommand,\r\n    DocVersionPreviewCommand,\r\n    OpenVersionDelegateCommand,\r\n    OpenVersionPerspectiveCommand,\r\n    CopyLinkCommand,\r\n    EmailLinkCommand,\r\n    extraCommands) {\r\n  'use strict';\r\n\r\n  var commands = new CommandCollection([\r\n    new VersionDeleteCommand(),\r\n    new VersionDownloadCommand(),\r\n    new VersionOpenCommand(),\r\n    new VersionPropertiesCommand(),\r\n    new PromoteVersionCommand(),\r\n    new DocVersionPreviewCommand(),\r\n    new OpenVersionDelegateCommand(),\r\n    new OpenVersionPerspectiveCommand(),\r\n    new CopyLinkCommand(),\r\n    new EmailLinkCommand()\r\n  ]);\r\n\r\n  if (extraCommands) {\r\n    commands.add(\r\n        _.chain(extraCommands)\r\n            .flatten(true)\r\n            .map(function (Command) {\r\n              return new Command();\r\n            })\r\n            .value()\r\n    );\r\n  }\r\n\r\n  return commands;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/filter',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/log',\r\n  'csui/utils/base', 'csui/utils/commandhelper', 'csui/models/command',\r\n  'i18n!csui/utils/commands/nls/lang',\r\n\r\n], function (module, _, $, log, base, CommandHelper, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var FilterCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'Filter'\r\n    },\r\n\r\n      enabled: function (status) {\r\n          var config = module.config();\r\n          if (config.enabled === false) {\r\n              return false;\r\n          }\r\n\r\n          var isFilterShown = status && status.originatingView && status.originatingView.showFilter;\r\n          if (isFilterShown === true && status.toolItem) {\r\n              status.toolItem.set({'title': lang.FilterCollapseTooltip, toolItemAriaExpand: true, 'stateIsOn': true});\r\n          }\r\n          // Fix me: obtain these details from REST API, results.data.columns\r\n          var isContainer = status.container && !!status.container.get('container');\r\n          return !!isContainer && this._isSupported(status);\r\n      },\r\n\r\n    _isSupported: function (status) {\r\n      // TODO: Make this extensible. not supported for Compound Document, Collection, and SAP DMS Folder.\r\n      var container = status.container,\r\n          notSupportedObjects = [136, 298];\r\n      // Making this extensible. not supported for Virtual folder with zero items.\r\n          if (status.collection && status.collection.length === 0 && container.get('type') === 899) {\r\n            notSupportedObjects.push(899);\r\n          }\r\n       var   support             = $.inArray(container.get('type'), notSupportedObjects) === -1;\r\n      return support;\r\n    }\r\n\r\n    // This command is not to be executed.\r\n  });\r\n\r\n  return FilterCommand;\r\n});\r\n\n","csui.define('csui/utils/accessibility',['module'],\r\n  function (module) {\r\n  \"use strict\";\r\n\r\n  var _accessibleMode = module.config().enabled || false;\r\n  var _accessibleTable = module.config().accessibleTable || false;\r\n  var _enforceDescriptionColumn = module.config().enforceDescriptionColumn;\r\n\r\n  // holds state and functionality for the accessible mode of SmartUI.\r\n  // components such as the table.view react to these settings and render / behave differently,\r\n  // so the result will fare better in accessibility audits.\r\n  var Accessibility = {\r\n\r\n    // activates ALL settings affecting accessibility\r\n    isAccessibleMode: function () {\r\n      return _accessibleMode;\r\n    },\r\n\r\n    // only affects the table (folder browser) and related places\r\n    isAccessibleTable: function() {\r\n      return _accessibleMode || _accessibleTable;\r\n    },\r\n\r\n    shouldEnforceDescriptionColumn: function () {\r\n      // If the value was not specified in the config, the variable will be undefined.  In this case default to true.\r\n      if (_enforceDescriptionColumn === undefined) {\r\n        return true;\r\n      }\r\n\r\n      return _enforceDescriptionColumn;\r\n    }\r\n  };\r\n\r\n  return Accessibility;\r\n\r\n});\n","csui.define('csui/utils/commands/description.toggle',[\"require\", 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\",\r\n  \"csui/utils/command.error\", \"csui/utils/accessibility\"\r\n], function (require, $, base, _, lang, CommandHelper, NodeCommand, CommandError, Accessibility) {\r\n  'use strict';\r\n\r\n  var accessibleTable = Accessibility.isAccessibleTable();\r\n\r\n  var DescriptionToggleCommand = NodeCommand.extend({\r\n\r\n    defaults: {\r\n      signature: \"ToggleDescription\",\r\n      command_key: ['description', 'description'],\r\n      scope: \"single\",\r\n      name: lang.CommandDescriptionToggle\r\n    },\r\n\r\n    //only one node allowed at a time\r\n    enabled: function (status, options) {\r\n      if (!accessibleTable && status.collection && !status.thumbnailViewState) {\r\n        if (status.originatingView && status.originatingView.options.showDescriptions) {\r\n          status.toolItem.attributes.name = lang.CommandHideDescription;\r\n          status.toolItem.attributes.stateIsOn = true;\r\n          // show descriptions in case table was already rendered\r\n          status.originatingView.tableView.trigger('show:descriptions',true);\r\n        }\r\n        var nodeWithDescription = status.collection.find(function (node) {\r\n          var descr = node.get('description');\r\n          return !!descr;\r\n        });\r\n        return nodeWithDescription !== undefined;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var originatingView = status.originatingView;\r\n      var langStr;\r\n\r\n      var toolbarListItem = originatingView.$el.find('li[data-csui-command=\"toggledescription\"]');\r\n\r\n      if (originatingView.options.showDescriptions) {\r\n        originatingView.options.showDescriptions = false;\r\n        langStr = lang.CommandShowDescription;\r\n      } else {\r\n        originatingView.options.showDescriptions = true;\r\n        langStr = lang.CommandHideDescription;\r\n      }\r\n\r\n      // set stateIsOn in the toolItem to let it being drawn in the on state if stateIsOn is true\r\n      // adjust tooltip and aria-label to the current state\r\n      status.toolItem.set({\r\n        'stateIsOn': originatingView.options.showDescriptions,\r\n        'title': langStr,\r\n        'aria-label': langStr\r\n        }\r\n      );\r\n\r\n      originatingView.trigger('csui.description.toggled',\r\n          {showDescriptions: originatingView.options.showDescriptions});\r\n    }\r\n  });\r\n\r\n  return DescriptionToggleCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/thumbnail.toggle',[\"module\", \"require\", 'csui/lib/jquery', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/lib/underscore',\r\n  'csui/models/command', 'csui/utils/accessibility',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, $, backbone, Marionette, _, CommandModel, Accessibility,  lang) {\r\n  'use strict';\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    enableGridView: false\r\n  });\r\n  var TaskQueue, Thumbnail,\r\n      ThumbnailCommand = CommandModel.extend({\r\n\r\n        defaults: {\r\n          signature: \"Thumbnail\",\r\n          command_key: ['thumbnail', 'thumbnail'],\r\n          scope: \"single\",\r\n          name: 'Thumbnail'\r\n        },\r\n\r\n        //only one node allowed at a time\r\n        enabled: function (status, options) {\r\n          if (status.collection && config.enableGridView &&  !Accessibility.isAccessibleMode()) {\r\n            if (status.thumbnailViewState) {\r\n              status.toolItem.attributes.iconName = \"csui_action_switch_list32\";\r\n              status.toolItem.attributes.name = lang.ListViewTitle;\r\n              status.toolItem.attributes.title = lang.ListViewTitle;\r\n            }\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        },\r\n\r\n        execute: function (status, options) {\r\n          var originatingView = status.originatingView || (options && options.originatingView),\r\n              langStr,\r\n              menuSelector    = '.csui-configuration-view .binf-dropdown-menu li[data-csui-command=\"thumbnail\"] a';\r\n          status.suppressFailMessage = true;\r\n          status.suppressSuccessMessage = true;\r\n          if (originatingView.thumbnailViewState) {\r\n            langStr = lang.ThumbnailTitle;\r\n            originatingView.$el.find('.binf-glyphicon-th-list').removeClass(\r\n                \"binf-glyphicon-th-list\").addClass(\"binf-glyphicon-th-large\");\r\n            originatingView.$el.find('.binf-glyphicon-th-large')\r\n                .parent().attr('title', langStr).attr('aria-label', langStr);\r\n          } else {\r\n            langStr = lang.ListViewTitle;\r\n            originatingView.$el.find('.binf-glyphicon-th-large').addClass(\r\n                \"binf-glyphicon-th-list\").removeClass(\"binf-glyphicon-th-large\");\r\n            originatingView.$el.find('.binf-glyphicon-th-list')\r\n                .parent().attr('title', langStr).attr('aria-label', langStr);\r\n          }\r\n          originatingView.$el.find(menuSelector).attr('title', langStr)\r\n              .contents().first().replaceWith(langStr);  // after the text, there can be right arrow\r\n          return $.Deferred().resolve(status.collection).promise();\r\n        }\r\n      });\r\n\r\n  return ThumbnailCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/save.filter',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/url',\r\n  'csui/models/command', 'csui/models/node/node.model'\r\n], function (module, require, _, $, lang, Url, CommandModel, NodeModel) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ConnectorFactory, NextNodeModelFactory, nodeLinks;\r\n\r\n  var SaveFilterCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"SaveFilter\",\r\n      command_key: ['savefilter', 'SaveFilter'],\r\n      name: lang.CommandNameSaveFilter,\r\n      verb: lang.CommandVerbSaveFilter\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.suppressSuccessMessage = true;\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/next.node',\r\n        'csui/utils/node.links/node.links'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        ConnectorFactory = arguments[1];\r\n        NextNodeModelFactory = arguments[2];\r\n        nodeLinks = arguments[3];\r\n\r\n        self._selectSaveFilterOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedNodes = status.nodes,\r\n                  facets        = status.facets,\r\n                  targetFolder  = selectedOptions.nodes[0],\r\n                  filterName    = selectedOptions.filterName,\r\n                  multiLingualData = selectedOptions.multiLingualData;\r\n              var url = status.connector.getConnectionUrl().getApiBase('v2');\r\n              var selectedFacets = [];\r\n              $.each(facets.filters, function (idx, facet) {\r\n                var facettypes = [], facetArrayType = [];\r\n                if (facet.values instanceof Array) {\r\n                  $.each(facet.values, function (index, facettype) {\r\n                    facettypes.push(facettype.id);\r\n                  });\r\n                  facetArrayType.push(facet.id);\r\n                  facetArrayType.push(facettypes);\r\n                  selectedFacets.push(facetArrayType);\r\n                }\r\n              });\r\n              var ajaxFormData = {\r\n                'type': 899,\r\n                'location_id': selectedNodes.models[0].get(\"id\"),\r\n                'name': filterName,\r\n                'parent_id': targetFolder.get(\"id\"),\r\n                'selected_facets': selectedFacets\r\n              };\r\n              multiLingualData && _.extend(ajaxFormData,{\r\n                name_multilingual: multiLingualData\r\n              });\r\n              var saveFilterOptions = {\r\n                url: Url.combine(url, '/nodes'),\r\n                type: 'POST',\r\n                data: ajaxFormData,\r\n                contentType: 'application/x-www-form-urlencoded'\r\n              };\r\n\r\n              status.connector.makeAjaxCall(saveFilterOptions)\r\n                  .done(function (resp) {\r\n                    deferred.resolve(resp.results);\r\n                    var virtualFolderId   = resp.results.data.properties.id,\r\n                        virtualFolderNode = new NodeModel({id: virtualFolderId},\r\n                            {connector: context.getObject(ConnectorFactory)}),\r\n                        name              = resp.results.data.properties.name,\r\n                        msg               = _.str.sformat(lang.SaveFilterCommandSuccessfully, name),\r\n                        options           = {\r\n                          context: context,\r\n                          nextNodeModelFactory: NextNodeModelFactory,\r\n                          link_url: nodeLinks.getUrl(virtualFolderNode),\r\n                          targetFolder: virtualFolderNode\r\n                        },\r\n                        dets; // leave details as undefined;\r\n                    GlobalMessage.showMessage('success_with_link', msg, dets, options);\r\n                  })\r\n                  .fail(function (error) {\r\n                    deferred.reject(error);\r\n                    if (error && error.responseText) {\r\n                      var errorObj = JSON.parse(error.responseText);\r\n                      GlobalMessage.showMessage('error', errorObj.error);\r\n                    }\r\n                  });\r\n\r\n            }).fail(function (error) {\r\n          deferred.reject(error);\r\n        });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectSaveFilterOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodePicker) {\r\n            var numNodes = status.nodes.length;\r\n            var pickerOptions = _.extend({\r\n              command: 'savefilter',\r\n              selectableTypes: [-1],\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: lang.DialogTitleSaveFilter,\r\n              initialContainer: status.container || status.nodes.models[0].parent,\r\n              initialSelection: status.nodes,\r\n              startLocation: '',\r\n              includeCombineProperties: (numNodes === 1),\r\n              propertiesSeletor: false,\r\n              saveFilter: true,\r\n              globalSearch: true,\r\n              context: options ? options.context : status.context,\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            }, status);\r\n\r\n            self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function (error) {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return SaveFilterCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/save.query',[\r\n  'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/models/command', 'csui/models/node/node.model'\r\n], function (require, _, $, lang, CommandModel, NodeModel) {\r\n  'use strict';\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ConnectorFactory, NextNodeModelFactory, nodeLinks, MetadataSaveQueryController;\r\n\r\n  var SaveQueryCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"SaveQuery\",\r\n      command_key: ['savequery', 'SaveQuery'],\r\n      name: lang.CommandNameSaveQuery,\r\n      verb: lang.CommandVerbSaveQuery\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.context = context;\r\n      status.suppressSuccessMessage = true;\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/next.node',\r\n        'csui/utils/node.links/node.links',\r\n        'csui/widgets/metadata/metadata.save.query.controller'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        ConnectorFactory = arguments[1];\r\n        NextNodeModelFactory = arguments[2];\r\n        nodeLinks = arguments[3];\r\n        MetadataSaveQueryController = arguments[4];\r\n\r\n        self._selectSaveQueryOptions(status, options)\r\n          .done(function (selectedOptions) {\r\n            var targetFolder = selectedOptions.nodes[0],\r\n              queryName = selectedOptions.filterName,\r\n              multiLingualData = selectedOptions.multiLingualData;\r\n            var ajaxFormData = {\r\n              'type': 258,\r\n              'name': queryName,\r\n              'parent_id': targetFolder.get(\"id\")\r\n            };\r\n            multiLingualData && _.extend(ajaxFormData, {\r\n              name_multilingual: multiLingualData\r\n            });\r\n\r\n            var searchQueryModel = new NodeModel(ajaxFormData,\r\n              {\r\n                connector: status.connector\r\n              });\r\n            var metadataController = new MetadataSaveQueryController();\r\n\r\n            metadataController._checkForRequiredMetadata(searchQueryModel, status).done(function (resp) {\r\n\r\n              if (resp && resp.data) {\r\n                ajaxFormData = _.extend(ajaxFormData, resp.data);\r\n              }\r\n              ajaxFormData = _.extend(ajaxFormData,\r\n                {\r\n                  search_cache_id: options.searching && options.searching.cache_id\r\n                });\r\n\r\n              var originatingView = status.originatingView;\r\n              searchQueryModel.save(undefined, {\r\n                data: ajaxFormData\r\n              }).done(function (resp) {\r\n                if (originatingView) {\r\n                  originatingView.previousSavedQuery = resp.id;\r\n                }\r\n                deferred.resolve(resp);\r\n                //Configure Go to location as parent folder of Saved search query\r\n                var savedQueryParentNode = new NodeModel({ id: targetFolder.get(\"id\") },\r\n                  { connector: context.getObject(ConnectorFactory) }),\r\n                  name = ajaxFormData.name,\r\n                  msg = _.str.sformat(lang.SaveQueryCommandSuccessfully, name),\r\n                  options = {\r\n                    context: context,\r\n                    nextNodeModelFactory: NextNodeModelFactory,\r\n                    link_url: nodeLinks.getUrl(savedQueryParentNode),\r\n                    targetFolder: savedQueryParentNode\r\n                  },\r\n                  dets; // leave details as undefined;\r\n                GlobalMessage.showMessage('success_with_link', msg, dets, options);\r\n              }).fail(function (error) {\r\n                  deferred.reject(error);\r\n                  if (error && error.responseText) {\r\n                    var errorObj = JSON.parse(error.responseText);\r\n                    GlobalMessage.showMessage('error', errorObj.error);\r\n                  }\r\n                });\r\n            }).fail(function (error) {\r\n              deferred.reject(error);\r\n              if (error && error.responseText) {\r\n                var errorObj = JSON.parse(error.responseText);\r\n                GlobalMessage.showMessage('error', errorObj.error);\r\n              }\r\n            });\r\n          }).fail(function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectSaveQueryOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n        function (NodePicker) {\r\n          var pickerOptions = _.extend({\r\n            command: 'savequery',\r\n            selectableTypes: [-1],\r\n            showAllTypes: true,\r\n            orderBy: 'type asc',\r\n            dialogTitle: lang.DialogTitleSaveQuery,\r\n            startLocation: 'personal.volume',\r\n            propertiesSeletor: false,\r\n            saveFilter: true,\r\n            globalSearch: true,\r\n            context: options ? options.context : status.context,\r\n            startLocations: ['enterprise.volume', 'personal.volume', 'favorites',\r\n              'recent.containers'],\r\n            resolveShortcuts: true,\r\n            resultOriginalNode: true,\r\n            selectButtonLabel: lang.saveButtonLabel\r\n          }, status);\r\n\r\n          self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n          self.nodePicker\r\n            .show()\r\n            .done(function () {\r\n              deferred.resolve.apply(deferred, arguments);\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n        }, function (error) {\r\n          deferred.reject(error);\r\n        });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return SaveQueryCommand;\r\n});\n","csui.define('csui/utils/commands/update.query',[\r\n\t'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n\t'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/url',\r\n\t'csui/models/command', 'csui/models/node/node.model'\r\n], function (require, _, $, lang, Url, CommandModel, NodeModel) {\r\n\t'use strict';\r\n\r\n\t// Dependencies loaded in the execute method first\r\n\tvar GlobalMessage, ConnectorFactory, NextNodeModelFactory, nodeLinks;\r\n\r\n\tvar UpdateQueryCommand = CommandModel.extend({\r\n\t\tdefaults: {\r\n\t\t\tsignature: \"UpdateQuery\",\r\n\t\t\tcommand_key: ['updatequery', 'UpdateQuery'],\r\n\t\t\tname: lang.CommandNameUpdateQuery,\r\n\t\t\tverb: lang.CommandVerbUpdateQuery\r\n\t\t},\r\n\r\n\t\texecute: function (status, options) {\r\n\t\t\tvar deferred = $.Deferred();\r\n\t\t\tvar context = status.context || options && options.context;\r\n\t\t\tstatus.suppressSuccessMessage = true;\r\n\t\t\trequire([\r\n\t\t\t\t'csui/controls/globalmessage/globalmessage',\r\n\t\t\t\t'csui/utils/contexts/factories/connector',\r\n\t\t\t\t'csui/utils/contexts/factories/next.node',\r\n\t\t\t\t'csui/utils/node.links/node.links'\r\n\t\t\t], function () {\r\n\t\t\t\tGlobalMessage = arguments[0];\r\n\t\t\t\tConnectorFactory = arguments[1];\r\n\t\t\t\tNextNodeModelFactory = arguments[2];\r\n\t\t\t\tnodeLinks = arguments[3];\r\n\r\n\t\t\t\tvar url = status.connector.getConnectionUrl().getApiBase('v2');\r\n\t\t\t\tvar ajaxFormData = {\r\n\t\t\t\t\t'search_cache_id': options.cache_id\r\n\t\t\t\t};\r\n\t\t\t\tvar updateQueryOptions = {\r\n\t\t\t\t\turl: Url.combine(url, '/nodes/', options.queryId),\r\n\t\t\t\t\ttype: 'PUT',\r\n\t\t\t\t\tdata: ajaxFormData,\r\n\t\t\t\t\tcontentType: 'application/x-www-form-urlencoded'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tstatus.connector.makeAjaxCall(updateQueryOptions)\r\n\t\t\t\t\t.done(function (resp) {\r\n\t\t\t\t\t\tdeferred.resolve(resp.results);\r\n\t\t\t\t\t\t//Get parent node's id of search query from the response \r\n\t\t\t\t\t\tvar updatedQueryParentNode = new NodeModel({ id: resp.results.data.properties.parent_id },\r\n\t\t\t\t\t\t\t{ connector: context.getObject(ConnectorFactory) }),\r\n\t\t\t\t\t\t\tname = resp.results.data.properties.name,\r\n\t\t\t\t\t\t\tmsg = _.str.sformat(lang.UpdateQueryCommandSuccessfully, name),\r\n\t\t\t\t\t\t\toptions = {\r\n\t\t\t\t\t\t\t\tcontext: context,\r\n\t\t\t\t\t\t\t\tnextNodeModelFactory: NextNodeModelFactory,\r\n\t\t\t\t\t\t\t\tlink_url: nodeLinks.getUrl(updatedQueryParentNode),\r\n\t\t\t\t\t\t\t\ttargetFolder: updatedQueryParentNode\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tdets;\r\n\t\t\t\t\t\tGlobalMessage.showMessage('success_with_link', msg, dets, options);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.fail(function (error) {\r\n\t\t\t\t\t\tdeferred.reject(error);\r\n\t\t\t\t\t\tif (error && error.responseText) {\r\n\t\t\t\t\t\t\tvar errorObj = JSON.parse(error.responseText);\r\n\t\t\t\t\t\t\tGlobalMessage.showMessage('error', errorObj.error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}, function (error) {\r\n\t\t\t\tdeferred.reject(error);\r\n\t\t\t});\r\n\t\t\treturn deferred.promise();\r\n\t\t}\r\n\t});\r\n\r\n\treturn UpdateQueryCommand;\r\n});\n","csui.define('csui/utils/commands/maximize.widget.view',['require', 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command'\r\n], function (require, $, base, _, lang, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var ExpandNodestableViewCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"MaximizeWidgetView\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var supportMaximizeWidget = $(\"body\").hasClass(\"csui-support-maximize-widget\");\r\n      return (supportMaximizeWidget && $(\"body\").hasClass(\"csui-maximized-widget-mode\") === false);\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status.context.trigger(\"maximize:widget\", {widgetView: status.originatingView});\r\n    }\r\n  });\r\n\r\n  return ExpandNodestableViewCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/restore.widget.size',['require', 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command'\r\n], function (require, $, base, _, lang, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var NormalizeNodestableViewCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"RestoreWidgetViewSize\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n\r\n      var isMaximizeMode = this.checkMaximizeMode(status);\r\n\r\n      if (isMaximizeMode) {\r\n        return false; //When showWidgetInMaxMode then disable the RestoreWidgetView\r\n      } else {\r\n        var supportMaximizeWidget = $(\"body\").hasClass(\"csui-support-maximize-widget\");\r\n        return (supportMaximizeWidget && $(\"body\").hasClass(\"csui-maximized-widget-mode\") === true);\r\n      }\r\n\r\n    },\r\n\r\n    checkMaximizeMode: function (status) {\r\n      return status && status.context && status.context.perspective &&\r\n             status.context.perspective.get(\"showWidgetInMaxMode\");\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status.context.trigger(\"restore:widget:size\", {widgetView: status.originatingView});\r\n    }\r\n  });\r\n\r\n  return NormalizeNodestableViewCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/apply.permission',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command','csui/utils/commandhelper',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel,\r\n    CommandHelper, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var ApplyPermissionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'ApplyPermission'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        if (true) {\r\n          deferred.resolve();\r\n          GlobalMessage.showMessage('success', \"Applied permissions to sub-items\");\r\n        } else {\r\n          deferred.reject();\r\n          GlobalMessage.showMessage('error', \"Failed to apply permissions to sub-items\");\r\n        }\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return ApplyPermissionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/permission.util',[\r\n  'module', 'require', 'csui/lib/underscore', \"csui/lib/backbone\", 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, Backbone, $, lang) {\r\n  'use strict';\r\n\r\n  function generateSuccessMessage(response, GlobalMessage) {\r\n    var message;\r\n    if (response.results.success > 0 && response.results.failure === 0) {\r\n      message = _.str.sformat(\r\n          response.results.success === 1 ? lang.AppliedPermissionsOneSuccess :\r\n          lang.AppliedPermissionsOnlySuccess,\r\n          response.results.success);\r\n    } else if (response.results.success > 0 && response.results.failure > 0) {\r\n      message = _.str.sformat(lang.AppliedPermissionsSuccessAndFailure,\r\n          response.results.success, response.results.failure);\r\n    } else if (response.results.success === 0 && response.results.failure > 0) {\r\n      message = _.str.sformat(\r\n          response.results.failure === 1 ? lang.AppliedPermissionsOneFailure :\r\n          lang.AppliedPermissionsOnlyFailure,\r\n          response.results.failure);\r\n    }\r\n    var errObject             = Backbone.Model.extend({\r\n          defaults: {\r\n            name: \"\",\r\n            state: 'pending',\r\n            commandName: 'ViewPermission'\r\n          }\r\n        }),\r\n        errObjects            = [],\r\n        failedFilesCollection = Backbone.Collection.extend({\r\n          model: errObject\r\n        }),\r\n        errCollection         = new failedFilesCollection();\r\n\r\n    for (var i = 0; response.results.failure > 0 && i < response.results.data.length; i++) {\r\n      errObjects[i] = new errObject({\r\n        name: response.results.data[i].name,\r\n        mime_type: '',\r\n        state: 'rejected'\r\n      });\r\n      errCollection.add(errObjects[i]);\r\n    }\r\n    var successCount = (response.results.success > 0 &&\r\n                        response.results.failure > 0) ?\r\n                       response.results.success : '',\r\n        langTitle    = _.str.sformat(lang.ApplyingManyItemsSuccessMessage, successCount),\r\n        successMsg   = successCount > 0 ? langTitle : ' ';\r\n\r\n    response.results.failure > 0 ?\r\n    GlobalMessage.showPermissionApplyingProgress(errCollection, {\r\n      oneFileFailure: successMsg + lang.ApplyingOneItemFailMessage,\r\n      someFileFailure: successMsg + _.str.sformat(lang.ApplyingManyItemsFailMessage2,\r\n          errObjects.length),\r\n      multiFileFailure: successMsg + _.str.sformat(lang.ApplyingManyItemsFailMessage2,\r\n          errObjects.length)\r\n    }) : '';\r\n\r\n    (response.results.success > 0 && response.results.failure <= 0) ?\r\n    GlobalMessage.showMessage('success', message ? message : lang.AppliedPermissions) : '';\r\n  }\r\n\r\n  return {\r\n    generateSuccessMessage: generateSuccessMessage\r\n  };\r\n});\n","csui.define('csui/utils/commands/permissions/edit.permission',[\r\n  'module', 'require', 'csui/lib/underscore', \"csui/lib/backbone\", 'csui/lib/jquery',\r\n  'csui/utils/base',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commands/permissions/permission.util'\r\n], function (module, require, _, Backbone, $, base, CommandModel,\r\n    CommandHelper, CommandError, lang, PermissionUtil) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var EditPermissionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'EditPermission',\r\n      command_key: ['editpermissions', 'Edit Permissions']\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var permissionModel        = status.model,\r\n          type                   = permissionModel && permissionModel.get('right_id_expand') &&\r\n                                                      permissionModel.get('right_id_expand').type,\r\n          collection             = permissionModel && permissionModel.collection,\r\n          right_id               = permissionModel && permissionModel.get('right_id'),\r\n          permissionType         = permissionModel && permissionModel.get('type'),\r\n          filterId               = status.filterId,\r\n          nodeModel              = status.nodeModel || (status.originatingView &&\r\n                                                        status.originatingView.model),\r\n          userHasEditPermissions = nodeModel && nodeModel.actions &&\r\n                                    !!nodeModel.actions.get({signature: 'editpermissions'}),\r\n          memberTypeSupport      = [0,1],\r\n          isDisable              = (memberTypeSupport.indexOf(type) < 0) && permissionType === \"custom\";\r\n      if (!isDisable) {\r\n        return !filterId && permissionType && (right_id || permissionType === \"public\") &&\r\n             collection &&\r\n             collection.options && collection.options.node && !!collection.options.node.get('id') &&\r\n             userHasEditPermissions;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self            = this,\r\n          deferred        = $.Deferred(),\r\n          permissionModel = status.model,\r\n          collection      = permissionModel.collection,\r\n          targetView      = status.targetView;\r\n\r\n      self.targetView = targetView;\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      var failureMsg = this._getMessageWithUserDisplayName(lang.EditPermissionCommandFailMessage,\r\n          permissionModel);\r\n      var userHasEditPermissions = collection && collection.options && collection.options.node &&\r\n                                   collection.options.node.actions.get(\r\n                                       {signature: 'editpermissions'});\r\n\r\n      if (collection && !!userHasEditPermissions) {\r\n        permissionModel.nodeId = collection.options && collection.options.node &&\r\n                                 collection.options.node.get('id');\r\n\r\n        require(\r\n            ['csui/widgets/permissions/edit/edit.permission.helper',\r\n              'csui/utils/contexts/factories/user', 'csui/controls/globalmessage/globalmessage',\r\n              'csui/utils/permissions/permissions.precheck'\r\n            ],\r\n            function (EditPermissionHelper, UserModelFactory, GlobalMessage, PermissionPreCheck) {\r\n              var user = status.originatingView.context.getModel(UserModelFactory);\r\n              self.loginUserId = user.get('id');\r\n              self.editPermissionHelper = new EditPermissionHelper({\r\n                permissionModel: permissionModel,\r\n                popoverPlacement: \"left\",\r\n                popoverAtBodyElement: status.originatingView ?\r\n                                      !status.originatingView.options.isExpandedView : true,\r\n                popoverTargetElement: status.targetView.permissions.$el,\r\n                readonly: false,\r\n                originatingView: status.originatingView,\r\n                applyTo: status.applyTo\r\n              });\r\n              self.editPermissionHelper._showSelectPermissionLevelPopover();\r\n              self.editPermissionHelper.listenTo(self.editPermissionHelper,\r\n                  \"permissions:selected\", function (userSelection) {\r\n                    var saveAttr = {\r\n                      \"permissions\": userSelection.permissions,\r\n                      \"apply_to\": userSelection.apply_to,\r\n                      \"include_sub_types\": userSelection.apply_to > 0 ?\r\n                                           PermissionPreCheck.includeSubTypes() : []\r\n                    };\r\n                    if (userSelection.right_id) {\r\n                      saveAttr.right_id = userSelection.right_id;\r\n                    }\r\n                    permissionModel.save(saveAttr, {\r\n                      patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n                      // mixin makes it a PUT again (backbone would use PATCH)\r\n                      wait: true,\r\n                      silent: true\r\n                    }).done(function (response) {\r\n\r\n                      permissionModel.set(saveAttr, {silent: true});\r\n                      status.originatingView.trigger('permission:changed', status);\r\n                      //status.originatingView.render();\r\n                      self.editPermissionHelper.destroy();\r\n                      self.editPermissionHelper.unblockActions();\r\n                      /*if (permissionModel.mustRefreshAfterPut !== false) {\r\n                        return permissionModel.fetch();\r\n                      }*/\r\n                      deferred.resolve();\r\n                      if (status.originatingView.model.get('permissions_model') !== 'simple') {\r\n                        PermissionUtil.generateSuccessMessage(response, GlobalMessage);\r\n                      } \r\n                    }).fail(function (error) {\r\n                      var commandError = error ? new CommandError(error, permissionModel) :\r\n                                         error;\r\n                      GlobalMessage.showMessage('error', commandError);\r\n                      deferred.reject(permissionModel, commandError);\r\n                    });\r\n                  });\r\n\r\n              self.editPermissionHelper.listenTo(self.editPermissionHelper,\r\n                  \"closed:permission:level:popover\", function () {\r\n                    deferred.reject(permissionModel);\r\n                  });\r\n            });\r\n      } else {\r\n        return deferred.reject(\r\n            new CommandError(failureMsg, {errorDetails: lang.undefinedCollection}));\r\n      }\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (unformattedMsg, permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      } else if (permissionModel.get(\"type\") === \"public\") {\r\n        displayName = lang.publicAccess;\r\n      }\r\n      var msg = _.str.sformat(unformattedMsg, displayName);\r\n      return msg;\r\n    }\r\n  });\r\n\r\n  return EditPermissionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/change.owner.permission',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery', \"csui/lib/marionette\",\r\n  'csui/models/command', 'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, _, $, Marionette, CommandModel, CommandError, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var ChangeOwnerPermissionCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'ChangeOwnerPermission',\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var permissionModel    = status.model,\r\n          type               = permissionModel && permissionModel.get('right_id_expand') &&\r\n                                               permissionModel.get('right_id_expand').type,\r\n          permissionType     = permissionModel && permissionModel.get('type'),\r\n          nodeModel          = status.nodeModel || (status.originatingView &&\r\n                                                 status.originatingView.model),\r\n          enabled            = (permissionType &&\r\n                               (permissionType === \"owner\" ||\r\n                               permissionType === \"group\")) &&\r\n                               (nodeModel && nodeModel.actions &&\r\n                               !!nodeModel.actions.get({signature: 'editpermissions'})),\r\n          title              = (enabled && permissionType === \"owner\") ?\r\n                               lang.ChangeOwnerPermissionCommand :\r\n                               lang.ChangeOwnerGroupPermissionCommand,\r\n          memberTypeSupport  = [0,1],\r\n          isDisable          = (memberTypeSupport.indexOf(type) < 0) && permissionType === \"custom\";\r\n      if (permissionType === \"group\" && status.toolItem.attributes &&\r\n          status.toolItem.attributes.icon) {\r\n        status.toolItem.attributes.icon = \"icon icon-group-change\";\r\n      }\r\n      //set title\r\n      status.toolItem && status.toolItem.set('name', title);\r\n\r\n      return isDisable ? false : enabled;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred          = $.Deferred(),\r\n          permissionModel   = status.model,\r\n          permissionType    = permissionModel.get(\"type\"),\r\n          collection        = permissionModel.collection,\r\n          userExpandDetails = permissionModel.get(\"right_id_expand\"),\r\n          currentRow        = status.targetView.$el,\r\n          self              = this;\r\n      self.targetView = status.originatingView.permissionsContentView;\r\n      var userHasEditPermissions = collection && collection.options && collection.options.node &&\r\n                                   collection.options.node.actions.get(\r\n                                       {signature: 'editpermissions'});\r\n\r\n      if (collection && userHasEditPermissions) {\r\n        permissionModel.nodeId = collection.options && collection.options.node &&\r\n                                 collection.options.node.get('id');\r\n        require(['csui/controls/table/inlineforms/permissions/user.picker/user.picker.view',\r\n              'csui/utils/contexts/factories/member', 'csui/models/permission/nodepermission.model',\r\n              'csui/utils/contexts/factories/user', 'csui/utils/permissions/permissions.precheck'],\r\n            function (UserPickerView, MemberModelFactory, NodePermissionModel, UserModelFactory,\r\n                PermissionPreCheck) {\r\n              var user = status.originatingView.context.getModel(UserModelFactory);\r\n              self.loginUserId = user.get('id');\r\n              var memberFilter = status.context.getModel(MemberModelFactory);\r\n              var userPickerView = new UserPickerView({\r\n                context: status.options ? status.options.context : status.context,\r\n                userPickerModel: memberFilter,\r\n                currentRow: currentRow,\r\n                connector: status.connector,\r\n                memberFilter: {type: (permissionType === 'owner' ? [0] : [1])}\r\n              });\r\n              currentRow.addClass(\"csui-changeowner-permission\");\r\n              currentRow.find(\".member-info\").addClass(\"binf-hidden\");\r\n              var userpickerRegion = new Marionette.Region({\r\n                el: currentRow.find(\".csui-inline-owner-change\")\r\n              });\r\n              userpickerRegion.show(userPickerView);\r\n              userPickerView.listenTo(userPickerView,\r\n                  \"change:completed\", function (permissions) {\r\n                    userpickerRegion.currentView.destroy();\r\n                    deferred.resolve();\r\n                  });\r\n              userPickerView.listenTo(userPickerView, \"member:selected:save\",\r\n                  function (args) {\r\n                    var permissions = NodePermissionModel.getReadPermissions(),\r\n                        saveAttr    = {\r\n                          \"permissions\": permissionModel.get(\"permissions\"),\r\n                          \"right_id\": args.get(\"id\"),\r\n                          \"include_sub_types\": PermissionPreCheck.includeSubTypes()\r\n                        };\r\n                    permissionModel.set({'right_id_expand': args}, {silent: true});\r\n                    permissionModel.save(saveAttr, {\r\n                      patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n                      // mixin makes it a PUT again (backbone would use PATCH)\r\n                      wait: true,\r\n                      silent: true\r\n                    }).done(function () {\r\n                      permissionModel.set(saveAttr, {silent: true});\r\n                      userpickerRegion.currentView.destroy();\r\n                      currentRow.removeClass(\"csui-changeowner-permission\");\r\n                      currentRow.find(\".member-info\").removeClass(\r\n                          \"binf-hidden\");\r\n\r\n                      deferred.resolve();\r\n                    }).fail(function (error) {\r\n                      var commandError = error ? new CommandError(error, permissionModel) :\r\n                                         error;\r\n                      permissionModel.set({'right_id_expand': userExpandDetails}, {silent: true});\r\n                      deferred.reject(permissionModel, commandError);\r\n                    });\r\n                  });\r\n            });\r\n      } else {\r\n        var msg = _.str.sformat(lang.EditPermissionCommandFailMessage, lang.Owner);\r\n        return deferred.reject(\r\n            new CommandError(msg, {errorDetails: lang.undefinedCollection}));\r\n      }\r\n      return deferred.promise();\r\n    }\r\n  });\r\n  return ChangeOwnerPermissionCommand;\r\n});\n","csui.define('csui/utils/commands/permissions/delete.permission',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/utils/base', 'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/command.error', 'csui/utils/commands/confirmable',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, $, _, Backbone, base, CommandModel, CommandHelper,\r\n    CommandError, ConfirmableCommand, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var GlobalMessage;\r\n\r\n  var DeletePermissionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'DeletePermission',\r\n      scope: 'single'\r\n    },\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _getConfirmTemplate: function (status, options) {\r\n      return _.template(lang.DeleteCommandConfirmDialogHtml);\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var permissionModel      = status.model,\r\n          confirmDialogMessage = lang.DeletePermissionCommandConfirmDialogSingleMessage;\r\n      if (permissionModel.get(\"type\") === \"public\") {\r\n        confirmDialogMessage = lang.DeletePermissionCommandConfirmDialogPublicAccessMessage;\r\n      }\r\n      var msg = this._getMessageWithUserDisplayName(\r\n          confirmDialogMessage, permissionModel);\r\n\r\n      var title = this._getMessageWithUserDisplayName(\r\n          lang.DeletePermissionCommandConfirmDialogTitle, permissionModel);\r\n\r\n      return {\r\n        title: title,\r\n        message: msg\r\n      };\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (unformattedMsg, permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      } else if (permissionModel.get(\"type\") === \"public\") {\r\n        displayName = lang.publicAccess;\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(unformattedMsg, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(unformattedMsg, displayName);\r\n      }\r\n      return msg;\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var permissionModel   = status.model,\r\n          type              = permissionModel && permissionModel.get('right_id_expand') &&\r\n                                               permissionModel.get('right_id_expand').type,\r\n          collection        = permissionModel && permissionModel.collection,\r\n          right_id          = permissionModel && permissionModel.get('right_id'),\r\n          permissionType    = permissionModel && permissionModel.get('type'),\r\n          filterId          = status.filterId,\r\n          nodeModel         = status.nodeModel || (collection && collection.options &&\r\n                                                  collection.options.node)\r\n                                               || (status.originatingView && \r\n                                                  status.originatingView.model),\r\n          enabled           = !filterId && permissionType &&\r\n                              (right_id || permissionType === \"public\") &&\r\n                              nodeModel.get('id') &&\r\n                              nodeModel.actions &&\r\n                              !!nodeModel.actions.get(\r\n                                  {signature: 'editpermissions'}),\r\n          memberTypeSupport = [0,1],\r\n          isDisable         = (memberTypeSupport.indexOf(type) < 0) && permissionType === \"custom\";\r\n      if (enabled) {\r\n        this.setCommandTitle(status.toolItem, permissionModel);\r\n      }\r\n\r\n      return isDisable ? false : enabled;\r\n    },\r\n\r\n    setCommandTitle: function (toolItem, permissionModel) {\r\n      var type = permissionModel.get(\"type\"),\r\n          title;\r\n      if (type === \"owner\") {\r\n        title = lang.DeletePermissionCommandRemoveOwner;\r\n      } else if (type === \"group\") {\r\n        title = lang.DeletePermissionCommandRemoveGroup;\r\n      } else if (type === \"public\") {\r\n        title = lang.DeletePermissionCommandRemovePublicAccess;\r\n      } else {\r\n        title = lang.DeletePermissionCommandRemoveOther;\r\n      }\r\n      toolItem.set(\"name\", title);\r\n    }\r\n  });\r\n\r\n  _.extend(DeletePermissionCommand.prototype, ConfirmableCommand, {\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      options || (options = {});\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/apply.permission.view',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/impl/header/apply.permission.header.view',\r\n        'csui/controls/progressblocker/blocker',\r\n        'csui/controls/dialog/dialog.view',\r\n        'csui/utils/permissions/permissions.precheck'\r\n      ], function (localGlobalMessage, ApplyPermissionView, ApplyPermissionHeaderView,\r\n          BlockingView, DialogView, PermissionPreCheck) {\r\n        GlobalMessage = localGlobalMessage;\r\n        if (status.originatingView && status.originatingView.model &&\r\n            status.originatingView.model.get(\"container\")) {\r\n          options.removePermission = true;\r\n          self._executeDeletePermission(status, options, ApplyPermissionHeaderView,\r\n              ApplyPermissionView, BlockingView, DialogView, PermissionPreCheck)\r\n              .then(deferred.resolve, deferred.reject);\r\n        } else {\r\n          self._deletePermission(status, options).then(deferred.resolve, deferred.reject);\r\n        }\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _deletePermission: function (status, options) {\r\n      options || (options = {});\r\n      return this._performActions(status, options);\r\n    },\r\n\r\n    _executeDeletePermission: function (status, options, ApplyPermissionHeaderView,\r\n        ApplyPermissionView, BlockingView, DialogView, PermissionPreCheck) {\r\n      options || (options = {});\r\n      var deferred = $.Deferred();\r\n      this.originatingView = status.originatingView;\r\n      var headerView = new ApplyPermissionHeaderView({\r\n        'removePermission': true,\r\n        'permissionModel': status.model\r\n      });\r\n      this._view = new ApplyPermissionView({\r\n        context: status.context,\r\n        model: status.originatingView.model,\r\n        permissionModel: status.model,\r\n        removePermission: true,\r\n        applyTo: status.applyTo,\r\n        includeSubTypes: PermissionPreCheck.includeSubTypes(),\r\n        originatingView: status.originatingView\r\n      });\r\n      var dialog = new DialogView({\r\n        headerView: headerView,\r\n        view: this._view,\r\n        className: \"csui-permissions-apply-dialog\",\r\n        midSize: true,\r\n        buttons: [\r\n          {\r\n            id: 'apply',\r\n            label: lang.applyButtonLabel,\r\n            'default': true,\r\n            click: function (args) {\r\n              this._performActions(args).then(deferred.resolve, deferred.reject);\r\n            }.bind(this)\r\n          },\r\n          {\r\n            label: lang.cancelButtonLabel,\r\n            close: true\r\n          }\r\n        ]\r\n      });\r\n      dialog.listenTo(dialog, 'hide', _.bind(this.onHideDialog, this));\r\n      BlockingView.imbue(dialog);\r\n      dialog.show();\r\n      return deferred.promise();\r\n    },\r\n\r\n    onHideDialog: function () {\r\n      var origView = this.originatingView;\r\n      origView && origView.trigger(\"unblock:view:actions\");\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var self            = this,\r\n          deferred        = $.Deferred(),\r\n          permissionModel = status.dialog ? status.dialog.options.view.options.permissionModel :\r\n                            status.model,\r\n          permissionType  = permissionModel.get('type'),\r\n          collection      = permissionModel.collection,\r\n          failureMsg      = this._getMessageWithUserDisplayName(\r\n              lang.DeletePermissionCommandFailMessage, permissionModel),\r\n          deleteAttr;\r\n          permissionModel.collection.models.forEach(function (item) {\r\n            item.set('isAddNew', false);\r\n          });\r\n      if (collection && collection.options && collection.options.node &&\r\n          collection.options.node.actions.get({signature: 'editpermissions'})) {\r\n        permissionModel.nodeId = collection.options && collection.options.node &&\r\n                                 collection.options.node.get('id');\r\n        var container           = collection.options && collection.options.node &&\r\n                                  collection.options.node.get(\"container\"),\r\n            permissionModelType = collection.options && collection.options.node &&\r\n                                  collection.options.node.get(\"permissions_model\");\r\n        if (status.dialog) {\r\n          permissionModel.apply_to = (container && permissionModelType === \"advanced\") &&\r\n                                     status.dialog.options.view.subFolderSelected ? 2 :\r\n                                     (container && permissionModelType === \"advanced\") ? 3 : 0;\r\n          permissionModel.include_sub_types = permissionModel.apply_to > 0 ?\r\n                                              status.dialog &&\r\n                                              status.dialog.options.view.options.includeSubTypes :\r\n              [];\r\n        }\r\n        if (self.originatingView && self.originatingView.blockActions) {\r\n          self.destroyDialog(status);\r\n          self.originatingView.blockActions();\r\n        }\r\n        var jqxhr = permissionModel.destroy({\r\n          wait: true\r\n        }).done(function (response) {\r\n          //update the results\r\n          permissionModel.set('results', response.results);\r\n          self.originatingView && self.originatingView.trigger('permission:changed', self);\r\n          if (self.originatingView && self.originatingView.unblockActions) {\r\n            self.originatingView.unblockActions();\r\n          }\r\n          var successMsg = self._getMessageWithUserDisplayName(\r\n              permissionModel.get('results') && permissionModel.get('results').success > 0 ?\r\n              lang.DeletePermissionCommandSuccessMessageWithCount :\r\n              lang.DeletePermissionCommandSuccessMessage, permissionModel);\r\n          GlobalMessage.showMessage('success', successMsg);\r\n          if (permissionType === \"owner\" || permissionType === \"group\") {\r\n            //Check & Process for no owner condition\r\n            collection.processForEmptyOwner && collection.processForEmptyOwner();\r\n          }\r\n          //self.destroyDialog(status);\r\n          deferred.resolve(permissionModel);\r\n\r\n        }).fail(function (error) {\r\n          var commandError = error ? new CommandError(error, permissionModel) :\r\n                             error;\r\n          self.handleFailure(commandError, failureMsg);\r\n          deferred.reject(permissionModel, commandError);\r\n          if (!error) {\r\n            jqxhr.abort();\r\n          }\r\n        }).always(function () {\r\n          if (self.originatingView && self.originatingView.unblockActions) {\r\n            self.originatingView.unblockActions();\r\n          }\r\n        });\r\n        return deferred.promise();\r\n      }\r\n      else {\r\n        self.destroyDialog(status);\r\n        return deferred.reject(\r\n            new CommandError(failureMsg, {errorDetails: lang.undefinedCollection}));\r\n      }\r\n    },\r\n\r\n    handleFailure: function (commandError, oneFileFailure) {\r\n      var errObject = Backbone.Model.extend({\r\n            defaults: {\r\n              name: \"\",\r\n              state: 'pending',\r\n              commandName: 'ViewPermission'\r\n            }\r\n          }),\r\n          errObjects;\r\n\r\n      var failedPermissionsCollection = Backbone.Collection.extend({\r\n        model: errObject\r\n      });\r\n      var errCollection = new failedPermissionsCollection();\r\n      errObjects = new errObject({\r\n        name: commandError,\r\n        mime_type: '',\r\n        state: 'rejected'\r\n      });\r\n      errCollection.add(errObjects);\r\n      GlobalMessage.showPermissionApplyingProgress(errCollection, {oneFileFailure: oneFileFailure});\r\n    },\r\n\r\n    destroyDialog: function (status) {\r\n      status.dialog && status.dialog.destroy();\r\n    }\r\n\r\n  });\r\n\r\n  return DeletePermissionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/add.user.group',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/models/command', 'csui/utils/command.error'\r\n], function (module, require, _, $, base, lang, log, CommandModel, CommandError) {\r\n  'use strict';\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ModalAlert;\r\n  var config = module.config();\r\n\r\n  var AddUserOrGroupCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"adduserorgroup\",\r\n      name: lang.CommandNameAddUserorGroup\r\n    },\r\n\r\n    enabled: function (status) {\r\n\r\n      if (config && config.GrantAccessGroupOnly) {\r\n        status.toolItem && status.toolItem.set({'name': lang.addGroups});\r\n      }\r\n      return true;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.suppressSuccessMessage = true;\r\n      require(['csui/models/permission/nodepermission.model',\r\n        'csui/utils/permissions/permissions.precheck',\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (NodePermissionModel, PermissionPreCheck) {\r\n        GlobalMessage = arguments[2];\r\n        ModalAlert = arguments[3];\r\n\r\n        self._selectAddUserOrGroupOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedMember      = selectedOptions.members,\r\n                  selectedPermissions = selectedOptions.permissions,\r\n                  permissionModelData = {\r\n                    right_id: selectedMember.get('id'),\r\n                    permissions: selectedPermissions,\r\n                    apply_to: selectedOptions.apply_to,\r\n                    include_sub_types: selectedOptions.apply_to > 0 ?\r\n                                       PermissionPreCheck.includeSubTypes() : []\r\n                  },\r\n                  nodePermissionModel = new NodePermissionModel(permissionModelData, status);\r\n\r\n              nodePermissionModel.nodeId = status.nodeId;\r\n              if (status.originatingView && status.originatingView.blockActions) {\r\n                status.originatingView.blockActions();\r\n              }\r\n              nodePermissionModel.save(permissionModelData, {\r\n                silent: true,\r\n                wait: true\r\n              }).done(function () {\r\n                nodePermissionModel.set({\r\n                      right_id_expand: _.clone(selectedMember.attributes),\r\n                      type: 'custom'\r\n                    },\r\n                    {silent: true});\r\n                //status.permissionCollection.add(nodePermissionModel);\r\n                GlobalMessage.showMessage('success',\r\n                    self._getMessageWithUserDisplayName(nodePermissionModel));\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                deferred.resolve(nodePermissionModel);\r\n              }).fail(function (error) {\r\n                var commandError = error ? new CommandError(error, nodePermissionModel) :\r\n                                   error;\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                GlobalMessage.showMessage('error', commandError);\r\n                deferred.reject(nodePermissionModel, commandError);\r\n              });\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectAddUserOrGroupOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/members.picker/members.picker.wizard'],\r\n          function (MembersPickerDialog) {\r\n            var unSelectableMembers = status.originalCollection &&\r\n                                      status.originalCollection.models &&\r\n                                      status.originalCollection.models.length > 0 ?\r\n                                      status.originalCollection.models :\r\n                                      status.permissionCollection.models;\r\n            unSelectableMembers = _.filter(unSelectableMembers, function (member) {\r\n              return (member.get(\"type\") === \"custom\");\r\n            });\r\n            var grantAccessGrpOnly = config && config.GrantAccessGroupOnly;\r\n            var membersPickerDialog = new MembersPickerDialog({\r\n              command: 'adduserorgroup',\r\n              context: status.context,\r\n              connector: status.connector,\r\n              dialogClass: 'cs-permission-group-picker',\r\n              displayName: (grantAccessGrpOnly) ? lang.allGroups : lang.allUsersAndGroups,\r\n              dialogTitle: (grantAccessGrpOnly) ? lang.allGroups : lang.addUsersAndGroups,\r\n              startLocation: (grantAccessGrpOnly) ? 'all.groups' : 'all.members',\r\n              adduserorgroup: true,\r\n              nodeModel: status.nodeModel,\r\n              addButtonLabel: lang.AddButtonLabel,\r\n              availablePermissions: status.permissionCollection.availablePermissions,\r\n              startLocations: (grantAccessGrpOnly) ? ['all.groups', 'member.groups'] :\r\n                  ['all.members', 'member.groups'],\r\n              unselectableMembers: unSelectableMembers,\r\n              applyTo: status.applyTo\r\n            });\r\n            membersPickerDialog\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                }).fail(function (error) {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccessWithCount, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccess, displayName);\r\n      }\r\n      return msg;\r\n    }\r\n  });\r\n\r\n  return AddUserOrGroupCommand;\r\n});\n","csui.define('csui/utils/commands/permissions/add.owner.group',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/models/command', 'csui/utils/command.error'\r\n], function (module, require, _, $, base, lang, log, CommandModel, CommandError) {\r\n  'use strict';\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ModalAlert;\r\n  var config = module.config();\r\n\r\n  var AddOwnerOrOwnerGroupCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"addownerorgroup\",\r\n      name: lang.CommandNameAddOwnerOrOwnerGroup\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var collection     = status.originalCollection ? status.originalCollection :\r\n                           status.permissionCollection,\r\n          owner          = collection.findWhere({type: 'owner'}),\r\n          noOwnerOrGroup = (owner && owner.get('permissions') === null),\r\n          noGroup        = !collection.findWhere({type: 'group'}),\r\n          enabled        = collection && (status.nodeModel && status.nodeModel.actions\r\n                           && !!status.nodeModel.actions.get({signature: 'editpermissions'})) &&\r\n                           (noOwnerOrGroup ||\r\n                            noGroup || !owner),\r\n          adminPrivilege = status.authUser &&\r\n                           status.authUser.get('privilege_system_admin_rights');\r\n\r\n      if (!adminPrivilege && config &&\r\n          ((config.AdminRestoreOwner && config.AdminRestoreOwnerGroup) ||\r\n           (!noOwnerOrGroup && noGroup && config.AdminRestoreOwnerGroup) ||\r\n           (!noOwnerOrGroup && !noGroup && config.AdminRestoreOwner))) {\r\n        enabled = adminPrivilege;\r\n      }\r\n\r\n      if (enabled && !!status.toolItem) {\r\n        if (noOwnerOrGroup) {\r\n          if (adminPrivilege) {\r\n            status.toolItem.set('name', lang.AddOwnerOrGroup);\r\n          } else {\r\n            if (config && config.AdminRestoreOwner) {\r\n              if (config && !config.AdminRestoreOwnerGroup) {\r\n                status.toolItem.set('name', lang.AddOwnerGroup);\r\n              }\r\n            } else {\r\n              if (config && config.AdminRestoreOwnerGroup) {\r\n                status.toolItem.set('name', lang.AddOwner);\r\n              } else {\r\n                status.toolItem.set('name', lang.AddOwnerOrGroup);\r\n              }\r\n            }\r\n          }\r\n        } else if (noGroup) {\r\n          status.toolItem.set('name', lang.AddOwnerGroup);\r\n        } else {\r\n          status.toolItem.set('name', lang.AddOwner);\r\n        }\r\n      }\r\n      return enabled;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.suppressSuccessMessage = true;\r\n      require(['csui/models/permission/nodepermission.model',\r\n        'csui/utils/permissions/permissions.precheck',\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (NodePermissionModel, PermissionPreCheck) {\r\n        GlobalMessage = arguments[2];\r\n        ModalAlert = arguments[3];\r\n\r\n        self._selectAddOwnerOrOwnerGroupOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedMember      = selectedOptions.members,\r\n                  selectedPermissions = selectedOptions.permissions,\r\n                  type                = selectedMember.get('type') === 0 ? 'owner' : 'group',\r\n                  permissionModelData = {\r\n                    type: type,\r\n                    right_id: selectedMember.get('id'),\r\n                    permissions: selectedPermissions,\r\n                    apply_to: selectedOptions.apply_to,\r\n                    include_sub_type: selectedOptions.apply_to > 0 ?\r\n                                      PermissionPreCheck.includeSubTypes() : []\r\n                  },\r\n                  saveAttr            = {\r\n                    right_id: selectedMember.get('id'),\r\n                    apply_to: selectedOptions.apply_to,\r\n                    permissions: selectedPermissions\r\n                  },\r\n                  nodePermissionModel = new NodePermissionModel(permissionModelData, status);\r\n\r\n              nodePermissionModel.nodeId = status.nodeModel ? status.nodeModel.get(\"id\") :\r\n                                           status.nodeId;\r\n              if (status.originatingView && status.originatingView.blockActions) {\r\n                status.originatingView.blockActions();\r\n              }\r\n              nodePermissionModel.save(saveAttr, {\r\n                patch: true,\r\n                silent: true,\r\n                wait: true\r\n              }).done(function () {\r\n                nodePermissionModel.set(\r\n                    {\r\n                      right_id_expand: _.clone(selectedMember.attributes),\r\n                      type: type,\r\n                      addOwnerGroup: true\r\n                    },\r\n                    {silent: true});\r\n                //status.permissionCollection.addOwnerOrGroup(nodePermissionModel);\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                GlobalMessage.showMessage('success',\r\n                    self._getMessageWithUserDisplayName(nodePermissionModel));\r\n                deferred.resolve(nodePermissionModel);\r\n              }).fail(function (error) {\r\n                var commandError = error ? new CommandError(error, nodePermissionModel) :\r\n                                   error;\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                GlobalMessage.showMessage('error', commandError);\r\n                deferred.reject(nodePermissionModel, commandError);\r\n              });\r\n            }).fail(function (error) {\r\n          deferred.reject(error);\r\n        });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectAddOwnerOrOwnerGroupOptions: function (status, options) {\r\n      var self              = this,\r\n          deferred          = $.Deferred(),\r\n          owner             = status.originalCollection ?\r\n                              status.originalCollection.findWhere({type: 'owner'}) :\r\n                              status.permissionCollection.findWhere({type: 'owner'}),\r\n          displayName       = lang.allUsersAndGroups,\r\n          selectableTypes, title, startLocation, startLocations,\r\n          authUser = status.authUser || status.originatingView.options.authUser ||\r\n                              (status.context && status.context._user);\r\n      if (owner && owner.get('permissions') === null) {\r\n        selectableTypes = [0, 1];\r\n        title = lang.AddOwnerOrGroupDialogTitle;\r\n        startLocation = 'all.members';\r\n        startLocations = ['all.members', 'member.groups'];\r\n        if (config && config.AdminRestoreOwner && !config.AdminRestoreOwnerGroup &&\r\n            !(authUser.get('privilege_system_admin_rights'))) {\r\n          startLocation = 'all.groups';\r\n          displayName = lang.allGroups;\r\n          selectableTypes = [1];\r\n          startLocations = ['all.groups', 'member.groups'];\r\n        } else if (config && !config.AdminRestoreOwner && config.AdminRestoreOwnerGroup &&\r\n                   !(authUser.get('privilege_system_admin_rights'))) {\r\n          startLocation = 'all.members';\r\n          displayName = lang.allUsersAndGroups;\r\n          selectableTypes = [0];\r\n          startLocations = ['all.members', 'member.groups'];\r\n        }\r\n\r\n      }\r\n      else {\r\n        selectableTypes = owner ? [1] : [0];\r\n        title = owner ? lang.AddOwnerGroupDialogTitle : lang.AddOwnerDialogTitle;\r\n        displayName = owner ? lang.allGroups : displayName;\r\n        startLocation = owner ? 'all.groups' : 'all.members';\r\n        startLocations = owner ? ['all.groups', 'member.groups'] : ['all.members', 'member.groups'];\r\n      }\r\n      require(['csui/dialogs/members.picker/members.picker.wizard'],\r\n          function (MembersPickerDialog) {\r\n            var membersPickerDialog = new MembersPickerDialog({\r\n              command: 'addownerorownergroup',\r\n              context: status.context,\r\n              connector: status.connector,\r\n              dialogClass: 'cs-permission-group-picker',\r\n              displayName: displayName,\r\n              dialogTitle: title,\r\n              startLocation: startLocation,\r\n              nodeModel: status.nodeModel,\r\n              availablePermissions: status.permissionCollection.availablePermissions,\r\n              adduserorgroup: true,\r\n              addButtonLabel: lang.AddButtonLabel,\r\n              startLocations: startLocations,\r\n              selectableTypes: selectableTypes,              \r\n              applyTo: status.applyTo\r\n            });\r\n            membersPickerDialog\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                }).fail(function (error) {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccessWithCount, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccess, displayName);\r\n      }\r\n      return msg;\r\n    }\r\n  });\r\n\r\n  return AddOwnerOrOwnerGroupCommand;\r\n});\n","csui.define('csui/utils/commands/permissions/restore.public.access',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/base',\r\n  'csui/utils/log', 'csui/models/command', 'csui/utils/command.error'\r\n], function (module, require, _, $, lang, base, log, CommandModel,\r\n    CommandError) {\r\n  'use strict';\r\n\r\n  var GlobalMessage;\r\n  var config = module.config();\r\n\r\n  var RestorePublicAccess = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'restorepublicaccess',\r\n      name: lang.CommandNameRestorePublicAccess\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var collection                   = status.originalCollection ? status.originalCollection :\r\n                                         status.permissionCollection,\r\n          nodeModel                    = status.nodeModel || (collection && collection.options &&\r\n                                                            collection.options.node),\r\n          userHasEditPermissionsAction = nodeModel && \r\n                                         nodeModel.actions.get({signature: 'editpermissions'}),\r\n          authUser = status.authUser || (status.context && status.context._user);\r\n\r\n      if (config && config.AdminRestorePublic) {\r\n        userHasEditPermissionsAction = authUser &&\r\n                                       authUser.get('privilege_system_admin_rights');\r\n      }\r\n      return collection && userHasEditPermissionsAction &&\r\n             (!collection.findWhere({type: 'public'}));\r\n    },\r\n\r\n    execute: function (status) {\r\n      var self       = this,\r\n          deferred   = $.Deferred(),\r\n          collection = status.permissionCollection,\r\n          nodePermissionModel, saveAttr,\r\n          nodeModel  = status.nodeModel || collection.node ||\r\n                       (status.originatingView && status.originatingView.model);\r\n\r\n      require([\r\n        'csui/models/permission/nodepermission.model',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/apply.permission.view',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/impl/header/apply.permission.header.view',\r\n        'csui/controls/progressblocker/blocker',\r\n        'csui/controls/dialog/dialog.view',\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/utils/permissions/permissions.precheck'\r\n      ], function (NodePermissionModel, ApplyPermissionView, ApplyPermissionHeaderView,\r\n          BlockingView, DialogView, localGlobalMessage, PermissionPreCheck) {\r\n        GlobalMessage = localGlobalMessage;\r\n        if (nodeModel && nodeModel.get(\"container\")) {\r\n          self._executeApplyPermission(status, nodeModel, ApplyPermissionHeaderView,\r\n              ApplyPermissionView, BlockingView, DialogView, NodePermissionModel,\r\n              PermissionPreCheck)\r\n              .then(deferred.resolve, deferred.reject);\r\n        } else {\r\n          nodePermissionModel = new NodePermissionModel({type: 'public'}, status);\r\n          saveAttr = {'permissions': NodePermissionModel.getReadPermissions()};\r\n          nodePermissionModel.nodeId = status.nodeId;\r\n          if (status.originatingView && status.originatingView.blockActions) {\r\n            status.originatingView.blockActions();\r\n          }\r\n          nodePermissionModel.save(saveAttr, {\r\n            patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n            // mixin makes it a PUT again (backbone would use PATCH)\r\n            wait: true\r\n          }).done(function () {\r\n            nodePermissionModel.set({publicAccess: true}, {silent: true});\r\n            //collection.addPublicAccess(nodePermissionModel);\r\n            if (status.originatingView && status.originatingView.unblockActions) {\r\n              status.originatingView.unblockActions();\r\n            }\r\n            var successMsg = self._getMessageWithUserDisplayName(\r\n                nodePermissionModel.get('results') &&\r\n                nodePermissionModel.get('results').success > 0 ?\r\n                lang.RestorePublicAccessSuccessMessageWithCount :\r\n                lang.RestorePublicAccessSuccessMessage, nodePermissionModel);\r\n            GlobalMessage.showMessage('success', successMsg);\r\n            deferred.resolve(nodePermissionModel);\r\n          }).fail(function (error) {\r\n            var commandError = error ? new CommandError(error, nodePermissionModel) :\r\n                               error;\r\n            if (status.originatingView && status.originatingView.unblockActions) {\r\n              status.originatingView.unblockActions();\r\n            }\r\n            GlobalMessage.showMessage('error', commandError);\r\n            deferred.reject(nodePermissionModel, commandError);\r\n          });\r\n        }\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeApplyPermission: function (status, nodeModel, ApplyPermissionHeaderView,\r\n        ApplyPermissionView, BlockingView, DialogView, NodePermissionModel, PermissionPreCheck) {\r\n      var deferred = $.Deferred();\r\n      this.originatingView = status.originatingView;\r\n      var headerView = new ApplyPermissionHeaderView({'restorePublicAccess': true});\r\n      this._view = new ApplyPermissionView({\r\n        context: status.context,\r\n        model: nodeModel,\r\n        permissionModel: new NodePermissionModel({type: 'public'}, status),\r\n        permissions: NodePermissionModel.getReadPermissions(),\r\n        includeSubTypes: PermissionPreCheck.includeSubTypes(),\r\n        collection: status.permissionCollection,\r\n        applyTo: status.applyTo,\r\n        removePermission: false,\r\n        originatingView: status.originatingView,\r\n        restorePublicAccess: true\r\n      });\r\n      var dialog = new DialogView({\r\n        headerView: headerView,\r\n        view: this._view,\r\n        className: \"csui-permissions-apply-dialog\",\r\n        midSize: true,\r\n        buttons: [\r\n          {\r\n            id: 'apply',\r\n            label: lang.applyButtonLabel,\r\n            'default': true,\r\n            click: function(args) {              \r\n              this._performActions(args).then(deferred.resolve,deferred.reject);\r\n            }.bind(this)\r\n         \r\n          },\r\n          {\r\n            label: lang.cancelButtonLabel,\r\n            close: true\r\n          }\r\n        ]\r\n      });\r\n      dialog.listenTo(dialog, 'hide', _.bind(this.onHideDialog, this));\r\n      BlockingView.imbue(dialog);\r\n      dialog.show();\r\n      return deferred.promise();\r\n    },\r\n\r\n    onHideDialog: function () {\r\n      var origView = this.originatingView;\r\n      origView && origView.trigger(\"unblock:view:actions\");\r\n    },\r\n\r\n    _performActions: function (status) {\r\n      var self                = this,\r\n          deferred            = $.Deferred(),\r\n          permissionModel     = status.dialog ? status.dialog.options.view.options.permissionModel :\r\n                                status.model,\r\n          permissions         = status.dialog && status.dialog.options.view.options.permissions,\r\n          originatingView     = status.dialog && status.dialog.options.view.options.originatingView,\r\n          nodeModel           = status.dialog.options.view.model,\r\n          collection          = status.dialog && status.dialog.options.view.options.collection,\r\n          container           = nodeModel && nodeModel.get(\"container\"),\r\n          permissionModelType = nodeModel && nodeModel.get(\"permissions_model\"), saveAttr;\r\n          self.originatingView = originatingView;\r\n          permissionModel.set('isAddNew', true);\r\n      if (status.dialog) {\r\n        permissionModel.apply_to = (container && permissionModelType === \"advanced\") &&\r\n                                   status.dialog.options.view.subFolderSelected ? 2 :\r\n                                   (container && permissionModelType === \"advanced\") ? 3 : 0;\r\n        permissionModel.include_sub_types = permissionModel.apply_to > 0 ?\r\n                                            status.dialog &&\r\n                                            status.dialog.options.view.options.includeSubTypes : [];\r\n      }\r\n      saveAttr = {\r\n        'permissions': permissions,\r\n        'apply_to': permissionModel.apply_to,\r\n        'include_sub_types': permissionModel.include_sub_types\r\n      };\r\n      permissionModel.nodeId = nodeModel.get(\"id\");\r\n      if (self.originatingView && self.originatingView.blockActions) {\r\n        self.originatingView.blockActions();\r\n      }\r\n      permissionModel.save(saveAttr, {\r\n        patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n        // mixin makes it a PUT again (backbone would use PATCH)\r\n        wait: true\r\n      }).done(function () {\r\n        permissionModel.set({publicAccess: true}, {silent: true});\r\n        self.destroyDialog(status);\r\n        collection.addPublicAccess(permissionModel);\r\n        if (self.originatingView && self.originatingView.unblockActions) {\r\n          self.originatingView.unblockActions();\r\n        }\r\n        var successMsg = self._getMessageWithUserDisplayName(\r\n            permissionModel.get('results') && permissionModel.get('results').success > 0 ?\r\n            lang.RestorePublicAccessSuccessMessageWithCount :\r\n            lang.RestorePublicAccessSuccessMessage, permissionModel);\r\n        GlobalMessage.showMessage('success', successMsg);\r\n        deferred.resolve(permissionModel);\r\n      }).fail(function (error) {\r\n        var commandError = error ? new CommandError(error, permissionModel) :\r\n                           error;\r\n        self.destroyDialog(status);\r\n        if (self.originatingView && self.originatingView.unblockActions) {\r\n          self.originatingView.unblockActions();\r\n        }\r\n        GlobalMessage.showMessage('error', commandError);\r\n        deferred.reject(permissionModel, commandError);\r\n      }); \r\n      return deferred.promise();     \r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (unformattedMsg, permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"type\") === \"public\") {\r\n        displayName = lang.publicAccess;\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(unformattedMsg, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(unformattedMsg, displayName);\r\n      }\r\n      return msg;\r\n    },\r\n\r\n    destroyDialog: function (status) {\r\n      status.dialog && status.dialog.destroy();\r\n    }\r\n  });\r\n\r\n  return RestorePublicAccess;\r\n});\r\n\n","csui.define('csui/utils/commands/personalize.page',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, CommandHelper, lang) {\r\n  'use strict';\r\n  var config = _.extend({\r\n    enablePersonalization: true\r\n  }, config, module.config());\r\n\r\n  var PersonalizePageCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'PersonalizePage',\r\n      name: lang.personalizePage\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var context    = status.context || options && options.context,\r\n          perspective = context.perspective;\r\n      return config.enablePersonalization && perspective && (perspective.get('type') === 'flow'||\r\n             perspective.get('type') === 'sidepanel-right' || perspective.get('type') === 'sidepanel-left');\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var context         = status.context || options && options.context,\r\n      enablePersonalization = (options && options.enablePersonalization) ||\r\n                            config.enablePersonalization;\r\n      if (enablePersonalization) {\r\n        // Edit perspective of page inline in SmartUI\r\n        return this._initPersonalization(status, options, context);\r\n      }\r\n    },\r\n\r\n    _initPersonalization: function (status, options, context) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      require(['csui/perspective.manage/pman.view', 'csui/utils/contexts/factories/node', \r\n      'csui/models/perspective/personalization.model'],\r\n          function (PManView,  NodeModelFactory, PersonalizationModel) {\r\n                var node              = CommandHelper.getJustOneNode(status) ||\r\n                              context.getModel(NodeModelFactory),\r\n                              currentPerspective = context.perspective.toJSON(),\r\n                personalizationModel = new PersonalizationModel(currentPerspective, {node: node, context: context});\r\n                personalizationModel.fetch().then(function() {\r\n                  var pmanView = new PManView({\r\n                    context: context,\r\n                    perspective: personalizationModel,\r\n                    mode: PManView.MODE_PERSONALIZE\r\n                  });\r\n                  pmanView.show();\r\n                  deferred.resolve();\r\n                });                \r\n          }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n  });\r\n\r\n  return PersonalizePageCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/version.settings',['csui/models/command'\r\n], function (CommandModel) {\r\n  'use strict';\r\n\r\n  var VersionSettingsCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"VersionsControl\",\r\n      command_key: ['versionscontrol'],\r\n      scope: \"single\",\r\n      name: 'VersionsSettings'\r\n    }\r\n    // This command is not to be executed\r\n  });\r\n\r\n  return VersionSettingsCommand;\r\n});\r\n\n","\n","csui.define('csui/controls/treebrowse/navigation.tree',['module',\r\n  'csui/lib/backbone', \"csui-ext!csui/controls/treebrowse/navigation.tree\"\r\n], function (module, Backbone, moduleConfigs) {\r\n  'use strict';\r\n\r\n  var config            = module.config(),\r\n      enableSystemLevel = !!config.enable;\r\n  moduleConfigs = moduleConfigs || [];\r\n  var configModel      = Backbone.Model.extend({\r\n        defaults: {\r\n          sequence: 100,\r\n          enabled: function (status, options) {\r\n            return false;\r\n          },\r\n          data: function (status, options) {\r\n            return {};\r\n          }\r\n        }\r\n      }),\r\n      configCollection = Backbone.Collection.extend({\r\n        model: configModel,\r\n        comparator: 'sequence'\r\n      });\r\n\r\n  var NavigationTree = {\r\n\r\n    enabled: function (status, options) {\r\n      if (!!enableSystemLevel) {\r\n        return true;\r\n      }\r\n      var enabled                = false,\r\n          moduleConfigCollection = new configCollection(moduleConfigs);\r\n      moduleConfigCollection.some(function (mConfig) {\r\n        enabled = mConfig.get('enabled')(status, options);\r\n        if (enabled) {\r\n          status.originatingView.treeData = mConfig.get('data')(status, options);\r\n        }\r\n        enabled = enabled ? true : enabled;\r\n        return enabled;\r\n      });\r\n      return enabled;\r\n    }\r\n  };\r\n\r\n  return NavigationTree;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/tree.browse',['csui/lib/jquery', 'csui/lib/underscore', 'csui/models/command',\r\n  'csui/controls/treebrowse/navigation.tree',\r\n  'i18n!csui/utils/commands/nls/lang'\r\n], function ($, _, CommandModel, NavigationTree, lang) {\r\n  'use strict';\r\n\r\n  var TreeBrowseCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"TreeBrowse\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var showTree = status && status.originatingView && status.originatingView.showTree;\r\n      if (showTree === true && status.toolItem) {\r\n        status.toolItem.set({'title': lang.TreeBrowseCollapseTooltip, toolItemAriaExpand: true, 'stateIsOn': true});\r\n      }\r\n\r\n      return NavigationTree.enabled(status, options);\r\n    },\r\n  });\r\n\r\n  return TreeBrowseCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/content.server.administration',['module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/models/command',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, Url, OpenClassicPageCommand, lang) {\r\n\r\n  'use strict';\r\n  var ConnectorFactory;\r\n  var config = window.csui.requirejs.s.contexts._.config\r\n                   .config['csui/utils/contexts/factories/user'] || {};\r\n  config = _.extend({\r\n    initialResponse: {\r\n      data: {\r\n        privilege_system_admin_rights: false\r\n      }\r\n    },\r\n    // Allow defining a value specific for this command\r\n    openInNewTab: null\r\n  }, config, module.config());\r\n\r\n  if (config.openInNewTab === null) {\r\n    config.openInNewTab = OpenClassicPageCommand.openInNewTab;\r\n  }\r\n\r\n  var ContentServerAdministration = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'ContentServerAdministration',\r\n      name: lang.ContentServerAdministrationCommandName\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      return config.initialResponse.data.privilege_system_admin_rights;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context  = status.context || options && options.context,\r\n          target   = config.openInNewTab && window.open('', '_blank') || window,\r\n          self     = this;\r\n      target.focus();\r\n      require(['csui/utils/contexts/factories/connector',\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        target.location.href = self._getUrl(context, status);\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector          = context.getObject(ConnectorFactory),\r\n          cgiUrl             = new Url(connector.connection.url).getCgiScript(),\r\n          urlQueryParameters = this._getUrlQueryParameters(context, status),\r\n          urlQuery           = Url.combineQueryString(urlQueryParameters);\r\n      return Url.appendQuery(cgiUrl, urlQuery);\r\n    },\r\n\r\n    _getUrlQueryParameters: function (context, status) {\r\n      var parameters = {func: 'admin.index'};\r\n      return parameters;\r\n    }\r\n\r\n  });\r\n\r\n  return ContentServerAdministration;\r\n\r\n});\n","csui.define('csui/utils/commands/about.box',[\"module\", \"csui/lib/underscore\", \"csui/lib/jquery\", \"csui/lib/backbone\",\r\n    \"i18n!csui/utils/commands/nls/localized.strings\",\r\n    \"csui/utils/commandhelper\", \"csui/models/command\", \"csui/utils/url\",\r\n], function (module, _, $, Backbone, lang, CommandHelper, CommandModel, URL) {\r\n    'use strict';\r\n\r\n    var config = module.config();\r\n    _.defaults(config, {\r\n        enableAboutBox: false,\r\n        aboutBoxContentView: \"csui/controls/about.box/about.box.view\"\r\n    });\r\n\r\n    var AboutBoxCommand = CommandModel.extend({\r\n\r\n        defaults: {\r\n            signature: \"AboutBox\",\r\n            command_key: ['AboutBox', 'AboutBox'],\r\n            scope: \"single\"\r\n        },\r\n\r\n        enabled: function (status, options) {\r\n            return config.enableAboutBox;\r\n        },\r\n\r\n        execute: function (status, options) {\r\n            var nodes = CommandHelper.getAtLeastOneNode(status),\r\n                node = CommandHelper.getJustOneNode(status);\r\n            return this.showAboutBox();\r\n        },\r\n\r\n        showAboutBox: function () {\r\n            var deferred = $.Deferred();\r\n            var self                = this,\r\n                aboutBoxContentView = config.aboutBoxContentView;\r\n            require([\"csui/controls/dialog/dialog.view\", \"i18n!csui/pages/start/nls/lang\",\r\n                aboutBoxContentView\r\n            ], function (DialogView, PublicLang, AboutBoxView) {\r\n                var aboutBoxView = new AboutBoxView(),\r\n                    dialogView   = new DialogView({\r\n                        view: aboutBoxView,\r\n                        midSize: true,\r\n                        className: 'csui-about-box',\r\n                        title: lang.brandTitle + PublicLang.ProductName,\r\n                        headers: [\r\n                            {\r\n                                class: 'csui-logo-image'\r\n                            }],\r\n\r\n                    });\r\n                dialogView.show();\r\n                deferred.resolve();\r\n                aboutBoxView &&\r\n                aboutBoxView.listenToOnce(dialogView, 'destroy', function () {\r\n                    aboutBoxView.trigger('destroy');\r\n                });\r\n            });\r\n            return deferred.promise();\r\n        }\r\n    });\r\n    return AboutBoxCommand;\r\n});\n","\n","csui.define('csui/utils/commands/restructure.command',['require', 'module',\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/utils/url',\r\n  'csui/utils/base',\r\n  'csui/models/command',\r\n  'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/root/localized.strings'\r\n], function (require, module, _, $, Url, base, CommandModel, CommandError, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n  _.defaults(config, {\r\n    actionType: 'restructure'\r\n  });\r\n\r\n  var RestructureView, GlobalMessage, DialogView, SidePanelView, ModalAlert, NodeLinks,\r\n      ConflictResolver,\r\n      ApplyPropertiesSelectorView,\r\n      ensureDependencies = _.once(function () {\r\n        var deferred = $.Deferred();\r\n        require(['csui/controls/globalmessage/globalmessage',\r\n          'csui/dialogs/restructure/restructure.dialog',\r\n          'csui/controls/dialog/dialog.view',\r\n          'csui/dialogs/modal.alert/modal.alert',\r\n          'csui/controls/side.panel/side.panel.view',\r\n          'csui/utils/node.links/node.links',\r\n          'csui/controls/conflict.resolver/conflict.resolver',\r\n          'csui/dialogs/node.picker/impl/header/apply.properties.selector/apply.properties.selector.view',\r\n          'csui/utils/page.leaving.blocker',\r\n          'csui/utils/contexts/factories/application.scope.factory'\r\n        ], function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\r\n          GlobalMessage = arg1;\r\n          RestructureView = arg2;\r\n          DialogView = arg3;\r\n          ModalAlert = arg4;\r\n          SidePanelView = arg5;\r\n          NodeLinks = arg6;\r\n          ConflictResolver = arg7;\r\n          ApplyPropertiesSelectorView = arg8;\r\n          deferred.resolve();\r\n        }, function (error) {\r\n          deferred.reject(error);\r\n        });\r\n        return deferred.promise();\r\n      });\r\n\r\n  var RestructureCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"Restructure\",\r\n      command_key: [\"restructure\", \"restructure\"],\r\n      name: lang.CommandNameRestructure,\r\n      scope: \"multiple\",\r\n      labels: {\r\n        actionName: lang.RestructuringNodes,\r\n        actionNode: lang.RestructuringNode,\r\n        commandTitle: lang.CommandTitleRestructure,\r\n        commandName: lang.CommandNameRestructure,\r\n        dialogTitle: lang.DialogTitleRestructure,\r\n        dialogTitleSingle: lang.DialogTitleSingleRestructure,\r\n        titleNotAllowed: lang.RestructureNotAllowed,\r\n      },\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      return CommandModel.prototype.enabled.call(this, status, options);\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status.suppressSuccessMessage = true;\r\n      status.suppressFailMessage = true;\r\n      status.restructureCommand = this;\r\n      status.connector = this.connector =\r\n          status.originatingView && status.originatingView.connector;\r\n\r\n      this.context = status.context || (options && options.context);\r\n      this.status = status;\r\n\r\n      var self = this;\r\n\r\n      return ensureDependencies().then(function () {\r\n        var contentView = new RestructureView(status);\r\n        var restructureDialog = new SidePanelView({\r\n          title: lang.RestructureDialogTitle,\r\n          subTitle: status.nodes.length + \" \" + lang.files,\r\n          content: contentView,\r\n          id: \"csui-restructure-Slide-Panel\",\r\n          buttons: [\r\n            {\r\n              id: \"restructure\",\r\n              className: \"binf-btn binf-btn-primary\",\r\n              label: lang.Restructure,\r\n              default: true,\r\n              disabled: true,\r\n              click: _.bind(self.onClickRestructureButton, self),\r\n            },\r\n          ],\r\n        });\r\n        self.restructureDialog = restructureDialog;\r\n        self.contentView = contentView;\r\n        restructureDialog.show();\r\n      });\r\n    },\r\n\r\n    onClickRestructureButton: function () {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n\r\n      this._performRestructure()\r\n          .done(function () {\r\n            ModalAlert.showInformation(lang.confirmationRestructure, {\r\n              titleIcon: \"csui-icon-notification-information\",\r\n            });\r\n            self.restructureDialog.destroy();\r\n            deferred.resolve();\r\n            self.status.nodes.reset();\r\n          })\r\n          .fail(function (error) {\r\n            self._showError(error);\r\n            deferred.reject();\r\n          })\r\n          .always(function () {\r\n            self._unblockActions(self.contentView);\r\n          });\r\n    },\r\n\r\n    _performRestructure: function () {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n\r\n      var selectedNodes = this.contentView.selectedNodes;\r\n      var selectedOptions =\r\n              this.contentView.restructureFormView.selectedOptions;\r\n      var targetFolder =\r\n              this.contentView.restructureFormView.selectedOptions[0];\r\n      var applyProperties =\r\n              this.contentView.restructureFormView.applyProperties;\r\n      var bundleNumber = new Date().getTime();\r\n      var labels = this.get(\"labels\");\r\n      var context = this.context;\r\n      selectedOptions.applyProperties = applyProperties;\r\n      selectedOptions.openSelectedProperties =\r\n          this.contentView.restructureFormView.openSelectedProperties;\r\n\r\n\r\n      this.restructureDialog.hide();\r\n      var namesToResolve = selectedNodes.map(function (node) {\r\n        var returnObj = {\r\n          id: node.get(\"id\"),\r\n          name: node.get(\"name\"),\r\n          container: node.get(\"container\"),\r\n          mime_type: node.get(\"mime_type\"),\r\n          original_id: node.get(\"original_id\"),\r\n          original: node.original,\r\n          type: node.get(\"type\"),\r\n          size: node.get(\"size\"),\r\n          type_name: node.get(\"type_name\"),\r\n          state: \"pending\",\r\n          count: 0,\r\n          total: 1,\r\n          enableCancel: false,\r\n          bundleNumber: bundleNumber,\r\n        };\r\n        var type = node.get(\"type\");\r\n        if (type === 144 || type === 749 || type === 736 || type === 30309) {\r\n          returnObj.size_formatted = node.get(\"size_formatted\");\r\n        } else if (type === 140) {\r\n          returnObj.url = node.get(\"url\");\r\n        }\r\n        returnObj.actions = node.actions;\r\n        returnObj.targetLocation = {\r\n          id: targetFolder.get(\"id\"),\r\n          url: NodeLinks.getUrl(targetFolder),\r\n        };\r\n        var mlDataEnabled = base.getMetadataLanguageInfo().enabled;\r\n        if (mlDataEnabled) {\r\n          (returnObj.multilingual_provided = true),\r\n          !!node.has(\"name_multilingual\") &&\r\n          (returnObj.name_multilingual = node.get(\"name_multilingual\"));\r\n          !!node.has(\"description_multilingual\") &&\r\n          (returnObj.description_multilingual = node.get(\r\n              \"description_multilingual\"\r\n          ));\r\n        }\r\n        return returnObj;\r\n      });\r\n      var actionNamesToResolve = _.map(namesToResolve, function (name) {\r\n        return _.clone(name);\r\n      });\r\n\r\n      this._resolveNamingConflicts(targetFolder, actionNamesToResolve, labels)\r\n          .done(function (actionInstructions) {\r\n            _.each(actionInstructions, function (instruction) {\r\n              if (instruction.id === undefined) {\r\n                instruction.id = _.findWhere(namesToResolve, {\r\n                  name: instruction.name,\r\n                }).id;\r\n              }\r\n            });\r\n            var that = self;\r\n            self\r\n                ._metadataHandling(\r\n                    actionInstructions,\r\n                    labels,\r\n                    _.extend(selectedOptions, {\r\n                      context: context,\r\n                      targetFolder: targetFolder,\r\n                    })\r\n                )\r\n                .done(function () {\r\n                  var connector, startProcess, notifyUsers, reference, comment, values,\r\n                      selectedNodes, applyProperties, openSelectedProperties, selectedNodeIDs;\r\n\r\n                  //reading values form Restructure form  view\r\n                  values = that.contentView.restructureFormView.getValues();\r\n                  connector = that.status.container && that.status.container.connector;\r\n                  selectedNodes = that.status && that.status.nodes;\r\n                  applyProperties = selectedOptions.applyProperties;\r\n                  selectedNodeIDs = [];\r\n\r\n                  if (values) {\r\n                    startProcess = values.startProcessAt;\r\n                    notifyUsers = values.notifyUsers;\r\n                    reference = values.reference;\r\n                    comment = values.comment;\r\n                  }\r\n\r\n                  _.each(selectedNodes.models, function (model) {\r\n                    selectedNodeIDs.push({dataid: model.get(\"id\")});\r\n                  });\r\n\r\n                  var options = {\r\n                    connector: connector,\r\n                    targetFolder: targetFolder,\r\n                    applyProperties: applyProperties ? applyProperties - 1 : 0,\r\n                    status: that.status,\r\n                    context: context,\r\n                    collection: that.status.collection,\r\n                    startProcess: startProcess,\r\n                    notifyUsers: notifyUsers,\r\n                    reference: reference,\r\n                    comment: comment,\r\n                    selectedNodeIDs: selectedNodeIDs,\r\n                  };\r\n\r\n                  that\r\n                      .getExternalBodyParams(\r\n                          options.connector,\r\n                          options.selectedNodeIDs\r\n                      )\r\n                      .then(function (extBodyParams) {\r\n                        that\r\n                            ._restructureNodeWithMetadata(\r\n                                actionInstructions,\r\n                                extBodyParams,\r\n                                options\r\n                            )\r\n                            .done(function () {\r\n                              deferred.resolve();\r\n                            })\r\n                            .fail(function (error) {\r\n                              var errObj = new CommandError(error);\r\n                              deferred.reject(errObj);\r\n                            });\r\n                      });\r\n                })\r\n                .fail(function () {\r\n                  deferred.reject();\r\n                });\r\n          })\r\n          .fail(function (error) {\r\n            // resolve namingConflicts\r\n            if (\r\n                error &&\r\n                error.userAction &&\r\n                error.userAction === \"cancelResolveNamingConflicts\"\r\n            ) {\r\n              self.trigger(\"resolve:naming:conflicts:cancelled\");\r\n            } else if (error && !error.cancelled) {\r\n              // if not undefined (cancel) then display error\r\n              self.showError(error);\r\n            }\r\n            deferred.reject();\r\n          });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    checkMultilingualInfo: function (instructions, params) {\r\n      _.each(instructions, function (instruction) {\r\n        _.each(params.nodes, function(node){\r\n            if((node.dataid === instruction.id) && !!instruction.multilingual_provided) {\r\n              instruction.name_multilingual &&\r\n             (node.name_multilingual = instruction.name_multilingual);\r\n              instruction.description_multilingual &&\r\n             (node.description_multilingual = instruction.description_multilingual);\r\n            }\r\n        });\r\n      });\r\n    },\r\n\r\n    _resolveNamingConflicts: function (targetFolder, nodeNames, labels) {\r\n      var h1 =\r\n              nodeNames.length === 1\r\n              ? labels.actionNode\r\n              : _.str.sformat(labels.actionName, nodeNames.length);\r\n      var conflictResolver = new ConflictResolver({\r\n        h1Label: h1,\r\n        actionBtnLabel: labels.commandName,\r\n        excludeAddVersion: true,\r\n        container: targetFolder,\r\n        files: nodeNames,\r\n        originatingView: this.originatingView,\r\n      });\r\n      return conflictResolver.run();\r\n    },\r\n\r\n    _metadataHandling: function (items, labels, options) {\r\n      var deferred = $.Deferred();\r\n      this.originatingView &&\r\n      this.originatingView._blockingCounter === 0 &&\r\n      this.originatingView.blockActions();\r\n      require([\r\n        \"csui/widgets/metadata/metadata.copy.move.items.controller\",\r\n      ], function (MetadataCopyMoveItemsController) {\r\n        var openMetadata = options.openSelectedProperties;\r\n        var applyProperties = options.applyProperties;\r\n        var metadataController = new MetadataCopyMoveItemsController();\r\n        var controllerFunction;\r\n\r\n        // open the metadata view\r\n        if (openMetadata) {\r\n          controllerFunction = metadataController.CopyMoveItemsWithMetadata;\r\n        } else if (\r\n            applyProperties ===\r\n            ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES ||\r\n            applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES\r\n        ) {\r\n          // check for required metadata\r\n          controllerFunction = metadataController.CopyMoveItemsRequiredMetadata;\r\n        } else {\r\n          return deferred.resolve();\r\n        }\r\n\r\n        if (\r\n            applyProperties ===\r\n            ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES\r\n        ) {\r\n          options.inheritance = \"original\";\r\n        } else if (\r\n            applyProperties ===\r\n            ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES\r\n        ) {\r\n          options.inheritance = \"destination\";\r\n        } else if (\r\n            applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES\r\n        ) {\r\n          options.inheritance = \"merged\";\r\n        }\r\n\r\n        options.action = config.actionType;\r\n        controllerFunction\r\n            .call(metadataController, items, options)\r\n            .done(function () {\r\n              deferred.resolve();\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _showError: function (error) {\r\n      if (error && !error.cancelled) {\r\n        var cmdErr = new CommandError(error);\r\n\r\n        GlobalMessage.showMessage(\r\n            \"error\",\r\n            lang.errorRestructure,\r\n            cmdErr.errorDetails || cmdErr.message\r\n        );\r\n      }\r\n      this.restructureDialog.destroy();\r\n    },\r\n\r\n    _blockActions: function (view) {\r\n      var collectionView = view && (view.resultsView || view.tableView);\r\n      collectionView && collectionView.blockActions();\r\n    },\r\n\r\n    _unblockActions: function (view) {\r\n      var collectionView = view && (view.resultsView || view.tableView);\r\n      collectionView && collectionView.unblockActions();\r\n    },\r\n\r\n    getExternalBodyParams: function (connector, selectedNodeIds) {\r\n      return $.Deferred().resolve(this.externalBodyParams).promise();\r\n    },\r\n\r\n    externalBodyParams: {},\r\n\r\n    _restructureNodeWithMetadata: function (\r\n        instructions,\r\n        extBodyParams,\r\n        options\r\n    ) {\r\n      var bodyParam, url;\r\n\r\n      url = Url.combine(\r\n          this.connector.getConnectionUrl().getApiBase(\"v2\") + \"restructure\"\r\n      );\r\n      bodyParam = {\r\n        parent_id: options.targetFolder.get(\"id\"),\r\n        nodes: options.selectedNodeIDs,\r\n        startdate: options.startProcess,\r\n        userstobenotified: options.notifyUsers,\r\n        subject: options.reference,\r\n        message: options.comment,\r\n        AttrSourceType: options.applyProperties,\r\n      };\r\n      _.extend(bodyParam, extBodyParams);\r\n\r\n      //handle multilingual data\r\n      _.isFunction(this.checkMultilingualInfo) &&\r\n      this.checkMultilingualInfo(instructions, bodyParam);\r\n\r\n      //handle category data\r\n      _.each(instructions, function (instruction) {\r\n        _.each(bodyParam.nodes , function(node) {\r\n            if(node.dataid === instruction.id) {\r\n              node.roles = instruction.extended_data && instruction.extended_data.roles;\r\n            }\r\n        });\r\n      });\r\n\r\n      var restructureOptions = this.connector.extendAjaxOptions({\r\n        url: url,\r\n        method: \"PUT\",\r\n        data: bodyParam,\r\n        contentType: this.connector.getAjaxContentType(),\r\n      });\r\n\r\n      return this.connector.makeAjaxCall(restructureOptions);\r\n    },\r\n  });\r\n  return RestructureCommand;\r\n});\n","csui.define('csui/temporary/cop/commands/open.blog',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenBlogCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenBlog'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 356 || type === 357;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var blog = node.get('type') === 356;\r\n      return {\r\n        func: 'll',\r\n        objAction: blog ? 'view' : 'viewincontainer',\r\n        // TODO: Is the logStopConditionID parameter important for the blog entry?\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenBlogCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.faq',['csui/lib/jquery', 'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function ($, CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenFaqCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenFAQ'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 123475 || type === 123476;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var faq = node.get('type') === 123475,\r\n          urlQuery = $.param({\r\n            func: 'll',\r\n            objAction: 'view',\r\n            objId: faq ? node.get('id') : node.get('volume_id'),\r\n            nexturl: location.href\r\n          });\r\n      return faq ? urlQuery : urlQuery + '#entry_' + node.get('id');\r\n    }\r\n\r\n  });\r\n\r\n  return OpenFaqCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.forum',['csui/lib/jquery', 'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function ($, CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenForumCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenForum'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 123469 || type === 123470;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var forum = node.get('type') === 123469;\r\n      return {\r\n        func: 'll',\r\n        objAction: forum ? 'view' : 'viewincontainer',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenForumCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.wiki',['csui/lib/jquery', 'csui/utils/url',\r\n  'csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function ($, Url, CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenWikiCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenWiki'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 5573 || type === 5574;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var url = OpenClassicPageCommand.prototype.getUrl.apply(this, arguments),\r\n          wiki = node.get('type') === 5573;\r\n      return wiki ? url : Url.combine(url, 'open', node.get('id'));\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var wiki = node.get('type') === 5573;\r\n      if (wiki) {\r\n        return {\r\n          func: 'll',\r\n          objAction: 'browse',\r\n          objId: node.get('id'),\r\n          viewType: 1,\r\n          nexturl: location.href\r\n        };\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return OpenWikiCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.mailstore',['csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenMailStoreCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenMailStore'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 3030331;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var mailStore = node.get('type') === 3030331;\r\n      if (mailStore) {\r\n        return {\r\n          func: 'll',\r\n          objAction: 'browse',\r\n          objId: node.get('id'),\r\n          viewType: 1,\r\n          nexturl: location.href\r\n        };\r\n      }\r\n    }\r\n  });\r\n\r\n  return OpenMailStoreCommand;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/open.document/csui.open.document.delegates',[\r\n  'module', 'csui/lib/underscore',\r\n  'csui/utils/commands/open.specific.node.perspective',\r\n  'csui/utils/commands/open', 'csui/utils/commands/doc.preview'\r\n], function (module, _, OpenSpecificNodePerspectiveCommand,\r\n    OpenDocumentContentCommand, DocPreviewCommand) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    allowViewContent: true,\r\n    allowPerspective: false\r\n  }, module.config());\r\n\r\n  return [\r\n    // Force the perspective to be opened instead of the content if the\r\n    // according flag has been flipped. Otherwise the content opens by default.\r\n    {\r\n      sequence: 500,\r\n      command: OpenSpecificNodePerspectiveCommand,\r\n      decides: function (node, options) {\r\n        // Perspective navigation is possible only with perspective context.\r\n        // Do not allow navigating to document overview with other contexts.\r\n        // TODO: Think about a better solutions for:\r\n        // * Recognition of PerspectiveContext in the release build.\r\n        // * Other contexts can perform a navigation. (PortalContext)\r\n        var context = options && options.context;\r\n        if (!(context && context.perspective)) {\r\n          return false;\r\n        }\r\n        return config.allowPerspective;\r\n      }\r\n    },\r\n    // Check enabling of the preview earlier than viewers, which are\r\n    // implemented by the Open command..\r\n    {\r\n      sequence: 750,\r\n      command: DocPreviewCommand\r\n    },\r\n    // Open the document content using one of open content plugins, if it\r\n    // is not disabled. (It is enabled by default.)\r\n    {\r\n      sequence: 1000,\r\n      command: OpenDocumentContentCommand,\r\n      decides: function () {\r\n        return config.allowViewContent;\r\n      }\r\n    },\r\n    // Fall back to opening the node perspective if the node supports Smart UI\r\n    // and is openability is not forbidden.\r\n    {\r\n      sequence: 10000,\r\n      command: OpenSpecificNodePerspectiveCommand\r\n    }\r\n  ];\r\n});\r\n\n","csui.define('csui/utils/commands/versions/open.version/csui.open.version.delegates',[\r\n    'require', 'csui/lib/underscore',\r\n    'csui/utils/commands/versions/open.version.perspective',\r\n    'csui/utils/commands/versions/open', 'csui/utils/commands/versions/doc.version.preview'\r\n  ], function (require, _, OpenVersionPerspectiveCommand,\r\n      OpenVersionContentCommand, DocVersionPreviewCommand) {\r\n    'use strict';\r\n\r\n    var config = _.extend({\r\n      allowViewContent: true,\r\n      allowPerspective: false\r\n    }, require.moduleConfig('csui/utils/commands/open.document/csui.open.document.delegates'));\r\n\r\n    return [\r\n      // Force the perspective to be opened instead of the content if the\r\n      // according flag has been flipped. Otherwise the content opens by default.\r\n      {\r\n        sequence: 500,\r\n        command: OpenVersionPerspectiveCommand,\r\n        decides: function (version, options) {\r\n          // Perspective navigation is possible only with perspective context.\r\n          // Do not allow navigating to version overview with other contexts.\r\n          // TODO: Think about a better solutions for:\r\n          // * Recognition of PerspectiveContext in the release build.\r\n          // * Other contexts can perform a navigation. (PortalContext)\r\n          var context = options && options.context;\r\n          if (!(context && context.perspective)) {\r\n            return false;\r\n          }\r\n          return config.allowPerspective;\r\n        }\r\n      },\r\n      // Check enabling of the preview earlier than viewers, which are\r\n      // implemented by the Open command..\r\n      {\r\n        sequence: 750,\r\n        command: DocVersionPreviewCommand\r\n      },\r\n      // Open the version content using one of open content plugins, if it\r\n      // is not disabled. (It is enabled by default.)\r\n      {\r\n        sequence: 1000,\r\n        command: OpenVersionContentCommand,\r\n        decides: function () {\r\n          return config.allowViewContent;\r\n        }\r\n      },\r\n      // Fall back to opening the version perspective.\r\n      {\r\n        sequence: 10000,\r\n        command: OpenVersionPerspectiveCommand\r\n      }\r\n    ];\r\n  });\r\n\n","\n","csui.define('csui/utils/commands/goto.location',['require', 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command',\r\n  'csui/models/node/node.model',\r\n  'csui-ext!csui/utils/commands/goto.location'\r\n], function (require, $, base, _, Backbone, lang, CommandHelper, CommandModel, NodeModel, navExtensions) {\r\n  'use strict';\r\n\r\n  var GoToLocationCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"goToLocation\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      var context = status.context || options && options.context;\r\n\r\n      var currentNode;\r\n      if (context.hasModel('node')) {\r\n        currentNode = context.getModel('node');\r\n      }\r\n\r\n      var parentNode;\r\n      if (node.parent) {\r\n        parentNode = node.parent;\r\n      }\r\n\r\n      var theSameNode = false;\r\n      if (currentNode && parentNode) {\r\n        theSameNode = (currentNode.get('id') === parentNode.get('id'));\r\n      }\r\n\r\n      return node && this._isSupported(node) && !theSameNode;\r\n    },\r\n\r\n    _isSupported: function (node) {\r\n      //this may be extend in future for other object types also,\r\n      //now it supports document and email\r\n      return node.parent && node.parent.isFetchable();\r\n    },\r\n\r\n    // TODO: Remove this, as soon as the actions for parents\r\n    // or other expanded nodes  are returned by the server\r\n    _makeAccessible: function () {\r\n      return ['open'];\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          node = CommandHelper.getJustOneNode(status),\r\n          nodeParent,\r\n          navOptions = {originatingView: status.originatingView, context: status.context},\r\n          self = this;\r\n\r\n      if (node && this._isSupported(node)) {\r\n        nodeParent = node.parent;\r\n      } else if (!node.parent && status.model){\r\n        nodeParent = status.model;\r\n      }\r\n\r\n      if (nodeParent) {\r\n        \r\n        if (nodeParent && nodeParent.get('type') === undefined) {\r\n          // When the object is not accessible then we are not getting the parent type so we\r\n          // need to retrieve this value as per the DefaultActionController implementation\r\n          var parentNode = new NodeModel({\r\n            id: nodeParent.get('id')\r\n          }, {\r\n            connector: nodeParent.connector,\r\n            commands: this._makeAccessible()\r\n          });\r\n\r\n          parentNode.fetch().done(function (resp) {\r\n            nodeParent = parentNode;\r\n            self.navigate(nodeParent, navOptions);\r\n            deferred.resolve();\r\n          }).fail(function (resp) {\r\n            require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlert) {\r\n              var error = new base.Error(resp);\r\n              ModalAlert.showError(error.message);\r\n            });\r\n            deferred.reject();\r\n          });\r\n        } else {\r\n          this.navigate(nodeParent, navOptions);\r\n          deferred.resolve();\r\n        }\r\n      }\r\n      return deferred.promise();\r\n    },\r\n\r\n    executeDefaultAction: function (node, originatingView, context) {\r\n      var args = {node: node};\r\n      originatingView.trigger('before:defaultAction', args);\r\n      var deferred = $.Deferred();\r\n      if (!args.cancel) {\r\n        require(['csui/utils/commands'\r\n        ], function (commands) {\r\n          var command = commands.get('Browse');\r\n          if (!command) {\r\n            throw new Error('Invalid command: Browse');\r\n          }\r\n          var status  = {\r\n                nodes: new Backbone.Collection([node])\r\n              },\r\n              options = {\r\n                context: context,\r\n                originatingView: originatingView\r\n              };\r\n\r\n          CommandHelper.handleExecutionResults(command.execute(status, options))\r\n              .then(function () {\r\n                originatingView.trigger('executed:defaultAction', args);\r\n                deferred.resolve();\r\n              });\r\n\r\n        }, deferred.reject);\r\n\r\n      }\r\n    },\r\n\r\n    navigate: function (node, options) {\r\n      if (navExtensions) {\r\n        var self = this;\r\n        var promise = navExtensions.reduce(\r\n          function (previousPromise, navExtension) {\r\n            return previousPromise.catch(function (error) {\r\n              if (error) {\r\n                throw error;\r\n              } else {\r\n                return navExtension.navigate(node, options);\r\n              }\r\n            });\r\n          }, $.Deferred().reject());\r\n\r\n        return promise.catch(function (error) {\r\n          if (error) {\r\n            throw error;\r\n          } else {\r\n            self.executeDefaultAction(node, options.originatingView, options.context);\r\n          }\r\n        });\r\n      } else {\r\n        this.executeDefaultAction(node, options.originatingView, options.context);\r\n        return $.Deferred().resolve().promise();\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return GoToLocationCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/collection/collect',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/backbone',\r\n  'csui/utils/base', 'csui/utils/url', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/collection/nls/lang', 'csui/models/command',\r\n  'csui/utils/commands/multiple.items', 'csui/utils/commandhelper'\r\n], function (module, require, $, Backbone, base, Url, _, lang, CommandModel,\r\n    MultipleItemsCommand, CommandHelper) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  var GlobalMessage, TaskQueue, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory, CollectionConflictView, nodeLinks;\r\n\r\n  var CollectCommandParent = CommandModel.extend({});\r\n  _.extend(CollectCommandParent.prototype, MultipleItemsCommand); //apply required mixin\r\n\r\n  var CollectCommand = CollectCommandParent.extend({\r\n\r\n    defaults: {\r\n      signature: \"Collect\",\r\n      scope: \"multiple\",\r\n      command_key: ['collect', 'Collect'],\r\n      successMessages: {\r\n        formatForOne: lang.CollectOneItemSuccessMessage,\r\n        formatForTwo: lang.CollectManyItemsSuccessMessage,\r\n        formatForMany: lang.CollectManyItemsSuccessMessage,\r\n        formatForFive: lang.CollectManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForOne: lang.CollectOneItemFailMessage,\r\n        formatForTwo: lang.CollectManyItemsFailMessage,\r\n        formatForMany: lang.CollectManyItemsFailMessage,\r\n        formatForFive: lang.CollectManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var enable = this._isSupported(status.container),\r\n          nodes  = CommandHelper.getAtLeastOneNode(status);\r\n      enable = !!enable && !!nodes && nodes.length;\r\n      enable = enable && CollectCommand.__super__.enabled.apply(this, arguments);\r\n      return enable;\r\n    },\r\n\r\n    _isSupported: function (node) {\r\n      var unsupportedObjects = [298], //this may be extend in future for other object types also\r\n          // in case of favorites and recently widgets container is undefined so still need to enable command\r\n          support            = !!node ? $.inArray(node.get('type'), unsupportedObjects) === -1 :\r\n                               true;\r\n      return support;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var that     = this,\r\n          deferred = $.Deferred();\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/controls/conflict.resolver/impl/collection.conflicts/collection.conflicts.view',\r\n        'csui/utils/taskqueue', 'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n        'csui/utils/contexts/factories/next.node', 'csui/utils/node.links/node.links'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        CollectionConflictView = arguments[1];\r\n        TaskQueue = arguments[2];\r\n        UploadFileCollection = arguments[3];\r\n        PageLeavingBlocker = arguments[4];\r\n        NextNodeModelFactory = arguments[5];\r\n        nodeLinks = arguments[6];\r\n\r\n        that._addToCollection(status, options).done(function (container) {\r\n          var selectedNodes    = status.nodes.models,\r\n              nodes            = _.map(selectedNodes, function (node) {\r\n                return {\r\n                  name: node.get('name'),\r\n                  state: 'pending',\r\n                  count: 0,\r\n                  total: 1,\r\n                  node: node\r\n                };\r\n              }),\r\n              targetFolder     = container.nodes,\r\n              uploadCollection = new UploadFileCollection(nodes, {connector: connector}),\r\n              connector        = (status.container && status.container.connector) ||\r\n                                 (status.originatingView && status.originatingView.connector) ||\r\n                                 (status.collection && status.collection.connector) ||\r\n                                 (selectedNodes[0] && selectedNodes[0].connector);\r\n          that._announceOperationStart(status);\r\n          uploadCollection.each(function (fileUpload) {\r\n            var node = fileUpload.get('node');\r\n            fileUpload.node = node;\r\n            fileUpload.unset('node');\r\n            fileUpload.set('mime_type', node.get('mime_type'));\r\n          });\r\n\r\n          that._addSelectedNodesToCollection(uploadCollection, connector, targetFolder[0],\r\n              status.collection)\r\n              .then(function (promises) {\r\n                GlobalMessage.hideFileUploadProgress();\r\n                var result = that._checkPromisess(promises);\r\n                if (result.failedNodes.length) {\r\n                  that._showDialog(result.failedNodes).then(\r\n                      function (resolveOption, dialog) {\r\n                        dialog.kill();\r\n                        //if any success items are there then show global message\r\n                        if (result.successNodes.length) {\r\n                          var msgOptions = {\r\n                            context: status.context,\r\n                            nextNodeModelFactory: NextNodeModelFactory,\r\n                            link_url: nodeLinks.getUrl(targetFolder[0]),\r\n                            targetFolder: targetFolder[0]\r\n                          };\r\n                          that.showSuccessWithLink(result.successNodes.models, msgOptions);\r\n                        }\r\n                      });\r\n\r\n                } else if (result.successNodes.length) {\r\n                  // display result message\r\n                  var msgOptions = {\r\n                    context: status.context,\r\n                    nextNodeModelFactory: NextNodeModelFactory,\r\n                    link_url: nodeLinks.getUrl(targetFolder[0]),\r\n                    targetFolder: targetFolder[0]\r\n                  };\r\n                  that.showSuccessWithLink(promises, msgOptions);\r\n                }\r\n              });\r\n          that._announceOperationEnd(status);\r\n          var targetNodeInCurrentCollection;\r\n          if (status.collection && status.originatingView &&\r\n              status.originatingView.findNodeFromCollection) {\r\n            targetNodeInCurrentCollection = status.originatingView.findNodeFromCollection(\r\n                status.collection, targetFolder[0]);\r\n          } else if (status.collection) {\r\n            targetNodeInCurrentCollection = status.collection.get(targetFolder[0].get('id')) ||\r\n                                            status.collection.findWhere(\r\n                                                {id: targetFolder[0].get('id')});\r\n          }\r\n          targetNodeInCurrentCollection &&\r\n          targetNodeInCurrentCollection.fetch();\r\n        });\r\n\r\n        deferred.resolve();\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _addToCollection: function (status, options) {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodePicker) {\r\n            var pickerOptions = _.extend({\r\n              selectableTypes: [298],\r\n              addableTypes: [298],\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: lang.selectCollectionDialogTitle,\r\n              selectButtonLabel: lang.selectCollectButtonLabel,\r\n              globalSearch: true,\r\n              selectMultiple: false,\r\n              context: options ? options.context : status.context,\r\n              startLocation: 'recent.containers',\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            }, status);\r\n\r\n            self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function () {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _addSelectedNodesToCollection: function (uploadCollection, connector, targetFolder,\r\n        targetCollection) {\r\n      var self     = this,\r\n          queue    = new TaskQueue({\r\n            parallelism: config.parallelism\r\n          }),\r\n          count    = 0,\r\n          promises = _.map(uploadCollection.models, function (model) {\r\n            var deferred = $.Deferred();\r\n            queue.pending.add({\r\n              worker: function () {\r\n                var node     = model.node,\r\n                    node_id  = node.get('id'),\r\n                    targetId = targetFolder.get('id');\r\n                self._collectNode(connector, targetId, node_id)\r\n                    .done(function () {\r\n\r\n                      model.set('count', 1);\r\n                      model.deferred.resolve(model);\r\n\r\n                      deferred.resolve(model);\r\n                    })\r\n                    .fail(function (cause) {\r\n                      deferred.resolve(model);\r\n                    });\r\n                return deferred.promise();\r\n              }\r\n            });\r\n            count++;\r\n            return deferred.promise(promises);  // return promises\r\n          });\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.CollectingOneItem,\r\n        oneFileSuccess: lang.CollectOneItemSuccessMessage,\r\n        multiFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n        oneFilePending: lang.CollectingOneItem,\r\n        multiFilePending: lang.CollectingItems,\r\n        oneFileFailure: lang.CollectOneItemFailMessage,\r\n        multiFileFailure: lang.CollectManyItemsFailMessage2,\r\n        someFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n        someFilePending: lang.CollectingItems,\r\n        someFileFailure: lang.CollectManyItemsFailMessage2,\r\n        enableCancel: false\r\n      });\r\n\r\n      return $.whenAll.apply($, promises);\r\n    },\r\n\r\n    _collectNode: function (connector, targetFolderID, node_id) {\r\n      var deferred = $.Deferred();\r\n      var nodeAttr = {\r\n        \"collection_id\": targetFolderID\r\n      };\r\n\r\n      var collectOptions = {\r\n        url: Url.combine(connector.getConnectionUrl().getApiBase('v2'), '/nodes/' + node_id),\r\n        type: 'PUT',\r\n        data: nodeAttr,\r\n        contentType: 'application/x-www-form-urlencoded'\r\n      };\r\n\r\n      connector.makeAjaxCall(collectOptions).done(function (resp) {\r\n        deferred.resolve(resp);\r\n\r\n      }).fail(function (resp) {\r\n        deferred.reject(resp);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _checkPromisess: function (promises) {\r\n      if (!_.isArray(promises)) {\r\n        promises = [promises];\r\n      }\r\n\r\n      var successPromises = new Backbone.Collection(),\r\n          failedPromises  = new Backbone.Collection();\r\n\r\n      _.each(promises, function (prom) {\r\n        if (prom !== undefined) {\r\n          if (!prom.cancelled) {\r\n            if (prom.get(\"count\") === undefined) {\r\n              //which is not resolved or rejected\r\n            } else if (prom.get(\"count\")) {\r\n              successPromises.push(prom);\r\n            }\r\n            else {\r\n              failedPromises.push(prom);\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return {\r\n        successNodes: successPromises,\r\n        failedNodes: failedPromises\r\n      };\r\n    },\r\n\r\n    _showDialog: function (conflictFiles) {\r\n      var deferred = $.Deferred(),\r\n          buttons  = [{\r\n            id: 'close',\r\n            close: true,\r\n            label: lang.conflictsDialogCloseLabel,\r\n            toolTip: lang.conflictsDialogCloseLabel,\r\n            click: function (args) {\r\n              deferred.resolve('close', args.dialog);\r\n            }\r\n          }];\r\n      this._showConflictDialog(conflictFiles, buttons);\r\n      return deferred;\r\n    },\r\n\r\n    _showConflictDialog: function (collection, buttons) {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n      require(['csui/controls/dialog/dialog.view'], function (DialogView) {\r\n        var failureMessage = base.formatMessage(collection.length, self.get(\"errorMessages\")),\r\n            dialog         = new DialogView({\r\n              title: failureMessage,\r\n              midSize: true,\r\n              iconLeft: 'csui-icon-notification-information',\r\n              className: \"csui-collection-conflicts-dialog\",\r\n              view: self._getListView(collection),\r\n              buttons: buttons\r\n            });\r\n        dialog.show();\r\n        return dialog;\r\n      });\r\n\r\n    },\r\n\r\n    _getListView: function (conflictFiles) {\r\n      var retVal = new CollectionConflictView(_.extend({}, {collection: conflictFiles}));\r\n      return retVal;\r\n    },\r\n\r\n    _announceOperationStart: function (status) {\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.blockActions) {\r\n        originatingView.blockActions();\r\n      }\r\n      PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n    },\r\n\r\n    _announceOperationEnd: function (status) {\r\n      PageLeavingBlocker.disable();\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return CollectCommand;\r\n\r\n});\r\n\n","csui.define('bundles/csui-commands',[\r\n  // Commands\r\n  'csui/utils/commands/back.to.last.fragment',\r\n  'csui/integration/folderbrowser/commands/go.to.node.history',\r\n  'csui/integration/folderbrowser/commands/open.full.page.container',\r\n  'csui/integration/folderbrowser2/commands/open.full.page.container',\r\n  'csui/utils/commands',\r\n  'csui/utils/commands/add/add.mixin',\r\n  'csui/utils/commands/add.categories',\r\n  'csui/utils/commands/add',\r\n  'csui/utils/commands/add.item.metadata',\r\n  'csui/utils/commands/add.version',\r\n  'csui/utils/commands/browse',\r\n  'csui/utils/commands/collection/collect.items',\r\n  'csui/utils/commands/collection/remove.collected.items',\r\n  'csui/utils/commands/confirmable',\r\n  'csui/utils/commands/copy',\r\n  'csui/utils/commands/copy.link',\r\n  'csui/utils/commands/create.perspective',\r\n  'csui/utils/commands/delete',\r\n  'csui/utils/commands/delete/delete.self.handler',\r\n  'csui/utils/commands/doc.preview',\r\n  'csui/utils/commands/download',\r\n  'csui/utils/commands/open.base',\r\n  'csui/utils/commands/open.document/open.document',\r\n  'csui/utils/commands/zipanddownload',\r\n  'csui/utils/commands/edit',\r\n  // TODO: Move these 3 commands and also their toolbar\r\n  // configurations (flyouts) to les.fastedit.\r\n  'csui/utils/commands/editactivex',\r\n  'csui/utils/commands/editofficeonline',\r\n  'csui/utils/commands/edit.perspective',\r\n  'csui/utils/commands/editwebdav',\r\n  'csui/utils/commands/email.link',\r\n  'csui/utils/commands/execute.saved.query',\r\n  'csui/utils/commands/execute.search.form.query',\r\n  'csui/utils/commands/favorite.add',\r\n  'csui/utils/commands/favorite.remove',\r\n  'csui/utils/commands/inlineedit',\r\n  'csui/utils/commands/move',\r\n  'csui/utils/commands/multiple.items',\r\n  'csui/utils/commands/navigate',\r\n  'csui/utils/commands/node',\r\n  'csui/utils/commands/open',\r\n  'csui/utils/commands/open.node.perspective',\r\n  'csui/utils/commands/open.classic.page',\r\n  'csui/utils/commands/open.discussion',\r\n  'csui/utils/commands/open.milestone',\r\n  'csui/utils/commands/open.channel',\r\n  'csui/utils/commands/open.news',\r\n  'csui/utils/commands/open.poll',\r\n  'csui/utils/commands/open.prospector',\r\n  'csui/utils/commands/open.specific.classic.page',\r\n  'csui/utils/commands/open.specific.node.perspective',\r\n  'csui/utils/commands/open.task',\r\n  'csui/utils/commands/open.taskgroup',\r\n  'csui/utils/commands/open.tasklist',\r\n  'csui/utils/commands/open.topic',\r\n  'csui/utils/commands/permissions',\r\n  'csui/utils/commands/properties',\r\n  'csui/utils/commands/rename',\r\n  'csui/utils/commands/rename.favorite',\r\n  'csui/utils/commands/reserve',\r\n  'csui/utils/commands/compound.document/compound.document',\r\n  'csui/utils/commands/compound.document/create.revision',\r\n  'csui/utils/commands/compound.document/create.release',\r\n  'csui/utils/commands/compound.document/reorganize',\r\n  'csui/utils/commands/compound.document/lock',\r\n  'csui/utils/commands/compound.document/unlock',\r\n  'csui/utils/commands/compound.document/view.releases',\r\n  'csui/utils/commands/compound.document/releases.commands',\r\n  \"csui/utils/commands/compound.document/properties\",\r\n  'csui/utils/commands/compound.document/compound.document.util',\r\n  'csui/utils/commands/run.livereport',\r\n  'csui/utils/commands/sign.out',\r\n  'csui/utils/commands/switch.to.classic',\r\n  'csui/utils/commands/unreserve',\r\n  'csui/utils/commands/user.profile',\r\n  'csui/utils/commands/versions',\r\n  'csui/utils/commands/versions/delete',\r\n  'csui/utils/commands/versions/download',\r\n  'csui/utils/commands/versions/open',\r\n  'csui/utils/commands/versions/promote.version',\r\n  'csui/utils/commands/versions/properties',\r\n  'csui/utils/commands/versions/doc.version.preview',\r\n  'csui/utils/commands/versions/open.version.perspective',\r\n  'csui/utils/commands/versions/open.version/open.version.delegate',\r\n  'csui/utils/commands/filter',\r\n  'csui/utils/commands/description.toggle',\r\n  'csui/utils/commands/thumbnail.toggle',\r\n  'csui/utils/commands/save.filter',\r\n  'csui/utils/commands/save.query',\r\n  'csui/utils/commands/update.query',\r\n  'csui/utils/commands/maximize.widget.view',\r\n  'csui/utils/commands/restore.widget.size',\r\n  'csui/utils/commands/permissions/apply.permission',\r\n  'csui/utils/commands/permissions/edit.permission',\r\n  'csui/utils/commands/permissions/change.owner.permission',\r\n  'csui/utils/commands/permissions/delete.permission',\r\n  'csui/utils/commands/permissions/add.user.group',\r\n  'csui/utils/commands/permissions/add.owner.group',\r\n  'csui/utils/commands/permissions/restore.public.access',\r\n  'csui/utils/commands/permissions/permission.util',\r\n  'csui/utils/commands/personalize.page',\r\n  'csui/utils/commands/version.settings',\r\n  'csui/utils/commands/tree.browse',\r\n  'csui/utils/commands/content.server.administration',\r\n  'csui/utils/commands/about.box',\r\n  'csui/utils/commands/restructure.command',\r\n\r\n  // TODO: Remove this. Localizable string for csui commands  are\r\n  // private in csui and must not be referred to from other components.\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commands/nls/root/localized.strings',\r\n  'i18n!csui/utils/commands/collection/nls/lang',\r\n  'csui/utils/commands/collection/nls/root/lang',\r\n\r\n  // TODO: Remove this, as long as the module owners take over\r\n  // the commands and default action rules\r\n  'csui/temporary/cop/commands/open.blog',\r\n  'csui/temporary/cop/commands/open.faq',\r\n  'csui/temporary/cop/commands/open.forum',\r\n  'csui/temporary/cop/commands/open.wiki',\r\n  'csui/temporary/cop/commands/open.mailstore',\r\n\r\n  // Other modules, that commands directly depend on.\r\n  'csui/dialogs/file.open/file.open.dialog',\r\n  'csui/models/command',\r\n  'csui/models/commands',\r\n  'csui/utils/accessibility',\r\n  'csui/utils/command.error',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.document/csui.open.document.delegates',\r\n  'csui/utils/commands/open.document/delegates/open.document.delegates',\r\n  'csui/utils/commands/versions/open.version/csui.open.version.delegates',\r\n  'csui/utils/commands/versions/open.version/delegates/open.version.delegates',\r\n  'csui/utils/commands/open.plugins/open.plugins',\r\n  'csui/utils/commands/goto.location',\r\n  'csui/utils/commands/collection/collect',\r\n  'csui/utils/node.links/node.links',\r\n  'csui/utils/routing'\r\n], {});\r\n\n"]}