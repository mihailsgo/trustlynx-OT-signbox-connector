{"version":3,"sources":["../../src/models/workspacecreateforms.js","../../src/models/metadata.controller.js","../../src/models/favorite.model.js","../../src/utils/commands/navigate/workspace!csui-ext","../../src/utils/commands/navigate/navigable.js","../../src/utils/contexts/perspective/plugins/node/impl/conws.main.node.extra.data.js","../../src/utils/navigate/navigate.util.js","../../src/perspectives/tabbed/tab.index/conws.tab.index.preferences.extension.js","../../src/models/workspacecontext/impl/workspace.perspective.context.plugin.js","../../src/models/workspacecontext/impl/workspacecontext.node.model.js","../../src/models/workspacecontext/impl/workspacecontext.node.factory.js","../../src/models/workspacecontext/workspacecontext.model.js","../../src/models/workspacecontext/workspacecontext.node.model.js","../../src/models/workspacecontext/workspacecontext.node.factory.js","../../src/models/workspacecontext/workspacecontext.factory.js","../../src/utils/previewpane/impl/nls/previewpane.lang.js","../../src/utils/previewpane/impl/nls/root/previewpane.lang.js","../../src/utils/previewpane/impl/nls/previewpane.lang!i18n","../../src/utils/previewpane/impl/previewheader.model.js","../../src/utils/previewpane/impl/attributes.model.js","../../src/utils/previewpane/impl/role.model.js","../../src/widgets/team/impl/team.model.js","../../src/widgets/team/impl/team.model.factory.js","../../src/widgets/team/impl/participants.columns.js","../../src/widgets/team/impl/roles.columns.js","../../src/widgets/team/impl/cells/metadata.js","../../src/widgets/team/impl/roles.model.js","../../src/widgets/team/impl/nls/team.lang.js","../../src/widgets/team/impl/nls/root/team.lang.js","../../src/widgets/team/impl/nls/team.lang!i18n","../../src/widgets/team/impl/participant.model.js","../../src/widgets/team/impl/participants.model.js","../../src/widgets/team/impl/participants.model.factory.js","../../src/widgets/team/impl/roles.model.expanded.js","../../src/widgets/team/impl/roles.model.factory.js","../../src/widgets/team/impl/controls/filter/impl/filter.model.js","../../src/models/categoryforms/categoryforms.model.js","../../src/models/selectedmetadataform/selectedmetadataform.model.js","../../src/models/selectedmetadataform/selectedmetadataform.factory.js","../../src/utils/commands/goto.location.js","../../src/utils/commands/back.to.previous.location.js","../../src/utils/workspaces/impl/workspaceutil.js","../../src/utils/workspaces/workspace.model.js","../../src/utils/workspaces/impl/workspaces.collection.mixin.js","../../src/widgets/relatedworkspaces/impl/relatedworkspaces.model.js","../../src/widgets/relatedworkspaces/impl/relatedworkspaces.factory.js","../../src/widgets/header/impl/favorite.icon!css","../../src/widgets/header/impl/favorite.icon.view.js","../../src/widgets/header/impl/commenting.icon!hbs","../../src/widgets/header/impl/commenting.icon!css","../../src/widgets/header/impl/commenting.icon.view.js","../../src/widgets/header/headertoolbaritems!csui-ext","../../src/widgets/header/impl/headertoolbaritems.js","../../src/widgets/header/impl/header.model.js","../../src/widgets/header/impl/header.model.factory.js","../../src/widgets/header/impl/header.icon.model.js","../../src/widgets/myworkspaces/impl/myworkspaces.model.js","../../src/widgets/myworkspaces/impl/myworkspaces.model.factory.js","../../src/widgets/outlook/impl/utils/utility.js","../../src/widgets/outlook/impl/recentwksps/impl/recentwksps.model.js","../../src/widgets/outlook/impl/recentwksps/impl/recentwksps.model.factory.js","../../src/widgets/outlook/impl/folder/impl/folders.model.js","../../src/widgets/outlook/impl/nls/lang.js","../../src/widgets/outlook/impl/nls/root/lang.js","../../src/widgets/outlook/impl/wksp/impl/wksp.model.js","../../src/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model.js","../../src/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model.factory.js","../../src/widgets/outlook/impl/searchwksps/impl/searchwksps.model.js","../../src/widgets/outlook/impl/searchwksps/impl/searchwksps.model.factory.js","../../src/widgets/outlook/impl/searchwksps/impl/searchresult.model.js","../../src/widgets/outlook/impl/searchwksps/impl/wksptypes.model.js","../../src/models/configurationvolume/configurationvolume.model.js","../../src/models/configurationvolume/configurationvolume.factory.js","../../src/utils/toolitem.masks/conws.children.toolitems.mask.js","../../src/models/addbwsfromsidepanel/addbwsfromsidepanel.model.js","../../src/models/addbwsfromsidepanel/addbwsfromsidepanel.model.factory.js","conws-models.js"],"names":["csui","define","module","$","_","Backbone","log","base","NodeFormCollection","copyWritables","dst","dst_options","dst_schema","src","src_options","src_schema","iskey","reduce","keys","key","each","src_val","copyValue","new_options","fields","item","new_schema","properties","items","old_options","old_schema","readonly","dst_val","is_dst_obj","isObject","is_src_obj","WorkspaceCreateFormCollection","extend","constructor","models","options","prototype","apply","this","arguments","type","actionContext","undefined","Error","ERR_CONSTRUCTOR_NO_TYPE_GIVEN","wsType","ERR_CONSTRUCTOR_NO_WSTYPE_GIVEN","url","template","params","parent_id","node","get","wksp_type_id","id","template_id","bo_type_id","bo_id","resource","path","param","omit","value","connector","getConnectionUrl","getApiBase","Url","combine","parse","response","forms","form","schema","title","length","forms_map","map","role_name","schema_map","formsSchema","general","name","required","data","categories","push","additionalProperties","formsValues","role_options","role_schema","description","roles","role_data","role_form","serverForms","version","MetadataController","status","attributes","Events","save","model","wait","patch","createItem","Deferred","reject","source_parent_id","formData","FormData","append","JSON","stringify","contentType","processData","extendAjaxOptions","collection","makeAjaxCall","then","set","results","silent","sub_folder_id","fetch","Model","call","assignTo","nodeid","listenTo","nodeId","isNew","add","remove","destroy","config","_conwsNavigationTreeView","treeView","_backToPrevious","backToPrevious","isConwsNavigationTreeView","wantsBackToPrevious","Navigable","getModelFields","bwsinfo","getModelExpand","checkWorkspaceHierarchy","result","level","wkspid","getBwsInfo","require","Context","NavigateExtensions","ConwsMainNodeExtraData","checkWorkspaceNavigation","conwsNavigationTreeView","elements","navigateUp","ii","extension","checkNodesTableToolbarElements","extended","pick","val","checkNavigationExtension","enabled","proceed","isWorkspaceNavigationEnabled","navigation","getNavigationContext","context","getWorkspaceContext","hasObject","getObject","obj","workspaceContext","hasModel","getModel","getWorkspaceModel","Log","NextNodeModelFactory","NavigateUtil","hasContextTabbedPerspective","perspective","tabs","getFolderBrowserTabIndex","tabIndex","find","tab","idx","columns","col","widget","getPreferredTabIndex","tabToActivate","viewStateModel","conwsNavigated","wkspHierarchy","wkspId","isTabbed","debug","console","last","PerspectiveContextPlugin","NodeModelFactory","setupConwsNavigate","view","conwsNavigate","is","root","rootNodes","setupContextModelListener","factoryName","callback","factory","old","property","nextNode","oldModel","stopListening","oldWkspContext","oldWkspModel","workspaceModel","setSessionViewState","historyEntry","wkspModel","wkspName","onApply","sourceModel","forceChange","oldHierarchy","newHierarchy","oldId","newId","ResourceModel","logDeprecated","stacktrace","message","warn","deprecate","func","state","internal","reset","logged","getStackTrace","fill","logobj","toString","str","ctxtWkspId","_fetchSucceeded","resolve","promise","WorkspaceContextModel","_WorkspaceContextModel","defaults","workspaceSpecific","reference","isPrivateReference","creatorReference","workspaceReference","makeResource","sync","syncToNode","trigger","node_id","Fetchable","ModelFactory","ConnectorFactory","WorkspaceContextNodeModel","propertyPrefix","workspaceContextNode","commands","defaultActionItems","WorkspaceContextNodeFactory","getWorkspaceObject","wkspCtxt","methodName","isWorkspaceSpecific","workspaceSpecificFactories","privateReference","delayRestCommands","promoteSomeRestCommands","defaultActionCommands","getAllCommandSignatures","getAllSignatures","_handleDelayedActions","changed","hasOwnProperty","actions","where","actions1","actions2","delayedActions","setWorkspaceSpecific","Factory","_isWorkspaceSpecificFactory","found","getOuterContext","_getWorkspaceObject","getCollection","a","b","fetchContext","promises","fetchNode","fetchFactories","ctxtid","_fetchid","clear","concat","when","fetchWkspid","bind","fetching","isFetchable","WorkspaceContextNode","en-us","en","noMetadataMessage","noRoleMembersMessage","quickLinkTooltipText","lang","typeName","getClosestLocalizedString","quickLinkTooltip","ret","business_properties","display_url","NodeModel","categoryId","connection","NodeConnectableMixin","FetchableMixin","RoleMemberModel","member","memberType","getLeadingRole","first","lead","role","leader","getRolesIndicator","getMemberType","setIconUrl","iconUrl","getIconUrl","RoleMemberCollection","Collection","roleId","makeNodeConnectable","makeFetchable","team","self","i","r","clone","display_name","members","j","teamMember","values","sort","ma","mb","localeCompareString","usage","mixin","ConnectableMixin","NodeChildrenColumnModel","NodeChildrenColumnCollection","NodeChildrenCollection","TeamColumnModel","TeamColumnCollection","getColumnModels","columnKeys","definitions","column","columnKey","TeamModel","TeamCollection","makeNodeResource","makeConnectable","makeBrowsable","_sortByName","teamRole","comparator","model1","model2","name1","name2","type1","type2","toLowerCase","CollectionFactory","autoreset","ParticipantsTableColumnModel","idAttribute","sequence","ParticipantsTableColumnCollection","columnNames","avatar","login","email","department","getColumnKeys","pluck","deepClone","RolesTableColumnModel","RolesTableColumnCollection","integer","allow_undefined","bulk_shared","default_value","hidden","max_value","min_value","multi_value","persona","read_only","type_name","valid_values","valid_values_name","string","max_length","min_length","multiline","multilingual","password","regex","RoleModel","left","right","filterList","isUndefined","filter","indexOf","dialogTitle","noResultsPlaceholder","zeroRecordsOrFilteredParticipants","zeroRecordsOrFilteredRoles","searchAria","expandAria","participantNameColTitle","participantAvatarColTitle","participantRolesColTitle","participantRolesTableAria","participantLoginColTitle","participantEmailColTitle","participantDepartmentColTitle","participantRrolesColTooltip","participantStateNew","userRolesDialogTitle","groupRolesDialogTitle","rolesAvatarColTitle","rolesNameColTitle","rolesNameColTooltip","rolesNameColTeamLead","rolesNameColInherited","rolesParticipantsColTitle","rolesParticipantsColTooltip","rolesParticipantsColNoParticipants","rolesParticipantsTableAria","rolesDialogAssignedRoles","rolesDialogTooltipAssignedRoles","rolesDialogAvailableRoles","rolesDialogTooltipAvailableRoles","rolesDialogRemoveParticipant1","rolesDialogRemoveParticipant2","rolesDialogRemoveParticipantWarning","rolesDialogRemoveRole","rolesDialogButtonClose","rolesDialogButtonSave","rolesDialogButtonCancel","rolesDialogButtonReset","rolesDialogButtonRemove","rolesEditDialogErrorTitleUser","rolesEditDialogErrorTitleGroup","rolesEditDialogSuccessfulAdded","rolesEditDialogSuccessfulRemoved","rolesEditDialogNotAdded","rolesEditDialogNotRemoved","rolesEditDialogDataNotUptoDateUser","rolesEditDialogDataNotUptoDateGroup","searchPlaceholder","searchIconTooltip","searchClearIconTooltip","roleDetailsTitle","roleDetailsName","roleDetailsDescription","roleDetailsPermissions","roleDetailsRead","roleDetailsWrite","roleDetailsManage","roleDetailsAdvanced","addParticipantsTitle","addParticipantsRolesHelp","addParticipantsUserPickerPlaceholder","addParticipantsRolePickerPlaceholder","addParticipantsRolePickerPlaceholderMore","addParticipantsRolePickerClear","addParticipantsRolePickerShow","addParticipantsSearchAria","addParticipantsButtonClear","addParticipantsButtonSave","addParticipantsButtonCancel","addParticipantsDisabledMemberMessage","addParticipantsErrorMessageDefault","addParticipantsRemove","removeParticipantAria","failedListText","loadingListText","NodeConnectableModel","Metadata","Roles","conws_participantname","displayName","conws_participantroles","displayRoles","conws_participantlogin","displayLogin","conws_participantemail","displayEmail","conws_participantdepartment","displayDepartment","memberId","successRemove","errorRemove","successAdd","errorAdd","postUrl","async","done","error","fail","delUrl","success","indicator","isNull","displayTitle","displayOffice","group","at","canEdit","availableRoles","edit","actionEdit","canRemove","editable","ClientSideBrowsableMixin","WorkspaceContextFactory","ParticipantModel","ParticipantsColumnModel","ParticipantsColumnCollection","ParticipantCollection","orderBy","makeClientSideBrowsable","actionDelete","metadata","conws_participantavatar","resetCollection","toJSON","actualSkipCount","totalCount","filteredCount","addNewParticipant","exist","newParticipants","participant","setNewParticipant","ParticipantCollectionFactory","participants","getDefaultResourceScope","versions.element(0)","expand","includeResources","RolesColumnModel","RolesColumnCollection","conws_rolename","conws_rolemembers","displayMembers","conws_rolename_formatted","displayNameFormatted","nameFormatted","urlBase","wid","rid","m1","m2","ret1","ret2","localeCompare","m","mm","getLeadingMember","getMembersIndicator","getMemberName","canDelete","RoleCollection","conws_roleavatar","RolesCollection","caption","tooltip","active","showSearch","AppliedCategoryFormModel","CategoryFormCollection","isReadOnly","method","categoryFilter","_getMetadataForms","deferred","catsUrl","actionsUrl","data2","curCategory","contains","catModel","allow_delete","action","BaseUtils","updateData","groupNames","changes","groupId","propertyId","metadataConfig","hideEmptyFields","categoryForms","autofetch","_createCategoryFilter","update","_saveData","_getChanges","configElement","innerCategoryFilter","innerCategory","flatten","oldData","groupData","restoreData","restore","destinationModel","groupCnt","_fillModel","prefix","_createAttribute","_createCategory","groupName","label","innerData","innerProperties","innerFields","innerDestinationModel","isEmpty","fieldId","attributeId","modelElement","columnId","setType","attributeType","subFieldId","_createRow","fieldElement","fieldIndex","fieldVal","prop","field","_isEmpty","readOnly","uniqueElements","uniq","allEmpty","_removeGroupPrefix","modifiedPath","actGroupName","substr","SelectedMetadataFormModel","navigate","CommandModel","signature","getLinkInfo","viewState","entries","getHistory","CONSTANTS","SESSION_STATE","entry","getPotentialHistoryEntry","prev","sessionState","index","wkspname","BACK_TO_TITLE","router","execute","history","restoreHistoryEntryByIndex","WorkspaceUtil","type_key","orderByAsString","defCol","defOrd","order","sc","so","sortColumn","sortOrder","parameterPlaceholder","match","exec","sformat","getFilterValueString","colattrs","colvalue","allowempty","format","filter_map","getFormFieldTemplate","template_map","type_control","parameters","filter_types","select_types","container","WorkspaceModel","WorkspacesColumnModel","WorkspacesColumnCollection","dataCollectionName","resetColumns","meta_data","coldefstr","getColumns","columnModels","makeWorkspacesCollection","_cacheCollection","titleIcon","next","sorting","updateSelectableState","selectActions","existsSelectable","existsNonSelectable","el","selectable","act","_cleanupQuery","query","wherePart","substring","inArray","metadata_order","meta_data_order","paging","total_count","wksp_info","wksp_type_icon","_formatSorting","setLimit","skip","top","skipCount","topCount","resetLimit","setFilter","clearFilter","mergeUrlPaging","queryParams","limit","defaultPageSize","page","Math","floor","mergeUrlSorting","slicePosition","lastIndexOf","slice","mergeUrlFiltering","isEmptyObject","filters","valstring","encodeURIComponent","queryParamsToString","queryParamsStr","getBaseUrl","NodeCollection","BrowsableMixin","NodeResourceMixin","ExpandableMixin","WorkspacesCollectionMixin","RelatedWorkspacesCollection","makeExpandable","workspaceNodeId","apiBase","global_metadata","RelatedWorkspaceCollection","relatedWorkspaces","Marionette","TabableRegionBehavior","FavoriteStarView","behaviors","TabableRegion","behaviorClass","currentlyFocusedElement","onKeyInView","event","keyCode","preventDefault","stopPropagation","toggleFavorite","hbs","Handlebars","t","compiler","main","depth0","helpers","partials","registerPartial","CommentDialogView","LayoutView","className","events","keydown","commenting","findWhere","Boolean","onRender","contentRegion","Region","window","s","contexts","roId","commentDialogView","CSID","useIconsForDarkBackground","show","commentCount","$el","addClass","onKeyDown","e","ToolItemsFactory","ToolItemModel","Lang","FavoriteIconView","CommentingIconView","extraToolItems","headerToolbarItems","rightToolbar","ToolbarItemComment","icon","customView","viewClass","commandData","useContainer","delayedActionsToolbar","menu","ToolbarItemCopyLink","svgId","ToolbarItemEmailLinkShort","maxItemsShown","dropDownIconName","addGroupSeparators","dropDownText","ToolbarItemMore","moduleToolItems","toolItems","targetToolbar","toolItem","addItem","MemberModel","HeaderModel","display_urls","workspace_widget_icon_content","content","location","workspace_type_widget_icon_content","workspace_type_id","workspace_type_name","isWorkspaceType","hasAction","expandMemberValue","category","split","ids","isArray","whenAll","DeleteCommand","blankImage","storeIconData","files","file","uploadFile","ResourceMixin","MyWorkspacesCollection","expanded_view","myworkspaces","ensureFetched","PageContext","RequestAuthenticator","replaceV1ToV2","startGlobalSpinner","force","spinner","scrollY","document","documentElement","scrollTop","marginCss","css","setTimeout","getConnector","confirmingReload","stopGlobalSpinner","startLocalSpinner","spinnerId","stopLocalSpinner","modalOpen","modalClose","removeClass","setConnector","contextConnector","authenticator","escapeNameToCreate","originalString","replace","escapeNameToVerify","traceOutput","TraceEnabled","info","registerMessageListener","sourceOrigin","postMessage","messageListeners","attachedCallback","origin","source","writeTrace","addEventListener","attachEvent","detachMessageListener","listener","removeEventListener","detachEvent","getPersistentSetting","setting","SettingStorage","getItem","getCookie","setPersistentSetting","expire","domain","setItem","setCookie","c_name","c_value","cookie","c_start","c_end","decodeURI","encodeURI","Date","toUTCString","getCurrentTopDomain","h","weird_cookie","hostname","join","isSafeURL","urlString","urlStr","getSuggestedWkspFilters","emailItem","filterConfig","xecmRule","xECMRule","rules","rule","ruleMatch","wkspTypeId","onlyGroup1","weight","processingString","subject","sender","emailAddress","to","elem","cc","recipients","matchPatt","RegExp","test","processingStringLower","toLocaleLowerCase","matchLower","retrievePatt","retrieve","retrieves","retrieveMethod","wkspTypeGroup","typeId","filterName","wkspNameGroup","term","suggestedWeight","getSuggestedWkspEmailSearchConfig","searchTerm","searchConfig","search","currentUserAddress","currentUser","senderAddress","searchSender","noCurrentUserAsSender","region","searchRecipient","noCurrentUserInRecipient","tos","ccs","allRecipients","splice","getErrorMessage","responseJSON","responseText","statusText","disableSimpleSearch","setConfig","csUserLoginName","pageSize","loginName","toUpperCase","TraceAreaHeight","traceEnabled","trace","userName","localStorage","SSOEnabled","sso","ShowSearchFormSelection","searchForm","DisplayedSearchForms","emailSavingConfig","allowExpandWorkspace","onlySaveToEmailFolder","emailFolderOnly","preConfigFolderToSave","preConfig","saveToFirstEmailFolder","firstEmailFolder","saveToRootFolder","rootFolder","specificFolderName","specificName","collapsibleClicked","section","displayArea","style","display","toggleClass","uiHide","uiId","uiClass","uiShow","v1ToV2","ToggleStatusExpand","ToggleStatusCollapse","ToggleStatusEmpty","SSOLoginURL","SuggestedWkspsView","emailProperties","project","from","SelectedWkspTypeId","WkspSearchPerformed","SearchButtonHeight","SearchFormBottomPadding","PreSaveSection","ScorllPositionBeforeSaving","ConflictHighlighted","SavingSubmitted","EmailChangedAfterSaving","WkspUtil","pageNo","isEdit","nextPageUrl","ServerCgiScript","pagingString","queryString","RecentWkspsModel","typeString","config_CS_missing","error_create_Blob","error_create_CORS","error_CORS_NoResponse","error_retrieve_config","error_retrieve_email","error_retrieve_email_body","error_retrieve_email_content","error_retrieve_favorite","error_retrieve_recent","error_retrieve_search","error_retrieve_searchQueries","error_retrieve_suggested","error_retrieve_suggestedConfig","error_retrieve_token","error_save_email","error_validate_name","help_button_tooltip","info_confirm_saving","info_retrieving","info_save_successful","insert_action","name_untitled","noWksp_favorite","noWksp_recent","noWksp_search","noWksp_suggested","required_fields_title","required_fields_switchLabel","save_action_both","save_action_attachment","save_action_email","save_attachment_text","save_attachment_option","save_button_back","save_button_next","save_button_close","save_enterName","save_email_info","save_email_text","save_email_text_noAttachment","save_failed","save_label","save_metadate_form_invalid","save_nameNotUnique","save_noSelection","save_successful_all","save_successful_attachment","save_successful_attachments","save_successful_email","save_selection_conflict","save_selection_conflict_msg","search_all_wksp","search_button_tooltip","search_clear_button_tooltip","search_custom_button_label","search_noCondition","search_result_title","search_select_form","search_select_wksp_type","search_selected_wksp_type","search_wksp_typeName","search_wkspName_placeholder","sectionTitle_customSearch","sectionTitle_favorite","sectionTitle_recent","sectionTitle_search","sectionTitle_suggested","showMore_link","showMore_folders","showMore_wksp","signIn_button_Title","signIn_required","signIn_message","signIn_passkey","signIn_title","signIn_username","ssoTimeout","title_cancel","title_ok","title_save_email","title_save_email_to","title_save_error","title_save_rootFolder","title_save_success","validation_name_conflict","validation_no_subject","warning_no_outlook_context","warning_session_expired","wksp_open_link","getPreConfigFolder","hasPreConfigFolder","folderId","folderName","retrievePromise","ajax","headers","OTCSTicket","session","ticket","foundFolder","errorText","WkspModel","FavoriteWkspsModel","unshift","wksp_type_name","SearchWkspsModel","typeAhead","getCgiScript","nameString","apiString","types","VolumesModel","baseUrl","fetched","shortcutItems","volumesModel","isPerspectiveWithHeader","header","blacklist","AddbwsfromsidepanelCollection","where_manual_creation","where_fixed_creation_location","expand_templates","expand_wksp_info"],"mappings":"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","file":"conws-models.js","sourcesContent":["/**\r\n * Created by stefang on 09.10.2015.\r\n */\r\ncsui.define('conws/models/workspacecreateforms',[\"module\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/lib/backbone\",\r\n  \"csui/utils/log\", \"csui/utils/base\", \"csui/models/nodeforms\"\r\n], function (module, $, _, Backbone, log, base, NodeFormCollection) {\r\n  \"use strict\";\r\n\r\n  // copy values from UI into server form, but not if the fields from the server are readonly.\r\n  // And if the fields from the server are writable and the fields from the UI are readonly, then\r\n  // also don't copy, because then the fields must be set to the default values from the server.\r\n  function copyWritables(dst,dst_options,dst_schema,src,src_options, src_schema) {\r\n    var iskey = _.reduce(_.keys(dst),function(iskey,key){iskey[key]=true;return iskey;},{});\r\n    _.each(src,function(src_val,key) {\r\n      if (iskey[key]) {\r\n        var copyValue = true,\r\n            new_options = dst_options && dst_options.fields && (dst_options.fields[key] ? dst_options.fields[key] : dst_options.fields.item ),\r\n            new_schema  = dst_schema && (dst_schema.properties ? dst_schema.properties[key] : dst_schema.items),\r\n            old_options = src_options && src_options.fields && (src_options.fields[key] ? src_options.fields[key] : src_options.fields.item ),\r\n            old_schema = src_schema && (src_schema.properties ? src_schema.properties[key] : src_schema.items);\r\n        if (new_options && new_options.readonly || new_schema && new_schema.readonly ||\r\n            old_options && old_options.readonly || old_schema && old_schema.readonly) {\r\n          copyValue = false;\r\n        }\r\n        if (copyValue) {\r\n          var dst_val = dst[key],\r\n              is_dst_obj = _.isObject(dst_val),\r\n              is_src_obj = _.isObject(src_val);\r\n          if (is_dst_obj && is_src_obj) {\r\n            copyWritables(dst_val,new_options,new_schema,src_val,old_options,old_schema);\r\n          } else if (!is_dst_obj && !is_src_obj) {\r\n            dst[key] = src[key];\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  // WorkspaceCreateFormCollection\r\n  // ------------------------\r\n\r\n  var WorkspaceCreateFormCollection = NodeFormCollection.extend({\r\n\r\n        constructor: function WorkspaceCreateFormCollection(models, options) {\r\n          NodeFormCollection.prototype.constructor.apply(this, arguments);\r\n          this.type = options.type;\r\n          this.actionContext = options.actionContext;\r\n          if (this.type === undefined) {\r\n            throw new Error(WorkspaceCreateFormCollection.ERR_CONSTRUCTOR_NO_TYPE_GIVEN);\r\n          }\r\n          if (this.options.wsType === undefined) {\r\n            throw new Error(WorkspaceCreateFormCollection.ERR_CONSTRUCTOR_NO_WSTYPE_GIVEN);\r\n          }\r\n        },\r\n\r\n        url: function () {\r\n          //var path = 'forms/nodes/create',\r\n          var path = 'forms/businessworkspaces/create',\r\n              wsType = this.options.wsType,\r\n              template = this.options.template,\r\n              params = {\r\n                parent_id: this.node.get(\"id\"),\r\n                type: this.type,\r\n                wksp_type_id: wsType.id,\r\n                template_id: template ? template.id : undefined,\r\n                bo_type_id: this.bo_type_id /*can be set by caller before fetch*/,\r\n                bo_id: this.bo_id /*can be set by caller before fetch*/\r\n              },\r\n              resource = path + '?' + $.param(_.omit(params,function (value) {\r\n                    return value === null || value === undefined || value === '';\r\n                  })),\r\n              url = this.node.connector.getConnectionUrl().getApiBase('v2');\r\n              return base.Url.combine(url, resource);\r\n        },\r\n\r\n        parse: function (response) {\r\n          var forms = response.forms;\r\n\r\n          // TODO this should be sent by server, remove when possible\r\n          _.each(forms, function (form) {\r\n            form.id = form.schema.title;\r\n          });\r\n          forms.length && (forms[0].id = \"general\");\r\n\r\n          if (forms.length>0) {\r\n            var forms_map = _.reduce(forms, function (map,form) {form.role_name && (map[form.role_name] = form); return map;},{}),\r\n                schema_map = _.reduce(this.formsSchema, function (map,form) {form.role_name && (map[form.role_name] = form); return map;},{}),\r\n                general = forms[0];\r\n\r\n            // if server sends name as readonly and required but empty name, set required to false.\r\n            if (general && general.schema && general.schema.properties && general.schema.properties.name) {\r\n              if (general.schema.properties.name.readonly && general.schema.properties.name.required) {\r\n                if (!general.data || !general.data.name) {\r\n                  general.schema.properties.name.required = false;\r\n                }\r\n              }\r\n            }\r\n\r\n            // for simplicity, we avoid category and others be manually added. PM decision.\r\n            // And at least as long as issue LPAD-50706 exists, we have to avoid that as well.\r\n            if (general && general.data && general.data.bo_type_id) {\r\n              if (!forms_map.categories) {\r\n                forms_map.categories = { role_name: \"categories\" };\r\n                forms.push(forms_map.categories);\r\n              }\r\n              _.each(forms, function (form) {\r\n                if (form.role_name) {\r\n                  form.schema || (form.schema = {});\r\n                  form.schema.additionalProperties = false;\r\n                }\r\n              });\r\n            }\r\n\r\n            // copy all values from before the server call to the writable fields\r\n            if (this.formsValues) {\r\n              var role_options, role_schema;\r\n              if (general && general.data) {\r\n                role_options = this.formsSchema && this.formsSchema[0] && this.formsSchema[0].options;\r\n                role_schema = this.formsSchema && this.formsSchema[0] && this.formsSchema[0].schema;\r\n                copyWritables(general.data,general.options,general.schema,\r\n                    {\r\n                      name: this.formsValues.name,\r\n                      description: this.formsValues.description\r\n                    },role_options,role_schema);\r\n              }\r\n              if (this.formsValues.roles) {\r\n                _.each(this.formsValues.roles, function(role_data,role_name) {\r\n                  var role_form = forms_map[role_name];\r\n                  if (role_form) {\r\n                    role_options = schema_map[role_name] && schema_map[role_name].options;\r\n                    role_schema = schema_map[role_name] && schema_map[role_name].schema;\r\n                    copyWritables(\r\n                        role_form.data,role_form.options,role_form.schema,\r\n                        role_data, role_options, role_schema\r\n                    );\r\n                  }\r\n                }, this);\r\n              }\r\n            }\r\n          }\r\n\r\n          this.serverForms = forms;\r\n          return forms;\r\n        }\r\n\r\n      },\r\n      // statics\r\n      {\r\n        // errors\r\n        ERR_CONSTRUCTOR_NO_TYPE_GIVEN: \"No creation type given in constructor\",\r\n        ERR_CONSTRUCTOR_NO_WSTYPE_GIVEN: \"No workspace type given in constructor\"\r\n      });\r\n\r\n  // Module\r\n  // ------\r\n\r\n  _.extend(WorkspaceCreateFormCollection, {\r\n    version: '1.0'\r\n  });\r\n\r\n  return WorkspaceCreateFormCollection;\r\n\r\n});\r\n\r\n\r\n\n","/**\r\n * Created by stefang on 12.10.2015.\r\n */\r\ncsui.define('conws/models/metadata.controller',[\"csui/lib/underscore\", \"csui/lib/jquery\", \"csui/lib/backbone\", \"csui/utils/url\",\r\n  \"csui/utils/base\"\r\n], function (_, $, Backbone, Url, base) {\r\n\r\n  // handling server calls for metadata\r\n  function MetadataController(status, options, attributes) {\r\n    this.status = status || {};\r\n    this.options = options || {};\r\n    this.attributes = attributes || {};\r\n  }\r\n\r\n  _.extend(MetadataController.prototype, Backbone.Events, {\r\n\r\n    save: function (model, data) {\r\n      // Pass the data via 'attributes' param.  They would be set to the node model.\r\n\r\n      // Note: if data does not contain common attributes,\r\n      // it should be passed via the second param as options as the following:\r\n      //   model.save({}, {data: data, wait: true, patch: true})\r\n      // We'll revisit this later if such scenario arises.\r\n\r\n      return model.save(data, {\r\n        wait: true,\r\n        patch: true\r\n      });\r\n    },\r\n\r\n    createItem: function (model, formsValues) {\r\n      if (!model.connector) {\r\n        return $.Deferred().reject();\r\n      }\r\n\r\n      if(!!model && !!model.attributes && !!model.attributes.parent_id){\r\n        formsValues.source_parent_id = model.attributes.parent_id;\r\n      }\r\n\r\n      // FormData available (IE10+, WebKit)\r\n      var formData = new FormData();\r\n      formData.append('body', JSON.stringify(_.extend({\r\n        template_id: this.options.template ? this.options.template.id : undefined\r\n      },formsValues)));\r\n\r\n      var url = model.connector.getConnectionUrl().getApiBase('v2');\r\n      var options = {\r\n        type: 'POST',\r\n        url: Url.combine(url, \"businessworkspaces\"),\r\n        data: formData,\r\n        contentType: false,\r\n        processData: false\r\n      };\r\n\r\n      model.connector.extendAjaxOptions(options);\r\n\r\n      var collection = this.options.collection;\r\n      return model.connector.makeAjaxCall(options)\r\n        .then(function (response) {\r\n          // Update all attributes sent from the server. Currently there is only the id.\r\n          // But do not propagate the events to the view.\r\n          // As we fetch the new node to also get all actions, all change events are triggered,\r\n          // except \"change:id\". But this event is not needed: only the MetadataPropertiesView\r\n          // is listening on it, to get the create forms again.\r\n          // But this is not needed and not desired in this case. So we are safe to do a silent set.\r\n          model.set(response.results, { silent: true });\r\n          //updating the model collection \r\n          model.collection = collection;\r\n          model.attributes.sub_folder_id = response.results.sub_folder_id;\r\n          return model.fetch({ collection: collection });\r\n        });\r\n    }\r\n\r\n  });\r\n\r\n  MetadataController.prototype.get = Backbone.Model.prototype.get;\r\n  _.extend(MetadataController, {version: \"1.0\"});\r\n\r\n  return MetadataController;\r\n});\r\n\n","csui.define('conws/models/favorite.model',[\"module\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/lib/backbone\",\r\n  'csui/utils/url',\r\n], function (module, $, _, Backbone, Url) {\r\n  \"use strict\";\r\n\r\n  var Favorite = Backbone.Model.extend({\r\n\r\n    constructor: function Favorite(attributes, options) {\r\n      Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n      //assign mode to connector so all header info is made available.\r\n      options.connector.assignTo(this);\r\n\r\n\r\n      var nodeid = options.node.get('id');\r\n      if (nodeid) {\r\n        this.set('id',nodeid);\r\n        this.set('selected',options.node.get('favorite'));\r\n      }\r\n      this.listenTo(options.node,'change:id',function(){\r\n        this.set('id',options.node.get('id'));\r\n      })\r\n    },\r\n\r\n    url: function () {\r\n      var nodeId = this.get('id'),\r\n          url = this.connector.getConnectionUrl().getApiBase('v2');\r\n      url = Url.combine(url, 'members', 'favorites', nodeId);\r\n      return url;\r\n    },\r\n\r\n    isNew: function () {\r\n      return this.get('selected'); // this.attributes.selected\r\n    },\r\n\r\n    add: function () {\r\n      this.set('selected', true);\r\n      return this.save();\r\n    },\r\n\r\n    remove: function () {\r\n      this.set('selected', false);\r\n      return this.destroy();\r\n    }\r\n  });\r\n\r\n  return Favorite;\r\n});\n","\n","csui.define('conws/utils/commands/navigate/navigable',['module'],\r\n  function (module) {\r\n  \"use strict\";\r\n\r\n  var config = module.config();\r\n  var _conwsNavigationTreeView = !!config.treeView;\r\n  var _backToPrevious = config.backToPrevious;\r\n\r\n  // holds state and functionality for the tree view navigation of SmartUI.\r\n  // navigation tree view and navigate up react to this setting\r\n  var Navigable = {\r\n\r\n    isConwsNavigationTreeView: function () {\r\n      return _conwsNavigationTreeView;\r\n    },\r\n\r\n    wantsBackToPrevious: function() {\r\n      // show functionality per default but make it switchable by config setting.\r\n      return !!_backToPrevious || _backToPrevious===undefined || _backToPrevious===null || _backToPrevious===\"\";\r\n    }\r\n\r\n  }\r\n\r\n  return Navigable;\r\n\r\n});\n","csui.define('conws/utils/contexts/perspective/plugins/node/impl/conws.main.node.extra.data',[\r\n  'conws/utils/commands/navigate/navigable'\r\n], function (\r\n  Navigable\r\n) {\r\n  'use strict';\r\n\r\n  return {\r\n    getModelFields: function (options) {\r\n      return {\r\n        // see also note in navigate.workspace.md\r\n        bwsinfo: Navigable.isConwsNavigationTreeView() ? [\"id\",\"tree\"] : [\"id\",\"up\"]\r\n      };\r\n    },\r\n\r\n    getModelExpand: function (options) {\r\n      return {};\r\n    },\r\n\r\n    /**\r\n     * check workspace hierarchy in given node.\r\n     * returns an object with:\r\n     * level<0: outside workspace.\r\n     * level=0: in workspace root.\r\n     * level>0: somewhere in the hierarchy below a workspace.\r\n     * wkspid: the workspace id in case of level >= 0.\r\n     * wkspid=null: in case of level<0.\r\n     * delivers both properties (level and wkspid) undefined if node does not contain bwsinfo data.\r\n     *\r\n     * @param {*} node a node where the extra data is contained\r\n     */\r\n    checkWorkspaceHierarchy: function( node ) {\r\n\r\n      var result = {};\r\n      var nodeid = node.get(\"id\");\r\n      if (node.get(\"type\")===848) {\r\n        // in any case take a node with type 848 as the top workspace.\r\n        // this works even if the bwsinfo data was not sent by the server.\r\n        // also this is a concession to the javascript unit tests and all\r\n        // scenarios, where a workspace node is being constructed on the client.\r\n        result.level = 0;\r\n        result.wkspid = nodeid;\r\n      } else {\r\n        var data = node.get('data');\r\n        if (data && data.bwsinfo) {\r\n          var bwsinfo = data.bwsinfo;\r\n          if (bwsinfo.id) {\r\n            result.wkspid = bwsinfo.id;\r\n            if (bwsinfo.id===nodeid) {\r\n              result.level = 0;\r\n            } else {\r\n              result.level = 1;\r\n            }\r\n          } else {\r\n            result.wkspid = null;\r\n            result.level= -1;\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n\r\n    /**\r\n     *  Get data from the bwsinfo in a node.\r\n     *\r\n     * @param {*} node a node where the extra data is contained\r\n     * @param {*} name the name of the data field\r\n     * @returns value of the requested data part\r\n     */\r\n     getBwsInfo: function( node, name ) {\r\n\r\n      var result, data = node.get('data');\r\n      if (data) {\r\n        if (name) {\r\n          result = data.bwsinfo ? data.bwsinfo[name] : undefined;\r\n        } else {\r\n          result = data.bwsinfo;\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n  };\r\n\r\n});\r\n\n","csui.define('conws/utils/navigate/navigate.util',[ 'require', 'csui/lib/underscore', 'csui/utils/contexts/context',\r\n  'csui-ext!conws/utils/commands/navigate/workspace',\r\n  'conws/utils/contexts/perspective/plugins/node/impl/conws.main.node.extra.data',\r\n  'conws/utils/commands/navigate/navigable'\r\n], function ( require, _, Context,\r\n  NavigateExtensions,\r\n  ConwsMainNodeExtraData,\r\n  Navigable ) {\r\n\r\n  'use strict';\r\n\r\n  var NavigateUtil = {\r\n\r\n    /**\r\n     * checks, which navigation elements are activated according the user's preferences.\r\n     *\r\n     * returns an object with\r\n     *\r\n     * treeView: true, if the tree view enabled according the user's preferences.\r\n     * navigateUp: true, if the navigateUp button is enabled according the user's preferences.\r\n     *\r\n     * Both returned flags (treeView and navigateUp) are derived from the boolean flag in the\r\n     * user's preferences: conwsNavigationTreeView = false(default)|true.\r\n     * The requirement to enable only one of these elements, never both, is ensured by this method.\r\n     * However, the result from the user settings is passed to the navigate workspace extension,\r\n     * so it can override the settings and set an arbitrary combination of the flags.\r\n     *\r\n     * @param {*} status as passed to command.enabled()\r\n     * @param {*} options as passed to command.enabled()\r\n     */\r\n    checkWorkspaceNavigation: function( status, options ) {\r\n      var conwsNavigationTreeView = Navigable.isConwsNavigationTreeView();\r\n      var elements = { treeView: conwsNavigationTreeView, navigateUp: !conwsNavigationTreeView };\r\n      var keys = _.keys(elements);\r\n\r\n      if (NavigateExtensions) {\r\n        for (var ii=0; ii<NavigateExtensions.length; ii++) {\r\n          var extension = NavigateExtensions[ii];\r\n          if (extension.checkNodesTableToolbarElements) {\r\n            var extended = extension.checkNodesTableToolbarElements(status, options, _.pick(elements,keys));\r\n            if (extended) {\r\n              _.each(_.pick(extended,keys),function(val,key){\r\n                if (val===false||val===true) {\r\n                  elements[key] = val;\r\n                }\r\n              });\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return elements;\r\n    },\r\n\r\n    /**\r\n     * checks, whether an extension is plugged in, calls it passing status and options.\r\n     * returns an object with:\r\n     * navigation: true if extension doesn't care or explicitly wants to enable the workspace navigation.\r\n     * navigation: false if extension explicitly wants to disable the workspace navigation.\r\n     *\r\n     * @param {*} status as passed to command.enabled()\r\n     * @param {*} options as passed to command.enabled()\r\n     */\r\n    checkNavigationExtension: function( status, options ) {\r\n      var proceed = true;\r\n      // check for an extension, that wants to enable|disable the navigation buttons in specific situations.\r\n      var enabled;\r\n      if (NavigateExtensions) {\r\n        for (var ii=0; ii<NavigateExtensions.length; ii++) {\r\n          var extension = NavigateExtensions[ii];\r\n          if (extension.isWorkspaceNavigationEnabled) {\r\n            enabled = extension.isWorkspaceNavigationEnabled(status, options);\r\n            if (enabled===false||enabled===true) {\r\n              proceed = enabled;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return { navigation: proceed };\r\n    },\r\n\r\n    getNavigationContext: function(context) {\r\n\r\n      if (context && context.options && context.options.context) {\r\n        return context.options.context;\r\n      }\r\n\r\n      return context;\r\n    },\r\n\r\n    getWorkspaceContext: function(context) {\r\n\r\n      var result;\r\n      if (context && context.options && context.options.context) {\r\n        result = context;\r\n      } else if (context.hasObject(\"workspaceContext\")) {\r\n        result = context.getObject(\"workspaceContext\");\r\n      }\r\n      return result;\r\n    },\r\n\r\n    /**\r\n     * input param can be a node or a context.\r\n     * check where navigation is in the workspace hierarchy.\r\n     * returns an object with:\r\n     * level<0: outside workspace.\r\n     * level=0: in workspace root.\r\n     * level>0: somewhere in the hierarchy below a workspace.\r\n     * wkspid: the workspace id in case of level >= 0.\r\n     * delivers both properties (level and wkspid) undefined if node does not contain bwsinfo data.\r\n     *\r\n     * @param {*} obj a context or a node\r\n     */\r\n    checkWorkspaceHierarchy: function( obj ) {\r\n\r\n      var result;\r\n      var node;\r\n      if (obj instanceof Context) {\r\n        var workspaceContext = this.getWorkspaceContext(obj);\r\n        if (workspaceContext) {\r\n          result = workspaceContext.checkWorkspaceHierarchy();\r\n        } else if (obj.hasModel(\"node\")) {\r\n          node = obj.getModel(\"node\");\r\n        }\r\n      } else {\r\n        node = obj;\r\n      }\r\n      if (node) {\r\n        result = ConwsMainNodeExtraData.checkWorkspaceHierarchy(node);\r\n      }\r\n      return result||{};\r\n    },\r\n\r\n    /**\r\n     * returns the node model for the current workspace\r\n     * returns undefined outside a workspace.\r\n     *\r\n     * @param {*} context the navigation context\r\n     */\r\n    getWorkspaceModel: function( context ) {\r\n\r\n      var result;\r\n      if (this.checkWorkspaceHierarchy(context).level>=0) {\r\n        var workspaceContext = this.getWorkspaceContext(context);\r\n        if (workspaceContext && workspaceContext.hasObject(\"node\")) {\r\n          result = this.getWorkspaceContext(context).getModel(\"node\");\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n  };\r\n\r\n  return NavigateUtil;\r\n});\n","csui.define('conws/perspectives/tabbed/tab.index/conws.tab.index.preferences.extension',[ 'module', 'csui/lib/underscore', 'csui/utils/log',\r\n  'csui/utils/contexts/factories/next.node',\r\n  'conws/utils/navigate/navigate.util'\r\n],function( module, _, Log,\r\n  NextNodeModelFactory,\r\n  NavigateUtil\r\n) {\r\n  'use strict';\r\n\r\n  var log = new Log(module.id);\r\n\r\n  function hasContextTabbedPerspective(context) {\r\n    var perspective = context && context.perspective;\r\n    var options = perspective && perspective.get(\"options\");\r\n    return !!(options && options.tabs);\r\n  }\r\n\r\n  function getFolderBrowserTabIndex(context) {\r\n\r\n    var perspective = context && context.perspective;\r\n    var options = perspective && perspective.get(\"options\");\r\n    var tabs = options && options.tabs;\r\n    var tabIndex;\r\n    // find first tab with a nodestable on it and remember the index in tabIndex\r\n    tabs && _.find(tabs, function (tab, idx) {\r\n      var col = _.find(tab.columns, function (col) {\r\n        return col.widget && col.widget.type === \"csui/widgets/nodestable\";\r\n      });\r\n      if (col) {\r\n        tabIndex = idx;\r\n        return true;\r\n      }\r\n    });\r\n\r\n    return tabIndex;\r\n  }\r\n\r\n  return [\r\n    {\r\n      /**\r\n       * This method computes the tab index desired by conws, depending on the current navigation state.\r\n       *\r\n       * preconditions:\r\n       * must be called on initial load of the page.\r\n       * must be called on each csui navigation step, but not browser back/forward/refresh.\r\n       * must not be called on browser back/forward/refresh because in this case, the tab has already been computed before\r\n       * and in this case the tab index must be restored from the view state by csui itself.\r\n       *\r\n       * must be called at a point in time when all of the following is true:\r\n       * - options.context.perspective contains the loaded perspective configuration\r\n       * - options.context.getModel(NextNodeModelFactory) contains the data for the navigation node\r\n       * - the conws perspective context plugin has been called for the current navigation step\r\n       *\r\n       * It returns:\r\n       * undefined, when it does not care or cannot decide about the index (i.e outside a workspace).\r\n       * the integer number of the desired tab, when navigation is inside a workspace and a tabbed perspective is loaded.\r\n       *\r\n       * @param {*} options object containing 'context'.\r\n       */\r\n      getPreferredTabIndex: function(options){\r\n\r\n        var tabToActivate;\r\n        var context = options.context;\r\n        var viewStateModel = context.viewStateModel;\r\n        var conwsNavigated = viewStateModel.get('conwsNavigated');\r\n        var wkspHierarchy = NavigateUtil.checkWorkspaceHierarchy(context.getModel(NextNodeModelFactory));\r\n        var wkspId = wkspHierarchy.wkspid;\r\n\r\n        var isTabbed = hasContextTabbedPerspective(context);\r\n        if (wkspId && isTabbed) {\r\n\r\n          // if tab is not yet specified and we enter a workspace: determine the desired tab that\r\n          // needs to be activated. Note: we only setup the viewState and the tabbed.perspective.view\r\n          // is the one that sets the tab based on what is in the viewState and the defaultViewState\r\n          if (conwsNavigated === \"gotoLocation\") {\r\n\r\n            tabToActivate = getFolderBrowserTabIndex(context);\r\n\r\n          } else if (conwsNavigated === \"browseView\") {\r\n\r\n            tabToActivate = 0;\r\n\r\n          } else if (conwsNavigated === \"conwsLink\") {\r\n\r\n            tabToActivate = wkspHierarchy.level===0 ? 0 : getFolderBrowserTabIndex(context);\r\n\r\n          } else {\r\n            tabToActivate = wkspHierarchy.level===0 ? 0 : getFolderBrowserTabIndex(context);\r\n          }\r\n\r\n        }\r\n\r\n        log.debug('Conws::getPreferredTabIndex {0}', tabToActivate) && console.log(log.last);\r\n        return tabToActivate;\r\n      }\r\n\r\n    }\r\n  ];\r\n});\r\n\n","csui.define('conws/models/workspacecontext/impl/workspace.perspective.context.plugin',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/utils/log',\r\n  'csui/utils/contexts/perspective/perspective.context.plugin',\r\n  'csui/utils/contexts/factories/node',\r\n  'csui/utils/contexts/factories/next.node',\r\n  'conws/utils/navigate/navigate.util'\r\n], function (module, $, _, Log,\r\n    PerspectiveContextPlugin,\r\n    NodeModelFactory,\r\n    NextNodeModelFactory,\r\n    NavigateUtil) {\r\n  'use strict';\r\n\r\n  var log = new Log(module.id);\r\n\r\n  function hasContextTabbedPerspective(context) {\r\n    var perspective = context && context.perspective;\r\n    var options = perspective && perspective.get(\"options\");\r\n    return !!(options && options.tabs);\r\n  }\r\n\r\n  function setupConwsNavigate(context, node, view) {\r\n    var viewStateModel = context && context.viewStateModel;\r\n    if (view && viewStateModel) {\r\n      var conwsNavigate = viewStateModel.get('conwsNavigate');\r\n      if (!conwsNavigate || conwsNavigate===\"refreshed\") {\r\n        // view.is: 'NodesTableView', 'BreadcrumbCollectionView', 'NodeTreeView', ...\r\n        // by default indicate 'conwsLink' (see tab.index.preferences.extension for more).\r\n        conwsNavigate = 'conwsLink';\r\n        if (view.is==='BreadcrumbCollectionView') {\r\n          // clicking on the breadcrumb always opens the folder browser tab, in a workspace navigation.\r\n          conwsNavigate = 'gotoLocation';\r\n        } else if (view.is==='NodeTreeView') {\r\n          var root = view.rootNodes && view.rootNodes.length>0 && view.rootNodes[0];\r\n          if (root && root.get(\"id\")===node.get(\"id\")) {\r\n            // clicking on the tree view root node opens the folder browser tab, in a workspace navigation.\r\n            conwsNavigate = 'gotoLocation';\r\n          }\r\n        }\r\n        log.debug('Conws conwsNavigate set \"{0}\"', conwsNavigate) && console.log(log.last);\r\n        viewStateModel.set('conwsNavigate',conwsNavigate);\r\n      }\r\n    }\r\n  }\r\n\r\n  function setupContextModelListener(context, factoryName, callback) {\r\n    var model;\r\n    if (context.hasModel(factoryName)) {\r\n      model = context.getModel(factoryName);\r\n      callback.call(this,context,model);\r\n    }\r\n    this.listenTo(context,'add:factory',function(context,name,factory){\r\n      if (name===factoryName){\r\n        var old = model;\r\n        model = factory && factory.property;\r\n        callback.call(this,context,model,old);\r\n      }\r\n    });\r\n  }\r\n  var WorkspacePerspectiveContextPlugin = PerspectiveContextPlugin.extend({\r\n\r\n    constructor: function WorkspacePerspectiveContextPlugin(options) {\r\n      PerspectiveContextPlugin.prototype.constructor.apply(this, arguments);\r\n      setupContextModelListener.call(this, this.context, \"nextNode\", function(context, nextNode, oldModel) {\r\n        oldModel && this.stopListening(oldModel);\r\n        nextNode && this.listenTo(nextNode,\"before:change:id\",function(node, view){\r\n          setupConwsNavigate(context, node, view);\r\n        })\r\n      });\r\n      setupContextModelListener.call(this, this.context, \"workspaceContext\", function(context, workspaceContext, oldWkspContext) {\r\n        var oldWkspModel = oldWkspContext && oldWkspContext.getModel(\"node\");\r\n        oldWkspModel && this.stopListening(oldWkspModel);\r\n        var workspaceModel = workspaceContext && workspaceContext.getModel(\"node\");\r\n        workspaceModel && this.listenTo(workspaceModel,\"sync error change:name\",function() {\r\n          context.viewStateModel.setSessionViewState('wkspname',workspaceModel.get(\"name\"));\r\n        });\r\n      });\r\n\r\n      // register for navigate event to set view state at correct point in time\r\n      this.listenTo(this.context.viewStateModel,'navigate',function(historyEntry){\r\n\r\n        var wkspId = NavigateUtil.checkWorkspaceHierarchy(this.context).wkspid||0;\r\n        // perhaps only set when this is true: historyEntry || viewState.getSessionViewState('wkspid')===undefined\r\n        this.context.viewStateModel.setSessionViewState('wkspid', wkspId);\r\n\r\n        var wkspModel = NavigateUtil.getWorkspaceModel(this.context);\r\n        var wkspName = (wkspModel && wkspModel.get(\"id\")===wkspId) ? wkspModel.get(\"name\") : undefined;\r\n        this.context.viewStateModel.setSessionViewState('wkspname', wkspName);\r\n        this.context.viewStateModel.set('conwsNavigated', undefined);\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Purposes of this override in conws:\r\n     * 1. Maintain flags to determine from where navigation was triggered.\r\n     * 2. Check whether to force a perspective change and return appropriate value.\r\n     *\r\n     * for 1.\r\n     *\r\n     * The flag \"conwsNavigate\" can be set before the navigation is triggered.\r\n     * This is used for example by the conws goto.location extension or by the listener\r\n     * for the \"before:change:id\" event in this file.\r\n     * Because we cannot intercept ALL navigation steps BEFORE the navigation in order\r\n     * to set (or reset) the flag, but onApply is called for each navigation step,\r\n     * we can use this point in time to reset the \"conwsNavigate\" flag.\r\n     * To make it usable for all other components we keep the value as \"conwsNavigated\" flag.\r\n     *\r\n     * for 2.\r\n     *\r\n     * With  the introduction of deferred tab loading it is faster to render one\r\n     * tab and load its models than loading all models of a large full perspective.\r\n     * On navigation to the same tab perspective, without interception, all models\r\n     * would be loaded. We must prevent this here and force a \"perspective change\"\r\n     * in this situation. Forcing a \"perspective change\" has the effect, that the\r\n     * perspective is cleared and/or created newly from scratch thus and only the\r\n     * models on the first displayed tab are loaded.\r\n     *\r\n     * In the other situation - when the target is a different perspective - the\r\n     * navigation anyway forces a \"perspective change\". So we don't need\r\n     * to handle that situation here.\r\n     *\r\n     * The perspective stored in sourceModel will be used for the navigated node.\r\n     * However it can be changed by any other plugin later. So inspecting this, we\r\n     * don't really know, whether the perspective will be a tabbed perspective or not.\r\n     * Therefore and as we only need to prevent the case where the perspective stays\r\n     * the same, we look at the previous perspective and if it is a tab perspective\r\n     * we force a change if the next node is a different workspace than before.\r\n     * Of course thereby we also force a change in the case, when the old perspective\r\n     * is a tab perspective and the new is not. But this does no harm, as in that\r\n     * case the standard navigation mechanism anyway forces a \"perspective change\".\r\n     *\r\n     * So to check whether to force a perspective change, we use the old perspective,\r\n     * still available in context.perspective.\r\n     *\r\n     * @param {NodeModel} sourceModel the new node, to navigate to\r\n     * @param {Boolean}   forceChange flag if \"perspective change\" is already forced\r\n     */\r\n    onApply: function (sourceModel, forceChange) {\r\n\r\n      var context = this.context;\r\n      if (context) {\r\n\r\n        var oldHierarchy = NavigateUtil.checkWorkspaceHierarchy(context.getModel(NodeModelFactory)),\r\n            newHierarchy = NavigateUtil.checkWorkspaceHierarchy(context.getModel(NextNodeModelFactory));\r\n        var oldId = oldHierarchy.wkspid||0,\r\n            newId = newHierarchy.wkspid||0;\r\n\r\n        // get hint, where request comes from and save it in view state for later usage\r\n        var viewStateModel = context.viewStateModel;\r\n        var conwsNavigate = viewStateModel.get('conwsNavigate');\r\n        log.debug('Conws conwsNavigate get \"{0}\"', conwsNavigate) && console.log(log.last);\r\n        viewStateModel.set({\r\n          conwsNavigate: undefined,\r\n          conwsNavigated: conwsNavigate\r\n        });\r\n\r\n        log.debug('Conws::onApply checking change for {0} {1}', newId, forceChange) && console.log(log.last);\r\n        if (oldId || newId) {\r\n\r\n          if (oldId !== newId) {\r\n            // we are about to leave or enter a workspace or to switch to another workspace:\r\n            // check if to force/reject a perspective change\r\n\r\n            // force if perspective change is not yet forced.\r\n            if (!forceChange && hasContextTabbedPerspective(context)) {\r\n              // there is no force yet on a tabbed perspective -> force change\r\n              log.debug('Conws::onApply forcing change') && console.log(log.last);\r\n              return {forceChange: true};\r\n            }\r\n          } else {\r\n            // here we know, that we stay in the workspace.\r\n\r\n            // reject if perspective change is forced.\r\n            if (forceChange) {\r\n              // there is a force, but we will stay in the same workspace -> reject change\r\n              log.debug('Conws::onApply reject change') && console.log(log.last);\r\n              return {forceChange: false};\r\n            }\r\n          }\r\n        }\r\n        log.debug('Conws::onApply skipping change') && console.log(log.last);\r\n      } else {\r\n        log.debug('Conws::onApply no context') && console.log(log.last);\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return WorkspacePerspectiveContextPlugin;\r\n\r\n});\n","// Fetches the workspace id of the effective businessworkspace for a given node.\r\ncsui.define('conws/models/workspacecontext/impl/workspacecontext.node.model',['require', 'module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/utils/log',\r\n  'csui/utils/url',\r\n  'csui/models/resource',\r\n  'csui/utils/contexts/factories/node',\r\n  'conws/utils/contexts/perspective/plugins/node/impl/conws.main.node.extra.data'\r\n], function (require, module, $, _, Backbone,\r\n  Log,\r\n  Url,\r\n  ResourceModel,\r\n  NodeModelFactory,\r\n  ConwsMainNodeExtraData) {\r\n\r\n  // need WorkspaceContextModel to determine, whether to issue a deprecated message in constructor.\r\n  // must require it dynamically as static require would lead to cycle.\r\n  var WorkspaceContextModel;\r\n  require([\r\n    'conws/models/workspacecontext/workspacecontext.model'\r\n  ],function(_WorkspaceContextModel){\r\n    WorkspaceContextModel = _WorkspaceContextModel;\r\n  });\r\n\r\n  var log = new Log(module.id);\r\n\r\n  /**\r\n   * just log deprecated message.\r\n   * @param {*} name\r\n   */\r\n  function logDeprecated(name,stacktrace) {\r\n    var message = \"DEPRECATED: don't use 'workspacecontext.node.model' anymore. Depend \" +\r\n    \"on 'conws/utils/navigate/navigate.util' as NavigateUtil and use \" +\r\n    \"NavigateUtil.checkWorkspaceHierarchy(context) or \" +\r\n    \"NavigateUtil.getWorkspaceModel(context).\";\r\n    if (name) {\r\n      message += \"\\nCalled function: \"+ name;\r\n    }\r\n    if (stacktrace) {\r\n      message += \"\\n\"+ stacktrace;\r\n    }\r\n    console.warn( message );\r\n  }\r\n\r\n  /**\r\n   * wrap a function and return the wrapping function that logs a deprecated\r\n   * warning and then calls the original function passing all arguments.\r\n   * As functions might be called multiple times or recursively during the\r\n   * same call stack, it might be that the call is a consequence of a previous\r\n   * call on the stack where a message was already logged and thus this one should\r\n   * not be logged. To determine that, the wrapping function keeps track in the flag\r\n   * 'state.logged': true -> already logged, false -> nothing logged yet.\r\n   *\r\n   * @param {function} func function to wrap\r\n   * @param {object} state object to store deprecated flag\r\n   * @param {boolean} internal if true, don't log message as no message is wanted in\r\n   * an internal call. Note: also for internal calls 'state.logged' is set to true so\r\n   * also in internal calls no message is logged in subsequent calls of the call chain.\r\n   * @param {boolean} reset if true, start a new call chain: i.e. set the\r\n   * 'state.logged' flag to false just before calling the wrapped method.\r\n   * @param {string} name function name used for log message\r\n   *\r\n   * returns the wrapping function.\r\n   */\r\n  function deprecate(func,state,internal,reset,name) {\r\n    return function() {\r\n      var result, logged = state.logged;\r\n      try {\r\n        if (!logged) {\r\n          if (!internal) {\r\n            logDeprecated( name, log.getStackTrace(2) );\r\n          }\r\n          state.logged = true;\r\n        }\r\n        if (reset) {\r\n          state.logged = false;\r\n        }\r\n        result = func.apply(this,arguments);\r\n      } finally {\r\n        state.logged = logged;\r\n      }\r\n      return result;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * fill the attributes of the model using the context node\r\n   */\r\n  function fill() {\r\n    var logobj = {\r\n      toString: function () {\r\n        // Format a string for logging purposes\r\n        var str = \"sync workspace id from \";\r\n        str = str + node.get('id') + \", \" + node.get('type') + \", \" + node.get('volume_id');\r\n        str = str + \" -> \" + ctxtWkspId;\r\n        return str;\r\n      }\r\n    };\r\n\r\n    var node = this.options.context.getModel(NodeModelFactory);\r\n    var ctxtWkspId = ConwsMainNodeExtraData.checkWorkspaceHierarchy(node).wkspid;\r\n    if (ctxtWkspId!==this.get(\"id\")) {\r\n      log.debug(\"Do {0}.\", logobj) && console.log(log.last);\r\n      if (ctxtWkspId) {\r\n        this.set({ id: ctxtWkspId, type: 848 });\r\n      } else {\r\n        this.set({ id: undefined, type: undefined });\r\n      }\r\n    } else {\r\n      log.debug(\"No need to {0}.\", logobj) && console.log(log.last);\r\n    }\r\n\r\n    this._fetchSucceeded();\r\n    return $.Deferred().resolve().promise();\r\n  }\r\n\r\n  var WorkspaceContextNode = Backbone.Model.extend(\r\n    _.defaults({\r\n\r\n      workspaceSpecific: true,\r\n\r\n      constructor: function WorkspaceContextNode(attributes, options) {\r\n        options || (options = {});\r\n\r\n        var state = {};\r\n        try {\r\n\r\n          // log deprecated warning if constructor is not called by WorkspaceContextModel\r\n          var reference;\r\n          if (!WorkspaceContextModel) {\r\n            delete options.workspaceReference;\r\n          } else if (WorkspaceContextModel.isPrivateReference(options.creatorReference)) {\r\n            reference = options.creatorReference;\r\n            delete options.workspaceReference;\r\n          }\r\n          if (!reference) {\r\n            logDeprecated( \"constructor\", log.getStackTrace(2) );\r\n            state.logged = true;\r\n          }\r\n\r\n          Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n          this.options = options;\r\n\r\n          this.makeResource(options);\r\n\r\n          // in \"internal\" functions allow calls of deprecated functions.\r\n          var sync = deprecate(fill,state,true,false);\r\n          var syncToNode = deprecate(this.syncToNode,state,true,false);\r\n          // prepare some methods to issue a deprecated warning, but only when called from outside.\r\n          // set \"flag\" to false, if LPAD-92235 is resolved and we can deprecate usage of this model.\r\n          var flag = true;\r\n          this.get = deprecate(this.get, state, flag, false, \"get\");\r\n          this.set = deprecate(this.set, state, flag, false, \"set\");\r\n          this.syncToNode = deprecate(this.syncToNode, state, false, false, \"syncToNode\");\r\n          this.url = deprecate(this.url, state, false, false, \"url\");\r\n          this.fetch = deprecate(this.fetch, state, flag, false, \"fetch\");\r\n          this.parse = deprecate(this.parse, state, flag, false, \"parse\");\r\n          this.trigger = deprecate(this.trigger, state, flag, true, \"trigger\");\r\n\r\n          // if we have access to the navigation context\r\n          if (this.options.context) {\r\n\r\n            // new style construction\r\n            this.listenTo(this.options.context.getModel(NodeModelFactory), 'change:id', sync);\r\n\r\n            // and initially set id if it fits.\r\n            sync.call(this);\r\n\r\n          } else {\r\n\r\n            // old style construction. log deprecated, if needed.\r\n            if (!state.logged) {\r\n              logDeprecated( \"constructor\", log.getStackTrace(2) );\r\n              state.logged = true;\r\n            }\r\n\r\n            this.listenTo(this.options.node, 'change:id', syncToNode);\r\n\r\n            // and initially set id if it fits.\r\n            syncToNode.call(this);\r\n          }\r\n        } finally {\r\n          state.logged = false;\r\n        }\r\n      },\r\n\r\n      syncToNode: function() {\r\n        var node = this.options.node;\r\n        var node_id = node.get(\"id\");\r\n        if (node.get(\"type\")===848) {\r\n          this.set({id:node_id,type:848});\r\n        }\r\n      },\r\n\r\n      url: function () {\r\n        var nodeId = this.options.node.get('id');\r\n        // URLs like /nodes/:id/blablabla\r\n        //var url = this.node.urlBase() + '/blablabla';\r\n        // Alternative for URLs like /businessworkspace/:id\r\n        var url = Url.combine(this.options.connector.getConnectionUrl().getApiBase('v1'), 'nodes', nodeId,\r\n            'businessworkspace'); // yes, we need to send a v1 call!!!\r\n        return url;\r\n      },\r\n\r\n      fetch: function (options) {\r\n        var logobj = {\r\n          options: this.options,\r\n          toString: function () {\r\n            // Format a string for logging purposes\r\n            return \"node:\" + (this && this.options && this.options.node && this.options.node.get('id'));\r\n          }\r\n        };\r\n\r\n        if (this.options.node.get('type')!==848) {\r\n          log.debug(\"Fetching the workspace id for {0} from server.\", logobj) && console.log(log.last);\r\n          options || (options = {});\r\n          // If not overridden, Use the v1 URL for GET requests\r\n          if (!options.url) {\r\n            options.url = _.result(this, 'url');\r\n          }\r\n          return this.Fetchable.fetch.call(this, options);\r\n        } else {\r\n          log.debug(\"Fetching the workspace id for {0} from node.\", logobj) && console.log(log.last);\r\n          this.set({id:this.options.node.get('id'),type:848});\r\n          return $.Deferred().resolve().promise();\r\n        }\r\n      },\r\n\r\n      parse: function (response) {\r\n        return {id:response.id,type:response.type};\r\n      }\r\n\r\n    }, ResourceModel(Backbone.Model)));\r\n\r\n  return WorkspaceContextNode;\r\n\r\n});\r\n\n","csui.define('conws/models/workspacecontext/impl/workspacecontext.node.factory',['csui/lib/underscore',\r\n  'csui/utils/contexts/factories/factory',\r\n  'csui/utils/contexts/factories/connector',\r\n  'csui/utils/contexts/factories/node',\r\n  'conws/models/workspacecontext/impl/workspacecontext.node.model'\r\n], function (_,\r\n    ModelFactory,\r\n    ConnectorFactory,\r\n    NodeModelFactory,\r\n    WorkspaceContextNodeModel) {\r\n\r\n  var WorkspaceContextNodeFactory = ModelFactory.extend({\r\n\r\n    propertyPrefix: 'workspaceContextNode',\r\n\r\n    constructor: function WorkspaceContextNodeFactory(context, options) {\r\n\r\n      // don't let ModelFactory constructor store creatorReference in this.options\r\n      var creatorReference = options.creatorReference;\r\n      delete options.creatorReference\r\n      delete options.workspaceContextNode.creatorReference;\r\n\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      var node = options.workspaceContextNode.node || context.getModel(NodeModelFactory, options),\r\n          connector = options.workspaceContextNode.connector || context.getObject(ConnectorFactory, options);\r\n\r\n      this.property = new WorkspaceContextNodeModel({},{\r\n        creatorReference: creatorReference,\r\n        connector: connector,\r\n        node:node,\r\n        context: options.context\r\n      });\r\n\r\n    },\r\n\r\n    fetch: function (options) {\r\n      return this.property.fetch(options);\r\n    }\r\n\r\n  });\r\n\r\n  return WorkspaceContextNodeFactory;\r\n\r\n});\r\n\n","/**\r\n * Created by stefang on 24.11.2015.\r\n */\r\ncsui.define('conws/models/workspacecontext/workspacecontext.model',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  \"csui/utils/log\",\r\n  'csui/utils/contexts/context',\r\n  'csui/utils/commands',\r\n  'csui/utils/defaultactionitems',\r\n  'csui/utils/contexts/factories/node',\r\n  'conws/models/workspacecontext/impl/workspacecontext.node.factory',\r\n  'conws/utils/contexts/perspective/plugins/node/impl/conws.main.node.extra.data'\r\n], function (module, $, _, Backbone,\r\n    Log,\r\n    Context,\r\n    commands,\r\n    defaultActionItems,\r\n    NodeModelFactory,\r\n    WorkspaceContextNodeFactory,\r\n    ConwsMainNodeExtraData) {\r\n\r\n  var log = new Log(module.id);\r\n\r\n  /**\r\n   * local helper method to get an object silently without deprecation warning.\r\n   *\r\n   * @param {*} wkspCtxt\r\n   * @param {*} methodName\r\n   * @param {*} params\r\n   */\r\n  function getWorkspaceObject(wkspCtxt, methodName, params) {\r\n\r\n    var model;\r\n\r\n    if (wkspCtxt.isWorkspaceSpecific(params[0])) {\r\n      model = Context.prototype[methodName].apply(wkspCtxt, params);\r\n    } else {\r\n      model = wkspCtxt.options.context[methodName].apply(wkspCtxt.options.context, params);\r\n    }\r\n\r\n    return model;\r\n  }\r\n\r\n  /**\r\n   * A workspace context provides functionality to manage workspace specific data.\r\n   *\r\n   * A workspace context is similar to a navigation context.\r\n   * The main (or even only?) purpose of a navigation context ({@link 'csui/utils/contexts/context'})\r\n   * is to fetch its associated objects during a navigation step, i.e. when the current\r\n   * navigation location is changed.\r\n   * The task of the workspace context is also to fetch its associated objects at such\r\n   * a navigation step, but to do this for workspace specific objects only if the previous\r\n   * and new nodes are associated to a different workspace node (called workspace navigation\r\n   * step).\r\n   *\r\n   * A navigation node is considered as associated to a workspace node if it is the\r\n   * workspace node itself or if it is located below a workspace node and no other\r\n   * workspace node is in between.\r\n   *\r\n   * Similar to the node model representing the current navigation node, which is\r\n   * provided by the navigation context, the workspace context provides a node model\r\n   * representing the workspace node.\r\n   *\r\n   * A workspace context provides the same interface as navigation context ({@link 'csui/utils/contexts/context'})\r\n   * plus one additional method {@link setWorkspaceSpecific} to let the workspace\r\n   * context know that it has to treat an object as a workspace specific object.\r\n   * A workspace specific object is stored in the workspace context itself whereas\r\n   * all other objects are stored in the associated navigation context.\r\n   *\r\n   * Usage example:\r\n   *\r\n   * require 'conws/models/workspacecontext/workspacecontext.factory' as WorkspaceContextFactory\r\n   *\r\n   * var wkspContext, myWkspInfo, myNaviInfo;\r\n   *\r\n   * wkspContext = context.get(WorkspaceContextFactory);\r\n   * wkspContext.setWorkspaceSpecific(MyWkspInfoModelFactory);\r\n   * myWkspInfo = wkspContext.getModel(MyWkspInfoModelFactory);\r\n   * myNaviInfo = wkspContext.getModel(MyNaviInfoModelFactory);\r\n   *\r\n   * After above code myWkspInfo represents a model fetched only in a workspace\r\n   * navigation step while myNaviInfo is fetched in any navigation step.\r\n   */\r\n  var WorkspaceContextModel = Context.extend({\r\n\r\n    /**\r\n     * @deprecated\r\n     *\r\n     * instead of wkspContext.wkspid require 'conws/utils/navigate/navigate.util' as\r\n     * NavigateUtil and use NavigateUtil.checkWorkspaceHierarchy(wkspContext) or\r\n     * NavigateUtil.getWorkspaceModel(wkspContext).\r\n     */\r\n    wkspid: undefined,\r\n\r\n    constructor: function WorkspaceContextModel(attributes, options) {\r\n      options || (options = {});\r\n\r\n      Context.prototype.constructor.apply(this, arguments);\r\n\r\n      this.options = options;\r\n\r\n      this.workspaceSpecific = {};\r\n      this.workspaceSpecific[NodeModelFactory.prototype.propertyPrefix] = true;\r\n      this.workspaceSpecific[WorkspaceContextNodeFactory.prototype.propertyPrefix] = true;\r\n\r\n      this.workspaceSpecificFactories = [\r\n        NodeModelFactory,\r\n        WorkspaceContextNodeFactory\r\n      ];\r\n\r\n      // get the navigation node, that triggers the workspace node\r\n      this.options.node = this.options.context.getModel(NodeModelFactory);\r\n\r\n      // set wkspid model for compatibility only. we don't use it anymore.\r\n      this.wkspid = getWorkspaceObject(this, \"getModel\", [WorkspaceContextNodeFactory, {\r\n        creatorReference: privateReference,\r\n        context: this.options.context,\r\n        node: this.options.node,\r\n        connector: this.options.node.connector\r\n      }]);\r\n\r\n      // and provide a workspace node, for compatibility with the outer context\r\n      this.node = this.getModel(NodeModelFactory, {\r\n        node: {\r\n          options: {\r\n            delayRestCommands: true,\r\n            promoteSomeRestCommands: false,\r\n            defaultActionCommands: defaultActionItems.getAllCommandSignatures(commands),\r\n            commands: commands.getAllSignatures()\r\n          }\r\n        }\r\n      });\r\n\r\n      log.debug(\"wksp create {0}\",this.options.node.get(\"type\")) && console.log(log.last);\r\n      if (this.options.node.get(\"type\")===848) {\r\n        // initialize node with all available attributes\r\n        this.node.set(this.options.node.attributes);\r\n        this._handleDelayedActions(\"wksp-create\");\r\n      }\r\n\r\n      this.listenTo(this.options.node,\"change:id\",function() {\r\n        var wkspid = this.checkWorkspaceHierarchy().wkspid;\r\n        // navigation step in process wherever it is: to/from a workspace and to/from anywhere else.\r\n        if (wkspid===this.options.node.get(\"id\")) {\r\n          // workspace is the navigation node.\r\n          // independently whether we were in the same workspace before or anywhere else, set attributes\r\n          // to reflect potential changes in workspace node and to let name in header view\r\n          // and tree view be in sync with name in navigate-up button and bread-crumb.\r\n          // Note: This case might occur also if we are outside a workspace and the navigation node\r\n          // has no id. If this is a valid case for a navigation node at all, then it is valid for\r\n          // a workspace node as well. And if not, then any stable code is good enough.\r\n          // And: even if the navigation node has no id, views should render smoothly in this case.\r\n          log.debug(\"id-change propagate\") && console.log(log.last);\r\n          this.node.set(this.options.node.attributes);\r\n          this._handleDelayedActions(\"id-change\");\r\n        } else {\r\n          // this case is handled in fetch method.\r\n          log.debug(\"id-change delay\") && console.log(log.last);\r\n        }\r\n      });\r\n\r\n      this.listenTo(this.options.node, 'change', function() {\r\n        if (this.node.get(\"id\") === this.options.node.get(\"id\")) {\r\n          if (!this.options.node.changed.hasOwnProperty(\"id\")) {\r\n            log.debug(\"node-change propagate\") && console.log(log.last);\r\n            // only propagate changed attributes, otherwise we would generate disturbing changes\r\n            this.node.set(this.options.node.changed);\r\n          } else {\r\n            // already processed in \"change:id\" handler\r\n            log.debug(\"node-change skip\") && console.log(log.last);\r\n          }\r\n        } else {\r\n          log.debug(\"node-change ignore\") && console.log(log.last);\r\n        }\r\n      });\r\n\r\n      if (this.options.node.delayRestCommands) {\r\n        // The boolean flag indicates the readiness of node.actions after fetching in delayed mode.\r\n        this.listenTo(this.options.node, 'change:csuiDelayedActionsRetrieved', function() {\r\n          this._handleDelayedActions(\"flag-change\");\r\n        });\r\n        // Watching for the flag is not enough, if the workspace is entered indirectly,\r\n        // by following a shortcut to a sub-folder or jumping directly into a sub-folder.\r\n        this.listenTo(this.options.node.actions, 'reset', function() {\r\n          this._handleDelayedActions(\"actions-reset\");\r\n        });\r\n      }\r\n    },\r\n\r\n    _handleDelayedActions: function(where) {\r\n      function actionsDiffer(actions1,actions2) {\r\n        if (actions1.length!==actions2.length) {\r\n          return true;\r\n        }\r\n        for (var ii = 0; ii<actions1.length; ii++) {\r\n          if (actions1[ii].get(\"signature\")!==actions2[ii].get(\"signature\")) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n\r\n      if (this.options.node.delayRestCommands && this.node.get(\"id\") === this.options.node.get(\"id\")) {\r\n        where = where ? where+\" \" : \"\";\r\n        // If the flag is true node.actions are complete after fetching in delayed mode.\r\n        if (this.options.node.get('csuiDelayedActionsRetrieved')) {\r\n          // to avoid flickering propagate actions only if they really differ\r\n          if (actionsDiffer(this.node.actions.models,this.options.node.actions.models)) {\r\n            log.debug(where+\"propagate actions\") && console.log(log.last);\r\n            // Actions on the workspace node got fetched in the delayed mode.\r\n            this.node.actions.reset(this.options.node.actions.models);\r\n            // The delayed-actions event is relayed because toolbars\r\n            // in some widget may listen to the workspace node.\r\n            this.node.delayedActions.trigger('sync', this.node.delayedActions, {}, {});\r\n          } else {\r\n            log.debug(where+\"skip actions\") && console.log(log.last);\r\n          }\r\n        } else {\r\n          log.debug(where+\"delay actions\") && console.log(log.last);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * declare a factory to be handled as workspace specific.\r\n     *\r\n     * A workspace specific factory (thus its object and model) is fetched in a navigation\r\n     * step only if the previous and new nodes are associated to a different workspace node.\r\n     *\r\n     * @param {*} Factory\r\n     */\r\n    setWorkspaceSpecific: function(Factory) {\r\n      if (typeof Factory === 'string') {\r\n        this.workspaceSpecific[Factory] = true;\r\n      } else {\r\n        this.workspaceSpecific[Factory.prototype.propertyPrefix] = true;\r\n        if (!this._isWorkspaceSpecificFactory(Factory)) {\r\n          this.workspaceSpecificFactories.push(Factory);\r\n        }\r\n\r\n      }\r\n    },\r\n\r\n    /**\r\n     * check, whether a factory is workspace specific.\r\n     *\r\n     * @param {*} Factory\r\n     */\r\n    isWorkspaceSpecific: function (Factory) {\r\n      var propertyPrefix = (typeof Factory === 'string') ? Factory : Factory.prototype.propertyPrefix;\r\n      var found = false;\r\n      if (this.workspaceSpecific[propertyPrefix]) {\r\n        found = true;\r\n      } else if (this._isWorkspaceSpecificFactory(Factory)) {\r\n        // remember property prefix, so we find it faster next time.\r\n        this.workspaceSpecific[propertyPrefix] = true;\r\n        found = true;\r\n      }\r\n      return found;\r\n    },\r\n\r\n    _isWorkspaceSpecificFactory: function (Factory) {\r\n      var ii, found = false;\r\n      if (typeof Factory === 'string') {\r\n        for (ii=0; ii<this.workspaceSpecificFactories.length; ii++) {\r\n          if (this.workspaceSpecificFactories[ii].prototype.propertyPrefix===Factory) {\r\n            found = true;\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        for (ii=0; ii<this.workspaceSpecificFactories.length; ii++) {\r\n          if (this.workspaceSpecificFactories[ii]===Factory) {\r\n            found = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return found;\r\n    },\r\n\r\n    /**\r\n     * @deprecated\r\n     *\r\n     * instead of wkspContext.getOuterContext() require 'conws/utils/navigate/navigate.util'\r\n     * as NavigateUtil and use NavigateUtil.getNavigationContext(wkspContext).\r\n     */\r\n    getOuterContext: function () {\r\n      console.warn(\r\n        \"DEPRECATED: instead of wkspContext.getOuterContext() require 'conws/utils/navigate/navigate.util \" +\r\n        \"as NavigateUtil and use NavigateUtil.getNavigationContext(wkspContext).\"\r\n      );\r\n      return this.options.context;\r\n    },\r\n\r\n    getModel: function () { return this._getWorkspaceObject(\"getModel\", arguments); },\r\n    getCollection: function () { return this._getWorkspaceObject(\"getCollection\", arguments); },\r\n    getObject: function () { return this._getWorkspaceObject(\"getObject\", arguments); },\r\n\r\n    _getWorkspaceObject: function (methodName, params) {\r\n\r\n      function isa(a,b) {\r\n        if (typeof a === 'string') {\r\n          return a===b.prototype.propertyPrefix;\r\n        } else {\r\n          return a===b;\r\n        }\r\n      }\r\n\r\n      var factory = params[0];\r\n      if (isa(factory,WorkspaceContextNodeFactory)) {\r\n        console.warn(\r\n          \"DEPRECATED: don't use 'workspacecontext.node.factory' anymore. Depend \" +\r\n          \"on 'conws/utils/navigate/navigate.util' as NavigateUtil and use \" +\r\n          \"NavigateUtil.checkWorkspaceHierarchy(context) or \" +\r\n          \"NavigateUtil.getWorkspaceModel(context).\" +\r\n          log.getStackTrace(3)\r\n        );\r\n      }\r\n\r\n      return getWorkspaceObject(this,methodName,params);\r\n    },\r\n\r\n    /**\r\n     * fetch the models in the workspace.\r\n     *\r\n     */\r\n    fetch: function () {\r\n\r\n      function fetchContext() {\r\n        var promises = [], fetchNode = false, fetchFactories = false;\r\n        var nodeid = this.node.get(\"id\");\r\n        var ctxtid = this.options.node.get(\"id\");\r\n        var wkspid = this.checkWorkspaceHierarchy().wkspid;\r\n\r\n        log.debug(\"wksp check {0}, {1}, {2}, {3}.\",wkspid,nodeid,ctxtid,this._fetchid) && console.log(log.last);\r\n\r\n        // do fetch of registered factories only if workspace id of last fetch is different.\r\n        if (this._fetchid!==wkspid) {\r\n          this._fetchid = wkspid;\r\n          fetchFactories = true;\r\n        }\r\n\r\n        // check if we have to fetch the workspace node\r\n        // or copy the attributes from the navigation node\r\n        // or do nothing regarding the workspace node.\r\n        if (wkspid!==nodeid) {\r\n          if (wkspid) {\r\n            if (wkspid!==ctxtid) {\r\n              // navigating somewhere in the workspace hierarchy while node is still set with\r\n              // anything else. set node id and fetch node.\r\n              fetchNode = true;\r\n              this.node.set(\"id\",wkspid);\r\n            } else {\r\n              // navigating directly into a workspace while node is still set with anything else.\r\n              // set node attributes. don't fetch node.\r\n              this.node.set(this.options.node.attributes);\r\n              this._handleDelayedActions(\"wksp-fetch\");\r\n            }\r\n          } else {\r\n            // navigating away from a workspace and still some objects request a workspace model.\r\n            // but there is none. Clear node to have an empty model with no id.\r\n            // Views connected to that model should render smoothly in this case.\r\n            this.node.clear();\r\n          }\r\n        } else {\r\n          if (wkspid) {\r\n            if (wkspid!==ctxtid) {\r\n              // navigation step somewhere in the same workspace hierarchy. fetch node to\r\n              // reflect potential changes in workspace node and to let name in header view\r\n              // and tree view be in sync with name in navigate-up button and bread-crumb.\r\n              fetchNode = true;\r\n            }\r\n            // the else case (wkspid===ctxtid): is already handled in \"change:id\" handler.\r\n            // don't change the node here anymore.\r\n          }\r\n          // the else case (!wkspid) is: navigating around outside a workspace\r\n          // and still some objects request a workspace model.\r\n          // But there is none and node already has no id. so no need to change the node.\r\n        }\r\n\r\n        log.debug(\"wksp fetch {0}, {1}.\",fetchNode,fetchFactories) && console.log(log.last);\r\n\r\n        if (fetchNode) {\r\n          // for compatibility with past implementation do not pass options to the fetch method.\r\n          promises.push(this.node.fetch());\r\n        }\r\n        if (fetchFactories) {\r\n          // for compatibility with past implementation do not pass options to the fetch method.\r\n          promises = promises.concat(Context.prototype.fetch.call(this));\r\n        }\r\n\r\n        if (promises.length) {\r\n          return $.when.apply($,promises);\r\n        } else {\r\n          return $.Deferred().resolve().promise();\r\n        }\r\n      }\r\n\r\n      function fetchWkspid() {\r\n        if (ConwsMainNodeExtraData.checkWorkspaceHierarchy(this.options.node).wkspid===undefined) {\r\n          return this.wkspid.fetch().then(_.bind(function(){\r\n            return fetchContext.call(this);\r\n          },this));\r\n        } else {\r\n          return fetchContext.call(this);\r\n        }\r\n      }\r\n\r\n      if (this.options.node.fetching) {\r\n        return this.options.node.fetching.then(_.bind(function(){\r\n          return fetchWkspid.call(this);\r\n        },this));\r\n      } else {\r\n        return fetchWkspid.call(this);\r\n      }\r\n    },\r\n\r\n    isFetchable: function (factory) {\r\n      // never fetch workspace node and workspace context node together with the other factories.\r\n      // if at all, then they are explicitly fetched in the fetch method itself.\r\n      if (factory.property===this.node || factory.property===this.wkspid) {\r\n        return false;\r\n      }\r\n      return Context.prototype.isFetchable.call(this,factory);\r\n    },\r\n\r\n    /**\r\n     * check where we are in a workspace hierarchy.\r\n     * returns an object with:\r\n     * level<0: outside workspace.\r\n     * level=0: in workspace root.\r\n     * level>0: somewhere in the hierarchy below a workspace.\r\n     * wkspid: the workspace id in case of level >= 0.\r\n     * wkspid=null: in case of level<0.\r\n     * delivers both properties (level and wkspid) undefined\r\n     * if this.options.node does not contain bwsinfo data and\r\n     * this.wkspid also contains undefined as workspace id.\r\n     */\r\n    checkWorkspaceHierarchy: function() {\r\n      var node = this.options.node;\r\n      var result = ConwsMainNodeExtraData.checkWorkspaceHierarchy(node);\r\n      if (result.wkspid===undefined) {\r\n        var wkspid = this.wkspid.get(\"id\");\r\n        if (wkspid!==undefined) {\r\n          result.wkspid = wkspid;\r\n          if (wkspid) {\r\n            if (wkspid===node.get(\"id\")) {\r\n              result.level = 0;\r\n            } else {\r\n              result.level = 1;\r\n            }\r\n          } else {\r\n            result.level= -1;\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n  });\r\n\r\n  var privateReference = {};\r\n  WorkspaceContextModel.isPrivateReference = function (key) {\r\n    return key===privateReference;\r\n  }\r\n  return WorkspaceContextModel;\r\n\r\n});\r\n\n","// Fetches the workspace id of the effective businessworkspace for a given node.\r\ncsui.define('conws/models/workspacecontext/workspacecontext.node.model',[\r\n  'conws/models/workspacecontext/impl/workspacecontext.node.model'\r\n], function (WorkspaceContextNode) {\r\n\r\n  console.warn(\r\n    \"DEPRECATED: don't use 'workspacecontext.node.model' anymore. Depend \" +\r\n    \"on 'conws/utils/navigate/navigate.util' as NavigateUtil and use \" +\r\n    \"NavigateUtil.checkWorkspaceHierarchy(context) or \" +\r\n    \"NavigateUtil.getWorkspaceModel(context).\"\r\n  );\r\n\r\n  return WorkspaceContextNode;\r\n\r\n});\r\n\n","csui.define('conws/models/workspacecontext/workspacecontext.node.factory',[\r\n  'conws/models/workspacecontext/impl/workspacecontext.node.factory'\r\n], function (WorkspaceContextNodeFactory) {\r\n\r\n  console.warn(\r\n    \"DEPRECATED: don't use 'workspacecontext.node.factory' anymore. Depend \" +\r\n    \"on 'conws/utils/navigate/navigate.util' as NavigateUtil and use \" +\r\n    \"NavigateUtil.checkWorkspaceHierarchy(context) or \" +\r\n    \"NavigateUtil.getWorkspaceModel(context).\"\r\n  );\r\n\r\n  return WorkspaceContextNodeFactory;\r\n\r\n});\r\n\n","/**\r\n * Created by stefang on 24.11.2015.\r\n */\r\ncsui.define('conws/models/workspacecontext/workspacecontext.factory',['csui/lib/underscore',\r\n  'csui/utils/contexts/factories/factory',\r\n  'conws/models/workspacecontext/workspacecontext.model'\r\n], function (_,\r\n    ModelFactory,\r\n    WorkspaceContextModel) {\r\n\r\n  var WorkspaceContextFactory = ModelFactory.extend({\r\n\r\n    propertyPrefix: 'workspaceContext',\r\n\r\n    constructor: function WorkspaceContextFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      this.property = new WorkspaceContextModel({}, {context: context});\r\n\r\n    },\r\n\r\n    fetch: function (options) {\r\n      return this.property.fetch(options);\r\n    }\r\n\r\n  });\r\n\r\n  return WorkspaceContextFactory;\r\n\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('conws/utils/previewpane/impl/nls/previewpane.lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\r\n\n","// Defines localizable strings in the default language (English)\r\ncsui.define('conws/utils/previewpane/impl/nls/root/previewpane.lang',{\r\n  noMetadataMessage: 'No metadata available',\r\n  noRoleMembersMessage: 'No role members assigned',\r\n  quickLinkTooltipText: 'Open in external system'\r\n});\r\n\n","\n","csui.define('conws/utils/previewpane/impl/previewheader.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/utils/base',\r\n  'i18n!conws/utils/previewpane/impl/nls/previewpane.lang'\r\n], function (_, Backbone, Url, base, lang) {\r\n\r\n  var PreviewHeaderModel = Backbone.Model.extend({\r\n\r\n    // constructor gives an explicit name to the object in the debugger\r\n    constructor: function PreviewHeaderModel(options) {\r\n      Backbone.Model.prototype.constructor.call(this, {\r\n            id: options.node.get('id'),\r\n            typeName: base.getClosestLocalizedString(options.config.typeName, \"\"),\r\n            name: options.node.get('name'),\r\n            quickLinkTooltip: lang.quickLinkTooltipText\r\n          },\r\n          options\r\n      );\r\n\r\n      options || (options = {});\r\n\r\n      // enable the model for communication with the CS REST API\r\n      if (options && options.node && options.node.connector) {\r\n        options.node.connector.assignTo(this);\r\n      }\r\n    },\r\n\r\n    isFetchable: function () {\r\n      return true;\r\n    },\r\n\r\n    // computes the REST API URL used to access the metadata.\r\n    url: function () {\r\n      return Url.combine(this.connector.getConnectionUrl().getApiBase('v2'), 'businessworkspaces/' + this.get('id'));\r\n    },\r\n\r\n    // parses the REST call response and stores the data\r\n    parse: function (response) {\r\n      var ret = response.results && response.results.data && response.results.data.business_properties;\r\n      this.display_url = ret && ret.display_url;\r\n      return ret;\r\n    }\r\n  });\r\n\r\n  // return the model\r\n  return PreviewHeaderModel;\r\n});\r\n\n","csui.define('conws/utils/previewpane/impl/attributes.model',[\r\n  'module',\r\n  'csui/lib/jquery',\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/models/node/node.model'\r\n], function (module, $, _, Backbone, Url, NodeModel) {\r\n\r\n  var config = module.config();\r\n\r\n  var PreviewAttributesModel = Backbone.Model.extend({\r\n\r\n    // constructor gives an explicit name to the object in the debugger\r\n    constructor: function PreviewAttributesModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n      options || (options={});\r\n\r\n      // enable the model for communication with the CS REST API\r\n      if (options && options.connector) {\r\n        options.connector.assignTo(this);\r\n      }\r\n\r\n      this.categoryId = options.categoryId;\r\n    },\r\n\r\n    isFetchable: function () {\r\n      return true;\r\n    },\r\n\r\n    // computes the REST API URL used to access the metadata.\r\n    url: function () {\r\n      return Url.combine(\r\n        this.connector.connection.url,\r\n        '/forms/nodes/categories/update?id=' + this.get('id') + '&category_id=' + this.categoryId);\r\n    },\r\n\r\n    // parses the REST call response and stores the data\r\n    parse: function (response) {\r\n      return response.forms[0];\r\n    }\r\n  });\r\n\r\n  // return the model\r\n  return PreviewAttributesModel;\r\n});\r\n\n","csui.define('conws/utils/previewpane/impl/role.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/utils/base',\r\n  'csui/utils/url',\r\n  'csui/models/mixins/node.connectable/node.connectable.mixin',\r\n  'csui/models/mixins/fetchable/fetchable.mixin'\r\n], function (_, Backbone, base, Url, NodeConnectableMixin, FetchableMixin) {\r\n\r\n  var RoleMemberModel = Backbone.Model.extend({\r\n\r\n        constructor: function RoleMemberModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.call(this, attributes.member, options);\r\n\r\n            this.memberType = attributes.memberType;\r\n            this.member = attributes.member;\r\n            this.roles = attributes.roles;\r\n            this.connector = options.connector;\r\n        },\r\n\r\n        getLeadingRole: function () {\r\n            var first = '';\r\n            var lead = '';\r\n            var roles = this.roles;\r\n            _.each(roles, function (role) {\r\n                first = roles[0].name;\r\n                if (role.leader){\r\n                    lead = role.name;\r\n                }\r\n            });\r\n            return lead || first;\r\n        },\r\n\r\n        getRolesIndicator: function () {\r\n            var ret = '';\r\n            if (this.roles.length > 1) {\r\n                ret = '+' + (this.roles.length - 1);\r\n            }\r\n            return ret;\r\n        },\r\n\r\n        getMemberType: function(){\r\n          var ret = 'user';\r\n            var member = this.member;\r\n            if (member && member.type !== 0){\r\n                ret = 'group';\r\n            }\r\n            return ret;\r\n        },\r\n\r\n        // whenever the icon url has changed, trigger model\r\n        // change event\r\n        setIconUrl: function(url){\r\n            if (this.iconUrl !== url){\r\n                this.iconUrl = url;\r\n                this.trigger('change', this, this.options);\r\n            }\r\n        },\r\n\r\n        // gets the icon url\r\n        getIconUrl: function(){\r\n            return this.iconUrl;\r\n        }\r\n    });\r\n\r\n    var RoleMemberCollection = Backbone.Collection.extend({\r\n\r\n        model: RoleMemberModel,\r\n\r\n        constructor: function RoleMemberCollection(models, options) {\r\n            Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n\r\n            this.roleId = options.config.roleId;\r\n            this.context = options && options.context ? options.context : undefined;\r\n            this.makeNodeConnectable(options);\r\n            this.makeFetchable(options);\r\n        },\r\n\r\n        url: function () {\r\n            var id = this.node.get('id');\r\n            var url = this.connector.getConnectionUrl().getApiBase('v2');\r\n            url = Url.combine(url, 'businessworkspaces', id, 'roles');\r\n            url = url + '?fields=members';\r\n            return url;\r\n        },\r\n\r\n        parse: function (response) {\r\n\r\n            var team = {};\r\n\r\n            var roles = response.results;\r\n            //var members = [response.results.data.members];\r\n\r\n            var self = this;\r\n            _.each(roles, function (role, i) {\r\n                if(role && role.data && role.data.properties && self.roleId === role.data.properties.name) {\r\n                  // add display_name to role\r\n                  var r = _.clone(role.data.properties);\r\n                  r = _.extend({display_name: r.name}, r);\r\n                  var hasMembers = role.data.members.length;\r\n                  if (hasMembers) {\r\n                    // role has members\r\n                    _.each(role.data.members, function (member, j) {\r\n\r\n                      var teamMember = team[member.id];\r\n                      if (!teamMember) {\r\n                        teamMember = {\r\n                          data: {\r\n                            properties: _.clone(member)\r\n                          },\r\n                          memberType: 'member',\r\n                          member: _.clone(member),\r\n                          roles: []\r\n                        };\r\n                        team[member.id] = teamMember;\r\n                      }\r\n                      teamMember.roles.push(r);\r\n                    });\r\n                  }\r\n                }\r\n            });\r\n\r\n            // return team\r\n            var ret = _.values(team);\r\n            ret.sort(function (a,b) {\r\n              var ma  = a.member, mb = b.member;\r\n              var ret = base.localeCompareString(ma.display_name  , mb.display_name  , {usage:'sort'}) ;\r\n              return ret;\r\n            });\r\n            return ret;\r\n        }\r\n    });\r\n\r\n    NodeConnectableMixin.mixin(RoleMemberCollection.prototype);\r\n    FetchableMixin.mixin(RoleMemberCollection.prototype);\r\n\r\n    return RoleMemberCollection;\r\n});\r\n\n","csui.define('conws/widgets/team/impl/team.model',['csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  'csui/models/nodechildrencolumn',\r\n  'csui/models/nodechildrencolumns',\r\n  'csui/models/node/node.model',\r\n  \"csui/models/nodechildren\"\r\n], function (_, Backbone, Url, ConnectableMixin, NodeChildrenColumnModel,\r\n    NodeChildrenColumnCollection, NodeModel, NodeChildrenCollection) {\r\n\r\n  var TeamColumnModel = NodeChildrenColumnModel.extend({});\r\n\r\n  var TeamColumnCollection = NodeChildrenColumnCollection.extend({\r\n\r\n    model: TeamColumnModel,\r\n\r\n    // private\r\n    getColumnModels: function (columnKeys, definitions) {\r\n      var columns = NodeChildrenColumnCollection.prototype.getColumnModels.call(\r\n          this, columnKeys, definitions);\r\n      _.each(columns, function (column) {\r\n        var columnKey = column['column_key'];\r\n        if (columnKey === 'type' || columnKey === 'name' || columnKey === 'modify_date') {\r\n          column.sort = true;\r\n        }\r\n      });\r\n      return columns;\r\n    }\r\n\r\n  });\r\n\r\n  var TeamModel = NodeModel.extend({\r\n\r\n    parse: function (response, options) {\r\n      this.memberType = response.memberType;\r\n      this.member = response.member;\r\n      this.roles = response.roles;\r\n      return NodeModel.prototype.parse.call(this, response, options);\r\n    },\r\n\r\n    getLeadingRole: function () {\r\n      var first = '';\r\n      var lead = '';\r\n      var roles = this.roles;\r\n      _.each(roles, function (role) {\r\n        first = roles[0].name;\r\n        if (role.leader) {\r\n          lead = role.name;\r\n        }\r\n      });\r\n      return lead || first;\r\n    },\r\n\r\n    getRolesIndicator: function () {\r\n      var ret = '';\r\n      if (this.roles.length > 1) {\r\n        ret = '+' + (this.roles.length - 1);\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getMemberType: function () {\r\n      var ret = 'user';\r\n      var member = this.member;\r\n      if (member && member.type !== 0) {\r\n        ret = 'group';\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    // whenever the icon url has changed, trigger model\r\n    // change event\r\n    setIconUrl: function (url) {\r\n      if (this.iconUrl !== url) {\r\n        this.iconUrl = url;\r\n        this.trigger('change', this, this.options);\r\n      }\r\n    },\r\n\r\n    // gets the icon url\r\n    getIconUrl: function () {\r\n      return this.iconUrl;\r\n    }\r\n  });\r\n\r\n  var TeamCollection = NodeChildrenCollection.extend({\r\n\r\n        model: TeamModel,\r\n\r\n        constructor: function TeamCollection(attributes, options) {\r\n          Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n          this.context = options && options.context ? options.context : undefined;\r\n          this.makeNodeResource(options)\r\n              .makeConnectable(options)\r\n              .makeBrowsable(options);\r\n\r\n          this.columns = new TeamColumnCollection();\r\n          this.listenTo(this, \"sync\", this._sortByName);\r\n        },\r\n\r\n        url: function () {\r\n          var id = this.node.get('id');\r\n          var url = this.connector.getConnectionUrl().getApiBase('v2');\r\n          return Url.combine(url, 'businessworkspaces', id, 'roles?fields=members');\r\n        },\r\n\r\n        fetch: function () {\r\n          return this.Fetchable.fetch.apply(this, arguments);\r\n        },\r\n\r\n        parse: function (response) {\r\n\r\n          var team = {};\r\n\r\n          var roles = response.results;\r\n          _.each(roles, function (role, i) {\r\n            // add display_name to role\r\n            var r = _.clone(role.data.properties);\r\n            r = _.extend({display_name: r.name}, r);\r\n            var hasMembers = role.data.members.length;\r\n            if (hasMembers) {\r\n              // role has members\r\n              _.each(role.data.members, function (member, j) {\r\n                var teamMember = team[member.id];\r\n                if (!teamMember) {\r\n                  teamMember = {\r\n                    data: {\r\n                      properties: _.clone(member)\r\n                    },\r\n                    memberType: 'member',\r\n                    member: _.clone(member),\r\n                    roles: []\r\n                  };\r\n                  team[member.id] = teamMember;\r\n                }\r\n                teamMember.roles.push(r);\r\n              });\r\n            }\r\n            else {\r\n              // role is empty\r\n              var teamRole = {\r\n                data: {\r\n                  properties: r\r\n                },\r\n                memberType: 'role',\r\n                member: undefined,\r\n                roles: [r]\r\n              };\r\n              team[role.data.properties.id] = teamRole;\r\n            }\r\n          });\r\n\r\n          // return team\r\n          return _.values(team);\r\n        },\r\n\r\n        _sortByName: function () {\r\n          this.comparator = function (model1, model2) {\r\n            // sorting by memeber type -> 'role' or 'member'\r\n            // if both from the same type, sorting by display_name\r\n            var type1 = model1.memberType;\r\n            var type2 = model2.memberType;\r\n\r\n            var name1, name2;\r\n            if (type1 === type2) {\t\r\n\t\t\t  name1 = !!model1.get('display_name') ? model1.get('display_name').toLowerCase() : undefined\r\n\t\t\t  name2 = !!model2.get('display_name') ? model2.get('display_name').toLowerCase() : undefined\r\n            }\r\n            return type1 > type2 ? 1 :\r\n                   type1 < type2 ? -1 : type1 === type2 && name1 > name2 ? 1 :\r\n                                        type1 === type2 && name1 < name2 ? -1 : 0;\r\n          };\r\n          this.sort();\r\n        }\r\n      }\r\n  );\r\n\r\n  ConnectableMixin.mixin(TeamCollection.prototype);\r\n  return TeamCollection;\r\n\r\n});\r\n\n","csui.define('conws/widgets/team/impl/team.model.factory',['module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/node',\r\n    'csui/utils/contexts/factories/connector',\r\n    'conws/widgets/team/impl/team.model'\r\n], function (module, _, Backbone, CollectionFactory, NodeModelFactory, ConnectorFactory, TeamCollection) {\r\n\r\n    var TeamCollectionFactory = CollectionFactory.extend({\r\n\r\n        propertyPrefix: 'team',\r\n\r\n        constructor: function TeamCollectionFactory(context, options) {\r\n            CollectionFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var team = this.options.team || {};\r\n            if (!(team instanceof Backbone.Collection)) {\r\n                var node = context.getModel(NodeModelFactory, options),\r\n                    connector = context.getObject(ConnectorFactory, options),\r\n                    config = module.config();\r\n\r\n                team = new TeamCollection(team.models, _.extend({\r\n                    context: context,\r\n                    node: node,\r\n                    connector: connector\r\n                }, team.options, config.options, {\r\n                    autoreset: true\r\n                }));\r\n            }\r\n            this.property = team;\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n\r\n    });\r\n\r\n    return TeamCollectionFactory;\r\n\r\n});\r\n\n","csui.define('conws/widgets/team/impl/participants.columns',[\r\n    'csui/lib/backbone'\r\n], function (Backbone) {\r\n\r\n    var ParticipantsTableColumnModel = Backbone.Model.extend({\r\n\r\n        idAttribute: 'key',\r\n\r\n        defaults: {\r\n            key: null,  // key from the resource definitions\r\n            sequence: 0 // smaller number moves the column to the front\r\n        }\r\n    });\r\n\r\n    var ParticipantsTableColumnCollection = Backbone.Collection.extend({\r\n\r\n        columnNames: {\r\n            avatar: 'conws_participantavatar',\r\n            name: 'conws_participantname',\r\n            roles: 'conws_participantroles',\r\n            login: 'conws_participantlogin',\r\n            email: 'conws_participantemail',\r\n            department: 'conws_participantdepartment'\r\n        },\r\n\r\n        model: ParticipantsTableColumnModel,\r\n        comparator: 'sequence',\r\n\r\n        getColumnKeys: function () {\r\n            return this.pluck('key');\r\n        },\r\n\r\n        deepClone: function () {\r\n            return new ParticipantsTableColumnCollection(\r\n                this.map(function (column) {\r\n                    return column.attributes;\r\n                }));\r\n        }\r\n    });\r\n\r\n    // Fixed (system) columns have sequence number < 100, dynamic columns\r\n    // have sequence number > 1000\r\n\r\n    var tableColumns = new ParticipantsTableColumnCollection([\r\n        {\r\n            key: ParticipantsTableColumnCollection.prototype.columnNames.avatar,\r\n            sequence: 10\r\n        },\r\n        {\r\n            key: ParticipantsTableColumnCollection.prototype.columnNames.name,\r\n            sequence: 20\r\n        },\r\n        {\r\n            key: ParticipantsTableColumnCollection.prototype.columnNames.roles,\r\n            sequence: 30\r\n        },\r\n        {\r\n            key: ParticipantsTableColumnCollection.prototype.columnNames.login,\r\n            sequence: 40\r\n        },\r\n        {\r\n            key: ParticipantsTableColumnCollection.prototype.columnNames.email,\r\n            sequence: 50\r\n        },\r\n        {\r\n            key: ParticipantsTableColumnCollection.prototype.columnNames.department,\r\n            sequence: 60\r\n        }\r\n    ]);\r\n\r\n    return tableColumns;\r\n\r\n});\r\n\r\n\n","csui.define('conws/widgets/team/impl/roles.columns',[\r\n    'csui/lib/backbone'\r\n], function (Backbone) {\r\n\r\n    var RolesTableColumnModel = Backbone.Model.extend({\r\n\r\n        idAttribute: 'key',\r\n\r\n        defaults: {\r\n            key: null,  // key from the resource definitions\r\n            sequence: 0 // smaller number moves the column to the front\r\n        }\r\n    });\r\n\r\n    var RolesTableColumnCollection = Backbone.Collection.extend({\r\n\r\n        columnNames: {\r\n            avatar: 'conws_roleavatar',\r\n            name: 'conws_rolename',\r\n            members: 'conws_rolemembers'\r\n        },\r\n\r\n        model: RolesTableColumnModel,\r\n        comparator: 'sequence',\r\n\r\n        getColumnKeys: function () {\r\n            return this.pluck('key');\r\n        },\r\n\r\n        deepClone: function () {\r\n            return new RolesTableColumnCollection(\r\n                this.map(function (column) {\r\n                    return column.attributes;\r\n                }));\r\n        }\r\n    });\r\n\r\n    // Fixed (system) columns have sequence number < 100, dynamic columns\r\n    // have sequence number > 1000\r\n\r\n    var tableColumns = new RolesTableColumnCollection([\r\n        {\r\n            key: RolesTableColumnCollection.prototype.columnNames.avatar,\r\n            sequence: 10\r\n        },\r\n        {\r\n            key: RolesTableColumnCollection.prototype.columnNames.name,\r\n            sequence: 20\r\n        },\r\n        {\r\n            key: RolesTableColumnCollection.prototype.columnNames.members,\r\n            sequence: 30\r\n        }\r\n    ]);\r\n\r\n    return tableColumns;\r\n\r\n});\r\n\r\n\n","csui.define('conws/widgets/team/impl/cells/metadata',[], function () {\r\n\r\n  function integer(key, name) {\r\n    return {\r\n      \"allow_undefined\": false,\r\n      \"bulk_shared\": false,\r\n      \"default_value\": null,\r\n      \"description\": null,\r\n      \"hidden\": false,\r\n      \"key\": key,\r\n      \"max_value\": null,\r\n      \"min_value\": null,\r\n      \"multi_value\": null,\r\n      \"name\": name,\r\n      \"persona\": \"node\",\r\n      \"read_only\": false,\r\n      \"required\": false,\r\n      \"title\": undefined,\r\n      \"type\": 2,\r\n      \"type_name\": \"Integer\",\r\n      \"valid_values\": [],\r\n      \"valid_values_name\": []\r\n    }\r\n  }\r\n\r\n  function string(key, name) {\r\n    return {\r\n      \"allow_undefined\": false,\r\n      \"bulk_shared\": false,\r\n      \"default_value\": null,\r\n      \"description\": null,\r\n      \"hidden\": false,\r\n      \"key\": key,\r\n      \"max_length\": null,\r\n      \"min_length\": null,\r\n      \"multiline\": false,\r\n      \"multilingual\": false,\r\n      \"multi_value\": false,\r\n      \"name\": name,\r\n      \"password\": false,\r\n      \"persona\": \"\",\r\n      \"read_only\": false,\r\n      \"regex\": \"\",\r\n      \"required\": true,\r\n      \"title\": undefined,\r\n      \"type\": -1,\r\n      \"type_name\": \"String\",\r\n      \"valid_values\": [],\r\n      \"valid_values_name\": []\r\n    }\r\n  }\r\n\r\n  return {\r\n    integer: integer,\r\n    string: string\r\n  }\r\n});\n","csui.define('conws/widgets/team/impl/roles.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/utils/base'\r\n], function (_, $, Backbone, base) {\r\n\r\n  var RoleModel = Backbone.Model.extend({\r\n\r\n    constructor: function RoleModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n  var RolesCollection = Backbone.Collection.extend({\r\n    model: RoleModel,\r\n\r\n    constructor: function RolesCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    comparator: function (left, right) {\r\n      return base.localeCompareString(left.get('name'), right.get('name'));\r\n    },\r\n\r\n    // Filter method for the roles collection, used from the two roles lists in the role dialog\r\n    // The method filters the roles for a given value, the filter is done case insensitive (toLowerCase)\r\n    filterList: function (value) {\r\n      if (!_.isUndefined(value) && value.length > 0) {\r\n        var models = this.filter(function (model) {\r\n          var name = model.get('name').toLowerCase();\r\n          return name.indexOf(value.toLowerCase()) > -1;\r\n        });\r\n\r\n        return new Backbone.Collection(models);\r\n      } else {\r\n        return this;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return RolesCollection;\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('conws/widgets/team/impl/nls/team.lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\r\n\n","// Defines localizable strings in the default language (English)\r\ncsui.define('conws/widgets/team/impl/nls/root/team.lang',{\r\n  dialogTitle: 'Team',\r\n  noResultsPlaceholder: 'There are no participants to display.',\r\n  zeroRecordsOrFilteredParticipants: 'This business workspace has no participants, or no participants match your search criteria. Add new participants, or clear the search box.',\r\n  zeroRecordsOrFilteredRoles: 'This business workspace has no roles, or no roles match your search criteria. Add new roles, or clear the search box.',\r\n\r\n  searchAria: 'Search for team members',\r\n  expandAria: 'Expand the team widget',\r\n\r\n  participantNameColTitle: 'Name',\r\n  participantAvatarColTitle: 'Avatar',\r\n  participantRolesColTitle: 'Roles',\r\n  participantRolesTableAria: 'Roles',\r\n  participantLoginColTitle: 'Login',\r\n  participantEmailColTitle: 'Business e-mail',\r\n  participantDepartmentColTitle: 'Department',\r\n  participantRrolesColTooltip: 'View or edit participant role memberships',\r\n\r\n  participantStateNew: 'Newly added participant',\r\n\r\n  userRolesDialogTitle: 'Roles for user {0}',\r\n  groupRolesDialogTitle: 'Roles for group {0}',\r\n  rolesAvatarColTitle: 'Avatar',\r\n  rolesNameColTitle: 'Name',\r\n  rolesNameColTooltip: 'View or edit role details',\r\n  rolesNameColTeamLead: 'Team lead',\r\n  rolesNameColInherited: 'Inherited',\r\n  rolesParticipantsColTitle: 'Participants',\r\n  rolesParticipantsColTooltip: 'Participants',\r\n  rolesParticipantsColNoParticipants: 'No participants',\r\n  rolesParticipantsTableAria: 'Participants',\r\n\r\n  rolesDialogAssignedRoles: 'Assigned roles',\r\n  rolesDialogTooltipAssignedRoles: 'assigned roles',\r\n  rolesDialogAvailableRoles: 'Available roles',\r\n  rolesDialogTooltipAvailableRoles: 'available roles',\r\n\r\n  rolesDialogRemoveParticipant1: 'This participant is not a member of any role. A participant with no roles will be removed from the team.',\r\n  rolesDialogRemoveParticipant2: 'You can assign new roles to keep the participant in the team.',\r\n  rolesDialogRemoveParticipantWarning: 'Warning',\r\n  rolesDialogRemoveRole: 'Remove role',\r\n\r\n  rolesDialogButtonClose: 'Close',\r\n  rolesDialogButtonSave: 'Save',\r\n  rolesDialogButtonCancel: 'Cancel',\r\n  rolesDialogButtonReset: 'Reset',\r\n  rolesDialogButtonRemove: 'Remove',\r\n\r\n  rolesEditDialogErrorTitleUser: 'Cannot save roles for user {0}.',\r\n  rolesEditDialogErrorTitleGroup: 'Cannot save roles for group {0}.',\r\n\r\n  rolesEditDialogSuccessfulAdded: 'Roles successfully added:',\r\n  rolesEditDialogSuccessfulRemoved: 'Roles successfully removed:',\r\n  rolesEditDialogNotAdded: 'Roles not added:',\r\n  rolesEditDialogNotRemoved: 'Roles not removed:',\r\n  rolesEditDialogDataNotUptoDateUser: 'Roles for this user have been changed by someone else.',\r\n  rolesEditDialogDataNotUptoDateGroup: 'Roles for this group have been changed by someone else.',\r\n\r\n  searchPlaceholder: 'Search {0}',\r\n  searchIconTooltip: '{0}',\r\n  searchClearIconTooltip: 'Clear filter',\r\n\r\n  roleDetailsTitle: 'Role details',\r\n  roleDetailsName: 'Role name',\r\n  roleDetailsDescription: 'Description',\r\n  roleDetailsPermissions: 'Permissions',\r\n  roleDetailsRead: 'Read',\r\n  roleDetailsWrite: 'Write',\r\n  roleDetailsManage: 'Manage',\r\n  roleDetailsAdvanced: 'Advanced',\r\n\r\n  addParticipantsTitle: 'Add participants',\r\n  addParticipantsRolesHelp: 'All participants must have a role.',\r\n  addParticipantsUserPickerPlaceholder: 'Enter a name.',\r\n  addParticipantsRolePickerPlaceholder: 'Assign the same role to all.',\r\n  addParticipantsRolePickerPlaceholderMore: 'Assign role.',\r\n  addParticipantsRolePickerClear: 'Clear search value',\r\n  addParticipantsRolePickerShow: 'Show available roles',\r\n  addParticipantsSearchAria: 'Search for participants',\r\n  addParticipantsButtonClear: 'Clear all',\r\n  addParticipantsButtonSave: 'Save',\r\n  addParticipantsButtonCancel: 'Cancel',\r\n  addParticipantsDisabledMemberMessage: 'Is already a participant.',\r\n  addParticipantsErrorMessageDefault: 'Cannot add one or more participants.',\r\n  addParticipantsRemove: 'Remove participant',\r\n  removeParticipantAria: 'Remove participant {0}',\r\n  failedListText: 'Loading participants failed.',\r\n  loadingListText: \"Loading participants\"\r\n});\r\n\n","\n","csui.define('conws/widgets/team/impl/participant.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/models/nodeconnectable',\r\n  'csui/models/nodechildrencolumn',\r\n  'csui/models/nodechildrencolumns',\r\n  'csui/models/node/node.model',\r\n  'csui/models/nodechildren',\r\n  'conws/widgets/team/impl/cells/metadata',\r\n  'conws/widgets/team/impl/participants.columns',\r\n  'conws/widgets/team/impl/roles.model',\r\n  'i18n!conws/widgets/team/impl/nls/team.lang'\r\n], function (_, $, Backbone, Url, NodeConnectableModel, NodeChildrenColumnModel,\r\n    NodeChildrenColumnCollection, NodeModel, NodeChildrenCollection, Metadata,\r\n    ParticipantsTableColumnCollection, Roles, lang) {\r\n\r\n  // TODO: ParticipantModel and TeamModel have the same implementation. Refactor to have\r\n  // TODO: a base implementation.\r\n  var ParticipantModel = NodeModel.extend({\r\n\r\n    constructor: function ParticipantModel(attributes, options) {\r\n      NodeModel.prototype.constructor.apply(this, arguments);\r\n      // update the participant attributes\r\n      this.set({\r\n        'conws_participantname': this.displayName(),\r\n        'conws_participantroles': this.displayRoles(),\r\n        'conws_participantlogin': this.displayLogin(),\r\n        'conws_participantemail': this.displayEmail(),\r\n        'conws_participantdepartment': this.displayDepartment()\r\n      });\r\n    },\r\n\r\n    parse: function (response, options) {\r\n      if (!_.isUndefined(options.parse) && options.parse === false) {\r\n        return this;\r\n      }\r\n      this.roles = new Roles(response.roles);\r\n\r\n      return NodeModel.prototype.parse.call(this, response, options);\r\n    },\r\n\r\n    save: function (data, options) {\r\n\r\n      if (!this.collection || !this.collection.node) {\r\n        return;\r\n      }\r\n\r\n      var id = this.collection.node.get('id');\r\n      var url = this.connector.getConnectionUrl().getApiBase('v2');\r\n      var memberId = this.get('id');\r\n\r\n      var successRemove = [];\r\n      var errorRemove = [];\r\n      var successAdd = [];\r\n      var errorAdd = [];\r\n\r\n      // add all new roles, which is transformed into an add member call for the role\r\n      _.each(data.add, function (role) {\r\n        var roleId = role.get('id');\r\n        var postUrl = Url.combine(url, 'businessworkspaces', id, 'roles', roleId, 'members');\r\n\r\n        // FormData available (IE10+, WebKit)\r\n        var formData = new FormData();\r\n        formData.append('body', '{\"id\":' + memberId + '}');\r\n\r\n        var options = {\r\n          type: 'POST',\r\n          url: postUrl,\r\n          async: false, // set the call as synchronous, so that one call after the other is done and the results are collected\r\n          data: formData,\r\n          contentType: false,\r\n          processData: false\r\n        };\r\n        this.connector && this.connector.extendAjaxOptions(options);\r\n\r\n        // do the AJAX call\r\n        this.connector.makeAjaxCall(options).done(_.bind(function (response) {\r\n              successAdd.push({\r\n                status: response.status,\r\n                error: undefined,\r\n                role: role\r\n              });\r\n            }, this))\r\n            .fail(_.bind(function (response) {\r\n              errorAdd.push({\r\n                status: response.status,\r\n                error: undefined,\r\n                role: role\r\n              });\r\n            }, this));\r\n      }, this);\r\n\r\n      // remove all marked roles, which is transformed into a remove member call for the role\r\n      _.each(data.remove, function (role) {\r\n        var roleId = role.get('id');\r\n        var delUrl = Url.combine(url, 'businessworkspaces', id, 'roles', roleId, 'members',\r\n            memberId);\r\n\r\n        var options = {\r\n          type: 'DELETE',\r\n          url: delUrl,\r\n          async: false // set the call as synchronous, so that one call after the other is done and the results are collected\r\n        };\r\n        this.connector && this.connector.extendAjaxOptions(options);\r\n\r\n        // do the AJAX call\r\n        this.connector.makeAjaxCall(options).done(_.bind(function (response) {\r\n              successRemove.push({\r\n                status: response.status,\r\n                error: undefined,\r\n                role: role\r\n              });\r\n            }, this))\r\n            .fail(_.bind(function (response) {\r\n              errorRemove.push({\r\n                status: response.status,\r\n                error: undefined,\r\n                role: role\r\n              });\r\n            }, this));\r\n      }, this);\r\n\r\n      // call the registered callbacks\r\n      if (errorAdd.length <= 0 && errorRemove.length <= 0) {\r\n        if (!_.isUndefined(options.success)) {\r\n          options.success({successAdd: successAdd, successRemove: successRemove});\r\n        }\r\n      } else {\r\n        if (!_.isUndefined(options.error)) {\r\n          options.error({\r\n            successAdd: successAdd,\r\n            errorAdd: errorAdd,\r\n            successRemove: successRemove,\r\n            errorRemove: errorRemove\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    displayName: function () {\r\n      return this.get('display_name');\r\n    },\r\n\r\n    displayRoles: function () {\r\n      var ret = this.getLeadingRole();\r\n      if (ret) {\r\n        var indicator = this.getRolesIndicator();\r\n        if (indicator) {\r\n          ret = ret + ' ' + indicator;\r\n        }\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    displayLogin: function () {\r\n      var ret = '';\r\n      if (this.getMemberType() === 'user') {\r\n        ret = this.get('name');\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    displayEmail: function () {\r\n      var ret = this.get('business_email');\r\n      if (_.isUndefined(ret) || _.isNull(ret)) {\r\n        ret = '';\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    displayTitle: function () {\r\n      var ret = this.get('title');\r\n      return ret;\r\n    },\r\n\r\n    displayOffice: function () {\r\n      var ret = this.get('office_location');\r\n      return ret;\r\n    },\r\n\r\n    displayDepartment: function () {\r\n      // either the group name is stored in\r\n      // the 'group_name' property, or in the\r\n      // expanded 'group_id' object.\r\n      var ret = this.get('group_name');\r\n      if (_.isUndefined(ret)) {\r\n        var group = this.get('group_id');\r\n        if (_.isObject(group)) {\r\n          ret = group.name;\r\n        }\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getLeadingRole: function () {\r\n      var first = '';\r\n      var lead = '';\r\n      var roles = this.roles;\r\n\r\n      if (roles && (roles.length > 0)) {\r\n        first = roles.at(0).get('name');\r\n        roles.each(function (role) {\r\n          if (role.get('leader')) {\r\n            lead = role.get('name');\r\n          }\r\n        });\r\n      }\r\n      return lead || first;\r\n    },\r\n\r\n    canEdit: function () {\r\n      var roles = this.collection.availableRoles;\r\n      var edit = roles.find(function (role) {\r\n        // the role can be edited by the current user and is not inherited from parent\r\n        return (role.get('actions').actionEdit && _.isNull(role.get('inherited_from_id')));\r\n      });\r\n      // exits a role with the edit permission\r\n      return !_.isUndefined(edit);\r\n    },\r\n\r\n    canRemove: function () {\r\n      var roles = this.roles;\r\n      var editable = roles.filter(function (role) {\r\n        // the role can be edited by the current user and is not inherited from parent\r\n        return (role.get('actions').actionEdit && _.isNull(role.get('inherited_from_id')));\r\n      });\r\n      // all participant roles must be editable\r\n      return (roles.length === editable.length);\r\n    },\r\n\r\n    getRolesIndicator: function () {\r\n      var ret = '';\r\n      if (this.roles.length > 1) {\r\n        ret = '+' + (this.roles.length - 1);\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getMemberType: function () {\r\n      var ret = 'user';\r\n      if (this.get('type') !== 0) {\r\n        ret = 'group';\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    // whenever the icon url has changed, trigger model\r\n    // change event\r\n    setIconUrl: function (url) {\r\n      if (this.iconUrl !== url) {\r\n        this.iconUrl = url;\r\n        this.trigger('change', this, this.options);\r\n      }\r\n    },\r\n\r\n    // gets the icon url\r\n    getIconUrl: function () {\r\n      return this.iconUrl;\r\n    }\r\n\r\n  });\r\n\r\n  return ParticipantModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/team/impl/participants.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/utils/base',\r\n  'csui/utils/url',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  'csui/models/mixins/node.connectable/node.connectable.mixin',\r\n  'csui/models/mixins/fetchable/fetchable.mixin',\r\n  'csui/models/nodechildrencolumn',\r\n  'csui/models/nodechildrencolumns',\r\n  'csui/models/node/node.model',\r\n  'csui/models/nodechildren',\r\n  'csui/models/browsable/client-side.mixin',\r\n  'conws/models/workspacecontext/workspacecontext.factory',\r\n  'conws/widgets/team/impl/cells/metadata',\r\n  'conws/widgets/team/impl/participant.model',\r\n  'conws/widgets/team/impl/participants.columns',\r\n  'conws/widgets/team/impl/roles.model',\r\n  'i18n!conws/widgets/team/impl/nls/team.lang',\r\n  'csui/utils/deepClone/deepClone'\r\n], function (_, $, Backbone, base, Url, ConnectableMixin, NodeConnectableMixin, FetchableMixin,\r\n    NodeChildrenColumnModel, NodeChildrenColumnCollection, NodeModel, NodeChildrenCollection,\r\n    ClientSideBrowsableMixin, WorkspaceContextFactory, Metadata, ParticipantModel,\r\n    ParticipantsTableColumnCollection, Roles, lang) {\r\n\r\n  var ParticipantsColumnModel = NodeChildrenColumnModel.extend({\r\n    constructor: function ParticipantsColumnModel() {\r\n      NodeChildrenColumnModel.prototype.constructor.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n  var ParticipantsColumnCollection = NodeChildrenColumnCollection.extend({\r\n\r\n    model: ParticipantsColumnModel,\r\n\r\n    // private\r\n    getColumnModels: function (columnKeys, definitions) {\r\n      // get column collection\r\n      var columns = NodeChildrenColumnCollection.prototype.getColumnModels.call(\r\n          this, columnKeys, definitions);\r\n      // enable sorting for all columns except 'avatar' column.\r\n      _.each(columns, function (column) {\r\n        var columnKey = column['column_key'];\r\n        if (columnKey !== ParticipantsTableColumnCollection.columnNames.avatar) {\r\n          column.sort = true;\r\n        }\r\n      });\r\n      // return\r\n      return columns;\r\n    }\r\n  });\r\n\r\n  // TODO: ParticipantCollection and TeamCollection differ only in the parsing\r\n  // TODO: function. Refactor to have a base implementation.\r\n  var ParticipantCollection = Backbone.Collection.extend({\r\n\r\n        model: ParticipantModel,\r\n\r\n        // a property which contains all available roles\r\n        availableRoles: new Roles(),\r\n\r\n        constructor: function ParticipantCollection(attributes, options) {\r\n          _.defaults(options, {orderBy:  ParticipantsTableColumnCollection.columnNames.name + ' asc'});\r\n          Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n\r\n          // Support collection cloning\r\n          if (options) {\r\n            this.options = _.pick(options, ['connector', 'context', 'autoreset', 'node',\r\n              'includeResources', 'fields', 'expand', 'commands']);\r\n          }\r\n          this.makeConnectable(options)\r\n              .makeNodeConnectable(options)\r\n              .makeFetchable(options)\r\n              .makeClientSideBrowsable(options);\r\n          // get workspace context\r\n          if (options !== undefined) {\r\n            if (!options.workspaceContext) {\r\n              options.workspaceContext = options.context.getObject(WorkspaceContextFactory);\r\n            }\r\n            this.workspaceContext = options.workspaceContext;\r\n          }\r\n          this.columns = new ParticipantsColumnCollection();\r\n        },\r\n\r\n        url: function () {\r\n          var id = this.node.get('id');\r\n          var url = this.connector.getConnectionUrl().getApiBase('v2');\r\n          return Url.combine(url, 'businessworkspaces', id, 'roles?fields=members');\r\n        },\r\n\r\n        parse: function (response) {\r\n\r\n          var team = {};\r\n          var availableRoles = [];\r\n\r\n          // we don't want empty roles to be displayed in the\r\n          // participants list, so only roles with members are parsed.\r\n          var roles = response.results;\r\n          _.each(roles, function (role, i) {\r\n\r\n            var r = _.clone(role.data.properties);\r\n\r\n            // get the possible actions for the role\r\n            var a = {};\r\n            a.actionDelete = !_.isUndefined(role.actions.data['delete-role']);\r\n            a.actionEdit = !_.isUndefined(role.actions.data['edit-role']);\r\n            // add the actions to the cloned roles object\r\n            r = _.extend({actions: a}, r);\r\n            // add display name to role\r\n            r = _.extend({display_name: r.name}, r);\r\n\r\n            // add all roles to this array\r\n            availableRoles.push(r);\r\n\r\n            var hasMembers = role.data.members.length;\r\n            if (hasMembers) {\r\n              // role has members\r\n              _.each(role.data.members, function (member, j) {\r\n\r\n                var teamMember = team[member.id];\r\n                if (!teamMember) {\r\n                  teamMember = {\r\n                    data: {\r\n                      properties: member\r\n                    },\r\n                    member: member,\r\n                    roles: []\r\n                  };\r\n                  team[member.id] = teamMember;\r\n                }\r\n                teamMember.roles.push(r);\r\n              });\r\n            }\r\n          });\r\n\r\n          // create metadata for custom column models\r\n          var metadata = {\r\n            conws_participantavatar: Metadata.integer(\r\n                ParticipantsTableColumnCollection.columnNames.avatar,\r\n                lang.participantAvatarColTitle),\r\n            conws_participantname: Metadata.string(\r\n                ParticipantsTableColumnCollection.columnNames.name,\r\n                lang.participantNameColTitle),\r\n            conws_participantroles: Metadata.string(\r\n                ParticipantsTableColumnCollection.columnNames.roles,\r\n                lang.participantRolesColTitle),\r\n            conws_participantlogin: Metadata.string(\r\n                ParticipantsTableColumnCollection.columnNames.login,\r\n                lang.participantLoginColTitle),\r\n            conws_participantemail: Metadata.string(\r\n                ParticipantsTableColumnCollection.columnNames.email,\r\n                lang.participantEmailColTitle),\r\n            conws_participantdepartment: Metadata.string(\r\n                ParticipantsTableColumnCollection.columnNames.department,\r\n                lang.participantDepartmentColTitle)\r\n          };\r\n\r\n          // create column models\r\n          this.columns && this.columns.resetCollection(\r\n              this.columns.getColumnModels(_.keys(metadata), metadata), this.options);\r\n\r\n          // build a roles model with all available roles\r\n          this.availableRoles = new Roles(availableRoles);\r\n\r\n          // return team\r\n          return _.values(team);\r\n        },\r\n\r\n        clone: function () {\r\n          // Provide the options; they may include connector and other parameters\r\n          var clone = new this.constructor(this.models, this.options);\r\n          // Clone sub-models not covered by Backbone\r\n          if (this.columns) {\r\n            clone.columns.reset(this.columns.toJSON());\r\n          }\r\n          // Clone properties about the full (not-yet fetched) collection\r\n          clone.actualSkipCount = this.actualSkipCount;\r\n          clone.totalCount = this.totalCount;\r\n          clone.filteredCount = this.filteredCount;\r\n          return clone;\r\n        },\r\n\r\n        addNewParticipant: function (model) {\r\n          // clone the model, as otherwise strange behaviour can occur when\r\n          // saving the model the same time. E.g. the add participant dialog\r\n          // doesn't close after safe.\r\n          // We do not know the exact cause, but cloning helps ;-)\r\n          var clone = model.clone();\r\n\r\n          var exist = false;\r\n          if (!_.isUndefined(this.newParticipants) && this.newParticipants.length > 0) {\r\n            for (var participant in this.newParticipants) {\r\n              if (this.newParticipants[participant].get('id') === clone.get('id')) {\r\n                exist = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (!exist) {\r\n            clone.set({isNew: true});\r\n            this.newParticipants.push(clone);\r\n          }\r\n        },\r\n\r\n        setNewParticipant: function () {\r\n          if (!_.isUndefined(this.newParticipants) && this.newParticipants.length > 0) {\r\n            for (var participant in this.newParticipants) {\r\n              for (var item in this.models) {\r\n                if (this.models[item].get('id') ===\r\n                    this.newParticipants[participant].get('id')) {\r\n                  this.models[item].set({isNew: true});\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n  );\r\n  ClientSideBrowsableMixin.mixin(ParticipantCollection.prototype);\r\n  ConnectableMixin.mixin(ParticipantCollection.prototype);\r\n  NodeConnectableMixin.mixin(ParticipantCollection.prototype);\r\n  FetchableMixin.mixin(ParticipantCollection.prototype);\r\n  return ParticipantCollection;\r\n\r\n});\r\n\n","csui.define('conws/widgets/team/impl/participants.model.factory',['module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/node',\r\n    'csui/utils/contexts/factories/connector',\r\n    'conws/widgets/team/impl/participants.model',\r\n    'csui/utils/deepClone/deepClone'\r\n], function (module, _, Backbone, CollectionFactory, NodeModelFactory, ConnectorFactory, ParticipantCollection) {\r\n  'use strict';\r\n    var ParticipantCollectionFactory = CollectionFactory.extend({\r\n\r\n        propertyPrefix: 'participants',\r\n\r\n        constructor: function ParticipantCollectionFactory(context, options) {\r\n            CollectionFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var participants = this.options.participants || {};\r\n            if (!(participants instanceof Backbone.Collection)) {\r\n                var node = context.getModel(NodeModelFactory, options),\r\n                    connector = context.getObject(ConnectorFactory, options),\r\n                    config = module.config();\r\n\r\n                participants = new ParticipantCollection(participants.models, _.extend({\r\n                    context: context,\r\n                    node: node,\r\n                    connector: connector\r\n                }, participants.options, config.options,\r\n                    ParticipantCollectionFactory.getDefaultResourceScope(), {\r\n                      autoreset: true\r\n                    }));\r\n            }\r\n            this.property = participants;\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n    }, {\r\n      getDefaultResourceScope: function () {\r\n        return _.deepClone({\r\n          // Return only assignment-specific properties\r\n          fields: {\r\n            properties: [],\r\n            'versions.element(0)': []\r\n          },\r\n          // User information needs to be resolved to support UI and actions.\r\n          expand: {\r\n            properties: []\r\n          },\r\n          // Get property definitions to support table columns or similar\r\n          // and actions to support clickability and others\r\n          includeResources: ['metadata']\r\n        });\r\n      }\r\n    });\r\n\r\n    return ParticipantCollectionFactory;\r\n});\r\n\r\n\n","csui.define('conws/widgets/team/impl/roles.model.expanded',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/utils/base',\r\n  'csui/utils/url',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  'csui/models/mixins/node.connectable/node.connectable.mixin',\r\n  'csui/models/mixins/fetchable/fetchable.mixin',\r\n  'csui/models/nodechildrencolumn',\r\n  'csui/models/nodechildrencolumns',\r\n  'csui/models/node/node.model',\r\n  'csui/models/nodechildren',\r\n  'csui/models/browsable/client-side.mixin',\r\n  'conws/widgets/team/impl/cells/metadata',\r\n  'conws/widgets/team/impl/roles.columns',\r\n  'conws/widgets/team/impl/participant.model',\r\n  'i18n!conws/widgets/team/impl/nls/team.lang'\r\n], function (_, $, Backbone, base, Url, ConnectableMixin, NodeConnectableMixin, FetchableMixin,\r\n    NodeChildrenColumnModel, NodeChildrenColumnCollection, NodeModel, NodeChildrenCollection,\r\n    ClientSideBrowsableMixin, Metadata, RolesTableColumnCollection, ParticipantModel, lang) {\r\n\r\n  var RolesColumnModel = NodeChildrenColumnModel.extend({\r\n    constructor: function RolesColumnModel() {\r\n      NodeChildrenColumnModel.prototype.constructor.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n  var RolesColumnCollection = NodeChildrenColumnCollection.extend({\r\n\r\n    model: RolesColumnModel,\r\n\r\n    // private\r\n    getColumnModels: function (columnKeys, definitions) {\r\n      // get column collection\r\n      var columns = NodeChildrenColumnCollection.prototype.getColumnModels.call(\r\n          this, columnKeys, definitions);\r\n      // enable sorting for all columns except 'avatar' column.\r\n      _.each(columns, function (column) {\r\n        var columnKey = column['column_key'];\r\n        if (columnKey !== RolesTableColumnCollection.columnNames.avatar) {\r\n          column.sort = true;\r\n        }\r\n      });\r\n      // return\r\n      return columns;\r\n    }\r\n  });\r\n\r\n  // TODO: RolesModel and TeamModel have the same implementation. Refactor to have\r\n  // TODO: a base implementation.\r\n  var RoleModel = NodeModel.extend({\r\n\r\n    constructor: function RoleModel(attributes, options) {\r\n      NodeModel.prototype.constructor.apply(this, arguments);\r\n      // update the role attributes\r\n      this.set({\r\n        'conws_rolename': this.displayName(),\r\n        'conws_rolemembers': this.displayMembers(),\r\n        'conws_rolename_formatted': this.displayNameFormatted(),\r\n        'name': this.nameFormatted()\r\n      });\r\n    },\r\n\r\n    urlBase: function () {\r\n      var wid = this.collection && this.collection.node && this.collection.node.get('id');\r\n      var rid = this.get('id');\r\n      var url = this.connector.getConnectionUrl().getApiBase('v2');\r\n      return Url.combine(url, 'businessworkspaces', wid, 'roles', rid);\r\n    },\r\n\r\n    parse: function (response, options) {\r\n\r\n      var self = this;\r\n      // members\r\n      var col = new Backbone.Collection();\r\n\r\n      // comperator for members collection using the display name\r\n      col.comparator = function (m1, m2) {\r\n        var ret1 = m1.get('display_name');\r\n        var ret2 = m2.get('display_name');\r\n\r\n        return ret1.localeCompare(ret2);\r\n      }\r\n\r\n      _.each(response.data.members, function (m) {\r\n        var mm = new ParticipantModel(m, options);\r\n        col.push(mm);\r\n      });\r\n\r\n      // sort the members collection for the role\r\n      col.sort();\r\n\r\n      this.members = col;\r\n      // parse\r\n      return NodeModel.prototype.parse.call(this, response, options);\r\n    },\r\n\r\n    displayName: function () {\r\n      var ret = this.get('display_name');\r\n      return ret;\r\n    },\r\n\r\n    displayNameFormatted: function () {\r\n      return this.get('leader') ? (this.get('display_name') + ' ' + lang.rolesNameColTeamLead) : this.get('display_name');\r\n    },\r\n\r\n    nameFormatted: function () {\r\n      return this.get('leader') ? (this.get('name') + ' ' + lang.rolesNameColTeamLead) : this.get('name');\r\n    },\r\n\r\n    displayMembers: function () {\r\n      var ret = this.getLeadingMember();\r\n      if (ret) {\r\n        var indicator = this.getMembersIndicator();\r\n        if (indicator) {\r\n          ret = ret + ' ' + indicator;\r\n        }\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getLeadingMember: function () {\r\n      var first = '';\r\n      if (this.members && this.members.length > 0) {\r\n        first = this.getMemberName(this.members.at(0));\r\n      }\r\n      return first;\r\n    },\r\n\r\n    getMembersIndicator: function () {\r\n      var ret = '';\r\n      if (this.members.length > 1) {\r\n        ret = '+' + (this.members.length - 1);\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getMemberName: function (member) {\r\n      var ret = '';\r\n      if (member) {\r\n        ret = member.get('display_name') ? member.get('display_name') : member.get('name');\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getMemberType: function () {\r\n      return 'role';\r\n    },\r\n\r\n    // whenever the icon url has changed, trigger model\r\n    // change event\r\n    setIconUrl: function (url) {\r\n      if (this.iconUrl !== url) {\r\n        this.iconUrl = url;\r\n        this.trigger('change', this, this.options);\r\n      }\r\n    },\r\n\r\n    // gets the icon url\r\n    getIconUrl: function () {\r\n      return this.iconUrl;\r\n    },\r\n\r\n    // evaluates the 'delete-role' action and returns\r\n    // true if available\r\n    canDelete: function () {\r\n      return (this.actions.get('delete-role') !== undefined);\r\n    }\r\n  });\r\n\r\n  // TODO: RoleCollection and TeamCollection differ only in the parsing\r\n  // TODO: function. Refactor to have a base implementation.\r\n  var RoleCollection = Backbone.Collection.extend({\r\n\r\n        model: RoleModel,\r\n\r\n        constructor: function RoleCollection(attributes, options) {\r\n          _.defaults(options, {orderBy:  RolesTableColumnCollection.columnNames.name + ' asc'});\r\n          Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n          this.context = options && options.context ? options.context : undefined;\r\n          // Support collection cloning\r\n          if (options) {\r\n            this.options = _.pick(options, ['connector', 'context', 'autoreset', 'node',\r\n              'includeResources', 'fields', 'expand', 'commands']);\r\n          }\r\n          this.makeConnectable(options)\r\n              .makeNodeConnectable(options)\r\n              .makeFetchable(options)\r\n              .makeClientSideBrowsable(options);\r\n\r\n          this.columns = new RolesColumnCollection();\r\n        },\r\n\r\n        clone: function () {\r\n          // Provide the options; they may include connector and other parameters\r\n          var clone = new this.constructor(this.models, this.options);\r\n          // Clone sub-models not covered by Backbone\r\n          if (this.columns) {\r\n            clone.columns.reset(this.columns.toJSON());\r\n          }\r\n          // Clone properties about the full (not-yet fetched) collection\r\n          clone.actualSkipCount = this.actualSkipCount;\r\n          clone.totalCount = this.totalCount;\r\n          clone.filteredCount = this.filteredCount;\r\n          return clone;\r\n        },\r\n\r\n        url: function () {\r\n          var id = this.node.get('id');\r\n          var url = this.connector.getConnectionUrl().getApiBase('v2');\r\n          return Url.combine(url, 'businessworkspaces', id, 'roles?fields=members');\r\n        },\r\n\r\n        parse: function (response) {\r\n\r\n          // roles\r\n          var roles = response.results;\r\n          _.each(roles, function (role) {\r\n            // add display name to role\r\n            role.data.properties = _.extend({display_name: role.data.properties.name},\r\n                role.data.properties);\r\n          });\r\n\r\n          // create metadata for custom column models\r\n          var metadata = {\r\n            conws_roleavatar: Metadata.integer(\r\n                RolesTableColumnCollection.columnNames.avatar, lang.rolesAvatarColTitle),\r\n            conws_rolename: Metadata.string(\r\n                RolesTableColumnCollection.columnNames.name, lang.rolesNameColTitle),\r\n            conws_rolemembers: Metadata.string(\r\n                RolesTableColumnCollection.columnNames.roles, lang.rolesParticipantsColTitle)\r\n          };\r\n\r\n          // create column models\r\n          this.columns && this.columns.resetCollection(\r\n              this.columns.getColumnModels(_.keys(metadata), metadata), this.options);\r\n\r\n          // return roles\r\n          return roles;\r\n        }\r\n      }\r\n  );\r\n  ClientSideBrowsableMixin.mixin(RoleCollection.prototype);\r\n  ConnectableMixin.mixin(RoleCollection.prototype);\r\n  NodeConnectableMixin.mixin(RoleCollection.prototype);\r\n  FetchableMixin.mixin(RoleCollection.prototype);\r\n  return RoleCollection;\r\n\r\n});\r\n\n","csui.define('conws/widgets/team/impl/roles.model.factory',['module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/node',\r\n    'csui/utils/contexts/factories/connector',\r\n    'conws/widgets/team/impl/roles.model.expanded'\r\n], function (module, _, Backbone, CollectionFactory, NodeModelFactory, ConnectorFactory, RolesCollection) {\r\n\r\n    var RoleCollectionFactory = CollectionFactory.extend({\r\n\r\n        propertyPrefix: 'roles',\r\n\r\n        constructor: function RoleCollectionFactory(context, options) {\r\n            CollectionFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var roles = this.options.roles || {};\r\n            if (!(roles instanceof Backbone.Collection)) {\r\n                var node = context.getModel(NodeModelFactory, options),\r\n                    connector = context.getObject(ConnectorFactory, options),\r\n                    config = module.config();\r\n\r\n                roles = new RolesCollection(roles.models, _.extend({\r\n                    context: context,\r\n                    node: node,\r\n                    connector: connector\r\n                }, roles.options, config.options, {\r\n                    autoreset: true\r\n                }));\r\n            }\r\n            this.property = roles;\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n    });\r\n\r\n    return RoleCollectionFactory;\r\n});\r\n\n","csui.define('conws/widgets/team/impl/controls/filter/impl/filter.model',[\r\n  'csui/lib/jquery',\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone'\r\n], function ($, _, Backbone) {\r\n\r\n  var FilterModel = Backbone.Model.extend({\r\n\r\n    defaults: {\r\n      // the filter header control caption\r\n      caption: '',\r\n      // the tooltip for the filter control\r\n      tooltip: '',\r\n      // the filter value\r\n      filter: '',\r\n      // defines whether the filter elements are active or not\r\n      active: true,\r\n      // defines whether the search box is visible or not\r\n      showSearch: false\r\n    },\r\n\r\n    constructor: function FilterModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n  // return the model\r\n  return FilterModel;\r\n\r\n});\r\n\r\n\n","csui.define('conws/models/categoryforms/categoryforms.model',[\"module\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/lib/backbone\",\r\n    \"csui/utils/log\", \"csui/utils/base\", 'csui/utils/url',\r\n    \"csui/models/appliedcategoryform\",\r\n    'csui/models/mixins/node.connectable/node.connectable.mixin',\r\n    'csui/models/mixins/fetchable/fetchable.mixin'\r\n], function (module, $, _, Backbone, log, base, Url, AppliedCategoryFormModel,\r\n    NodeConnectableMixin, FetchableMixin) {\r\n\r\n    \"use strict\";\r\n\r\n    var CategoryFormCollection = Backbone.Collection.extend({\r\n\r\n        constructor: function CategoryFormCollection(models, options) {\r\n\r\n            this.isReadOnly = true;\r\n            this.options = options;\r\n            Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n\r\n            this.makeNodeConnectable(options);\r\n            this.makeFetchable(options);\r\n        },\r\n\r\n        sync: function (method, model, options) {\r\n\r\n            if (method === 'read') {\r\n                if (this.node.get(\"id\")) {\r\n                    options.categoryFilter = this.options.categoryFilter;\r\n                    return this._getMetadataForms(method, model, options);\r\n                }\r\n            } else {\r\n                // create/delete/update\r\n                return Backbone.Collection.prototype.sync.apply(this, arguments);\r\n            }\r\n\r\n        },\r\n\r\n        // Get metadata forms for an existing node\r\n        _getMetadataForms: function (method, model, options) {\r\n\r\n            var deferred = $.Deferred();\r\n\r\n            model.trigger('request', model, undefined, options);\r\n\r\n            // filter categories to be fetched\r\n            var categoryFilter = options.categoryFilter;\r\n\r\n            // fetch categories\r\n            var node = this.node;\r\n            var catsUrl = Url.combine(node.urlBase(), 'categories');\r\n            this.connector.makeAjaxCall(this.connector.extendAjaxOptions({\r\n                type: 'GET',\r\n                url: catsUrl\r\n            }))\r\n                .done(_.bind(function (data) {\r\n\r\n                    // get read-only flag\r\n                    var actionsUrl = Url.combine(node.urlBase(), 'categories/actions');\r\n                    this.connector.makeAjaxCall(this.connector.extendAjaxOptions({\r\n                        type: 'GET',\r\n                        url: actionsUrl\r\n                    }))\r\n                        .done(_.bind(function (data2) {\r\n\r\n                            this.isReadOnly = data2.data === null || !data2.data.hasOwnProperty(\"categories_add\");\r\n\r\n                            // have categories -> fetch forms\r\n                            var promises = [],\r\n                                forms = [];\r\n\r\n                            // category form models\r\n                            _.each(data.data, function (curCategory) {\r\n                                if (!categoryFilter || _.contains(categoryFilter, curCategory.id)) {\r\n                                    var nodeId = node.get('id');\r\n                                    var categoryId = curCategory.id;\r\n                                    var catModel = new AppliedCategoryFormModel({\r\n                                        id: curCategory.id,\r\n                                        title: curCategory.name,\r\n                                        allow_delete: true\r\n                                    }, {\r\n                                        node: node,\r\n                                        categoryId: categoryId,\r\n                                        action: 'update'\r\n                                    });\r\n                                    if (this.options.reset || this.options.autoreset) {\r\n                                        forms.push(catModel);\r\n                                    } else {\r\n                                        this.add(catModel);\r\n                                    }\r\n                                    promises.push(catModel.fetch());\r\n                                }\r\n                            }, this);\r\n\r\n                            $.when.apply($, promises).then(\r\n                                _.bind(function () {\r\n                                    if (options.success) {\r\n                                        options.success(forms, 'success');\r\n                                    }\r\n                                    deferred.resolve();\r\n                                }, this),\r\n                                _.bind(function () {\r\n                                    if (options.error) {\r\n                                        options.error.apply(options.error, arguments);\r\n                                    }\r\n                                    deferred.reject();\r\n                                }));\r\n\r\n                        }, this))\r\n                        .fail(_.bind(function () {\r\n                            deferred.reject();\r\n                        }, this));\r\n\r\n                }, this))\r\n                .fail(_.bind(function () {\r\n                    deferred.reject();\r\n                }, this));\r\n\r\n            return deferred.promise();\r\n\r\n        },\r\n\r\n    });\r\n\r\n    NodeConnectableMixin.mixin(CategoryFormCollection.prototype);\r\n    FetchableMixin.mixin(CategoryFormCollection.prototype);\r\n\r\n    return CategoryFormCollection;\r\n\r\n});\r\n\n","csui.define('conws/models/selectedmetadataform/selectedmetadataform.model',[\"module\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/lib/backbone\",\r\n    'csui/utils/url', 'csui/utils/base',\r\n    'conws/models/categoryforms/categoryforms.model'\r\n], function (module, $, _, Backbone, Url, BaseUtils, CategoryFormCollection) {\r\n\r\n    \"use strict\";\r\n\r\n  function updateData(groupNames,data,changes) {\r\n    _.each(groupNames,function(groupId){\r\n      if (data[groupId]) {\r\n        updateData(groupNames,data[groupId],changes);\r\n      }\r\n    });\r\n    _.each(changes,function(value,propertyId){\r\n      // should not occur, that a propertyId starts with the group prefix.\r\n      // but for safety, we check it, and do nothing if it occurs.\r\n      if (propertyId.indexOf(\"conwsgroup_\")<0) {\r\n        if (data.hasOwnProperty(propertyId)) {\r\n          data[propertyId] = value;\r\n        }\r\n      }\r\n    });\r\n  }\r\n    var SelectedMetadataFormModel = Backbone.Model.extend({\r\n\r\n        constructor: function SelectedMetadataFormModel(attributes, options) {\r\n\r\n            this.node = options.node;\r\n\r\n            if(options.metadataConfig) {\r\n                this.metadataConfig = options.metadataConfig.metadata;\r\n                this.hideEmptyFields = options.metadataConfig.hideEmptyFields || false;\r\n                this.isReadOnly = options.metadataConfig.readonly ? true : false;\r\n            }\r\n\r\n            this.categoryForms = this.metadataConfig && new CategoryFormCollection(undefined, {\r\n                    node: options.node,\r\n                    autofetch: true,\r\n                    autoreset: true,\r\n                    categoryFilter: this._createCategoryFilter(this.metadataConfig)\r\n                });\r\n\r\n            Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n            this.categoryForms && this.listenTo(this.categoryForms, 'reset', function () {\r\n                this.update(this.metadataConfig);\r\n            });\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.categoryForms && this.categoryForms.fetch(options)\r\n                    .done(_.bind(this._saveData,this));\r\n        },\r\n\r\n        _getChanges: function (catModel) {\r\n            var changes = catModel.get(\"data\");\r\n            var schema = catModel.get(\"schema\");\r\n            var options = catModel.get('options');\r\n            var key;\r\n\r\n            // workaround for LPAD-47456: set value of hidden string fields\r\n            // to \"\" instead of null\r\n            for (key in options.fields) {\r\n                if(options.fields[key].hidden === true) {\r\n                    if(schema.properties[key].type === 'string') {\r\n                        if(key in changes && changes[key] === null) {\r\n                            changes[key] = \"\";\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return changes;\r\n        },\r\n\r\n        _createCategoryFilter: function (config) {\r\n            var categoryFilter = [];\r\n            _.each(config, function (configElement) {\r\n                if (configElement.type === \"attribute\" || configElement.type === \"category\") {\r\n                    if (!_.contains(categoryFilter, configElement.categoryId)) {\r\n                        categoryFilter.push(configElement.categoryId);\r\n                    }\r\n                } else if (configElement.type === \"group\") {\r\n                    var innerCategoryFilter = this._createCategoryFilter(configElement.attributes);\r\n                    _.each(innerCategoryFilter, function (innerCategory) {\r\n                        if (!_.contains(categoryFilter, innerCategory)) {\r\n                            categoryFilter.push(innerCategory);\r\n                        }\r\n                    })\r\n                }\r\n            }, this);\r\n            return categoryFilter;\r\n        },\r\n\r\n      _saveData: function() {\r\n        function flatten(groupNames,oldData,data) {\r\n          _.each(groupNames,function(groupId) {\r\n            var groupData = data[groupId];\r\n            if (groupData) {\r\n              delete data[groupId];\r\n              flatten(groupNames,oldData,groupData);\r\n              _.extend(oldData,groupData);\r\n            }\r\n          });\r\n        }\r\n        var data = this.get(\"data\");\r\n        this.oldData = data? JSON.parse(JSON.stringify(data)) : {};\r\n        flatten(this.groupNames,this.oldData,this.oldData);\r\n      },\r\n\r\n      restoreData: function (changes) {\r\n        var restore = _.pick(this.oldData,_.keys(changes));\r\n        restore = JSON.parse(JSON.stringify(restore));\r\n        updateData(this.groupNames,this.get(\"data\"),restore);\r\n        return restore;\r\n      },\r\n\r\n      updateData: function (changes) {\r\n          updateData(this.groupNames,this.get(\"data\"),changes);\r\n          this._saveData();\r\n        },\r\n\r\n      update: function (config) {\r\n\r\n        // Initialize backbone model with empty objects - will be filled afterwards\r\n        var data = {};\r\n        var schema = {properties: {}};\r\n        var options = {fields: {}};\r\n\r\n        // Provide easy access to backbone model\r\n        var destinationModel = {\r\n          data: data,\r\n          properties: schema.properties,\r\n          fields: options.fields,\r\n\t\t  title:\"\"\r\n        };\r\n\r\n        this.groupCnt = 1;\r\n        this.groupNames = [];\r\n\r\n        this._fillModel(config, destinationModel);\r\n        this.set({data: data, schema: schema, options: options}); // triggers change event\r\n        this._saveData();\r\n      },\r\n\r\n        _fillModel: function (config, destinationModel, prefix) {\r\n            // Iterate over all metadata sections of widget configuration\r\n            _.each(config, function (configElement) {\r\n                if (configElement.type === \"attribute\") { // Single attribute row\r\n                    this._createAttribute(configElement, destinationModel, prefix);\r\n                } else if (configElement.type === \"category\") {  // All attributes of a category\r\n                    this._createCategory(configElement, destinationModel, prefix);\r\n                } else if (configElement.type === \"group\") { // Group of attributes\r\n                    // Create an artifact using set schema, as expected by FormView\r\n                    var groupId = \"conwsgroup_\" + this.groupCnt++; // Define a unique group name\r\n\t\t\t\t\tvar groupName = configElement.label;\r\n                    this.groupNames.push(groupId);\r\n                    var innerData = {};\r\n                    var innerProperties = {properties: {}};\r\n                    var innerFields = {\r\n                        label: BaseUtils.getClosestLocalizedString(configElement.label, \"Undefined\"),\r\n                        fields: {}\r\n                    };\r\n                    var innerDestinationModel = {\r\n                        data: innerData,\r\n                        properties: innerProperties.properties,\r\n                        fields: innerFields.fields,\r\n\t\t\t\t\t\ttitle:\"\"\r\n                    };\r\n                    this._fillModel(configElement.attributes, innerDestinationModel, groupName);\r\n                    if (!_.isEmpty(innerData)) { // empty groups are hidden\r\n\t\t\t\t\t\t// instead of using groupId we are now using group name\r\n                        destinationModel.data[groupName] = innerData;\r\n                        destinationModel.properties[groupName] = innerProperties;\r\n                        destinationModel.fields[groupName] = innerFields;\r\n                    }\r\n                }\r\n            }, this);\r\n        },\r\n\r\n        _createAttribute: function (configElement, destinationModel, prefix) {\r\n            var fieldId = configElement.categoryId + \"_\" + configElement.attributeId;\r\n            _.each(this.categoryForms.models, function (modelElement) {\r\n                if (configElement.categoryId === modelElement.id) {\r\n                    var sourceModel;\r\n                    if (configElement.columnId) {\r\n                        var setType = modelElement.attributes.schema.properties[fieldId].type;\r\n                        if (setType === \"object\") { // single-row set\r\n                            configElement.attributeType = setType;\r\n                            var subFieldId = fieldId + \"_1_\" + configElement.columnId;\r\n                            sourceModel = {\r\n                                data: modelElement.attributes.data[fieldId],\r\n                                properties: modelElement.attributes.schema.properties[fieldId].properties,\r\n                                fields: modelElement.attributes.options.fields[fieldId].fields\r\n                            };\r\n                            this._createRow(subFieldId, configElement, destinationModel, sourceModel, prefix);\r\n                        } else if (setType === \"array\") { // multi-row set (has a different, more complex structure)\r\n                            configElement.attributeType = setType;\r\n                            var subFieldId = fieldId + \"_x_\" + configElement.columnId;\r\n                            sourceModel = {\r\n                                data: modelElement.attributes.data[fieldId][0],\r\n                                properties: modelElement.attributes.schema.properties[fieldId].items.properties,\r\n                                fields: modelElement.attributes.options.fields[fieldId].fields.item.fields\r\n                            };\r\n                            this._createRow(subFieldId, configElement, destinationModel, sourceModel, prefix);\r\n                        }\r\n                    } else {\r\n                        sourceModel = {\r\n                            data: modelElement.attributes.data,\r\n                            properties: modelElement.attributes.schema.properties,\r\n                            fields: modelElement.attributes.options.fields\r\n                        };\r\n                        this._createRow(fieldId, configElement, destinationModel, sourceModel, prefix);\r\n                    }\r\n                }\r\n            }, this);\r\n        },\r\n\r\n        _createCategory: function (configElement, destinationModel, prefix) {\r\n            _.each(this.categoryForms.models, function (modelElement) {\r\n                if (configElement.categoryId === modelElement.id) {\r\n                    var sourceModel = {\r\n                        data: modelElement.attributes.data,\r\n                        properties: modelElement.attributes.schema.properties,\r\n                        fields: modelElement.attributes.options.fields,\r\n\t\t\t\t\t\ttitle: modelElement.attributes.title\r\n                    };\r\n                    _.each(modelElement.attributes.data, function (fieldElement, fieldIndex) {\r\n                        this._createRow(fieldIndex, configElement, destinationModel, sourceModel, prefix);\r\n                    }, this);\r\n                }\r\n            }, this);\r\n        },\r\n\r\n        _createRow: function (fieldId, config, destinationModel, sourceModel, prefix) {\r\n\t\t\tvar fieldVal = sourceModel.data[fieldId],\r\n\t\t\t\tprop \t = sourceModel.properties[fieldId],\r\n\t\t\t\tfield \t = sourceModel.fields[fieldId],\r\n\t\t\t\tkey;\r\n\t\t\tif (!this.hideEmptyFields || !this._isEmpty(fieldVal)) {\r\n\t\t\t\tdestinationModel.data[fieldId] = fieldVal;\r\n\t\t\t\tdestinationModel.properties[fieldId] = prop;\r\n\t\t\t\tdestinationModel.fields[fieldId] = field;\r\n\t\t\t\tif (config.label) {\r\n\t\t\t\t\tdestinationModel.fields[fieldId].label =\r\n\t\t\t\t\t\tBaseUtils.getClosestLocalizedString(config.label, \"Undefined\");\r\n\t\t\t\t}\r\n\t\t\t\tif (this.isReadOnly === true || this.categoryForms.isReadOnly === true || config.readOnly === true) {\r\n\t\t\t\t\tdestinationModel.properties[fieldId].readonly = true;\r\n\t\t\t\t\tdestinationModel.fields[fieldId].readonly = true;\r\n\t\t\t\t\t// if this is a Set attribute (contains an 'items' member) the readonly=true\r\n\t\t\t\t\t// is propagated down to the members of the Set attribute\r\n\t\t\t\t\tif('items' in prop) {\r\n\t\t\t\t\t\tfor(key in prop.items.properties) {\r\n\t\t\t\t\t\t\tprop.items.properties[key].readonly = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif('properties' in prop) {\r\n\t\t\t\t\t\tfor(key in prop.properties) {\r\n\t\t\t\t\t\t\tprop.properties[key].readonly = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif('fields' in field) {\r\n\t\t\t\t\t\tfor(key in field.fields) {\r\n\t\t\t\t\t\t\tfield.fields[key].readonly = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n        _isEmpty: function (val) {\r\n            if (val === null || val === undefined || val === \"\")\r\n                return true;\r\n            var uniqueElements = _.uniq(_.values(val));\r\n            if (uniqueElements.length > 0) {\r\n                var allEmpty = true;\r\n                for (var i = 0; i < uniqueElements.length; i++) {\r\n                    if (!this._isEmpty(uniqueElements[i])) {\r\n                        allEmpty = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (allEmpty) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        _removeGroupPrefix: function(path, prefix) {\r\n            var modifiedPath = path;\r\n            _.each(this.groupNames, function(groupName) {\r\n                var actGroupName = (prefix || \"\") + groupName;\r\n                if (modifiedPath.indexOf(actGroupName) == 0) {\r\n                    modifiedPath = modifiedPath.substr(actGroupName.length);\r\n                    if (modifiedPath[0] == '_') {\r\n                        modifiedPath = modifiedPath.substr(1);\r\n                    }\r\n                }\r\n            }, this);\r\n            return modifiedPath;\r\n        }\r\n\r\n    });\r\n\r\n    return SelectedMetadataFormModel;\r\n\r\n});\r\n\n","csui.define('conws/models/selectedmetadataform/selectedmetadataform.factory',[\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/node',\r\n    'conws/models/categoryforms/categoryforms.model',\r\n    'conws/models/selectedmetadataform/selectedmetadataform.model'\r\n], function (ModelFactory, NodeModelFactory, CategoryFormCollection, SelectedMetadataFormModel) {\r\n\r\n    var SelectedMetadataFormFactory = ModelFactory.extend({\r\n\r\n        // unique prefix for the metadata model instance.\r\n        propertyPrefix: 'metadata',\r\n\r\n        constructor: function SelectedMetadataFormFactory(context, options) {\r\n\r\n            ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var node = context.getModel(NodeModelFactory);\r\n            this.property = new SelectedMetadataFormModel(undefined, {\r\n                node: node,\r\n                metadataConfig: options[this.propertyPrefix].metadataConfig,\r\n                autofetch: true,\r\n                autoreset: true\r\n            });\r\n\r\n        },\r\n\r\n        fetch: function (options) {\r\n            // fetch the model contents exposed by this factory.\r\n            return this.property.fetch(options);\r\n        }\r\n    });\r\n\r\n    return SelectedMetadataFormFactory;\r\n});\r\n\n","csui.define('conws/utils/commands/goto.location',[\r\n    'csui/lib/jquery'\r\n], function ($) {\r\n\r\n    var GotoLocationExtension = {\r\n\r\n        navigate: function (node, options) {\r\n            var deferred = $.Deferred();\r\n\r\n            options.context.viewStateModel.set('conwsNavigate', 'gotoLocation' );\r\n\r\n            return deferred.reject().promise();\r\n        }\r\n\r\n    };\r\n\r\n    return GotoLocationExtension;\r\n});\n","csui.define('conws/utils/commands/back.to.previous.location',['module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/utils/log', 'csui/models/command',\r\n  'conws/utils/commands/navigate/navigable',\r\n  'conws/utils/navigate/navigate.util',\r\n], function (module, require, $, _,\r\n  Log,\r\n  CommandModel,\r\n  Navigable,\r\n  NavigateUtil) {\r\n  'use strict';\r\n\r\n  var log = new Log(module.id);\r\n\r\n  var BackToPreviousLocation = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'BackToPreviousLocation'\r\n    },\r\n\r\n    /**\r\n     * checks, whether a back link can be displayed in current navigation situation\r\n     * and if so, returns the link info.\r\n     *\r\n     * @param {*} context current navigation context.\r\n     * @returns object with properties \"index\", \"title\", \"router\", \"id\".\r\n     * index: the index of the history entry to jump to, undefined, if there is no entry.\r\n     * title: the title to display in the link - if index!==undefined.\r\n     * router: the name of the router, the history entry has written.\r\n     * id: node id, if history entry is associated to a node - can be undefined.\r\n     */\r\n    getLinkInfo: function (context) {\r\n      var result = {};\r\n      if (Navigable.wantsBackToPrevious() && context) {\r\n        var wkspid = NavigateUtil.checkWorkspaceHierarchy(context).wkspid;\r\n        if (wkspid) {\r\n          var viewState = context.viewStateModel;\r\n          if (viewState) {\r\n            var entries = viewState.getHistory();\r\n            var state = viewState.get(viewState.CONSTANTS.SESSION_STATE)||{};\r\n\r\n            // first check current history entry to handle the situation,\r\n            // where it is not yet pushed to the history.\r\n            var entry = viewState.getPotentialHistoryEntry();\r\n            var prev = entries && entries.length && entries[entries.length-1];\r\n            if (entry && (!prev || JSON.stringify(entry)!==JSON.stringify(prev))) {\r\n              state = entry.sessionState||{};\r\n              if ((wkspid||0)!==(state.wkspid||0)) {\r\n                result.index = entries ? entries.length : 0;\r\n              }\r\n            }\r\n\r\n            if (result.index===undefined && entries && entries.length > 0) {\r\n              for (var i = entries.length - 1; i >= 0; i--) {\r\n                entry = entries[i];\r\n                state = entry.sessionState||{};\r\n                if ((wkspid||0)!==(state.wkspid||0)) {\r\n                  result.index = i;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n\r\n            if (result.index!==undefined) {\r\n              result.title = state.wkspid ? state.wkspname : entry[viewState.CONSTANTS.BACK_TO_TITLE];\r\n              result.router = entry.router;\r\n              result.id = state.id;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n\r\n      var context = status.context || options && options.context;\r\n      var result = {};\r\n      if (context) {\r\n        result = this.getLinkInfo(context);\r\n      }\r\n      return result.index>=0;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var context = status.context || options && options.context;\r\n      var viewState = context && context.viewStateModel;\r\n      var history = viewState.getHistory();\r\n      var deferred = $.Deferred();\r\n\r\n      var index = (status.data && status.data.index!==undefined) ? status.data.index : this.getLinkInfo(context).index;\r\n      if (index>=0 && index<history.length) {\r\n        viewState.restoreHistoryEntryByIndex(index);\r\n        deferred.resolve();\r\n      } else {\r\n        log.error(\"Stale history index {0}.\",index)\r\n        deferred.reject();\r\n      }\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return BackToPreviousLocation;\r\n\r\n});\r\n\n","/**\r\n * Created by stefang on 11.12.2015.\r\n */\r\ncsui.define('conws/utils/workspaces/impl/workspaceutil',[\r\n  'csui/lib/jquery',\r\n  'csui/lib/underscore'\r\n], function ($, _, Backbone, NodeModel) {\r\n\r\n  function WorkspaceUtil () {}\r\n\r\n  _.extend(WorkspaceUtil.prototype,{\r\n\r\n    orderByAsString: function (orderBy,defCol,defOrd) {\r\n      var sc;\r\n\r\n      var ret, order = {sc:defCol, so:defOrd};\r\n      if (orderBy) {\r\n        order = _.defaults({sc:orderBy.sortColumn,so:orderBy.sortOrder},order);\r\n      }\r\n      // strip curly braces from sortColumn\r\n      if (order.sc) {\r\n        // syntax of the sortColumn is to be checked in the constructors, so no need to\r\n        // raise a message here\r\n        var parameterPlaceholder = /{([^:}]+)(:([^}]+))?}/g;\r\n        var match = parameterPlaceholder.exec(order.sc);\r\n        if (match) {\r\n          order.sc = match[1];\r\n        } else {\r\n          order.sc = undefined;\r\n        }\r\n      }\r\n      // if one of column or order is defined, then we must deliver something defined\r\n      if (order.sc || order.so) {\r\n        // and use a constant default, if one is undefined\r\n        ret = _.str.sformat(\"{0} {1}\", order.sc?order.sc:\"name\", order.so?order.so:\"asc\");\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getFilterValueString: function(colattrs,colvalue,allowempty) {\r\n      var format = filter_map[type_key(colattrs.type)];\r\n      if (!format) {\r\n        if (allowempty) {\r\n          return undefined;\r\n        }\r\n        format = \"{0}\";\r\n      }\r\n      return _.str.sformat(format,colvalue);\r\n    },\r\n\r\n    getFormFieldTemplate: function (colattrs) {\r\n      // currently only support text fields (CWS-5783) in search form.\r\n      if (colattrs.type!==-1) {\r\n        return undefined;\r\n      }\r\n      return template_map[type_key(colattrs.type,colattrs.persona)] || template_map[type_key(colattrs.type)];\r\n    }\r\n\r\n  });\r\n\r\n  function type_key(type,persona) {\r\n    return [type,persona].toString();\r\n  }\r\n\r\n  var filter_map = {};\r\n  filter_map[type_key(-1,\"\")] = \"contains_{0}\";\r\n\r\n  var template_map = {};\r\n  template_map[type_key(-1,\"\")] = {\r\n    // normal text attribute\r\n    options: { type: \"text\"},\r\n    schema: { type: \"string\" } };\r\n  template_map[type_key(2,\"\")] =  {\r\n    // normal integer, like size and others\r\n    options: { type: \"integer\" },\r\n    schema: { type: \"integer\" }\r\n  };\r\n    undefined; \r\n  template_map[type_key(2,\"node\")] =\r\n    // node picker\r\n    undefined/*= not supported */; \r\n  template_map[type_key(2,\"user\")] = {\r\n    // user picker\r\n    options: {\r\n      \"type\": \"otcs_user_picker\",\r\n      \"type_control\": {\r\n        \"action\": \"api/v1/members\",\r\n        \"method\": \"GET\",\r\n        \"name\": \"user001\",\r\n        \"parameters\": {\r\n          \"filter_types\": [\r\n            0\r\n          ],\r\n          \"select_types\": [\r\n            0\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    schema: {\r\n      \"type\": \"otcs_user_picker\"\r\n    }\r\n  };\r\n  template_map[type_key(14,\"user\")] = template_map[type_key(2,\"user\")];\r\n  template_map[type_key(-7,\"\")] = {\r\n    // date attribute\r\n    options: { type: \"date\" },\r\n    schema: { type: \"string\" }\r\n  };\r\n  template_map[type_key(5,\"\")] = {\r\n    // boolean attribute\r\n    options: { type: \"checkbox\" },\r\n    schema: { type: \"boolean\" }\r\n  };\r\n\r\n  return new WorkspaceUtil();\r\n});\r\n\n","/**\r\n * The workspaces model for fetching the workspaces from the server.\r\n * Provides:\r\n *   - Endless scrolling\r\n *   - Fetch custom attributes (categories)\r\n *   - Provide Workspace type icon\r\n */\r\ncsui.define('conws/utils/workspaces/workspace.model',[\r\n  'module',\r\n  'csui/lib/jquery',\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/models/node/node.model'\r\n], function (module, $, _, Backbone, NodeModel) {\r\n\r\n  var WorkspaceModel = NodeModel.extend({\r\n\r\n    constructor: function WorkspaceModel(attributes, options) {\r\n      // The connector needs to be passed to teh NodeModel constructor\r\n      // to be processed correctly\r\n      options || (options = {});\r\n      if (!options.connector) {\r\n        options.connector = options.collection && options.collection.connector || undefined;\r\n      }\r\n\r\n      NodeModel.prototype.constructor.call(this, attributes, options);\r\n    },\r\n\r\n    // Set id attribute to support endless scrolling\r\n    // Needed to support compare workspaces and add workspaces to a existing collection\r\n    idAttribute: 'id',\r\n\r\n    // Parse one workspace and add category properties\r\n    parse: function (response, options) {\r\n      var node = NodeModel.prototype.parse.call(this, response, options);\r\n\r\n      // Add container attribute that core ui allow browse\r\n      if (!node.container) {\r\n        node.container = true;\r\n      }\r\n\r\n      // set display_name so it is usable in typeaheadfields.\r\n      node.display_name = node.name;\r\n\r\n      return node;\r\n    }\r\n\r\n  });\r\n\r\n  return WorkspaceModel;\r\n});\r\n\n","/**\r\n * The workspaces mixin model parts for fetching the workspaces from the server.\r\n * Provides:\r\n *   - Endless scrolling\r\n *   - Fetch custom attributes (categories)\r\n *   - Provide Workspace type icon\r\n */\r\ncsui.define('conws/utils/workspaces/impl/workspaces.collection.mixin',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/url',\r\n  'csui/models/nodechildrencolumn', 'csui/models/nodechildrencolumns',\r\n  'conws/utils/workspaces/workspace.model', 'conws/utils/workspaces/impl/workspaceutil'\r\n], function (module, $, _, Backbone, Url,\r\n    NodeChildrenColumnModel, NodeChildrenColumnCollection,\r\n    WorkspaceModel, WorkspaceUtil) {\r\n\r\n  // Model for display columns in expanded view\r\n  var WorkspacesColumnModel = NodeChildrenColumnModel.extend({\r\n\r\n    idAttribute: \"column_key\",\r\n\r\n    constructor: function WorkspacesColumnModel() {\r\n      NodeChildrenColumnModel.prototype.constructor.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n  // Collection for display columns in expanded view\r\n  var WorkspacesColumnCollection = NodeChildrenColumnCollection.extend({\r\n\r\n    dataCollectionName: \"properties\",\r\n    model: WorkspacesColumnModel,\r\n\r\n    constructor: function WorkspacesColumnCollection(models,options) {\r\n      this.dataCollectionName = options && options.dataCollectionName;\r\n      NodeChildrenColumnCollection.prototype.constructor.apply(this,arguments);\r\n    },\r\n\r\n    resetColumns: function (response, options) {\r\n      var definitions = (response.meta_data && response.meta_data[this.dataCollectionName]) || {};\r\n      var coldefstr = JSON.stringify(definitions);\r\n      if (this.coldefstr!==coldefstr) {\r\n        this.coldefstr = coldefstr;\r\n        this.resetCollection(this.getColumns(response), options);\r\n      }\r\n    },\r\n\r\n    getColumns: function (response) {\r\n      var definitions = (response.meta_data &&\r\n                         response.meta_data[this.dataCollectionName]) || {};\r\n\r\n      var columnKeys   = _.keys(definitions),\r\n          columnModels = this.getColumnModels(columnKeys, definitions);\r\n\r\n      _.each(columnModels, function (model) {\r\n        // To format user columns they must have type 14\r\n        if (model.persona === \"user\" || model.persona === \"member\") {\r\n          model.type = 14;\r\n        }\r\n      });\r\n\r\n      return columnModels;\r\n    }\r\n\r\n  });\r\n\r\n  var WorkspacesCollectionMixin = {\r\n    mixin: function(prototype) {\r\n      var defaults = _.defaults({},prototype);\r\n\r\n      return _.extend(prototype,{\r\n        dataCollectionName: \"properties\",\r\n        model: WorkspaceModel,\r\n\r\n        makeWorkspacesCollection: function (options) {\r\n          this.columns = new WorkspacesColumnCollection([],{dataCollectionName:this.dataCollectionName});\r\n          this.listenTo(this, \"sync\", this._cacheCollection);\r\n          this.totalCount = 0;\r\n          this.titleIcon = undefined;\r\n          // API returns if there are more pages to fetch or not\r\n          this.next = undefined;\r\n          this.sorting = {};\r\n          this.sorting.sort = [];\r\n          this.sorting.sort[0] = {};\r\n          this.listenTo(this,\"sync reset\",function() {\r\n            this.updateSelectableState();\r\n          });\r\n        },\r\n\r\n        updateSelectableState: function (models) {\r\n          models || (models = this.models);\r\n          var selectActions = this.selectActions;\r\n          if (selectActions) {\r\n            this.existsSelectable = false;\r\n            this.existsNonSelectable = false;\r\n            if (models && models.length>0) {\r\n              // look for actions and set selectable flags accordingly\r\n              var self = this;\r\n              _.each(models,function(el){\r\n                var selectable = true;\r\n                if (el.attributes) {\r\n                  if (el.actions) {\r\n                    selectable = !!_.find(selectActions,function(act){\r\n                      if (el.actions.models) {\r\n                        return el.actions.get(act);\r\n                      } else {\r\n                        return el.actions[act];\r\n                      }\r\n                    });\r\n                  } else {\r\n                    selectable = false\r\n                  }\r\n                  el.attributes.selectable = selectable;\r\n                }\r\n                if (selectable) {\r\n                  self.existsSelectable = true;\r\n                } else {\r\n                  self.existsNonSelectable = true;\r\n                }\r\n              });\r\n            }\r\n          }\r\n        },\r\n\r\n        fetch: function () {\r\n          if (!this.fetching) {\r\n            // reset total count\r\n            this.totalCount = 0;\r\n          }\r\n          return defaults.fetch.apply(this, arguments);\r\n        },\r\n\r\n        clone: function () {\r\n          // Don't share something between collapsed and expanded view (models, ...)\r\n          // Sorting, filtering, columns, ... must also be shared since e.g. the modal view has\r\n          // specific sorting\r\n          var options = $.extend(true, {}, this.options);\r\n          this._cleanupQuery(options.query);\r\n          var collection = new this.constructor([], options);\r\n          collection.connector = this.connector;\r\n          collection.titleIcon = this.titleIcon;\r\n          collection.sorting = this.sorting;\r\n          return collection;\r\n        },\r\n\r\n        /**\r\n         * Cleanup query, e.g. all custom filters, expand\r\n         *\r\n         * @private\r\n         */\r\n        _cleanupQuery: function (query) {\r\n          if (this.wherePart) {\r\n            _.each(query, function (value, key, obj) {\r\n              if (key.substring(0, 6) === 'where_' && $.inArray(key, this.wherePart) < 0) {\r\n                delete obj[key];\r\n              }\r\n            }, this);\r\n          }\r\n\r\n          // delete expand\r\n          if (query.expand) {\r\n            delete query.expand;\r\n          }\r\n\r\n          return query;\r\n        },\r\n\r\n        parse: function (response,options) {\r\n\r\n          // if url parameter global_metadata was passed, the result contains the metadata\r\n          // descriptions once for all items in response.meta_data and response.meta_data_order\r\n          // only. In order to have it compatible in both cases, we set it item specific here.\r\n          _.each(response.results,function(result){\r\n            if (!result.metadata) {\r\n              result.metadata = response.meta_data;\r\n            }\r\n            if (!result.metadata_order) {\r\n              result.metadata_order = response.meta_data_order;\r\n            }\r\n          });\r\n\r\n          // In case api returns properties use them, otherwise use defaults\r\n          this.totalCount = response.paging.total_count;\r\n          this.titleIcon = response.wksp_info && response.wksp_info.wksp_type_icon;\r\n          if(this.orderBy) {\r\n            this.sorting.sort[0].value = this._formatSorting(this.orderBy);\r\n          }\r\n\r\n          this.options.orderBy = this.orderBy;\r\n          this.columns && this.columns.resetColumns(response, this.options);\r\n\r\n          // If more pages available set next to true, otherwise to false\r\n          this.next = response.paging.actions && response.paging.actions.next ? true : false;\r\n\r\n          // pass the array of v2 nodes to the model parse methods\r\n          return response.results;\r\n        },\r\n\r\n        /**\r\n         * Set paging parameter for rest call\r\n         *\r\n         * @param skip Number of items to skip at current rest call\r\n         * @param top  Number of items to fetch at current rest call\r\n         * @param fetch true to fetch items from server\r\n         */\r\n        setLimit: function (skip, top, fetch) {\r\n          if (this.skipCount !== skip || this.topCount !== top) {\r\n            this.skipCount = skip;\r\n            this.topCount = top;\r\n\r\n            // Fetch next page from server and show data\r\n            if (fetch) {\r\n              this.fetch();\r\n            }\r\n          }\r\n          return true;\r\n        },\r\n\r\n        /**\r\n         * Reset paging parameter\r\n         */\r\n        resetLimit: function () {\r\n          this.setLimit(0, this.topCount, false);\r\n        },\r\n\r\n        setFilter: function (value, attributes, fetch) {\r\n          // In case filter is changed, reset paging to get first page\r\n          this.setLimit(0, this.topCount, false);\r\n\r\n          return defaults.setFilter.apply(this, arguments);\r\n        },\r\n\r\n        clearFilter: function () {\r\n          defaults.clearFilter.apply(this, arguments);\r\n          if (this.options.query) {\r\n            this._cleanupQuery(this.options.query);\r\n          }\r\n        },\r\n\r\n        mergeUrlPaging: function (config, queryParams) {\r\n          var limit = this.topCount || config.defaultPageSize;\r\n          if (limit) {\r\n            queryParams.limit = limit;\r\n            queryParams.page = this.skipCount ? (Math.floor(this.skipCount / limit)) + 1 : 1;\r\n          }\r\n          return queryParams;\r\n        },\r\n\r\n        mergeUrlSorting: function (queryParams) {\r\n          var orderBy;\r\n          if (this.orderBy) {\r\n            orderBy = this.orderBy;\r\n            queryParams.sort = this._formatSorting(orderBy);\r\n          } else if (_.isUndefined(queryParams.sort)) {\r\n            queryParams.sort = \"asc_name\";\r\n            this.orderBy = \"name asc\";\r\n          } else if (queryParams.sort.indexOf(\" \") > -1) {\r\n            orderBy = queryParams.sort;\r\n            this.orderBy = queryParams.sort;\r\n            queryParams.sort = this._formatSorting(orderBy);\r\n          }\r\n          return queryParams;\r\n        },\r\n\r\n        _formatSorting: function (orderBy) {\r\n          var slicePosition = orderBy.lastIndexOf(\" \");\r\n          return orderBy.slice(slicePosition + 1) + '_' + orderBy.slice(0, slicePosition);\r\n        },\r\n\r\n        mergeUrlFiltering: function (queryParams) {\r\n          if (!$.isEmptyObject(this.filters)) {\r\n            for (var name in this.filters) {\r\n              if (this.filters.hasOwnProperty(name)) {\r\n                if (this.filters[name]) {\r\n                  var column = this.columns && this.columns.get(name);\r\n                  var attributes = column && column.attributes;\r\n                  var valstring = WorkspaceUtil.getFilterValueString(attributes,this.filters[name]);\r\n                  queryParams[\"where_\" + name] = encodeURIComponent(valstring);\r\n                } else {\r\n                  // Clear filter\r\n                  delete queryParams[\"where_\" + name];\r\n                  delete this.options.query[\"where_\" + name];\r\n                }\r\n              }\r\n            }\r\n          }\r\n          return queryParams;\r\n        },\r\n\r\n        queryParamsToString: function (params) {\r\n          var queryParamsStr = \"\";\r\n          for (var param in params) {\r\n            if (params.hasOwnProperty(param)) {\r\n              if (queryParamsStr.length > 0) {\r\n                queryParamsStr += \"&\";\r\n              }\r\n\r\n              if (params[param] === undefined) {\r\n                queryParamsStr += param;\r\n              } else {\r\n                queryParamsStr += param + \"=\" + params[param];\r\n              }\r\n            }\r\n          }\r\n          return queryParamsStr;\r\n        },\r\n\r\n        getBaseUrl: function () {\r\n          var url = this.connector && this.connector.connection &&\r\n                    this.connector.connection.url;\r\n          if (_.isUndefined(url)) {\r\n            url = this.options.connector.connection.url;\r\n          }\r\n          return url;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return WorkspacesCollectionMixin;\r\n\r\n});\r\n\n","// Fetches the list of related workspaces\r\ncsui.define('conws/widgets/relatedworkspaces/impl/relatedworkspaces.model',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/url',\r\n  'csui/models/nodes',\r\n  'csui/models/browsable/browsable.mixin',\r\n  'csui/models/mixins/node.resource/node.resource.mixin',\r\n  'csui/models/mixins/expandable/expandable.mixin',\r\n  'conws/utils/workspaces/impl/workspaces.collection.mixin',\r\n  'csui/models/node/node.model'\r\n], function (module, $, _, Backbone, Url,\r\n    NodeCollection, BrowsableMixin, NodeResourceMixin, ExpandableMixin,\r\n    WorkspacesCollectionMixin) {\r\n\r\n  var config = module.config();\r\n\r\n  var RelatedWorkspacesCollection = NodeCollection.extend({\r\n\r\n    constructor: function RelatedWorkspacesCollection(models, options) {\r\n      // Core filter values needed for rest api\r\n      this.wherePart = [\"where_workspace_type_id\", \"where_relationtype\"];\r\n      NodeCollection.prototype.constructor.apply(this, arguments);\r\n      options || (options = {});\r\n      this.options = options;\r\n\r\n      this.makeBrowsable(options);\r\n      this.makeNodeResource(options);\r\n      this.makeExpandable(options);\r\n      this.makeWorkspacesCollection(options);\r\n\r\n    }\r\n  });\r\n\r\n  BrowsableMixin.mixin(RelatedWorkspacesCollection.prototype);\r\n  NodeResourceMixin.mixin(RelatedWorkspacesCollection.prototype);\r\n  ExpandableMixin.mixin(RelatedWorkspacesCollection.prototype);\r\n  WorkspacesCollectionMixin.mixin(RelatedWorkspacesCollection.prototype);\r\n\r\n  _.extend(RelatedWorkspacesCollection.prototype, {\r\n\r\n    url: function () {\r\n      var queryParams = this.options.query || {};\r\n\r\n      // Paging\r\n      queryParams = this.mergeUrlPaging(config, queryParams);\r\n\r\n      // Sorting\r\n      queryParams = this.mergeUrlSorting(queryParams);\r\n\r\n      // Filtering\r\n      queryParams = this.mergeUrlFiltering(queryParams);\r\n\r\n      // URLs like /nodes/:id/relatedworkspaces\r\n      //var url = this.node.urlBase() + '/relatedworkspaces';\r\n      // Alternative for URLs like /businessworkspaces/:id\r\n      var workspaceNodeId = this.node.get('id');\r\n      var apiBase = new Url(this.getBaseUrl()).getApiBase('v2'),\r\n          url = Url.combine(apiBase,'businessworkspaces', workspaceNodeId, 'relateditems');\r\n      queryParams = _.omit(queryParams, function (value, key) {\r\n        return value == null || value === '';\r\n      });\r\n      queryParams.global_metadata = undefined;\r\n      return url + '?' + this.queryParamsToString(queryParams);\r\n    }\r\n\r\n  });\r\n\r\n  return RelatedWorkspacesCollection;\r\n\r\n});\r\n\n","csui.define('conws/widgets/relatedworkspaces/impl/relatedworkspaces.factory',['module', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/utils/contexts/factories/factory',\r\n  'csui/utils/contexts/factories/node',\r\n  'conws/widgets/relatedworkspaces/impl/relatedworkspaces.model'\r\n], function (module, _, Backbone,\r\n             CollectionFactory,\r\n             NodeModelFactory,\r\n             RelatedWorkspaceCollection) {\r\n\r\n  var RelatedWorkspaceCollectionFactory = CollectionFactory.extend({\r\n\r\n    propertyPrefix: 'relatedWorkspaces',\r\n\r\n    constructor: function RelatedWorkspacesCollectionFactory(context, options) {\r\n      CollectionFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      var relatedWorkspaces = this.options.relatedWorkspaces || {};\r\n      if (!(relatedWorkspaces instanceof Backbone.Collection)) {\r\n        var node = context.getModel(NodeModelFactory, options),\r\n            config = module.config();\r\n        relatedWorkspaces = new RelatedWorkspaceCollection(relatedWorkspaces.models, _.extend({\r\n          node: node\r\n        }, relatedWorkspaces.options, config.options, {\r\n          autoreset: true\r\n        }, options));\r\n      }\r\n      this.property = relatedWorkspaces;\r\n    },\r\n\r\n    fetch: function(options) {\r\n      return this.property.fetch(options);\r\n    }\r\n\r\n  });\r\n\r\n  return RelatedWorkspaceCollectionFactory;\r\n\r\n});\r\n\n","\ncsui.define('css!conws/widgets/header/impl/favorite.icon',[],function(){});\n","csui.define('conws/widgets/header/impl/favorite.icon.view',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/marionette',\r\n  'csui/behaviors/keyboard.navigation/tabable.region.behavior',\r\n  'csui/widgets/favorites/favorite.star.view',\r\n  'css!conws/widgets/header/impl/favorite.icon'\r\n], function (_, $, Marionette, TabableRegionBehavior, FavoriteStarView) {\r\n\r\n  'use strict';\r\n\r\n  var FavoriteIconView = FavoriteStarView.extend({\r\n\r\n    behaviors: {\r\n      TabableRegion: {\r\n        behaviorClass: TabableRegionBehavior\r\n      }\r\n    },\r\n\r\n    constructor: function FavoriteIconView(options) {\r\n      FavoriteStarView.prototype.constructor.call(this, options);\r\n    },\r\n\r\n    // Needed for keyboard accessibility by TabableRegionBehavior\r\n    currentlyFocusedElement: function () {\r\n      // get favorite icon button tag\r\n      return this.$('.csui-favorite-star.csui-acc-focusable')\r\n    },\r\n\r\n    // We must override this to avoid that e.g. in case of press enter the browser navigates\r\n    onKeyInView: function (event) {\r\n      if (event.keyCode === 32 || event.keyCode === 13) {\r\n        // space or enter key\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.enabled() && this.toggleFavorite();\r\n      }\r\n    }\r\n  });\r\n\r\n  return FavoriteIconView;\r\n\r\n});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!conws/widgets/header/impl/commenting.icon',['module','hbs','nuc/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div class=\\\"conws-comment-icon\\\"></div>\\r\\n\";\n}});\nHandlebars.registerPartial('conws_widgets_header_impl_commenting.icon', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!conws/widgets/header/impl/commenting.icon',[],function(){});\n","csui.define('conws/widgets/header/impl/commenting.icon.view',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/marionette',\r\n  'csui/behaviors/keyboard.navigation/tabable.region.behavior',\r\n  'esoc/widgets/utils/commentdialog/commentdialog.view',\r\n  'hbs!conws/widgets/header/impl/commenting.icon',\r\n  'css!conws/widgets/header/impl/commenting.icon'\r\n], function (_, $, Marionette, TabableRegionBehavior, CommentDialogView, template) {\r\n\r\n  'use strict';\r\n\r\n  var CommentingIconView = Marionette.LayoutView.extend({\r\n\r\n    className: 'conws-comment-icon',\r\n\r\n    template: template,\r\n\r\n    behaviors: {\r\n      TabableRegion: {\r\n        behaviorClass: TabableRegionBehavior\r\n      }\r\n    },\r\n\r\n    events: {\r\n      'keydown': 'onKeyDown'\r\n    },\r\n\r\n    constructor: function CommentingIconView(options) {\r\n      // wire models and collections also to the base view\r\n      Marionette.LayoutView.prototype.constructor.call(this, options);\r\n    },\r\n\r\n    enabled: function () {\r\n      var model = this.model,\r\n        commenting = model.actions.findWhere({ signature: \"comment\" });\r\n\r\n        return Boolean(commenting);\r\n    },\r\n\r\n    onRender: function () {\r\n      // rendering the commenting icon\r\n      var self = this;\r\n      var contentRegion = new Marionette.Region({\r\n        el: self.el\r\n      });\r\n      var globalConfig = (typeof window.require !== \"undefined\") ?\r\n                         window.require.s.contexts._.config :\r\n                         window.csui.require.s.contexts._.config;\r\n\r\n      globalConfig.roId = self.model.get('id');\r\n\r\n      var commentDialogView = new CommentDialogView({\r\n        connector: self.model.connector,\r\n        nodeid: self.model.get('id'),\r\n        CSID: self.model.get('id'),\r\n        context: self.options.context,\r\n        useIconsForDarkBackground: this.options.useIconsForDarkBackground\r\n      })\r\n      contentRegion.show(commentDialogView);\r\n\r\n      this.commentCount = this.model.get('wnd_comments');\r\n      if(this.commentCount && this.commentCount > 0) {\r\n        this.$el.addClass('conws-has-comments');\r\n      }\r\n    },\r\n\r\n    onKeyDown: function (e) {\r\n      if (e.keyCode === 13 || e.keyCode === 32) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // click link\r\n        this.currentlyFocusedElement().trigger('click');\r\n      }\r\n    },\r\n\r\n    currentlyFocusedElement: function () {\r\n      // get comment icon\r\n      return this.$('.esoc-socialactions-comment .csui-acc-focusable');\r\n    }\r\n  });\r\n\r\n  return CommentingIconView;\r\n\r\n});\r\n\n","\n","csui.define('conws/widgets/header/impl/headertoolbaritems',['module',\r\n  'csui/lib/underscore',\r\n  'csui/controls/toolbar/toolitems.factory',\r\n  'csui/controls/toolbar/toolitem.model',\r\n  'i18n!csui/controls/tabletoolbar/impl/nls/localized.strings',\r\n  'conws/widgets/header/impl/favorite.icon.view',\r\n  'conws/widgets/header/impl/commenting.icon.view',\r\n  'csui-ext!conws/widgets/header/headertoolbaritems'\r\n], function (module, _, ToolItemsFactory, ToolItemModel, Lang, FavoriteIconView, CommentingIconView, extraToolItems) {\r\n\r\n  var headerToolbarItems = {\r\n\r\n    rightToolbar: new ToolItemsFactory({\r\n      main: [\r\n        {\r\n          signature: \"Comment\",\r\n          name: Lang.ToolbarItemComment,\r\n          icon: \"icon icon-socialComment\",\r\n          enabled: true,\r\n          className: \"esoc-socialactions-comment\",\r\n          customView: true,\r\n          viewClass: CommentingIconView,\r\n          commandData: { useContainer: true },\r\n          index: 4 // Leaving first three positions for extensions\r\n        },\r\n        {\r\n          signature: \"Favorite2\",\r\n          enabled: true,\r\n          viewClass: FavoriteIconView,\r\n          customView: true,\r\n          commandData: { useContainer: true },\r\n          index: 5\r\n        }\r\n      ]\r\n    }),\r\n\r\n    delayedActionsToolbar: new ToolItemsFactory({\r\n      menu: [\r\n        {\r\n          signature: \"CopyLink\",\r\n          name: Lang.ToolbarItemCopyLink,\r\n          icon: \"icon icon-toolbar-copylink\",\r\n          svgId: \"themes--carbonfiber--image--generated_icons--action_copy_link32\"\r\n        },\r\n        {\r\n          signature: \"EmailLink\",\r\n          name: Lang.ToolbarItemEmailLinkShort,\r\n          icon: \"icon icon-toolbar-share\",\r\n          svgId: \"themes--carbonfiber--image--generated_icons--action_share32\"\r\n        }\r\n      ]\r\n    },\r\n      {\r\n        maxItemsShown: 0,\r\n        dropDownIconName: \"csui_action_more32\",\r\n        addGroupSeparators: false,\r\n        dropDownText: Lang.ToolbarItemMore,\r\n        customView: true\r\n      })\r\n\r\n  };\r\n\r\n  if (!!extraToolItems) {\r\n    _.each(extraToolItems, function (moduleToolItems) {\r\n      _.each(moduleToolItems, function (toolItems, key) {\r\n        var targetToolbar = headerToolbarItems[key];\r\n        if (!!targetToolbar) {\r\n          _.each(toolItems, function (toolItem) {\r\n            toolItem = new ToolItemModel(toolItem);\r\n            targetToolbar.addItem(toolItem);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  headerToolbarItems['rightToolbar'].collection.comparator = function (model) {\r\n    return model.get('index');\r\n  }\r\n  headerToolbarItems['rightToolbar'].collection.sort();\r\n\r\n  return headerToolbarItems;\r\n});\r\n\n","csui.define('conws/widgets/header/impl/header.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/models/mixins/node.connectable/node.connectable.mixin',\r\n  'csui/models/member',\r\n  'csui/lib/jquery.when.all'\r\n], function (_, $, Backbone, Url, NodeConnectableMixin, MemberModel) {\r\n\r\n  var HeaderModel = Backbone.Model.extend({\r\n\r\n    // constructor gives an explicit name to the object in the debugger\r\n    constructor: function HeaderModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n      this.makeNodeConnectable(options);\r\n      if (this.node.get(\"type\") === 848) {\r\n        // if we are initialized with a workspace node, we get initially all attributes from it\r\n        // but note: there are no business properties yet, as the model is not yet fetched\r\n        this.set(this.node.attributes);\r\n      }\r\n      this.listenTo(this.node,\"change:name\",function(){\r\n        if (this.node.get(\"type\") === 848) {\r\n          this.set(\"name\",this.node.get(\"name\"));\r\n        }\r\n      })\r\n    },\r\n\r\n    // computes the REST API URL used to access the business workspace information\r\n    // required for the header.\r\n    url: function () {\r\n      return Url.combine(new Url(this.connector.connection.url).getApiBase('v2'),\r\n          '/businessworkspaces/' + this.node.get('id') +\r\n          '?metadata&fields=categories&include_icon=true&expand=' +\r\n          encodeURIComponent('properties{create_user_id,modify_user_id,owner_group_id,owner_user_id,reserved_user_id}'));\r\n    },\r\n\r\n    // parses the REST call response and stores the data\r\n    parse: function (response) {\r\n      // store allowed actions\r\n      this.actions = response.results.actions && response.results.actions.data;\r\n      // store business properties\r\n      var data = response.results.data || {};\r\n      this.display_urls = data.display_urls || {};\r\n      this.business_properties = data.business_properties || {};\r\n      // store icon information\r\n      if (this.business_properties.workspace_widget_icon_content) {\r\n        this.icon = {\r\n          content: this.business_properties.workspace_widget_icon_content,\r\n          location: 'node'\r\n        }\r\n      } else if (this.business_properties.workspace_type_widget_icon_content) {\r\n        this.icon = {\r\n          content: this.business_properties.workspace_type_widget_icon_content,\r\n          location: 'type'\r\n        }\r\n      } else {\r\n        this.icon = {\r\n          content: null,\r\n          location: 'none'\r\n        }\r\n      }\r\n      // store category information\r\n      this.categories = data.categories || {};\r\n      // store metadata information\r\n      this.metadata = response.results.metadata || {};\r\n      // as a workaround I set these properties, as\r\n      // otherwise the model doesn't change\r\n      data.properties.workspace_type_id = this.business_properties.workspace_type_id;\r\n      data.properties.workspace_type_name = this.business_properties.workspace_type_name;\r\n      data.properties.workspace_widget_icon_content = this.icon.content;\r\n      // return workspace node info\r\n      return data.properties;\r\n    },\r\n\r\n    // true if the model is fetched already\r\n    isWorkspaceType: function () {\r\n      return (this.get('workspace_type_id') !== undefined);\r\n    },\r\n\r\n    // returns the available action if available,\r\n    // otherwise undefined.\r\n    hasAction: function (name) {\r\n      var ret;\r\n      if (this.actions) {\r\n        ret = this.actions[name];\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    expandMemberValue: function (value) {\r\n      var self = this;\r\n      var key = value.name + '_expand';\r\n      var category = key.split('_')[0];\r\n      // fetch the member information if it doesn't exist already\r\n      if (_.isUndefined(self.categories[category][key])) {\r\n        var ids = _.isArray(value.value) ? value.value : [value.value];\r\n        var values = ids.slice(0);\r\n\r\n        var deferred = [];\r\n        _.each(ids, function (id) {\r\n          var member = new MemberModel({id: id}, {connector: self.connector});\r\n          deferred.push(member.fetch({\r\n            success: function (response) {\r\n              // append to expanded values\r\n              values[_.indexOf(values, id)] = response.attributes;\r\n            },\r\n            error: function (response) {\r\n              // append to expanded values\r\n              values[_.indexOf(values, id)] = id;\r\n            }\r\n          }));\r\n        });\r\n        // trigger change when all items are fetched\r\n        $.whenAll.apply($, deferred).done(function () {\r\n          // set values and trigger 'change' event.\r\n          self.categories[category][key] = values;\r\n          self.trigger('change');\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  NodeConnectableMixin.mixin(HeaderModel.prototype)\r\n\r\n  // return the model\r\n  return HeaderModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/header/impl/header.model.factory',[\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'csui/utils/contexts/factories/node',\r\n    'conws/widgets/header/impl/header.model'\r\n], function (ModelFactory, ConnectorFactory, NodeModelFactory, HeaderModel) {\r\n\r\n  var HeaderModelFactory = ModelFactory.extend({\r\n\r\n      // unique prefix for the header model instance.\r\n      propertyPrefix: 'header',\r\n\r\n      constructor: function HeaderModelFactory(context, options){\r\n          ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n          // get the server connector from the application context\r\n          var node = context.getModel(NodeModelFactory),\r\n              connector = context.getObject(ConnectorFactory, options);\r\n\r\n          // the model is contained in the 'property' key\r\n          this.property = new HeaderModel( {}, {\r\n            node: node,\r\n              connector: connector\r\n          });\r\n      },\r\n\r\n      fetch: function(options){\r\n          // fetch the model contents exposed by this factory.\r\n          return this.property.fetch(options);\r\n      }\r\n  });\r\n\r\n  return HeaderModelFactory;\r\n});\r\n\n","csui.define('conws/widgets/header/impl/header.icon.model',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/url',\r\n    'csui/utils/commands/delete'\r\n], function (_, Backbone, Url, DeleteCommand) {\r\n\r\n    var HeaderIconModel = Backbone.Model.extend({\r\n\r\n        // default icon\r\n        blankImage: 'data:image\\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAScAAAEpCAYAAADRUOQxAAAABmJLR0QA\\/wD\\/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3QUbEBMqi\\/7RiwAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAgAElEQVR42uydd3hc1Zn\\/v+fe6X0kjXqXLVnFHdtgg22KKaY4GExISAiQAEnIbjbZ\\/SXZ3WyAZDdlN8mmQQJJlkBIQmx6BwO2sXEvsmWrWn1Up\\/dyy\\/n9IUOIdUeWbUkeSefzPH7g8VijW875nve85y0Ag8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYKQ9lD7Iffj\\/D1LKbaaUp6P\\/EOWfpSr2BBmpIOwRMFIIB79lC7AFW\\/CVlTfk72\\/xc01NnSjJU2frjebijmEew14PErEEN+QJymoV5WrK7NW5WcYqEKgJ4UAplagkywPeSPOJk\\/5mmRI5J9PCGQw6mp+TSUqzk5yr39fi9xNfTXUZ5paQ2O8O7\\/R8s3wTZ7G0cZWVlQn2Jpg4MWYpmynl57vdOQ29gu31948LtgzbvEF3LENn1Cxyh1HQN+hSaTSqSl8MxnA0CZlKepWKy4wKPERRBKWAKEkAAFmWOQpKAEJAANCREUZAJI4QCgAqngchBCoVD4NGgpAUXTynTpgMGuh4cRgyuosLcpBn4z1iPHEky6weDEQjrbetnW+pssd8hY7CDkKIxN4cEyfGDMIZcGYGRX3eEy81JAQY5rUOi\\/lyMrQoKsh1rhgpHPKGoFHzhaG4DFGWVYJMQClAQU8JzSQOF0o\\/FLIR8eJkaHhONOk4Koi0P9Nmohkaucem4xo5jbm+xM51alXCyS9trLM4KO3MyMgIsDfMxIkxPbZl6oe2b6cX6Utqm1zh8rbB8Fx\\/WFo+EEzWtvf5dRyHQk+UIilRFT2lPdNhsHIEUHGcaDcQkeO4weoiKzHw3Ac2A793SZmpr6Y0r2O3q\\/H4w2vXSiN6SigbDUycGBeYbZ2duh6nJrulb6DaHRQvaxsK1Q75EzWBuFToCyU1CYmqJHmSLaCpV2FwHIFOBTHDpE5a9RpntlndWJhpOlyardpbYss+YckPuW+rq0uyEcLEiTGF7O7p0b+1N1jmisRX9QyHLu33J5a5gvESV0jQJiTwVKYzS4zGIVaEI9DxRHJY+IRVp27JtenqKwvte+0G1Y6Vi\\/Rd65mjnYkTY1ImH9m8p1fXOuBbeKI\\/uKLfG73C6Y4t8kbl\\/GBcnFrL6JSf6EPH9\\/h+ZqotNwqeEFh1nGjRq3oKM7T1pdmmXRU5lp21BbYTt60sjrFBxcSJcc4aQMmWLeB2xI5WxCLhDR3DsXVOX3Rxvz9piwlQ0Yn\\/haOc03oVB42Kh1ajglGrhl6jgk7Nw6wFdDyFRSdDw8kpvzIhc4jEOcREgmASSAgSwgkB0YSIpCBCECVEBBkS5UApHXHCT8Lw5ECh13BijknlLskxHS21a94yGzJfvdRU07FpEwghRGQjjokT4wy0trZq97qtRU29gzceahte2dQXWRCIixWhBOUnTpAoOEKgUwF6rQaZJg4Okw4Fdg0KMwzIzrKhyK5GgUkFk04Dk0EDo04NFc9DzXNQqziQUz8\\/lkEkUUAQKWQKCKIMQZKQEGXE4gIisQSCsSScYQn9PgHDbj+c3iicvgRc4QS8ERnReBIJCZDpxIkWAWDSQLTp1R0VucZDy+bYd82vKHjj4oxQP4uxYuLEUOB4T0\\/Glr3Diw62+69z+oRr+32xeZ6opJLPV5FOOY+NGoIMkxYFdh3m5hpRlWdBVb4ZBRkmOKxq2HQaGHRqqHmAkBHraSoGCh2xEkEphSBRROIiAvEkhgMC+jwhtA6E0dQfxMnBKPr9MXhCCUQFev6Cdeq5ZOi5RGGWsa00U\\/fm0vKsN5bO1xy8bu6fwoQ8LLNRycRp1vIgfZBb0fYP+ZvfaV\\/dMhDc0OeLrh0OJLLj4vn4aCh4AlgNahTZtajKt2BhqR0Li60oyzYhx6KHyaCCmhBwXPoPBVmmEGSKcEzAUCCOjuEwjvb4cazbh+a+EJz+BAJREdL5iBWl0KsJ8u06b45V905dkfWVTyzP275+YZGTUkpYaAITp1nF955vqDjc4b25P5DY1DEUWeAOCzp6jq+GgMKs5VGcqceCYguWV2RgcUUWKhwGZJh10PLctBCisxGshCTDE4yj3RXF4XY3DnR4cbQniF5PFOEEPecYLo4AWSZVfE6O6WhRpn7z9RcVv\\/3ZlUUnmEAxcZrRUEr5\\/3m5ofb1w4M3DASFTf2+WF0oKavO5ZVwBHCY1KjON2FlZRZWVWWiptCGHJseWhUHbhaFEsiUIiHKGPLF0NDrx542D3a3uNDUH4E7IuDctsYUVi0nluaY2nJN\\/F\\/WL3G8+o\\/XLTzG0miYOM04UXrk7daL3jwyuKltKHJjtztcHhehOqut2ykfSbZZjfnFNlxZ48Ca6mzMzTPDZtSAnyLL6O9SW\\/Dhf6jiMCMfG3Ejp4BT87wlmcIXTqBtIIydzUN4r9GFYz0BDIXOTah0PBXn5Jp6Sx2m56+qK\\/jrV68rP8xEionTdFcl8rM3Oi56t6Hn9k5XdGOnK1oaEc5+y2Y3qLCwyIwr63JxeV0OqgtssOpVE7pVowCoPHKcHxMoEkkBcUGEL0YRigqIJxIIJZIYjgDBqIRYPAFBEJFICkgmk6OCADQaNbQaDdRqFfQ6LcwGFbKNgEWrgV6rgcWggk3PQatWQatRQ68mIwLGTawjXpYpAjERzX1+vHd8CO8eH8SRnhACMRFnu402qoFyh6Gr3GF4fv3Swj\\/dd2XiOCEsCp2J0zTjBy90lr57ov2OoaBwd\\/tQpCKalMfv5KYUWhVBZa4RV9bl4JoFuVhanoFMk3ZCBOkjJ3NcRDCSwIA\\/gT5vBCeHY+hz+9HlTcITSiIcjcMbp4gnKQRRhCBJGEkMJn+zmcawRMjHTCdCADUnQ83zUKtUMGgAm46DyaBDhlmL0gwtihwWVOToUGAzIdemhc2ohVmvAj9BzntZpvCEEtjf4cXWYwN47\\/gQWoeiSIj0rN6NQcOh0K5rKMvUPXPVgsK\\/\\/L8N8zrZiGfilO7bN7JlZ1vWloPDn2nqD32y0xW+KCKAPxv7JcOgwqq5dly\\/OB9Xzs9FqcMEFc+d1zZMkmUET512dQ6HccIZxHFnACeHonAHY3CHRUQTSSSlDysSXJhBSQig4WXoNVo4zCo4LHpU5hoxr8CCmkIrKnJMyLFoYTWowRHuvLaJgiSjaziEdxsG8dqRAXzQ5oMvJo5\\/elAKk5aTyhzGg7VF5r\\/euLjoD3dcVuJjs4CJU9pRP0CNv39t\\/ye2tXg2Dfji6z1RUT3eR80BKM7Q4JqFebhxST5WVTlgNWjOefKJkgxfRECvJ4L6bj+OdHlxrNuPHk8c7nAC0SSd0MDGSZZ8cITAoOGQZdagJEOHBSV2LCmzY0GxDcVZRtgM6nMWcEoBfySBXS1uvHq4D28eG4TTm4B8Frk5WSa1kGnUvHDpvJxnP3\\/d0ldXFhOWHsPEKR2spc38j16oueSFQ\\/2fdQXjd3R44sbxPmKeUFTlmrDhogLcfFE+FpbaoVHx53ANFFFBRp87jPouP\\/a1DWNfhx8drhjcYQGiREFn2ADW8ECGSYOKbANWlNtw8ZxsLCy1oiDLBL16JIL9bEkKEo50+fDiwX68dKgPrYNhSJSM+5rKHfpInlX3p\\/ULc373b7fMP8BmBxOnC8ajO7vtr+3qvK\\/HF7u\\/qT9cJo4zppgnwOJiC25eVoANFxWgKt9y1iu\\/TEeiqU8OhrC7ZRjbW7w41uVFj09AQjh7Z+\\/0HtAUejWPIrsGC0ozcXl1Bi6e60BFrhkmneqswypESUZzXxDP7Xfi5UN9ONYbgjhOdVdzwLw848nyLMPv1i8p+s396ypYQTwmTlNlKYEAlPvXPzdsfOlQz20D\\/sQGf1xWj9dSWlxsxq0rinDL8iKU55jPytFLKRBLSmgdDGLHiUFsPzGEA11BuIIJJGX2Wj9Ew1M4LDosLbHiqrpsrK3JQUWeBXo1f1ZbZUmm6BwK4rl9TjyztxcNzjCkcYpUhp4X8qzaFy6dm\\/G733zx4vdY6AETp0kXpjePuSp\\/8frxu7vc8fuaB0L28VgoBBTz8kz45MWF+OQlRajMs56VKIkSRa87jG2Nw9jaMIzdJ73o88UgyZS9zjOg4giK7FpcUpmJdfNzsKY6G0WZhrOyVGWZorEvgOf29eKZPb1oGYxgvO+90K7rmpdneuZLG2p\\/t3F+Tjt7I0ycJkGYKP+NP9dv3HbCdW\\/bYHhdID6ehZCiwKbF7ZcU41Mri7Gw1A7VOEWJUiAcF3Cw3Ys3jw5ga8MgmgbCiItMkM7xDUKn4jAv34Sr5+fgukV5WFqWAZNePe6nKckUhzu8+MueHmze04u+QGJc78Kq4zEnx\\/D2mqqMR8yfW\\/bqw4SwpGImThMiSuTdho7sR97s\\/WrrcOyLjf3js5asWg4bLsrHZy8txpqaXKhV41upZUox4Ivj3YZ+vHJkADuaPXCHBLDEromdANkWNVZXZeKmpXm4cn4BcqzacfumBFHG9hODeOqDXrx0sA+hhDyO30lRlWvsr8zWP37f+iW\\/uGGBjYUdMHE6H2HazD\\/29vz1z+xx3nuiL3SDKyKd8dnxBFgzLxP3rC7GTctKYNaPr4fkh\\/6Nlw\\/14cWDgzjY6UNMlNnrmmRryqAmWFaegQ1L83DD0gKUZ5vHnQoUiIp4YV83ntjZgw9aPePyRzkMnFyeY3p24yXFv\\/nmDdXb2Dtg4nQuFpPqUz\\/beXdDX\\/Afmgei8894pEwpSjJ1uHN1Ge5aXYryHNO4RampL4Dn9jvx0gEnjvWFITGjf8pRccCCIgs2LM3HxuWFqC6wjkukKAXah8L4w\\/td+OP7HejxJs4Ybc4Tiup8S8OiYtuv\\/viVFb9nznImTuPmsW3NWX9+v+9f2ocj9zm9cfuZBpuOBzZclI\\/Pry3D5bW5UPFnfsQfF6Xn9jvR2Df+kyDG5METoKbAhFuWF+KWsxApUaJ4r2EAv93ehZcO9UM40wJDKQozdL45OabH7r6m8sefW1HoYU+fidOY\\/OT11jV\\/3NHx5Q5XdFMwfoZtHKWoyjPh3svLcOfqMjgs2jN+v0wpTg6E8MzeHjy7j4lSuovUpy8pwqaLi1CeYxlXGMJwII4ndnTgd+914KQrfsZ\\/b9eraIXDsOXeK+Y+ev\\/V5TuYODEU+fyjOze92+j7cq8vsfZMgqHmgI3L8vHFKytwWXX2uFbXQV8Um\\/f24k+7e3CoM8BEaRqg5oClZTbcsaoYm1YUIcemH5dVvO3EIB5\\/rxMvHjyzFaXigLIM\\/farah2P\\/vr+FVuYODE+IhKJFNz328P31DvD\\/3CiL+Q40xJZkqHF\\/VdW4POXlyPbqjvz9ydEvHqoD3\\/c2YV3T7gQZx6GaYdOBayrzcFnLyvB+iX5MGpVZ9y2DQUT+P277XjsvXb0+M5UWYVifqHNVZVj\\/NEjn5nzWE5OTpiJ0yxna2Mg8+evHn2ovtt3j9OXNIz94CiuqnXggXUVuGFp4RmtJUmm2NPqxlM7u\\/DsPid8MaZK0x27gcdtK4pw9+pSXDQn84xjQJRkvHKoD49sbce7ja4zTr9cq9pXl2d67Ju3XvnjdTVk1vmhmDid4g\\/vdlf84LXGf\\/KEEg+4I8KYz0WvJrhnTRm+cvUczCuwnPG7+30xPPl+J57Y0YW2oQh77DMKito8E+5eU4o7LitDru3M1nNjrx+\\/fOskntzZjdgZEvUcJjXNtmgfWTs\\/46FHPrdiVgkUzwYX8OT7PWue2NH+wxN9oU8FE2M7vsuy9PjXDfPwjRvnoSBjTOMKgiTj9cN9+N4LjXh8WxfcYYEJ0wxc311hATuaXGgdCMGs5VGWbRozJclh1WH1PAesBhVa+oMIxFL38YwmZRKOi8uiMaHsJ\\/\\/zPdfzv\\/95NxOnWcK\\/P3viqqd3dHznYKfvyqQ8tt9g9bwsPLixGp9bUwadeuxH1+OO4H9fb8F\\/vtCEg11ByMzhPaORKNA8EMau5mFEEwLm5Jph0afOAdeqeayYk4nSLD36vTH0eKIpY6JEmRJPOFnbPRQtve+r\\/9azffMjXWxbN5ONcUq1X3tq37VvNvj\\/taU\\/uGKsNBSeUNy+ogBfu74KS8oyx+5sK1O8Vd+Px95tx2tHh9kp3CxExQE3LsrBl64sxxUL8sf0RVEKHGz34Cevt2LLPueYhe04UJRmG7evq834\\/m++MPOrG8xay6lev+qqd5v83+oYjq4cS210ag5fvboC\\/7GxFlUF1jGFyRNO4ldvteG7zzdhX2eA5cDNUuRTVtSeNjcECagusECvUZ5qhAAFGQYsr8gEpUB9tx9iCjObgsAXTpYO+ROlO446O1vee2pGW1CzUpy++fSRB\\/a2B77b7oovGkttHCY1vnHjPHzzpnnIsozt6Dzc4cV\\/vdCIX77dDs\\/ZtlVhzMhNiTcq4v1mF4b8cRRnGpA7RlyU1aDGyrmZ0Kp5HOv2IZYqIIoQBONSCeW4hZ\\/\\/0tflD158\\/DATpxkkTNua3Q\\/W94aKxvp35Vl6fOfmGjxw9dyUqx4wkqqwZV8PHn6uES\\/XD7JcOMZp23zgSLcfTX1BWHQ8qvItKSseaNU8Lp6bBbtBhUZnAP5oake5JyLkChQXf+a+r0c\\/eP6xGVkGeFaJ0zefPvLA9mb3g\\/s7\\/I6x\\/t3CIjMeuqUWn11dOmZuXDAq4OdvtuK\\/XmzCif4w2EkcI5UV1e2JYW+rG5IMLCi2QpviQIXnCJaUZyDbrEXzQBiuUCLlt\\/b54kZRkpfded9Xo7uef3zGCdSsECdKKYnNvfHe7c3e755JmC6dm4Hv3lKDDcsKx6zp0z4Yxg9easRP32iDd4wVjsH4kEBcwq4WN4LRJKryLbAb1IondIQQ1BVZUZRpQPdwGE5ffEyBCkXFeWs23tdy\\/K0nuh5++OEZ4+qcFeJ0TLf6ig\\/aA\\/9xtCdYPpaPaV2tAw9trMGV83PH7Nixu9mFh55vxNO7es6ccc5gfNwNIFMcaPfC6Y2iNEuPgkyjsq1FCCrzTChzGOB0R9DpTt1haiiYsAdiydKmnmHn4df+MGPK\\/854cbr7scNrdrR6Hux0xS4eS5iuqXPgoVtqsGpedkphohR46aATDz3fhK0nhmdVVxPGBFryIGjsD6JtIIQskwaV+ZaUAlWWbUJlrglOTxTtw9EUu0aCYFwqdkdReM8D3+7a++IjMyJQc0aL0yNv96x54UDXQx3DkbVnEqYHN9bg4srUeb6iRPHkjg489Fwj6nuDYP4lxvkx4oeq7\\/bDrONQV2RTdCMQAhRmGjEnx3hmgYolS2OJROl\\/fe\\/7XS8\\/+b\\/TXqBmrDi9sLd76e+2nfz+kW7\\/2rEsnKvrRrZyYwlTXJDx6Nsn8Z8vNqHLE2fzijFhuENJHGz3QKvmsLDErngAQwhQmGFERfYZBAoE7lC81BWM5v\\/3Dx8+9Nzvf+5m4pRm\\/HlPe84PXmr+9pHu4E3iGCG3V9c58OAttbhkDGGKxAX8+LVW\\/ODl5lO5cQzGxBKMS9jX5oEM4KIyu2IDjI8sqGwjut1RdLiUBUoGwXAgUX68x6955Ic\\/3rfliZ9EmTilCe1ean3wz0ceauoPfyEqpO4uuaYqAw\\/fWouVYwhTMCrgv19uwv+81opwgpU4YUweMUHGvpNeSJKM5eV2aBRCDT4UqOJMPdoHw+jxKjvJJQoiivISTzhq3vL0E9t\\/85OHp+WqOuPE6Zj+sn9qHQx\\/wx0RU97b0lIbHr61FmtrUju\\/3cEEvv9iI\\/73rZOn+sMxGJOLIFHsa\\/dClimWV6QWqBKHEXk2PY47gxgKKMdBxUVKQjGh5r36LvfAB3+aljFQM0qcvvDrPfce6Q1+u9ebMKcyh6pyTfiPjTW4YUleamEKJfD9l5rwy7dPIskMpjSHQssDmWYdyjK1KHOYUJRpQGGGHtkmFdQqHqAUokSnRa6jJAMH2r2gMsXyiowUAkUwJ9eETJMGR7u88EaU4+zCCUlj0GmXfeqef\\/QfeOV30y7NZcYcOX3t94fXvHZ84GetQ9FFqf5NgVWD7902H3etKU0pTL5IEv\\/5\\/An88u12FsOUxmh4YF6uESurHLhkbgZqCu3Is6qh0\\/ytTIkkyfBERfS5wzjY4cWOZhcOdfrhDgtpHwaiUxH88\\/q5+NZN1TClKL1CKcWT2zvwb5tPYCCYuvTvvFxj\\/c1LC\\/\\/pB3cs2MHEaYr5w67uil+93vLo4S7\\/1an83xYdj4c21uAfrq1MmZISjgn4wcvN+PFrrUiyWidpiYojuLQyA5uW5+OahXkodpig4rkzDmRZpgjERBzqcOOlg314dn8fBoPp7Yr5UKD+dUM1jDplgRIlip+93oyHn29EOKk8ZjlQXFGTtetbN8194KoFRcfYtm6K6A8GHd\\/+U8N\\/1HcHNgkplEnNAV+\\/rgJfX1+VMqcplpTw36+OCFOCCVNaUpplwL9cX4nvbKzFlfPzkGHWgufIuFZYQgj0Gh7lOWZcWZeD2kIrEkkRbYNhpKuBLMrAwQ4feI7DijkZUPGjT\\/E4jmBRqR2xpIR9J72KRQ0pCAb9iaImZ0h6\\/6Vf7Pn5j34UZ+I02d4Guk11+0967613Rr4ajEuaVD6Ju1eX4t9vroPVqPxPBJHi52+04EevtCLK9nJpybpaBx66pRZ3rymDzagZV9+4lNYXz6Eyz4zVVZnQqjgc6\\/Gn7aGHKFPUd3lh1HC4qEK5iYJaxaGu2I7hQAJHe\\/yKGyJBpkQQpdqGDr+v5Z0n9zJxmmQ8xQ9cs6\\/d\\/x2nP5Gbaod67fwcPHRLLUodyjlMMgV+v60dP3ipCb4o836nI7dclIfvbqrBmpqcMXMezxazXoOVlVkwa3kc7vQikkzPhSkuUhzr9sNuUGNxmV3xGZh0KlRkG9ExFE4ZpBlOShoQMvf2L3695cCLj6d9Dt60Fae\\/7Oqu+Mue3u81DkaWpRKmmnzTSFrK3MyUg\\/qve7rx3eeb4PQnmQqkIRuW5OLhW+uwsDRjUr5fxXNYUpYJvZrH3pPutLWgwgkJjc4A8u0G1BYq5+JlW7TIMmlwsMMLj2LAMIE3nLRLIs3+6c9+vOe5x3\\/sY+I0wRw\\/TjX\\/8dK+bzX2hz8jSMrKlGng8Z2ba3DrxUUphem944N48NlGNA1EmAqkISvKrfjeproz1m0\\/70lwym+TECTsbvOkbTMKX1RElyuCqlwjShym0dJzKsRAwwE7m11IKAotQTgulHf1+2M9O57ans4lVqalOIVqrr3naG\\/wXz0RUbF2rooDvnrNnFMnc5zid5zo9ePh55uws9XLVGBSObexbzOo8Z2ba3D94vwJ3cqltqAIqvMt6BgKo6k\\/fRvs9vvj8IQSWFRqh8OiVRSo2iIrQnEB+056FEMmkhIlhJDaXcf7OpveefJEut6raroN9V+80rLwDx90fNnpjVuUl1OKm5cW4Evr5qY8mXMHE\\/jp661449ggWHWBSVz5CHB1XQZyjOTUm6H48GyNfrSOK7xBwqG2OAu3riieEmH6kFybHl9YW4Y9bR70B9J3m\\/9K\\/SBybHr88Pb5yDSPFii9RoUHrp6LtoEwXjw0oFjQrscbtRvU+OIzOzu7b7+sbC8Tp\\/Ok0enM\\/MJjjV8+3hdemMrOrysw44F1FSkbXiYEGb94sxV\\/3NXDhGmSserV+OZN87GqKuujv5PpiCxxZxAdAoBPYfVOFoQAV8zPwcZlBfjVOx1pPD4IntrZheIMHb65oQYahUTh4kwjvnL1HLQMhFK4LQi6PLE1v93Wec\\/rra1H1ldWJti27jwQaz5938FO79d8UeWwAbOWw79vqMYtK5T9TJQCT+7oxA9ebkY4yUIGJhu9hsdnVhWjxDHSAXfAE8L\\/vXcSnmAYVYV2qHgOHEdS\\/jmnTSQ9JYAU52R18RwHg5rgjfqBtD29A0aaeJ7o9SPXqsPCEvuotZoQoCzbCAKKHU3DEBQOokUZRJBoZTKidh157beH0u0eueky0J\\/e1rLoYIfnc05vwqC8llB85tIS3HFZ6tSU7U0u\\/Pytk\\/BEWM3vC+Fu6vXG8D9vnMRzB3sw0YdigiTjWLcXT77fie+\\/1IL\\/ffMk3jzaj+HA2ccbLqlw4OIKO5Dm2XjDYRG\\/eOskdre4UliCBJ9dXYY7VhWnvBenN2Y+1O27579f765g27pzwEWp+XM\\/2nl\\/ozOYss\\/cigo77r+yHGad8i053RE88lYrGpxBJhpTvAX5OLKMCT8Nc3oi+PU7HXhmTw+c3hgEeeS3mrUcLqvKwn2Xl+LGZcXj\\/j6Tlsdl1Vl49Zgr7dvIH+kJ4BdvnUR5jgl59tF98Sx6Ne6\\/ogJHu\\/zY1xlQ3Mu2DQSXvbKv9d5tlH77ckLSZuWeFpbTfz995IaO4fAdMVHZCWDVcbjv8jIsKLYp+5lECY9ubceLh\\/qZVky5LtGPGVJkJFVkAl05w8EEHtxyAj96pRkdrhiS0odbOyAQl\\/Fq\\/RC+8ZcGbNkz\\/qq1HEewpNwBi256uGSfP9iHx95pQ1JU3oYuLrPj\\/isrYNUpT\\/dIUiausHD\\/W39tuJlt686Cx7a2W18+2PeJlsGwOeV2blUJbluZejv33J4e\\/HZbByTKHOAX2nJS3O+dI7I8Utf9jx\\/0pH63hKB5KIpHt55E9\\/D4QwRKsnRwmKeHS1aUgcfe7cAL+3tSbu9uu6QYn76kGETp2ROCloGw7ZWDzls3H2y3MnEaJ2\\/V937BFU5uTFXiYkmJDfdeUQqjVnkgHesJ4NF3O+FmLcJnHIOBGF484BxHaRuCD0768c6xAVA6PmG06jWwG7XT51mEBPzmnQ40OQOKnxt1Knz+inIsKlaOLqcgGA4mNj63s+\\/zTJzGwc+3ti5uHY59zhuVFO1ro5rg82tLsaBEObUhkpDw2Lvt+KDNCxY2MPPocUXRMji+6H5BkrG\\/0w1hnE4knueg1WimlYW6o8WD377XjniKComLy+y4a00ZtCrlueAKCeFTDdUAACAASURBVKrjfeFP\\/+8bHVVMnMaAUsq\\/sq\\/3Mx3DkbpUwZYbLsrHJ1cWK28cKPDM7h78aVc3m8UzlFgiiaQojXvyDkWkcRcQVPE81KrpFaNMQfDkzm48t697ZAKcPtkJwadWlWDDknzFz0EIulzRJTsaOr88NDRkYuKUgm\\/\\/9fCqk4ORjdGkcpOCQrsOd60uHTG9FcSryenH77d3IBBnlQZmKkadBlrV+PxCBBT5ZhXU4xzxSUFEPJGYds\\/EGxXx+HtdaEmRgpNl0uKu1SXItylvWSOCTI47Yzc9um1wCRMnBXb39Oh3nnDd6fTFS5SEhyPAHSuLsbY2R9GoSooyfr+9E\\/tOsry5mUyxw4h5ecZx\\/Vs1z2FZmQPqcQZ3CqKIWDwxDZ8Kwa5WD\\/5ve7vi6R0hwJXzc\\/GplSmc4yDo8sZLth4f+ORmSi\\/oiUBaitOzO1zrOtzxG1L1nFtcYsVnLiuFOkV6w+uH+\\/D0rh7IzM80o8mx6nDL8iJo+TO\\/5zVVGbhyfu64o8ZdoSRc07RPoQyCp3Z148165dAZjYrDZy8rwYIixQNwiJJMhkPC7c3PH7ugoQVpJ06bd1P9\\/jbvHQNBQdEsUnPAHauKUZOips2gL4b\\/29GF4TCrzzTT+TAC+vNrSsbcrtXlG\\/HA1XNQlGUY93c39gWndSbBYFDAEzu6MJQiQn5+sQ13rCqBilN8sOh0xzPeO+7atLuH6pk4neL95gM39Xhj16cq471mXiY2rShSTByVKcWfd3fjrYZhsNO52UGmWYuHNtXhOzfPQ3WeERp+xPHLEyDLqMKtF+Xhf+5YiJsuKhy31SRKMva0uhEXpnct+TePDWLznp6Pkq3\\/3jVC8MlLirG6UvmkW6KA0xe\\/\\/s199TdcqOtPq+OIt+qp8cFnt25yeuNGJXExqgk+vaoYBRnKYt7QG8Afd3WzzimzDIdFh29tqMUtK4pQ3xvEcEiCUQNU5RpQV2iD3Xh2IQF9nhh2Nnsw3UdRXASe3NmNy2tzUFc0OrayKNOAO1aVYG+7X7F2fqcrZtzR6Ll1dw99dWUxic1qcXrn2KH1A\\/74tal8RVfVOXDjUuUVUJBk\\/GlXF472hNhsnYWoeILqAivmFVg\\/CrTkzqEqAaXA1oY+NPbPjBzMI90B\\/OWDbjy8qW5U4UVCCK5fWoDnDvbh9aPDitZTny9+\\/Zv7Gm4AsGXWbut291D9gU7frU5fQvH4xaThcNuKImSalFfBD5qHsXlPL5jNNLshp0SJO8cidYOBGLbs758xLehlCjyzpxd72zyKn2dbtPj0JUUwa5SfV6crZtx2bODGzZuPT3lEatqI08sfHLqs2x29SlJsvEVxZW0Wrk1RsjWalPCXPb3o9sbZ7GScF+2DIexr82Am+Sw73DE8s7sbCYWiToQQXLc4H1fUOhQDMyWZotefuGZ7MHDxrBSn3T09+g+a3Bt6vUm70gmdSTtiNaXyHWw7PoSXDvaBOcEZ52VlyBTzi23YcFEBMMNs8GcP9GNnk3LdJ7tRg00rCmHUKsgBIej3JRwneqO3DQxQ41Re8wUXJ0pB9jZEl\\/T7k9eLlCqWr1xbndpqCickPLO3F0MhVkBuJiJJ0pTUVGrr9+OtIz0w6dS4Z00ZKrP1M+o5DgUT2LKvB9GksvV01YJ8XFqZqWg9JSVKXOHkzS80NM2fZZYT5d5tcF7b54sXKlk+eg2Hm5cVjGE1DeL1+kE2i2coJ7o9ePaDTkiTWDG3eSCKB19owz89fRy7W1y4tDobn1tdphwDNG0hePnwAD5oHlb8NNuixcZlhcpJwYSgYziW\\/dK+gasonbrtyQV\\/\\/M\\/s7aocDIi3xEXleubLymy4ZmFBCqtJxHP7euCNsIDLmYorLOK7Lzbi8XdOIi5MfJ7k0S4vHnq2AX\\/Z3Y3W4Sieer8T0aSEO1eX4uo6x4x6loPBJDbvdaa0nq5bnI+lZcoFG+OSrPLFkp98pcFVNVUCdcHF6YXd\\/Rd3DMfmKvmaVBywYWk+8uyK7emwu8WFN48NgfmaZjY93gT+fXMDHtxyHO1DE9NTLinK2LK3B1\\/741H8dW\\/PR9bFlv19eH5fDwoyDLhnTRkcJtUMepIErx4ZwL42t+KnBXY9PrEkDyqinHPX4YrNe6++5zpCpsYhd0HFad9QOLcvELvVHxMVR0BVrhHXL85XPBZOihJeONDHfE2zBF9Mwo9fb8P9vz2AP77fAW84AXoOU0SQZBzu8OLfnjmKr\\/zhCLY1\\/\\/3JXCAu4Ykd3egYiuD6pQW4Y2URyAxyjg8GE3jhQJ9iUjDHEaxfko+KHOU0H09EUh3r9l+zeffUpLRcUHF6\\/u2GeW2DwUXKOk2xfmEuKnKVkxOPdPmZr2mWIVPg3SYPvvyHetz5yF489k4rmvr8CMYlyLI8piAN+WN4+2gfvvXnenz6V3vw0zdOYjgkKI68Xa0ePPl+B1QcwV1ryrC41DajrKdXjgziWI9yxczKfCuuW5iXokYaRa8ncknT0LGVU3GlF8xmbaVU+42f7tgYiIl5Stsyh1mD9YvzFduJi7KMlw854fTFzmtLR4hyzS2eAMtLLVARMqpI\\/4XdQtIR2aZATJBx2Bk6J+thuhNOyHjtmAtbT7hQlKFHdYEZiwtNmJNvR47N8JGlXVdoRJZFj+cO9OKnr7WifTAIX4yeepup36NEgad2dmNNdTauqMvBXWvKcMJ5DAlxZvQ67PFE8crhPiwutYE\\/rYSMiudw\\/aJcPL2rG+6INGrCOL0J86EW7zpK6XZCiDQjxWn\\/7s7ctv7IqoT4UYfqj0s0Lq3MwJJy5aTEnuEw3jjSD\\/k8GhYYtDzWVGXg\\/SY3IqcleBZmGvDIPUtR6jCknTdrRIwo9rR58JnHDsN3Wm10q47HirkZ2NbohjDDcwyTEtDuiqHdFcPr9cMgHIFOzYOckp67Li3ADz+zBPlWLQKRBLyx8T+Pbk8c\\/7ejC0vKM3DHymLsaXHjL3udM8YCff1wH+5eXYLSbPNpdhWwfI4Dl1Zm4sUjo\\/25MZGSXl9i3fP7PL8C4Jxx4kTpg9w\\/\\/ylwuSssKJbg1aoI1i\\/MVexBRynwdsMgmvoj53UNZVkGfGdjNX74UjNeOjL6eNVu1sFuTsNYF0oBQmA1RRVWf4obl+Tg7svL0DYYRacrgtmCfGrWRRJ\\/80H+eY8Tl1Zn45YVxbh7TSkefK4JKQqrKprVLx3qw9rqTHzhirm4Z20pdre6Z0wWQoMzhK0NQ\\/jCFeZRU9CsV+Hahbl4\\/dgwRh\\/sEfT7Y7W7WjsuBfDMjPM5bd\\/+EFff7l7tCScVg5fm5Zmwti5PMXzAH0ni1cMDiJ+nVdAyEMbeNi9uXVEEk3YaBbR8tBelOD2KOdOoxs3L8rGjcRjd7tkjTKnwREX8YUcXBnwx3HlZGa6Zn3tWPx9Jynjy\\/W609AewtiYbd64uBT9DDoYTEsXr9QMIxgSFIUawtjYHFY4UjvGwoKnv8l8+2ZUyL8is3B9ornD6E5cq6QvBSER4SYrCYIc6Pdjb7jtv348oy3h2nxM1hRZcWZM1DYfXaKvpmoW5yLXr8PyBgbTvVDtVz+idEy48vasLOXYD7l5bihwTf1Y\\/v6fdj6fe7wIFcNeaMqytzpoxz2Z3qxdHOpUTgsuzzVhbm51i7oD0+xJr+7e2l884cWoaCqxyB5NlSgJj1qlweV0eeE7BES7JePvYILwTUqGQ4ECnH+83urFpReqs7MlCkuVz\\/0MpTk+Qthk0uGlpLt6sH0JjX5jp0ikEGXhiRzf2tLqxfnE+Pn1p6VktazIF\\/rirG+8cG0CZw4B71pTCZpgZsU\\/uiIC3jw1BKdlexXNYV5ejPC8IgScslLf0By6dUT6nzcePa376V+dl\\/rhyL7raAiOWVyjm\\/8LpjWLr8eEJizpJSsDmfX341V0LsbY2B68cmZrQhM4BP57Y1nbKP3L2d0MADARFRD\\/mX1FzFK8fcuKdE940s5roBf8dbUNh\\/HFn56m+beXY1erBgQ7fuL\\/d6U\\/iifd7sGxOFjYsK8LOFg9+817nOdxbeu0JZQq81TCEL62LoCjLNMp7sHxOJublm3Gga3RtK29UUh3v8ly6+fjxP91WV5ecEeLU368r8YSElbJMR7V04kBxeU02sq3KjujdLW60DgQn9CUf6PRhW5Mbm1bkY1vjMMKJyT8uHggKeHR7P7yRJHT8+U3eDxsdB2NJbNnXD\\/ljf3eh0XCTL0wcAa6osSH7VOtwqiBbBIAKMfS7A5hflIGvXVOGN46qIMjjb4GhVyXgdAewsNSB+68oBc+J8ISjZwzQ5E5dgzcCbD3hndQcwXOhpT+EPW3uUeIEjDSQuKzagYNdwVF3KcsU\\/khyjUkyLqGU7ieEyNNanCjt0X9ni2+dLyKWK5lGVj2PtdWOUbEXAJAUJGw97kJUmNjVR5Qpnt3fh199biEur3HglSNDU\\/QsKC6tsuIrV1dAfz5eVnqaVtP0WaAJIagrNE\\/q7zBqCL6+vhpXzM8HOYMtoz0VM3f7qgrcfEnZWT8mNUdACMGiskz8pNg+bluJAtjT6sG+jt2jQj8uNBFBxtbjw7hpWRF0p\\/UA5DkOl9dk43fbOhGMy6O2dkNBoeSdo8MV6xeW7Z32ltMWFCX3tbXM98dExbW9Ks+E+Slai3e4Ivig1TUp13Www4cdTW5sWp6PbY2uqZAmEEJRYufxiWVl0PAzKv19qiUQGo77SHjGJ5qA7jyfufYsf17NcUjPHFCC3S0e9LkjqMi1jHpOi0vtqMwx4mD36PLXgYjA728O1lFK+ckIyJzSWVHcOVw35E+uEBWiJwmASyodyDJrFawMYG+rCz2e6KRclyhTbNnfh5pCGy6vyZ7058CDgjv1h6UszxbS9\\/i00x1NXcbXqsPFlQ7FcZqQCXGGEstv++meSSnhO2XiRCnIgXZXrTcmz1NaQQwagkurHIqndAlJwvZmFxKTWNd5xHpyYdPyPJgn2WkjgYMMDjJOBQ8ymEBdQGKCjPea3IrpOSqOYHVVFgzqVHckr1hYbl5NKZ1wLZkycSIEdPcJT7ErEFW8zZJMHRaXWhVP6fo9URyYgNimM1tP\\/agutOLyWseUDFMWijSrdp9pfXEHTnow6IsqzFuCJaVWFGUoly0aCiS0HUPhZZMxnKdMnDZtpnynR1qWlDiV0lRdWGJDrl058LK+y4duV3TSr\\/FvvqcCGDXMD8RskdlDpzuC+m6\\/4me5mSbML7YrPu2kSFU97siKX7zRNuFbuymbgTfYj1Z4ApE6pW2MihBcPDcLWoW6qJIsY3ebB9Ep6L4qyhQv7HeiIMMAh1XPRiwzSGaNikYSFPva3IoBmXo1h0vm2KFUwVcG0BcQqpNaU+5EX9OUnNZRSvUPv3BiaVSiiuHudqMaF5VnKhaV84aT2NvmnrJ3u7\\/Tj5cP9eEfr6s6595nM2pSTQPCCXn0UXfaXWN6qxMFxb42D\\/yRJDJPO5TiCMGSOQ6YDRqFUAiCQDiZ29HZUw6ge9qJEyEk9okf7yhxBeKK07IkU4fybOWuM52uKNqGp64TsiBR\\/HWPE7k2c8oGnufL8R4vQGUMhSjeaXBBw3HnPKTS156hI3Wx5thh0qsnVZj+85WT+Pm7PWkm\\/xT4WORVNC4iEE3nqq0ETYNRdLkjo8QJAOZmG1CaoVGM0\\/KEE1p3VFpBKd0xkcGYUyJOm3f36B9\\/r3WVKEPR37Sg2IZMk1IIAcXhDg+84eSUvqS9HX6c+N3ByRmwhIBSikhCxrbGAPad3HMWE+nUgCeATNM\\/DCHTqMYzX1mOi6sckyoBB9vdzHycALzhBI52+bCkNGPUwVSWRYfaoiwc6R1d7UKQicoTTCzbsuWECkByWomTn1PnDoeEalkhellFKC4qs4JXiJIWJYpDHV6I8tSGPZu0HD653AGzYikVcp5TaeQ76Dl9GwUoEEhSbN4\\/MCWpNueDhicsVGIakZCAve1+fHa1DPVpQaYqnsOyciv+ukeGcFrUgCxT+ELxumRFft5Ebu2mRJyON3dn9HujRqU4AbNei7qSFP6mSBINvYEpN9EzzTp86+YFKE1Rz+ZC0+0OYWfLMNqG03zqk3TYXjHOzuXgQyCSRJbl70MHOEIwv9gCo04Nf2x0+d4+b9R0+HhTxrQTp7hAFidFKBbCybNpUJSlfDLm9ETR5bkwlQd5jigGhKYDPEemx5Rn5\\/zTjm5PDL2++ChxAoDiLCOyrVr4Y6PDehIylx1IqmsppUcnyu806bOPUsr7ouLCmCAphl1XOIzIVnA8UwBNfQH4Iwk2YiZwY8lgjIU3nERzX1BxXcmy6FHu0Ct2BYklRd4fjM2fyOE56eK0vatLPeCNVogyUcynm1eYAa1m9GmOLMs40h1AUmJTcdqKE3t1046ERNHY64WsEO9k0nKoLbAols8WJEKGA7F5t23ZMmHXMuni1N6vzQlEhQqqoLY6XsbiIj0UKqQgkqRoTKHgDAZj0nY6ONEbQCyp0HSTEMwrsEGpIAOlFGGBzts4d13RtBGnrvYe23AgblByhuu1GpRkKytxMBKF0x1io4XBmGJzt80lIBBVbnwwN88Ck1bBVU0I+r1xXV93m32irmTSxclDjRUSOMXQ9gyzBtk25YTCPp+AwaDExgqDMcW4AlG4\\/Mp16PPtWmSmahJBuHyPoJs7LcSJ0gc5n8+bHYkrV\\/8rsGqRYVQIvgTQ6YogFEuykcJgTDGheBKdHuWsjAyjFjkWZYMiHBPg8oQmLOJ2UsVpCx4igqxakJSgILUUZQ4tTHqFxpkyxcmBIAQWwcdgTDlxEWgZjCo6xY16FYoylU\\/skpKkEgi3iFI6ISFKkytOW4AhfzhHVji34QhBscMClYK\\/SaYUzmEvZMrc4QzGVEMp0DvkA1U4jlJzHEqzzSAKp1gi5dA9HLM9fujQhJzTTqo4ffkST55M5TlKJ3WEAEUOs2JxuXBCRodbYKOEwbgQ4gSK9uEYIgrpUYQAJdkmcArCRSlFIpmcs7y0ekJqXU+qOB1sFNSusGxRigcwqDmUZOgUT+piCREDIQksUIbBuBAQuEIJxBKjfb4cISjP1MKgVoonAHxR2fbB0UD6b+u6utvUvlAcSuaRTqOGzaSctuILx+ELx9kYYTAuEK6oBE9M2elrMxmgUQicBiHwh2I4dPTEhBThn1Rxys62zdXpVPmKN6inyDQp\\/\\/pAOI5YQmQjhMG4QERiIgIh5dQxq5GHSfnADjoNya2eY5+T9uLUPSTrognlrgwWnRYmjbL1544mkRCZODEYF4qkICIUVQ4nsOnUsOuVCzGGk5wqkDDkUdqpS2tx6u0fIklBWWSMBh00aoWcOkrRHaCIiazBAINxoUiIMgaDglLEADRqFQx6Ze2JCzKCwaAJg7rz3tpNngJQSkoK9JWiLBOFz2AzEmg0iuFP8PijiseYjJkBe7Ppj0QJ+n1JKJ20a9Q8rAZO8U1KkoSCTNUi5BJT2ooTBTi9Xj9fpnSUAhFCkGvkoVV0+FMEQmE2ghmMC7mAUMAfCisaCVoVQV4K6RFkqkoQzRzg\\/IuhTVqxuf5+aIcDRCfKvKLC2owGxUgBSoFgJHbqobBQAiVEADLhMYHlmicHwk2g6TQdVquZM14pKHyRqOK2jiOA3aAH+Vi56Q+RKYfmAcm9BY7htBWno5E2yR2MiYrbMwKYjAbFl5kQZbgiLG9lLHQ8h41LczDoDSsMj\\/TBrNchw\\/A3gcow8Pj0sizUlVgUg\\/iUcJhVuGN5JmJCeieBCzKHtxsDcIdnTvDwcFSGQEeLBAGBQa8FIUpZLBT+QBiYgLJOkyZO++qT1BdQ3p59\\/OZG7VllIJQgzGoagzy7Cf91+9Jpca2qjxX\\/qSrKxE\\/vWQWAQsWPz1+6oCwbv7w3K+3vMxyXcOsv9uPd4wMzZJQRBOM8BJFCr1IwLvSpD+MCgeDEjJ3JurXawiD\\/wt6EYsMyjsiwKO\\/qIIoSEgILIzibST\\/Tr3s63CvPzzwnaSIpQhQlQCFv35CiFyGlQCQSw5YJMJ0m7a1XV1VlWS3aMqVtHU8ozDqqGDkuyTIEkdVxYjAuNJIkK57WERDY9BSqFH0MkvLExAFNmjiFOY6XIFtSfa7hlLdtskwhSkycGIwLjSAKkJTmIgG0auX5S0FhN6tKvnX55TlpK0566AhPlI9rNCoeFrWKeZUYjHS2nOTU0Yb8GG7hREIQXEOx806OnTSfUzweB5C64atSE80PVTldXowkXzg\\/As8x6Z5+zCy\\/Exnj701qNTQ8j6RElZ4CtVgs5\\/37J7WpJp2mxeL8UQE\\/e7MdNoPmgoilWcvjzsuKkGvTs\\/k+I6bzzIPnuFPljiZvjk+aOKk4wvEc4abjEAlGBfx6a9sFe\\/F5Vi2um5\\/FxGnaTdhzHXsUlDk5pk6cZAoqUzrl0ZQEwDULs1Dt0J6fTH24IPzd9nNqLEGrQYMMk5qNzmmEmqO4dXEmarP5sxyvFHEReP6wC4PB6dPQIyZJk+72mDRx4glSryN0JGQgpSicxz3zHHD76nLcsbxwWq9FPMeqMkwndBoV7rmq8px+1htK4ohzNwaD3rS6JzrG34cF8dSp+uhxquI5tRiPnndVgkkUpyRHUjj7k5KEkCCmzp47T1VRcaf2xGzOMKbBgsKlaZCpmueRyjOjHmOaJgU56B0OnPdp3aQ9FRWlwWRSGiApbiGRwiRUqTho1OenmaygAWN6kZ4jVqXiwaU4NY4kqOJRPAFBQiDeP\\/U3RNPWctqyY4c3FFP3K30myhwCMR6U0lENDgjIeW1pCKGQZRmSLKet5UQAcByn2BeMMbvgOAICAi4Nt\\/EqXlmcKKXwRQkk5SK30Gu0AM4\\/AXrSxGmtYxn3tqGFBwmNWhgoCIJR5ShwtZqHTnvuzmBRInjm\\/S7UNw2lrTCtnpeFa5aW4KX9PegcjkzMXpYxLSwkeuo1EwqUOYy4+eISqFUcjJoPSwulzzjQa3nwvHJByFg8mcI4AExGPTbhE+edXTdp4hQrEKjVYpGBkNIrQjQaHym3QE7f5xLYdPScXxQF8OZRN95MV6vp1C2tXViC5w8PYGuLh83ZWcKH5W0oCDgAV1ZmYP2ykpFPSLpV4qCw6SXFNBUKIByNpdyMWs2WCbmCSROnhUYjn22LqBTDtCgQicUUBUjFEWQZuPN8rOntXqAADBoOX1xXiptX5oMwo2m2GE6gZEScCChyDBoYNBwiSRkSTa9BQECQoVeNpKko3Eg4Fk8x0QgcDiOPTWksTvn5+UmzzulWcTKSEjfKcvKEY5Dp6GIMhABWk1Gxyt7M8jUAa+cVsN3crLem0vfCMk7Nw9OR6EiHJKVqtTyRUZ7FmTZh2AFg8LzmyORtX4joDYTqORBRaQUZDElIiMrlGKwW86ywJggZebXsz+z9k77aRGC3GBXnYUIAhsNE0XJScUQMBOO7gWz\\/eS\\/gk3mDoQg3oFbxirMyGJWRVCi9SgiQZdMqtilnMBhTg5pIKLQpVw5JCgJC0aRiPTaVikckxvUAvec9gSdVnMoKM4lGrRwoGo3HISg1ziQExRYCg4odszMYFwqNWoVsi7KRkBBFhGPK3YANagKTRRskpDiW1uJUkkVDRo1ywEMgnkQwLijuwbMMWmjVKjZCGIwLJU4a9akmJKPxRmV4Y8rpZ5IoDIsxd\\/tEXMOkilN7Z6gtKUIx4CgQAzwh5Vgnm1kPY4p2xwwGY\\/Kx6QkyTMq7nmA4jlhCee5qNdpkPKSekCTBSRWn2oW1UpZZo9Q\\/BvGkCG9YOcLdotfAYWTixGBcKLKMGth0ysHQrlAMSUFhQ0QpHFYtlq2qmRCH8eSKU34gYFBJTiXfdkyg6HDFISsIl0HHo9A6uYWsGAxGKijybRoYtKNdKzKlaHclEFN0FxPY9HR4dV4iNhFXMamOnUcPlIbMho5BkNEBW5QCPUP+kWqZp6mXQcOhxGEAgW9GypNSadOxkCmFKxCbUc\\/AYdWnLNU87I9e8PeeYzPMWmkiICh1GKFVcwrGEUX3UECxEzAhgEFn6nmqKWdC0h4mVZw2bwI+9UtNj5qjSErkNG2m6HBHkZCA0wPCCSEoyskAIX2gM0ydKCh6AzKiSQqzbnw\\/c7TLh\\/\\/39BF4IjOjm2y2RYef3LkEdYUWRWH656cO4Xh\\/5IJdX3GWAb+8aymKs4yzU5wIQVFuhuJJXUyg6HDHFI0KDUdhM9CTD60FfTjdxYkQIm36+Qf1Gp4Xk5KsOm2WoteTRCSWhEGtG\\/Vw5uaZYFAThJMzzXYauaezuSt\\/JI79nQGEEjOjTXuOVUKq7uKUAif6wqh3Xjhx8sVkzOaCESY1MC9HpyhO0XgCg96oYoyTWqUS4wlaTwiZkN5uk16nobzA4rcYVIo24FAoAXc4qTB9geJME8wG5hQHAE8kqRwTNs1FOpVtyVJ6LixmgwbFGQbF1zAcEjAUUq5IYNLzwsVV9gmrNTzp4iQHw81UlpyKFkE4gUGf8gqZa1Ejz8LqaMuUotcvISnz0\\/5eOAJY9Tyqc3TQp2zfTWDTa9KyvtFsociuh8OqvKXt90bhT+Fe4IAhDY\\/2ibqOSY90XLmsMv5Oqz88EAiNMgVjSRHtA2GsqaGjnKMWow6l2RYc7gnP6oFCKeDxR0Cn8dGAQU2wqMSCdXW5WFWVhbm5ZpQ4lAe\\/w6rHw5tqsb3Zg60NgzjSFUA4KYGZU1M24jAvVwOrkVdcKJv7g4gmZcWfy7OpA3UV+RNWA2jSxWk40TloM2rbCBeuO925Lcgc6nsjinWddCqCBcUWvHCof8Y5xc92sHiD4WkZVaHmCa6oduC2i\\/Nx7cJ85Nj0Z2wWynEEl9XkYtW8HNx7RTneaxjAX\\/c68WaD66xPORnnYt0SVBZmQq1gucoyxYle\\/6nwHzLq5zKMulbv0czBaSNOl1ss3PuZyVYtTxEXTz+xA5qcXoRjSViN2lGDdFGJDcYZ6RQfP3GRoj8oKJanZn\\/CtQAAIABJREFUSGfKs\\/S474pyfHZ1GfJsurOuMsFxBLk2PT59WTnWLSjAUzu78Nh7HWgbijAFmUwrV8OhrtiuWJ43GBPR1B9W7LGn4SBnW3UnTmyauGV00jf2lZWVCZNWd9CoVSt6dLu8MQyk6NdVkWOG3aSb1YMlmZTgCcvTSpiuqM7Ez+9chH+5cR7y7brzLn\\/jsGrxT+sr8cs7F+OaOgdTkEkk26JBZa7ylnswEEePV7mpitmglg0GbcPDhEzYkfKUeB21NNasInRA6TNXMImu4ZDiz+Xb9ShzzHJxEkVEU2SApyOfWJKLH35qPm5YWnDGLdzZwHME1yzKxQ9vn4+bl+YyFZksizfblDIAtWsoAG9QORhYTeT+TLXQPKFbzKm44XWXVfkKs4xeJcdJNCGhocun2InEYlBhcaltVrtCgwkJvvj0CL68siYL\\/\\/6JaiyryJq037GoLAPf2ViL6xbkMCWZYAiAJWUZMOtGe3skmeJwVxjKB3UUxQ6j75NXVU1oGsOU1CWJHc0czNSTIzzBwtN9mhKlONgZQFyUYdD8\\/QmBiuNwcUUmHld1KubyzAYCURnhRPrL89xsA\\/55fSUuqsic9N+1qNSOr6+fi253BI39E3+aK1OgvjcCb4x+bNqe5apPKGryDNCopk9IhEENLC+3KVq8iaSIw51exeBUnhBY9epDohwdmnbidNttRLrr13vqtaqgGBWo6nS9buwLwB2IodhhGvWzC4ptyLHq0OWJz0ZtQjSWQFJIb2XW8AT3XTUH1yzMmzorrS4XD6yrwP\\/78zFEhYk9MOn1RHH\\/7w6e13dkmdT4v3sXY8XcrGkz1nJsetQWWhU\\/Gwgm0DQQUPxMr4ZYlGE4fFFBQXQir2dKxIlSqv6vF461OszqZLc3Oep39vriaBoIK4pTQaYB8\\/KMs1acfNF42ovTtfOzcedlJSm7w07KFoQAt68swY6mYWzePzDh3z8cOL95Fo1zCE0jXyEA1BSYkJ+h7G9q7Q+iz6c8Bw0alVfHywcm+nq4qRlIRCjRq+t1vErRYRaKS9h30q3odzLp1FhZ5ZiV7ZNkStEXkJCQ0vfmTVoOn7ykENkW7ZT\\/7gyTBrdfXAybPv2qpiZFCcMhYdqEp3EEWFWZCZNW2d+0v82FSFxSsjxQmm3wr105b8K72E7Zhlgbqh62GjT7eTL6dcmnbj6cGG0h8BzBykoHrDoesw4KuP1RpHME5oryDFwz\\/9xOzySZIiHKiAsSpHPMtF1bl43LKu1p91xEmUOfNzmSvT8NsBtUuKQyW9H6DcVF7D7pg6zge+M5wKrFLvmE3TnR1zRlS85ttxHpnl\\/vaWgcCIjh5Gl+J0LQ2B9BrzuC2iKbgrlpRmWuEfs7g7NMmyg8gWDaRsjzBLhqfi7slrML90gIEj5odeP9piG09AUgU4rKfAsunZeLtdUOaNXjX4hsBg2uXZCDt467kJTS6N3Rkch+Ok1iZ6tyDajONyt+1uMKobkvmGJLx4uVhRn1mzZN\\/AqqmrqXtZl\\/fPv\\/b++84+Oqzrz\\/O9P7jDQalVEd9Wa54l7B2JhigsEm4IUASTYJCyEkbMib9yUY+CTsJksCGyBAnNBCB2NwwTbgCu5FtmVLltW7NCNNr\\/fOPfuHbDZvuCPJxLZGo\\/P9fICPmDszd0753ec85znPk1y\\/q87u9dnDX3vUdTlDONTYj\\/Is09eWcBaDCnOKLTjU7BlXuTE5Aej2xm90eJJWjnmlKTGTxon6clwhPP3JGbyyuwU9Xu4ry4KgD5bPW3Dn3Fw8eG0JrOaRJXsjhGB6sQXJOgV63JH4ESdQ9HkDiFIKaZyrEwEwu8QCs14ptmrD\\/oaBmIHSZq1soDRdeZhcxODLy76sI2RVNNOsOmLWKk6K1fINRym+qLODi3798SeTSjC\\/zAKtYnydVA9HonB441eOc5JVsKWOPGOkP8zjNx+dxu821aPbw52zCAfLS1IAfT4eT29twG8+qoM7MPLYrtwUHXLMmrib8t1uAWEu\\/h+nepUEC8pSIRU5Txfio9hdZwcX41yjSaupjhhN1Zfivi7rbL9uQo7HatYclIsWYCc40DiAzgHxOK6ptiQUp+vGlThFOP7cjk88PnkpcswKGDUjd4RvONyJV3a3gKexfw9PCV7d3Yz1B9tGvJzVa2SwWZSIN9+cM8DH\\/U4rAJRk6DAlT9xv193vx7HmAdExqCBRPkVNt\\/9sds4lySF9uU0RWm7VfZGiU4j+mGZ7AIcbxTMuWJM1uLIiDePJdgpwUXiC8RkdTkBgNcihko9MOINhHpuO9cAdGt7690UEbKruQSA8MieSXEKQbVKCxJmIB4OhuE8SSAAsqkhDqkkt+vr+sw40O8S1J82k4eZVpNRdqnu7rHOdECJMqMw9mmpUnRV7yvk5YMdpOzj+6wNYKiG4qsICg3r8yJMrKMAdx6EyBu3Il1K+QBj1nc6RDhTUdrrgCgRHOMEINCpV3IWbOEMCXKH4Tq1s0siwuCINMpFduggfxY7TfQiKLk0pUnSK2gWTs04nhDgBwLcrk7vSdGRXLPfR7rpetDjEjyRMyU\\/GpBzjuBEnnz+MSCROz9WRwUDIkVorFEBUGPlEDfNRRC4gvIDEYSBcIELhCcS35TQ5x4DJeeJzqrnPjz314ks6uYQgWS\\/bvqDA0pQw4kQIiZblpuxO0ilEw02b+kLYe8Yh6m9I0SuxpCoNknESkOkNxfGygAK+QHDEGToVMin0F+CfsujV0CvkI7wVimA4HHchF5EIh0Awfk82yCUUyyamI1kkLRGlwBd1vWi1+2P0jzxQlmHYfrGKGcSFOAHA3PK8Q5km5RmxpV2QF\\/DpyV4ERcpzSCQES6oykJ2sRKJDKdDr5eI2+yMFRZcnOuLYIr1WibnlI3uwEADzytJgGmHVZ0EAet2huEtlHOF59Pvjd11uTdJgcVWGaOBlIBLFtpN9CPHivZ+RpD6zqCLj5KW8v1ERp5unJHUkaWVbFDF27b4804+6TvFDhuVZJiwoS0WiVwOmlKJzgAMvxKuZSNDaH4E3MLLYIqmEYOWMLEy1mYa9tipLjxVXZEImHdnw9IZ4NNrjb1czIkjR7hJEq1rHw+NlcWUqSjMNoq+e7nBi39l+0RJQSimB1Sj\\/\\/Aor7b+Udzgq4kQIiVZkmj5PN8hFT1e2O0P49GS36Fk7tUKK6yalQ5fgMU8UFANuX1znT293htDWP\\/Jd5KocE362rAgVmbqYD5fyDC1+fkMJpheOPPVK50AQrf3BuOxDh8sfl32oV8lw7aR0qESi8QWB4tPj3eh0xQi81MsHss3KDTk5OZe00Udthk+2pRxKM6oPir0WFSi2Hu+B3Su+Xp9fnobpBUlIZAQK9HrDcV11xeUN4uBZxwWdH7t1di7++J0puHtBHgosKhjUchhUcuSblbhjbg6euXMybp+bd0HL34MNdvS549C3QwG72494VKdZBSbMLxVPedzjDmPz8T7R3E0EFPlp+tMr5044fanvcdSOc9+9yOa66ak9W051uOcGePK1s3aHm134oq4PN8\\/I\\/dp7Uw1KLJ9ixe4zTvAJWpo1GKHocsd3SaSwQLD1ZB\\/+ZV4uDBdQAHVRRSpmFJnRZvejxz0YKZ5hlCHbooNWeWEHvP2RKLbW2BGOxqU2ocsbRTgKaOLo3LpCCiyfmiF+XAXA7tpeVLe5RN+rkUt4q1G9YVGpwXGp73NU10YLy8y7MpPUosl4vGEBG4\\/1ICjicZUQguumWDEhM3EjxjmOg38M5AP6ot6OXbX2C36fRiFFaaYBC8vNWFRhRmmW8YKFCQAO1Nux+7Q9btvH5YsgHImvHdcJWXosm5QpXm48HMWmY93wR8TDPjJMirYZBfqtl+M+R1WcllxhOZWsUWwS9YuD4LOTvahuHhB9ry1VjxumWBM2rCDC8wiE4j\\/B3oCfw3v72+ENXf4J6A9H8e7+NvR641fEA8FwXIWDSAlw47RM5FnEH+xHm\\/vx+ak+UYtdRgCrSfl5drCyJuHFqcxi8VZlGz6O5RjvdEXw8dEu8CLb6VIJwbeuyEJRqgaJiCsUhScUHQN3SvDx0S68t6\\/tsrtWPj7Ujg8Odsb10tcbjsAXR5ZTUZoWy6dmiYYP8FEBHx\\/uRE+MYwnpRkVgTlHKllWryGUZmKO+5XXPsrza0ix9vdjuDQWw8VgXGnrEc8lU5hhx45SMhKzO4vbzCETGyL2GBLywvQmHGh2X7TuPtTjxp8+b0B+IbwH3hglcgfjwi0oIsGJ6Zsw84ac73dhwrFu0aCYBRbZZvfeG+bkHLtv9jnaDzbJltGSaVG8YlBLRx0tttx8bDreLhhXIpRLcPD0bthR1womTLxRBiIuOmfs91OTCf21qQFNf4JJ\\/V1t\\/EL\\/f3HDuaEV8E4xE4QvEx7KzOE2NW6ZnQSbiRxEEio1HOtHQK95\\/RrWMzzCo356dk9I5bsQJAOZPzNiQm6I+LWY9RQVg3eEutDnEw+gnFyTjpiusIAkUlEkB9Hg5BDlhTN33+wfb8Z8f1aLFfukEqmMgiCc\\/PI0397aMiTbheB6e0OiLEwGw4oosTMgRD4Jt6vNi\\/eEOiB5IoBT5Fk396gWXz2qKG3EqmGNrzEtRbtbIiajCHG1xY\\/2hDtFIW7lUgttm56AkRgnlMSlOlKLHFYZAx9aClYJg7c4m\\/PLtEzjSdPGtmpOtTjzybg3+vLNpzLRNiCfocPGjHiVebtVh5Yxs0ah7gVJ8fLgTx9rED9yr5SSablS9s+KK7DPjTpwWEcJfNSFrXY5Z0yr2ekQgeO9AB9pjHEKcmJuMlTOyE2bnjlJgwOWN6wDMWAggeGt\\/O+5\\/rRp\\/29MC\\/0UIQApxUbyztw0PvFaNV\\/a0IDqmRJuizxkY1dNWUgKsmpmFCbnigctt9gA+ONQJXhAfjAWp2vbFkzI3EkIua4qMuDkD8sCykqMZJuW6WKEuh5rdWHeoUzQaWSYluHV2DiblGBLGcnJ5fGOmcofYImLf2QE88Nox\\/Oz1o9h1qgeBMH9B85PSQX\\/N7tO9eOj1Y7jvlaPYUdcPjLHtD0oBp2d0HzTTbCZ8e3aOaCVfgVJ8cKANh5rEc20pZQRZSep1D15TePxy33fcFPwihEQfefvk28324IqW\\/lDe19buAsV7B9px4zQr8tO+XiWiLNOAO+fm4FRHTVxGC1\\/YUoCi1zP2668PBKJ4cUcLNhztxsIyC5ZWpWJGkQVpJg30SslgECD5ysAApRS+sIBuZwCHmxzYdtKO7ad60ekKjzlR+l+7iaLLy4ETBssoXW5UUmD1nBwUpYtXVmnq8eCd\\/W3gYhwwzzKrW64oTXn7UqZGiXtxAoAJt1YeTT7eva7TGfqpmC\\/4UJMT7+5rxb8vr\\/jaU0BCCFbOysWWE33YcrJvTE\\/qMCfA7idjdkL+oxXV5Y7gzf0d+PBwJ6zJWhSkKFGUqkSKyQDduWyafn8ADpcHZ\\/vCOGsPo9vpR5A\\/X3WGjOnf3+uhCEcEqGSXX50WT0jFqpnZotHgUUHAO\\/s6cLTVK241SQGrSb3u8RWVR58YhZaLK3FaRUj0oTdOvO8NRVad7Q1m\\/ePrPCV4a18Hrp2ciSqR9bM1SY3vzMvBgYZ+OINj13yKcFG4QlEkFgRBHmjs86Oxz4dPTwOEdOPvTSdKzy9+yFfvSQQCwfC5QgeXd7qZtTLcOS8PaTHygx9vceGtvW2IlTIs26xuWTghc1SsprjyOZ3nd7dPOJiTpHxfEcP3VNPhxZtftoKLim+z3zAtCytnZGEs53vyhzh4QhEkLgQUBAId9HkM\\/oNzwX+JF1LrCUYQGIUqLKtmZuO6KZmir3G8gDe+bMXpbvFNJpUMyE5WrXt8RcnR0Wq3uBMnQkj0qqqctwtTtS1i5yEEELy1tw27a8WXblqlDHfNz0NZhn7MDmZvIIxQmAMjMXCFAVfw8j4sq7L0uHtBHjQxnvI7TvXgnX1t4o9wSlGUpm25cVrWqFlNcSlOAHDbRMXxCqt6nU4p\\/hRtGwjj1T1t8ATFn0YzilJw90IbxDNtxj++YAThSJTN6gQhEuHgD1y+Q9xKGcHdC\\/MwNT9ZXCwDHF7\\/og2dMSok61VSFKao3n5g2ehZTXErTjabLbR0SvbL+am646KnSQnB+kMdWHegVfRliYTgznm5uGFyxpgbyBRAp1+An6dsVicIHB+F77IVOqC4eZoVd86ziZaJpxR4f38bPjwc68A0Ra5Zc3DhhIK1o2k1xa04AcB3Fx6tLUnTvJGskYqaR96wgFd3t6KxVzyqNc2owvcX2ZBvVo0tcaIU3R4eUYFN6oQRp2gUvV7usmRtKEzV4p6FNiTrxJP\\/ne3x4LXdLfBHxG\\/GrJXzc8qSP\\/nxMu2oJ8mKW3EiZFX07hsq3spO0WyLdW5ud\\/0AXtnVDD7GTF5clY7vXZkP+RhKN04p4HT5x2R0OCOGOAkSdLr4Sx5Uq5ASfG+RDQsr0sSXl7yAV3Y248sG8aNFBBRWo+Lj+RONzxKS4mHiNATXFqd0VGUZX7GlaERPkgoUeHV3Cz49IZpME1IJwXcX5eOmKzLH1MJuwO0B06bEgVKg3+W75A+clTOycM+iAtFIcADYUt2NV\\/e0xDyXmJei9swtTXt79bRSRzy0W9zbFD+6cdZGq0n1t1jWT4crjLU7WtDtFC8EkWpU4UdX5aPSOjYOBnNRij5PmFlOiSROoOjyhHApSxBWZelw71U2WPTiy7nO\\/gDW7mxBl5uLYXUBFp3i1UUzp34UL+0W9+I0O4cEr5+U\\/pfCVE3M1KAbjnXj5V3NiMYodrCgPBX3LimCXhknWeaH2EQMRqLo81EAhM3qhIGg1yMgzF0adTKopLh3SSFmlaSKvs5HKdbuaMKW6q6Yn2GzaKtvmpz18qpKEjcBdmPCG\\/PwTRXVlVm6N8wxnOOcAKzd3oRtx8UbnxCC78y34Z6FtvjIXDDEqXqO4+ELRth8TjD8gSAiHHcJJjDF9xfZcOc8m1j9SwDAJ9VdWLuzGVyMcZeilfFV2YY3\\/8\\/KimPx1GZjQpwIIZGVM20v5aZo1scSl+b+EF74vAltDvFEZxqlFPdeXYhlVelxYjmJ\\/xA\\/x8MTZuKUaARCIXCXIEr8+ilW3Ht1IdQxgi2b+\\/x44fMmdDjFE95JCJBr0ay7Y57t5XhrM9lY6dyVs\\/7iarLf8lYg0j69rsefI3bNpupeVH7WiEdvqYBC5JBlcYYOP76mEE12H2q7fKP2W7hoFI29bgAyEAwe3wiHOVBQ1PUE4AqyJV2i4QwK2FHrQG5KECAEKoUcEkLOHdnhwX2D+ouVWQbcv7QI+WnilVRCXBQvfNaALSd6Yj4Mi9O0bSunZ7y2fFqmI97abEzNAkqp5Jpfb3\\/4YLP7cWcwKiqsFp0Mf\\/iXiVg9zxbjM4C\\/7GjEL94+iX7\\/6KQlkUkJspMU8HMSEAw6TDkuinN\\/wBlgR1cSkSSN\\/HwXQy6Xnpt8BBq5gPaByAUViLXo5PjP26pw1wLx5RylwKu7mvHQG8fRHxAf58lqCT+zwLxm8y8X\\/joe20syljqXECJcMyf\\/T9nJqnUS8Yy+sPt4PPdpIw41OGJ8BnDHvDz829WFUIySf5yPUjQ7wuhzB9HrDqLPHYIzwMHp55gwJbL1FOAwEBjs4z53CL3uEHrdQTQ7whckTEopwf1Li7B6bm5MP9OBs3Y8+2lDTGGSEAqbRbvuh0uKXozX9pKMtQ5+cJHNdePU7L8Wp+uaYl2zr9GJP247iz63eHiBUi7FA8uKcc8CW0IVRmAkPgTA96\\/Mw4+vKRR1XQBAtzOIZ7c14EiLK+bnlFsNLavm2F6Nx+XcmBUnAHji2xO2ZpqUT6foZIFYXfj2vk48u60B4RgVTJJ1Cvz0uhLcNM3KRjxjzHDL9Ez89NpSGDXi8UxhTsCzW8\\/inQOxi41a9LKA1Sh76ufXF38Sz79VOlY76ZnfPVlzotlpdfjCU8WC2wQKnG53I9WoxOS8JFHz16xTIN+iwdkeH1ocATbyGXHN1RVmrLm5HOUximKe96c++XEdAjFiqpRSgvJM48tP3nPVkzkmEtc+BMlY7ajl0zID91xd\\/nyBRbsz1olKh5\\/HU5vqhww+u6IwBT+\\/oRRVOUY2+hlxy9S8JPzihlJMyTfHvGbTsS78fnM9XDGzwFKUpOt23ruk5PnZOSQY779ZOpY7bNNrf+i9818f5F1Bfr7DF9GICpQvArs7iKpsI9JjpCstStchWSvH8RYnBvzMIc2IL0rTtfjVivKYWS0B4EjTAB5fV4sjLe6Y11Rl6h2Lyy1rfn5j2fax8LulY73j9q5\\/rGnrcZfEG+Dm+cKCqCXY2OeHN8RjZpEZerVc9HMqsgwwqGQ41twPd4glemPEBzazCmtuLse3Z+fGvKbFHsATH57CxuqemNek6WWhwiT5o397cP5fx8pvl4z1ziMkw\\/\\/ozQv\\/O8OofkElI7Euwtv72vDUxjq4A5EYlxDcMd+GR26qQHaSks0KxqiTk6TEL28sw21z82Je4\\/RH8PtNdXh3f0fMazRygkk5hnde+rcp74yl3y9NhE586b8fCz\\/5+K\\/rW\\/t9pT2uUAEV2aWgIDja4oJMIsHMQrNoWWYJIZiYlwS1TIIjjf3wR1jGN8boCdMjN5Xj7iFSoAQjUfxu4xk8s7UBsRKnSkAx1Za07QdXTXh4XllaGxOnUWD9a087V3\\/v39sHAuFJDl9E9ABdVACOtTihU0oxrcAs2ukSQjDJlgyNXIITrS54w2yJxxhNYRK\\/hotS\\/HHLWfzHhjMIcrEfopkm1c5b5xQ8cd\\/S3GNjrR2kidSpe9f\\/qfWOHz4o+ILcrD4vJ+ogD\\/MUJ1pdMGnkmGRLFs1SIJUQTM03w6SR43jLAPNBMS6jMCnwyE0VQwpTVAD+vL0BT350Gs5A7LE5MUvvmFOctObpOydtHottIU20zt2\\/\\/qWjU5bdEwpE+NnesCCaQNwXjuJkqxMWnRwTRYpzAoNFEibmJcOkkeFUuxvOAM9mDuOSUpSqwZqby\\/GdhbGFiVLglV2N+PWHtTETxwGA1aRylabpfvXuT+e9MlbbQ5qInbz\\/vd\\/X1XR6LAM+frovxrLMHYziVLsLZp0cE3JiCBQBJuUlI9WgQG2nF3YvS2XCuDRUZhnw6IoyrB4iLxMAvPVlCx7\\/sBYt\\/bGruWQaFZica3h64y8W\\/Paxxx4bs+ezElKcfvvb34bfeOWPh7+s6VW7g9z0SIz8qP1+Hifb3TBr5ZiQYxK9hhBgQo4J2WYN2ux+tA8E2UxiXFTml5jx6M0VWDE9a8jr3vyiGY99cBoN9thj0KiWocKqf\\/aZ+xf9JlVF\\/GO5XaSJ2uEvPPWk\\/+FfPXmwutmuCXHR6XwMn+GAn0NNu2tIgQKAEqsexWla2D0h1Pf62YxiXAQolk\\/OwKMrynBVZfqwwrTmg1qc7YstTGq5BOlG1bMP3DRzzdUFqv6x3jrSRO76T17\\/fXD1HQ8cDFEhr98XqYiVlaLfz+FkuwvJGhkqc5JimtW5Fi2qckzwh6I41eGGwBIaML4hcglw17w8\\/GpFBabEqMwLDJ4RfX13E574sA5n+2Kf\\/1RIAatJ8dKqKZZHHrquoD8R2kia6IPg0Cdrgy\\/98bf2rv5AXkd\\/IE+IcVJ7wM\\/hWPNgmEFVXpJotVRgsJrLzEIzCIATbU5EokyhGBeGSSXBT64pwi9vKkdeauyqQLxA8fKORqz54BSahvAxySXAvGLzzoevK37iJ8snNCdKO0nHw2B468WnWn\\/92BMtbQ5vXo87lEdjCJQryONY8wBUcgkm5iVBFiP4Ta+WYW6xGUkaGeo6PXAF2U4eY2QUWNT4vzeW4YFrS2DSKmJeF+YEPL+tAb9efxodQ+zKyQgwvzRl10+uL11z88ycA4nUVuMqWfUzm5sW\\/G1Pw5qjba6F0SEqoCRrZXhwWQkeXFYIrUo+hMlN8dGhDjy9pQG7zzjAyjkxYk80iivLU\\/DjpUW4fmpmTMscAHxBDr\\/fXI8\\/fHJ2yAeflFBMyTXtfHBp8RO3zc\\/dQQihidVm44zzAnWszbWQH0Kg1HIJfrykAA9eV4I0o2rIz6xuduLZbQ3425dtCLNlHuMfUMoI7pqXg\\/uWFKIyRtjKebqcIfxhcx2e3daIEE+HXMrNyE\\/auXJm\\/poHrs3flYjtJh1vA2XLG8+0Pvqrx1pcgXBelzOYF8upzQsUBxoH0O8NoyhdD4sh9mHg9CQ15pRYYFDL0NDtgTvIIsoZg+SZVfj5DaV4eHkZciy6Ia891e7G4+tq8dL2JgxxIgVyCTC32LzzJ9eWrbl7Yc6uRG076XgcMBtff6b1j7\\/9j5b2fq+1xxUqiGXsCBQ41upCm92PzCQVcocYXBqlFLOKU1CYpoHbH0GzPcCyk49jpARYVpWKR1aU4zvzbdAoh67CtutUDx5bV4v3D3aADrGgUckIJmUb1j38rYr\\/\\/NY0666EbsPxOnje+vNTrb\\/8+SP7jrT0S3iK6VzM5RhBfY8fJ9q90KlkKM80QBLDUS4hBCVWI2YVJkMhJTjT5UGAY5kNxhsWnRz3Ly3CozdXYHqheUj\\/Eh+lePPLFjz2QS121w9gqPBwrVKK3BTVS6smmR76\\/pLyU4nejuPeg7t2W6117a72Rxv7\\/P9qH6aOXZZJgfuXFuEHiwth1MiHvDbMRbH+YAde3N6EXWf6WUzUOEBCgEVlKfj+Ihtump4dszrKeVz+CP70WSOe21qPTvfQGVjT9XJkp+ief\\/yWit9dM+mFNkIeS\\/innnS8D6iPX3\\/O+\\/KLr+3r6OvVuEORSn9YiKk6nlAUX5xxwOENIz9VC4shtqNcJpWgMseE2cVmqBUSNPb44GPpVxKWLJMC9y0pwCMrKjCvLDVmDqbznGp349cf1uKZLQ1wDuOjtBrkgekFyS8+ec\\/CRxcU\\/1fveBAmZjn9HW2Uqm\\/4xZZ7PEFhTbMjkDL01RSLKyy4f0lxEN76AAAQf0lEQVQhrpuSOexAjPACtlR34eVdLdh8vJcFbiYQChnB9ZPScfeCPCytyoB8GGspKlBsONKB57Y14rPT9mGnYIFF60jSSNes+82Sv+YQMq4OdjJx+gd++NL+fzvU4v75kRZ3znDNk5eswo+uLsR3FxXArJcP+9m97hDe\\/LIVr+9pQXWbZ0jHJyPOl3AApuQZcOe8PNw6OwepBtWw77F7Ili7owEvfNaItoHwMBOToiRdc3JukfmPa38068\\/jsY3Z7BDhvtdPXLfrRPdDdd2ehcP5sxVSgltnZuPexfmYUZQyZLoLYDBws6bNhb990Yq39rWjwxli3TCmoMhJVuO2WdlYPTcXFdnGIR3ewGAOpgNn+vD85814+0AHuGEsZ6UUmJRt2HN1ufm3T6xu+oSQVePSH8BmRQzWbj41+anPWn9k90a+7xiuXBSlmJhjxA+utGH13DwYNMNbURwvYHddH978og0bjnbC7mf+qHjHopXhxmmZuH12DuaWWSCXDl8fxB3k8OaeFrzweRNOdHiH\\/w6dHOkG+Us\\/WVb2\\/D1XHq4Zr8LExGkY1h3oMP\\/p0\\/qHzvQEftg2EDQNd71OQXDrrGz866J8TBtmC\\/k8vlAU209248297dh6svtcQUTWLfFkKZnUMiybmIHbZmfjygnp0CqG30cSKMXBsw6s3dmMd\\/a1wxcZ3s9oM6tcpZn6F366fPJ\\/XV1u7B\\/vLc9mwXBDk1Lpnc\\/tv+dgk\\/Pehl7fpKHO5J0fzBOzDbh7gQ23z82DRa8Y0fe4Axw+P9GFdw90YOvJvnNnqlj3jCbJGikWV6Zh1YwsLK7KGDZ85Dx2TxhvfdmCP+9oRk2nd9h+lBKgNF1XPa3Q9PwrP5z5V0IIM6PZ6B85j607veDT6s6fnu7yLh8IDD92lDKC5VOsuGdBLq6akD6iJcB5kdpR04N1hzqx9WQP7F6OOc4v64SgSNUrsGRiBm6ZnokFZakjFqUIL2DbiR68srsFm451ITSCZBVJamm0KF2\\/7uYZuc89vLx4F+sBJk7fiM3H27Ne2NJ0\\/+ku710N9kDqsM1HKbKSFFg9Jxd3zrehNNMwoqUeAPjDPPbWO\\/DxkU5sqe5BsyMIFoFw6ZASIN+ixrWT0nH9VCtmFqVCpxxZGKBAKU53ePDa7ia88WUbulwRDLszAoqydF3\\/xCzlq7fPL33yhqnW\\/kTLKsDE6TJTU1Oj+NP+wIoDTa77TnV45gT54ceThABX5Blw2+wcrJyVC2uSesTfF+EFnG534ZPqLmw+1oVj7d5zxT5Z112ERTu0Cgkm5Rhx\\/eR0XDMpExVZxmFjlf7u2YNuZwDv7GvDm3vbcKTFPSIrV6sgKMs07LmqPHXtf9yetIGQXCfrCyZOF403vmwufXpT\\/Xd7PJHvtQ8ETSNpSrmU4KqyFKyek43rp2bDpJWP+PsEgaLbFcQXtb3YVN2L3XV2dDjDzJr6JlaSBMhOUmF+qRnXTkzH3LJ0ZJhUMc9MijHgi+DjI51468s27KhzDBsecF4MC1K0LqtJ8dLdV9rW3rOw8CzrDSZOl4QdlMpeePrLm2s63N9r7Q8t9o2wfLleSbC0KgO3zszC1ROtMKplF\\/S9gUgU9Z0ufFbTi09P9qK6zQOHj2Pn94axXlN0ckzJM+LqyjQsrkxDkdUIteLCTnC5Axw+PdGNt\\/e1Y+uJnhHtwp3v8+xk9bbpeUlrv3PfrA8XEcLSpzJxuvS88kVrwSuf1X+v1xv54Zluv0kYSbNSCpNaimWTrVg5IxNXVqSP2PH699aUK8DhVIcHe2q7seO0A9XtXjh9EWZRnfMjmXVyVGUbsKjcgvll6ajINsCokY\\/Y9\\/f3ovTZiS68s78D2072wR3kR+BXGnSw51vUXfkpqtfvWlz6l9Wzspm1xMTpMnsvKJX+v3dOrth5qveuum7fkv4AJ8MFiNTVE9KxckYmFk9Ig0mrwgXOHQgChTPAoa7Tg731fdhzxoHadg863BGEOWFc5JYiAJRyCbKMclTmJGFOcTJml6SixGpAkkZ+Qcu28z6lAV8In53swQeHuvDpiZ7BODQysn5N0Sv4cqv281lFyc\\/dMVG5tbKyklVlZeI0euyvd2Q9vaH21rN9vrtqe\\/yVAY6OeCYY1FLML7Fg+bQMLJ1oRVaS+oIn1Hmh8kei6HL4Ud3qwsEGOw42u9BkD6LfF0aER0KIFQGgkAEpOiVyLVpMtxkxqzAFE3NNyEzRQqOQQCKRfKP2a+8PYOuJXnx0uBN7zvTBGxIw0ieGRk5QYNEcqcgwvvXQt\\/Lem1aQ2cZmBhOnuOGvn7VMeXN\\/4+oWR\\/DbzfaAdfjgzf9FJaWYnJeEGyan49rJVpRlGaGQffPsNnxUgNPPoXMggJoON6pbnKhpd6HJHoDdy8Mb4iAI8S1YBIBEAuhVMlgMChSkaDAhx4SJeUmozDIgy6yFUSOD7BuI0XkifBSn2t3YXN2NDUe7cLzVjdAFhEPKCEVuirotO0n15rKptr8+fANzeDNxiuOl3kOvHp2z56z9jn4ff3uzI6ARLkCkpASwpaiwuDIN10xKx8wiCyx65Teypv5+qSJQAb5QFHZvCF0DQZzp8uJMlwtnev3o6g+iz8fBF+QQjPDgBAJKL49wEQwaJwqJAJVCAZ1ahlS9AplJKpSka1GcaUJxhgGZySqkGtTQKgcto39mEAsChd0bwr56Bz6p7sZnNX1o7Q9dkM9OAor8VE3ArJW\\/ObM45a9P3znlIIvyZuI0JtjbRtXv76y+fndd7y3dzuD1XW5Oc6FR30YVweRcE5ZUpWHxhAyUZRqhUUov2LErOkEpBaUUAY4iEAzD7uPh9ATR7gqixR5G74AHHe4wHN4ogsEQAuEIfBxFkJeA46IQqADh3FZhhI+CnhtYFBQSEMhlUlAAUiKBRDr4t0YmQKsg0CiVUKuUsBhkyDIqkG42wpaigNWkRrJBjRStHBq1Aho5gYRIcBF+LgRK4Q\\/xONXpxvaTPfj0RA+OtbrhDl9Y\\/BgBRYZJGbCaVBsXVaS+f9O8SRtn54yvnEtMnBKEd\\/e2qTccblt+vN19S78\\/urzbFVZcaEpDKaFINyoxoyAJV5anYW6ZBfnpBugUEhBycbuTAqACBQUFJwChcBQczyPM8\\/BHKHxhinCYAxeNguejoKDwRXiEBXpuZFEoiQQ6hQwEBDKpFDK5FEqFAgYVoJUTKGQyyOUyqBRSyCUAAQGRkIs+MCml8EUENPe4sbvOge01vTjQ6ESPJ3LBIRgSABlJyohFJ9s4ryRt07zSKW+tms1EiYlTAnC4zpPyxoH6m3bUOBYPhKPf6uz3Ky7EJ3V+fSaTElhNKkyzmXBluQWzSyywpeqhV8uGzc55yZayIv+DjNIoiwoU3hCH5h4f9p7pw45aOw43u9DpCoOPXviNSQmF1aQMpBlVG6+uSt2+\\/ArD+pn5EjchthAb1UycEorN9Q7DkVM9t312vPvKZntgYbc7kvpNi7XIJATpehlKMw2YXWzB7GIzSq0GpJpUUMokF2X5F+8IlCLMC+hzhVDX6cbes\\/3Ye9aBug4vur0cot8kSpVSyKUE6UZZT1GqbvesIvP6iXkp61fNzmGWEhOnxIbSZtW+9jzyt217r6jrCt3a5Qota+sPZAc4Kvum3UMIYFBKkJ2sRlWOAdPykzHJZkaBRQOzQQWVXArJJVg6Xd52GxSjQCSKAW8ITfYAqpv7cahxACfbPWgbCMIXjkKg3\\/RXUmjkhM9LUbelG1Uby7ON795+1bSjs7J3coQsYtHdTJzGFzuam1U1jXz5juNdSzsGwt9qdfgnOnycMkr\\/mW6ikBACo1oGq0mBojQdKnOSUJltRGG6HpkmJbQaJTRyAkJIXFpYXznsIxTeYBjdrjAaez040ebGiVYXmvp86HRG4A1x53bZvvlvkBLAopcFclO0NRkG5YdXVqV\\/kr60uGYV231j4sQY5MOTHdnbj\\/XMP9nqvqarP7CgyxW2+iOC9J\\/O7UQpiIRAKQWMGiUyjHJkmjUoSdOgMMOIgjQtzAYtLHopdAo51Eo5FLLBoUIIQMjFtbgoBp3VlA7+FeEpgmEe\\/giHPm8UTo8Pjb0B1He7caY3gHZHAL0eDp5ACKEoARX+eacWAYVOIRFSDYqW\\/DTNgfIMw0eLJtr2fGuqpYuNRCZOjBhsrq9X1jcIVc393lWHzgxMbOoLVHjC0YwAJ5CL1n2UnrOaKDQKKdQqBVI0BEkaJdKMcmQmKZFsNCI5SYMMPZCqlEKlkA0Kl0IGlUIGQgiUX6UaIfj\\/XOMUCEcFUEoRDvMIcTxCYR6BCAd7OIoeLzDgDGDA7UaXM4weNwdnIAyHnyIYjiAYiSJKyUWOtaLQyCUwqqRdhWna00VZxl0FZuX6pTMtTdMyMwNs5DFxYowQh6PesL1exe041lPpp9FbTnd5prr8kVlt\\/UEFJ0B2SbJl0sGQADL4LxAQyCUCVDIJZFIJ5DIppBIJZDIJ5FIJNArZV8OKgH4lJgQE\\/gj\\/VchBVKDgeAE8H0UoKoATJINXU3z130uxxUcAKKTgrUnKgFmnOFxmNRzSyWUfFE5Ir\\/HMyg4\\/RgirHc\\/EifHPaQZVvb7tuPSsVzq9url\\/eiBCl9d3unM8QT7dF6GyqDCK+\\/fx1VCQSgCdUsob1NLuzGRtbYZBtb0827CvJIkemWnT8MXFxWHWUEycGJeIA72+9K27GzI63ZFZjT3e6b3u8FRXIJLv8HKKcBQyYbyIFaWQSAgUUspb9IqIRa9oz05WHc+y6HcY1PIvJuckN7IQACZOjFHi3XdrFL40U1p9R1eJj8PC+g53Wa8nXNnl4kwhLpoc4gQZL5CEyUoglQBquYTXqaSedIPCYTHKa9JNmoNmg\\/LgVJu1aVKhtL8yLc3HRgYTJ0ZcGRJt6vfey47oCrtLjrf2pjY5wiU9zsAkCrKorsunDIYiJn+Y6NxhHoQQmUBpnA6JwXAISsEbVVIoZVGXXqP2VWTroyq5dJdJrTyYrpfUTqzI6uRrU1tWrWLb\\/kycGGOOmhqqMOcOFL3+aVeo3+vLONsrTXMFPIVKwk\\/1CpLyTjevdXv9RCGXWv0hSnghKg1Hz5UF+XuHNfDPLxVFHO5KqQCZVMprFAQRLtqRZNQiyyjz64lwOkgVR0waXUOmyd9ZkpPluHGOWSPRJTVkEsJ215g4MRKVF198UT5\\/5crSfSd82H+mkTNqtMX1XT61xayeGBKUJW3dHsE+MCDVaxVF\\/ohE5w1FEYkMHvrVq2VplAhySgn8nOxczNIgEgJo5Py5dCgk4g3wfXKpFCqFAlqVDDol7wsE+IYkk4G3WU0KtTzSMDDAH82yqL0uh+vM\\/GmFsjnlOmx\\/\\/\\/36H\\/zgBxzrKSZOjHG5DAQh\\/+COopQq29vbJT\\/bnx0B3sN9s6+ynj1DJLXNzeh2usCFfJIrptkKdBq5MQrgbLcCkcj\\/rqo0aiLJTwlTiURKA\\/6Aa8+BtkatzkAzMkwos9lQni3wf9i\\/vafcYiH3li9UpaaCI4SEh7svBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDDik\\/8BCSI+mWbtTGUAAAAASUVORK5CYII=',\r\n\r\n        constructor: function HeaderIconModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n            // enable the model for communication with the CS REST API\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n            }\r\n            this.icon = options.icon;\r\n        },\r\n\r\n        url: function () {\r\n            var nodeId = this.get('id'),\r\n                url = new Url(this.connector.connection.url).getApiBase('v2');\r\n            url = Url.combine(url, 'businessworkspaces', nodeId, 'icons');\r\n            return url;\r\n        },\r\n\r\n        parse: function (response) {\r\n            this.storeIconData(response);\r\n        },\r\n\r\n        add: function (files) {\r\n            var file = files.length ? files[0] : undefined;\r\n            if (file) {\r\n                return this.uploadFile(file, 'POST');\r\n            }\r\n        },\r\n\r\n        update: function (files) {\r\n            var file = files.length ? files[0] : undefined;\r\n            if (file) {\r\n                return this.uploadFile(file, 'POST');\r\n            }\r\n        },\r\n\r\n        remove: function () {\r\n            var self = this;\r\n            return this.destroy({\r\n                success: function (model, response, options) {\r\n                    self.storeIconData(response);\r\n                    self.trigger('icon:change');\r\n                }\r\n            });\r\n        },\r\n\r\n        uploadFile: function (file, type) {\r\n            var self = this;\r\n            // add file to form data\r\n            var data = new FormData();\r\n            data.append('file', file);\r\n            // send to server\r\n            return this.save(data, {\r\n                data: data,\r\n                type: type,\r\n                processData: false,\r\n                contentType: false,\r\n                success: function () {\r\n                    self.trigger('icon:change');\r\n                }\r\n            });\r\n        },\r\n\r\n        storeIconData: function (response) {\r\n            if (response.results && response.results.workspace_widget_icon_content) {\r\n                this.icon = {\r\n                    content: response.results.workspace_widget_icon_content,\r\n                    location: 'node'\r\n                }\r\n            } else if (response.results && response.results.workspace_type_widget_icon_content) {\r\n                this.icon = {\r\n                    content: response.results.workspace_type_widget_icon_content,\r\n                    location: 'type'\r\n                }\r\n            } else {\r\n                this.icon = {\r\n                    content: null,\r\n                    location: 'none'\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return HeaderIconModel;\r\n});\n","// The model for fetching the workspaces from the server\r\ncsui.define('conws/widgets/myworkspaces/impl/myworkspaces.model',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/url',\r\n  'csui/models/nodes',\r\n  'csui/models/browsable/browsable.mixin',\r\n  'csui/models/mixins/resource/resource.mixin',\r\n  'csui/models/mixins/expandable/expandable.mixin',\r\n  'conws/utils/workspaces/impl/workspaces.collection.mixin'\r\n], function (module, $, _, Backbone, Url,\r\n    NodeCollection, BrowsableMixin, ResourceMixin, ExpandableMixin,\r\n    WorkspacesCollectionMixin) {\r\n\r\n  var config = module.config();\r\n\r\n  var MyWorkspacesCollection = NodeCollection.extend({\r\n\r\n      constructor: function MyWorkspacesCollection(models, options) {\r\n        // Core filter values needed for rest api\r\n        this.wherePart = [\"where_workspace_type_id\"];\r\n        NodeCollection.prototype.constructor.apply(this, arguments);\r\n        options || (options = {});\r\n        this.options = options;\r\n\r\n        this.makeBrowsable(options);\r\n        this.makeResource(options);\r\n        this.makeExpandable(options);\r\n        this.makeWorkspacesCollection(options);\r\n      }\r\n  });\r\n\r\n  BrowsableMixin.mixin(MyWorkspacesCollection.prototype);\r\n  ResourceMixin.mixin(MyWorkspacesCollection.prototype);\r\n  ExpandableMixin.mixin(MyWorkspacesCollection.prototype);\r\n  WorkspacesCollectionMixin.mixin(MyWorkspacesCollection.prototype);\r\n\r\n  _.extend(MyWorkspacesCollection.prototype, {\r\n\r\n      url: function () {\r\n          // Get query from options, e.g. workspace type already passed\r\n          var queryParams = this.options.query || {};\r\n\r\n          // Paging\r\n          queryParams = this.mergeUrlPaging(config, queryParams);\r\n\r\n          // Sorting, only sorting in case expanded_view is enabled\r\n          if (queryParams.expanded_view === \"true\") {\r\n            queryParams = this.mergeUrlSorting(queryParams);\r\n          } else if (queryParams.sort) {\r\n            delete queryParams.sort;\r\n          }\r\n\r\n          // Filtering\r\n          queryParams = this.mergeUrlFiltering(queryParams);\r\n\r\n          queryParams.global_metadata = undefined;\r\n          var apiBase = new Url(this.getBaseUrl()).getApiBase('v2'),\r\n              url = Url.combine(apiBase, 'businessworkspaces');\r\n          // Add params to query\r\n          return url + '?' + this.queryParamsToString(queryParams);\r\n        }\r\n      }\r\n  );\r\n\r\n  return MyWorkspacesCollection;\r\n\r\n});\n","csui.define('conws/widgets/myworkspaces/impl/myworkspaces.model.factory',['module', 'csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'conws/widgets/myworkspaces/impl/myworkspaces.model'\r\n], function (module, _, Backbone,\r\n             CollectionFactory,\r\n             ConnectorFactory,\r\n             MyWorkspacesCollection) {\r\n\r\n    var MyWorkspacesCollectionFactory = CollectionFactory.extend({\r\n\r\n        propertyPrefix: 'myworkspaces',\r\n\r\n        constructor: function MyWorkspacesCollectionFactory(context, options) {\r\n            CollectionFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var myworkspaces = this.options.myworkspaces || {};\r\n            if (!(myworkspaces instanceof Backbone.Collection)) {\r\n                var connector = context.getObject(ConnectorFactory, options),\r\n                    config = module.config();\r\n                myworkspaces = new MyWorkspacesCollection(myworkspaces.models, _.extend({\r\n                    connector: connector\r\n                }, myworkspaces.options, config.options, {\r\n                    autoreset: true\r\n                }, options));\r\n            }\r\n\r\n            // The initialized MyWorkspacesCollection\r\n            this.property = myworkspaces;\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.ensureFetched(options);\r\n        }\r\n\r\n    });\r\n\r\n    return MyWorkspacesCollectionFactory;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/utils/utility',[\r\n    'module',\r\n    'csui/lib/jquery',\r\n    'csui/utils/contexts/page/page.context',\r\n    'csui/utils/contexts/factories/connector',\r\n    'csui/utils/authenticators/request.authenticator',\r\n    'csui/utils/url',\r\n    'csui/utils/log'\r\n], function Utility(module, $, PageContext, ConnectorFactory, RequestAuthenticator, Url, log) {\r\n\r\n    return {\r\n        v1ToV2: replaceV1ToV2,\r\n        startGlobalSpinner: startGlobalSpinner,\r\n        stopGlobalSpinner: stopGlobalSpinner,\r\n        startLocalSpinner: startLocalSpinner,\r\n        stopLocalSpinner: stopLocalSpinner,\r\n        modalOpen: modalOpen,\r\n        modalClose: modalClose,\r\n        escapeNameToCreate: escapeNameToCreate,\r\n        escapeNameToVerify: escapeNameToVerify,\r\n\r\n        ToggleStatusExpand: \"toggleIcon toggleExpand\",\r\n        ToggleStatusCollapse: \"toggleIcon toggleCollapse\",\r\n        ToggleStatusEmpty: \"toggleIcon toggleEmpty\",\r\n\r\n        writeTrace: traceOutput,\r\n        setConnector: setConnector,\r\n        getConnector: getConnector,\r\n\r\n        // Initial configuration values\r\n        pageSize: 5,\r\n        TraceEnabled: typeof(Storage) === 'undefined' ? false : localStorage.getItem('outlookTraceEnabled') ? localStorage.getItem('outlookTraceEnabled') === 'true' : false, \r\n        // SSO enabled by default\r\n        SSOEnabled: typeof(Storage) === 'undefined' ? true : localStorage.getItem('outlookAddinSSO') ? localStorage.getItem('outlookAddinSSO') === 'true' : true,\r\n        ShowSearchFormSelection: true,\r\n        DisplayedSearchForms: [],\r\n        emailSavingConfig: {\r\n            allowExpandWorkspace: true,\r\n            onlySaveToEmailFolder: false,\r\n            preConfigFolderToSave: {\r\n                enabled: false,\r\n                saveToFirstEmailFolder:  false,\r\n                saveToRootFolder: false,\r\n                specificFolderName: \"\"\r\n            }\r\n        },\r\n        setConfig: setConfig,\r\n\r\n        messageListeners: {}, //one listener per source origin\r\n        registerMessageListener: registerMessageListener,\r\n        detachMessageListener: detachMessageListener,\r\n\r\n        SSOLoginURL: '?func=outlookaddin.login',\r\n\r\n        isSafeURL: isSafeURL,\r\n        getPersistentSetting: getPersistentSetting,\r\n        setPersistentSetting: setPersistentSetting,\r\n        getCookie: getCookie,\r\n        setCookie: setCookie,\r\n\r\n        getCurrentTopDomain: getCurrentTopDomain,\r\n\r\n        getErrorMessage: getErrorMessage,\r\n\r\n        getSuggestedWkspFilters: getSuggestedWkspFilters,\r\n        getSuggestedWkspEmailSearchConfig: getSuggestedWkspEmailSearchConfig,\r\n\r\n        SuggestedWkspsView: null,\r\n\r\n        emailProperties: {\r\n            \"project\": { value: \"project\", displayName: \"Project\" },\r\n            \"from\": { value: \"from\", displayName: \"from\" },\r\n            \"to\": { value: \"to\", displayName: \"To\" }\r\n        },\r\n\r\n        disableSimpleSearch: disableSimpleSearch,\r\n        collapsibleClicked: collapsibleClicked,\r\n        SelectedWkspTypeId: -100,\r\n        WkspSearchPerformed: false,\r\n\r\n        SearchButtonHeight: 32,\r\n        SearchFormBottomPadding: 88,\r\n        TraceAreaHeight: 219,\r\n\r\n        PreSaveSection: \"standardSections\",\r\n        ScorllPositionBeforeSaving: -1,  // -1 means the scroll position not affected by saving panel\r\n\r\n        uiHide: uiHide,\r\n        uiShow: uiShow,\r\n\r\n        ConflictHighlighted: false,\r\n        SavingSubmitted: false,\r\n        EmailChangedAfterSaving: false\r\n    }\r\n\r\n    function replaceV1ToV2(url) {\r\n        return new Url(url).getApiBase('v2');\r\n    }\r\n\r\n    function startGlobalSpinner(force) {\r\n        var spinner = $('#blockingSpinner'),\r\n            top,\r\n            scrollY = window.scrollY ? window.scrollY : document.documentElement.scrollTop;\r\n\r\n        // calculate top of centered position\r\n        top = scrollY;\r\n        var marginCss = top > 0 ? \";margin-top: \" + top + \"px\" : \"\";\r\n\r\n        spinner.css(\"cssText\", \"display:inline-block !important; visibility:visible !important\" + marginCss);\r\n        $('body').css('pointer-events', 'none');\r\n\r\n        //traceOutput(\"Spinner started by: \" + arguments.callee.caller.toString());\r\n        if (!force) {\r\n            setTimeout(function() {\r\n                var connector = getConnector();\r\n                if (connector.confirmingReload) {\r\n                    stopGlobalSpinner();\r\n                }\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    function stopGlobalSpinner() {\r\n        var spinner = $('#blockingSpinner');\r\n        spinner.css(\"cssText\", \"display:none; visibility:hidden\");\r\n        $('body').css('pointer-events', '');\r\n\r\n        //traceOutput(\"Spinner stopped by:\" + arguments.callee.caller.toString());\r\n    }\r\n\r\n    function startLocalSpinner(spinnerId) {\r\n        var id = '#' + spinnerId;\r\n        var spinner = $(id);\r\n\r\n        spinner.css(\"cssText\", \"display:inline-block !important; visibility:visible !important\");\r\n    }\r\n\r\n    function stopLocalSpinner(spinnerId) {\r\n        var id = '#' + spinnerId;\r\n        var spinner = $(id);\r\n        spinner.css(\"cssText\", \"display:none; visibility:hidden\");\r\n    }\r\n\r\n    function modalOpen() {\r\n        $('body').addClass(\"binf-modal-open\");\r\n    }\r\n\r\n    function modalClose() {\r\n        $('body').removeClass(\"binf-modal-open\");\r\n    }\r\n\r\n    function setConnector(connector) {\r\n        window.contextConnector = connector;\r\n    }\r\n\r\n    function getConnector() {\r\n        if (window.contextConnector == null) {\r\n            var context = new PageContext(),\r\n                options = {\r\n                    authenticator: new RequestAuthenticator({})\r\n                };\r\n\r\n            var connector = context.getObject(ConnectorFactory, options);\r\n            window.contextConnector = connector;\r\n            return connector;\r\n        } else {\r\n            return window.contextConnector;\r\n        }\r\n    }\r\n\r\n    function escapeNameToCreate(originalString) {\r\n        var string = originalString.replace(/:/g, '_').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\r\n            .replace(/\\u2029/g, '\\\\u2029');\r\n        return string;\r\n    }\r\n\r\n    function escapeNameToVerify(originalString) {\r\n        var string = originalString.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\r\n        return string;\r\n    }\r\n\r\n    function traceOutput(message) {\r\n        var self = this;\r\n        if (!self.TraceEnabled) {\r\n            return;\r\n        }\r\n\r\n        // var traceMsgControl = $('#tracingMessage'),\r\n        //     currentTime = new Date(),\r\n        //     hour = currentTime.getHours(),\r\n        //     min = ('0' + currentTime.getMinutes()).slice(-2),\r\n        //     sec = ('0' + currentTime.getSeconds()).slice(-2),\r\n        //     milliSec = ('00' + currentTime.getMilliseconds()).slice(-3);\r\n\r\n        // var tiemStamp = hour + \":\" + min + \":\" + sec + \".\" + milliSec;\r\n\r\n        // traceMsgControl.append(tiemStamp + \": \" + message + '<br>');\r\n        log.info(message);\r\n    }\r\n\r\n    /**\r\n     * Helper function to register the message listener\r\n     */\r\n    function registerMessageListener(callback, sourceOrigin) {\r\n        var self = this;\r\n\r\n        if (typeof window.postMessage !== 'undefined') {\r\n            // bind the callback to the actual event associated with window.postMessage\r\n            if (callback && typeof sourceOrigin === 'string' && sourceOrigin) {\r\n                self.messageListeners[sourceOrigin] = callback;\r\n                var attachedCallback = function(e) {\r\n                    if (e.origin) {\r\n                        // self.writeTrace('A message received from: \"' + e.origin + '\"');\r\n                        for (var source in self.messageListeners) {\r\n                            if (self.messageListeners.hasOwnProperty(source)) {\r\n                                if (e.origin.toLowerCase() === source.toLowerCase()) {\r\n                                    self.writeTrace('Found matched source origin \"' + e.origin);\r\n                                    self.messageListeners[source](e);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                };\r\n                if (typeof window.addEventListener !== 'undefined') {\r\n                    window.addEventListener('message', attachedCallback, false);\r\n                } else {\r\n                    window.attachEvent('onmessage', attachedCallback);\r\n                }\r\n                self.writeTrace('Attached event listener for \"' + sourceOrigin + '\"');\r\n                return attachedCallback;\r\n            }\r\n        } else {\r\n            this.writeTrace('Cannot register message listener, your browser does not support window.postMessage!');\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Helper function to detach the message listener\r\n     */\r\n    function detachMessageListener(attachedCallback, sourceOrigin) {\r\n        if (typeof window.postMessage !== 'undefined') {\r\n\r\n            if (typeof sourceOrigin === 'undefined') { //remove all sources\r\n                for (var source in this.messageListeners) {\r\n                    if (this.messageListeners.hasOwnProperty(source)) {\r\n                        delete this.messageListeners[source];\r\n                        this.writeTrace('Removed event source for \"' + source + '\"');\r\n                    }\r\n                }\r\n            } else { //remove specific source\r\n                if (this.messageListeners.hasOwnProperty(sourceOrigin)) {\r\n                    delete this.messageListeners[sourceOrigin];\r\n                    this.writeTrace('Removed event source for \"' + sourceOrigin + '\"');\r\n                }\r\n            }\r\n\r\n            for (var listener in this.messageListeners) { //check if any source remains\r\n                if (this.messageListeners.hasOwnProperty(listener)) {\r\n                    return; //do not detach the event listener if any source exists.\r\n                }\r\n            }\r\n\r\n            if (typeof window.addEventListener !== 'undefined') {\r\n                window.removeEventListener('message', attachedCallback, false);\r\n            } else {\r\n                window.detachEvent('onmessage', attachedCallback);\r\n            }\r\n            this.writeTrace('Detached message event listener.');\r\n        } else {\r\n            this.writeTrace('Cannot detach message listener, your browser does not support window.postMessage!');\r\n        }\r\n    }\r\n\r\n    function getPersistentSetting(name) {\r\n        var setting;\r\n        if (window.SettingStorage) {\r\n            setting = window.SettingStorage.getItem(name);\r\n        }\r\n        if (setting) {\r\n            return setting;\r\n        } else {\r\n            return this.getCookie(name);\r\n        }\r\n    }\r\n\r\n    function setPersistentSetting(name, value, expire, domain) {\r\n        if (window.SettingStorage) {\r\n            window.SettingStorage.setItem(name, value);\r\n        } else {\r\n            //this.writeTrace('-- set ticket to cookie, with domain: ' + domain + ', and expire: ' + expire);\r\n            this.setCookie(name, value, expire, domain);\r\n        }\r\n    }\r\n\r\n    function getCookie(c_name) {\r\n        var c_value = document.cookie;\r\n        var c_start = c_value.indexOf(\" \" + c_name + \"=\");\r\n        if (c_start === -1) {\r\n            c_start = c_value.indexOf(c_name + \"=\");\r\n        }\r\n        if (c_start === -1) {\r\n            c_value = null;\r\n        } else {\r\n            c_start = c_value.indexOf(\"=\", c_start) + 1;\r\n            var c_end = c_value.indexOf(\";\", c_start);\r\n            if (c_end === -1) {\r\n                c_end = c_value.length;\r\n            }\r\n            c_value = decodeURI(c_value.substring(c_start, c_end));\r\n        }\r\n        return c_value;\r\n    }\r\n\r\n    function setCookie(c_name, value, expire, domain) {\r\n        var c_value = encodeURI(value);\r\n        if (typeof expire !== 'undefined' && expire) {\r\n            if ((new Date(expire)).toString() !== 'Invalid Date') {\r\n                c_value += \"; expires=\" + (new Date(expire)).toUTCString();\r\n            }\r\n        }\r\n        if (typeof domain === 'undefined' || !domain) {\r\n            domain = this.getCurrentTopDomain();\r\n        }\r\n        c_value += (\"; domain=.\" + domain + \";path=/\");\r\n\r\n        document.cookie = c_name + \"=\" + c_value;\r\n    }\r\n\r\n    function getCurrentTopDomain() {\r\n        var i,\r\n            h,\r\n            weird_cookie = 'weird_get_top_level_domain=cookie',\r\n            hostname = document.location.hostname.split('.');\r\n        for (i = hostname.length - 1; i >= 0; i--) {\r\n            h = hostname.slice(i).join('.');\r\n            document.cookie = weird_cookie + ';domain=.' + h + ';';\r\n            if (document.cookie.indexOf(weird_cookie) > -1) {\r\n                document.cookie = weird_cookie.split('=')[0] + '=;domain=.' + h + ';expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n                return h;\r\n            }\r\n        }\r\n    }\r\n\r\n    function isSafeURL(urlString) {\r\n        if (urlString) {\r\n            var urlStr = urlString.toLowerCase();\r\n            //var pattern = new RegExp('^(https?:\\/)?/');\r\n            if (urlStr.indexOf('javascript:') > -1\r\n                || urlStr.indexOf('<') > -1) {\r\n                this.writeTrace('URL contains unsafe string: ' + urlString);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getSuggestedWkspFilters(emailItem, config) {\r\n        var filterConfig = config.filter;\r\n\r\n        var xecmRule = window.xECMRule;\r\n        if (typeof xecmRule !== 'undefined'){\r\n            filterConfig.rules.push(xecmRule);\r\n        }\r\n\r\n        var filters = [];\r\n\r\n        if (emailItem != null && filterConfig.rules != null && filterConfig.rules.length > 0) {\r\n            for (var i = 0; i < filterConfig.rules.length; i++) {\r\n                var rule = filterConfig.rules[i],\r\n                    ruleMatch = false;\r\n\r\n                if (!rule.enabled || rule.wkspTypeId === 0) {\r\n                    continue;\r\n                }\r\n\r\n                if (rule.onlyGroup1 == null) {\r\n                    rule.onlyGroup1 = true;\r\n                }\r\n                if (rule.weight == null || rule.weight === -1) {\r\n                    rule.weight = filterConfig.weight;\r\n                }\r\n\r\n                var processingString = \"\";\r\n                switch (rule.property) {\r\n                case \"subject\":\r\n                    processingString = emailItem.subject;\r\n                    break;\r\n                case \"sender\":\r\n                case \"from\":\r\n                    processingString = emailItem.sender.displayName + \",\" + emailItem.sender.emailAddress;\r\n                    break;\r\n                case \"to\":\r\n                    processingString = emailItem.to.map(function(elem) { return elem.displayName + \",\" + elem.emailAddress }).join(\";\");\r\n                    break;\r\n                case \"cc\":\r\n                    processingString = emailItem.cc.map(function(elem) { return elem.displayName + \",\" + elem.emailAddress }).join(\";\");\r\n                    break;\r\n                case \"recipient\":\r\n                    var recipients = emailItem.to.map(function(elem) { return elem.displayName + \",\" + elem.emailAddress });\r\n                    recipients = recipients.concat(emailItem.cc.map(function(elem) { return elem.displayName + \",\" + elem.emailAddress }));\r\n                    processingString = recipients.join(\";\");\r\n                    break;\r\n                default:\r\n                }\r\n                if (rule.method === \"RegEx\") {\r\n                    try {\r\n                        var matchPatt = new RegExp(rule.match, \"i\");\r\n                        ruleMatch = matchPatt.test(processingString);\r\n                    } catch (e) {\r\n                        ruleMatch = false;\r\n                    }\r\n                } else {\r\n                    var processingStringLower = processingString.toLocaleLowerCase(),\r\n                        matchLower = rule.match.toLocaleLowerCase();\r\n                    ruleMatch = processingStringLower.indexOf(matchLower) !== -1;\r\n                }\r\n\r\n                if (ruleMatch) {\r\n                    try {\r\n                        var retrievePatt = new RegExp(rule.retrieve, \"ig\");\r\n\r\n                        var retrieves = retrievePatt.exec(processingString);\r\n                        if (rule.retrieveMethod === \"capturingGroup\"){\r\n                            if (retrieves && retrieves.length > 2){\r\n                                filters.push({ typeName: retrieves[rule.wkspTypeGroup], \r\n                                               typeId: -999, //a non existing wksp type ID\r\n                                               filterName: retrieves[rule.wkspNameGroup], \r\n                                               weight: rule.weight });\r\n                            }\r\n                        } else if (retrieves && retrieves.length > 0) {\r\n                            var term = retrieves.length > 1 ? retrieves[1] : retrieves[0];\r\n                            filters.push({ typeName: \"\", typeId: rule.wkspTypeId, filterName: term, weight: rule.weight });\r\n                        }\r\n                    } catch (e) {\r\n                        // Just in case invalid extraction term defined, even though it has been blocked by UI already.\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            suggestedWeight: filterConfig.weight,\r\n            rules: filters\r\n        };\r\n    }\r\n\r\n    function getSuggestedWkspEmailSearchConfig(emailItem, config) {\r\n        var searchTerm = [];\r\n        var searchConfig = config.search;\r\n        //sortBy: \"desc_OTObjectDate\",\r\n\r\n        if (searchConfig.weight == null) {\r\n            searchConfig.weight = 1;\r\n        }\r\n        if (emailItem != null) {\r\n            var currentUserAddress = window.currentUser,\r\n                senderAddress = emailItem.sender.emailAddress;\r\n\r\n            if (searchConfig.searchSender) {\r\n                // By default, if the current user is the same as the sender of current email, then don't issue this search\r\n                var noCurrentUserAsSender = searchConfig.noCurrentUserAsSender != null ? searchConfig.noCurrentUserAsSender : true;\r\n                if (! noCurrentUserAsSender || currentUserAddress !== senderAddress) {\r\n                    searchTerm.push({ region: \"OTEmailSenderAddress\", searchTerm: senderAddress + \",\" }); // has to add ',' to make the REST search working\r\n                }\r\n            }\r\n\r\n            if (searchConfig.searchRecipient) {\r\n                // By default, not include the current user in the recipient search term\r\n                var noCurrentUserInRecipient = searchConfig.noCurrentUserInRecipient != null ? searchConfig.noCurrentUserInRecipient : true;\r\n\r\n                // the email address for \"to\" is not properly populated\r\n                var tos = emailItem.to.map(function(elem) { return noCurrentUserInRecipient && elem.emailAddress === currentUserAddress ? \"\" : elem.emailAddress; });\r\n                var ccs = emailItem.cc.map(function(elem) { return noCurrentUserInRecipient && elem.emailAddress === currentUserAddress ? \"\" : elem.emailAddress; });\r\n\r\n                var allRecipients = tos.concat(ccs);\r\n                var recipients = allRecipients.reduce(function(a, b) {\r\n                    if (a.indexOf(b) < 0) {\r\n                        a.push(b);\r\n                    }\r\n                    return a;\r\n                }, []);\r\n                for (var i = recipients.length - 1; i >= 0; i--) {\r\n                    if (!recipients[i]) {\r\n                        recipients.splice(i, 1);\r\n                    }\r\n                }\r\n\r\n                if (recipients.length > 0) {\r\n                    var term = recipients.join(\",\") + \",\"; // has to add ',' in case of there is only one address\r\n                    searchTerm.push({ region: \"OTEmailRecipientAddress\", searchTerm: term });\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            sort: searchConfig.sort,\r\n            weight: searchConfig.weight,\r\n            searchTerm: searchTerm\r\n        };\r\n    }\r\n\r\n    function getErrorMessage(error) {\r\n        if (typeof(error) === \"string\") {\r\n            return error;\r\n        }\r\n\r\n        var errMsg = (error.responseJSON && error.responseJSON.error) ? error.responseJSON.error :\r\n            error.message ? error.message :\r\n            error.responseText ? error.responseText :\r\n            error.statusText ? error.statusText : JSON.stringify(error);\r\n        return errMsg;\r\n    }\r\n\r\n    function disableSimpleSearch() {\r\n        $('#csui-custom-search-form-submit').addClass(\"binf-disabled csui-search-form-submit-disabled\");\r\n    }\r\n\r\n    function setConfig(config, csUserLoginName) {\r\n        this.pageSize = config.pageSize;\r\n        \r\n        var loginName = csUserLoginName ? csUserLoginName.toUpperCase() : \"\";\r\n\r\n        if (!this.TraceEnabled){\r\n            this.TraceAreaHeight = 0;\r\n        }\r\n\r\n        var traceEnabled = config.trace.enabled && (config.trace.userName === \"\" || config.trace.userName.toUpperCase() === loginName);\r\n        this.TraceEnabled = traceEnabled;\r\n        if (typeof (Storage) !== 'undefined') {\r\n            localStorage.setItem('outlookTraceEnabled',traceEnabled.toString());\r\n        }\r\n\r\n        this.SSOEnabled = config.sso;\r\n        if (typeof (Storage) !== 'undefined') {\r\n            localStorage.setItem('outlookAddinSSO', config.sso.toString());\r\n        }\r\n        this.ShowSearchFormSelection = config.searchForm.enabled;\r\n        this.DisplayedSearchForms = []; // bypass the filtering here. The search forms returned from the REST API already has this logic\r\n        this.emailSavingConfig = {\r\n            allowExpandWorkspace: config.save.expand,\r\n            onlySaveToEmailFolder: config.save.emailFolderOnly,\r\n            preConfigFolderToSave: {\r\n                enabled: config.save.preConfig.enabled,\r\n                saveToFirstEmailFolder: config.save.preConfig.firstEmailFolder,\r\n                saveToRootFolder: config.save.preConfig.rootFolder,\r\n                specificFolderName: config.save.preConfig.specificName\r\n            }\r\n        };\r\n    }\r\n\r\n    function collapsibleClicked(section){\r\n        var displayArea = $(\"#\" + section + \"Section\");\r\n\r\n        if (displayArea.length === 0){\r\n            return;\r\n        }\r\n\r\n        var displayStyle = displayArea[0].style.display;\r\n        if (displayStyle === \"none\"){\r\n            displayArea.css(\"display\", \"block\");\r\n        } else{\r\n            displayArea.css(\"display\", \"none\");\r\n        }\r\n\r\n        var collapsibleIcon = $(\"#\" + section + \"ToggleIcon\");\r\n        collapsibleIcon.toggleClass(\"sectionExpended\");\r\n    }\r\n\r\n    function uiHide(uiId, uiClass){\r\n        if (uiId){\r\n            $(\"#\" + uiId).addClass(\"hiddenArea\");\r\n        }\r\n        if (uiClass){\r\n            $(\".\" + uiId).addClass(\"hiddenArea\");\r\n        }\r\n    }\r\n\r\n    function uiShow(uiId, uiClass){\r\n        if (uiId){\r\n            $(\"#\" + uiId).removeClass(\"hiddenArea\");\r\n        }\r\n        if (uiClass){\r\n            $(\".\" + uiId).removeClass(\"hiddenArea\");\r\n        }\r\n    }\r\n});\n","csui.define('conws/widgets/outlook/impl/recentwksps/impl/recentwksps.model',[\r\n    'csui/lib/backbone',\r\n    'csui/utils/url',\r\n    'conws/widgets/outlook/impl/utils/utility'\r\n], function (Backbone, Url, WkspUtil) {\r\n\r\n    var recentwkspsModel = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n            name: 'Unnamed'\r\n        },\r\n\r\n        constructor: function recentwkspsModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n\r\n                this.pageSize = options.pageSize;\r\n                this.pageNo = options.pageNo;\r\n                this.isEdit = options.isEdit;\r\n\r\n                this.nextPageUrl = \"\";\r\n            }\r\n        },\r\n\r\n        url: function () {\r\n            if (this.nextPageUrl) {\r\n                return window.ServerCgiScript + this.nextPageUrl;\r\n            } else {\r\n                // workspace type is no longer a required parameter. See CWS-1608\r\n                var typeString = ''; //'where_workspace_type_id=47&';\r\n                var pagingString = 'page=' + this.pageNo + '&limit=' + this.pageSize;\r\n                var queryString = typeString + pagingString;\r\n\r\n                return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), 'businessworkspaces?expanded_view=false&' + queryString);\r\n            }\r\n        },\r\n\r\n        parse: function (response) {\r\n            if (this.isEdit){\r\n                if (response && response.results && response.results.length > 0) {\r\n                    for (var i = response.results.length-1; i >= 0; i--) {\r\n                        response.results[i].data.properties.isEdit = true;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            return response;\r\n        }\r\n\r\n    });\r\n\r\n    return recentwkspsModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/recentwksps/impl/recentwksps.model.factory',[\r\n    'module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',\r\n    'conws/widgets/outlook/impl/recentwksps/impl/recentwksps.model',\r\n    'conws/widgets/outlook/impl/utils/utility'\r\n], function (module, _, Backbone, ModelFactory, RecentWkspsModel, WkspUtil) {\r\n\r\n  var recentwkspsModelFactory = ModelFactory.extend({\r\n\r\n    propertyPrefix: 'recentwksps',\r\n\r\n    constructor: function recentwkspsModelFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      this.property = new RecentWkspsModel(undefined, {\r\n          connector: context.connector,\r\n          pageNo: 1,\r\n          pageSize: WkspUtil.pageSize,\r\n          isEdit: (typeof context.isEdit !== 'undefined') ? context.isEdit : false\r\n      });\r\n    },\r\n\r\n    fetch: function (options) {\r\n        // Just fetch the model exposed by this factory\r\n        return this.property.fetch(options);\r\n    }\r\n\r\n  });\r\n\r\n  return recentwkspsModelFactory;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/folder/impl/folders.model',[\r\n    'csui/lib/backbone', \r\n    'csui/utils/url', \r\n\r\n    'conws/widgets/outlook/impl/utils/utility'\r\n], function (Backbone, Url, WkspUtil) {\r\n\r\n    var foldersModel = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n            name: 'Unnamed'\r\n        },\r\n\r\n        constructor: function foldersModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n            } else {\r\n                var connector = WkspUtil.getConnector();\r\n                connector.assignTo(this);\r\n            }\r\n\r\n            this.id = options.id;\r\n            this.pageSize = options.pageSize;\r\n            this.pageNo = options.pageNo;\r\n            this.nextPageUrl = \"\";\r\n            this.isEdit = options.isEdit;\r\n        },\r\n\r\n        url: function () {\r\n            if (this.nextPageUrl) {\r\n                return window.ServerCgiScript + this.nextPageUrl;\r\n            } else {\r\n                var typeString = this.isEdit? '' : 'where_type=0&where_type=751&where_type=136';\r\n                var pagingString = 'page=' + this.pageNo + '&limit=' + this.pageSize;\r\n                var queryString = typeString === '' ? pagingString : typeString + '&' + pagingString;\r\n\r\n                return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), 'nodes', this.id, 'nodes?' + queryString);\r\n            }\r\n        },\r\n\r\n        parse: function (response) {\r\n            if (this.isEdit){\r\n                if (response && response.results && response.results.length > 0) {\r\n                    for (var i = response.results.length-1; i >= 0; i--) {\r\n                        response.results[i].data.properties.isEdit = true;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            return response;\r\n        }\r\n\r\n    });\r\n\r\n    return foldersModel;\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('conws/widgets/outlook/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('conws/widgets/outlook/impl/nls/root/lang',{\r\n    config_CS_missing: \"The Content Server that this add-in connects to has not been specified properly.\",\r\n\r\n    error_create_Blob: \"Creating the Blob object for the email content failed with error: {0}\",\r\n    error_create_CORS: \"Creating CORS request failed.\",\r\n    error_CORS_NoResponse: \"CORS call does not return anything.\",\r\n    error_retrieve_config: \"Retrieving add-in configuration failed with error: {0}\",\r\n    error_retrieve_email: \"Retrieving current email failed with error: \",\r\n    error_retrieve_email_body: \"Retrieving email body failed with error: {0}\",\r\n    error_retrieve_email_content: \"Retrieving email content through Exchange Web Service failed with error: {0}\",\r\n    error_retrieve_favorite: \"Retrieving favorite business workspace failed with message: {0}\",\r\n    error_retrieve_recent: \"Retrieving recently accessed business workspace failed with message: {0}\",\r\n    error_retrieve_search: \"Searching business workspace failed with message: {0}\",\r\n    error_retrieve_searchQueries: \"Retrieving custom view search queries failed with message: {0}\",\r\n    error_retrieve_suggested: \"An error occurred when retrieving suggested business workspaces: {0}\",\r\n    error_retrieve_suggestedConfig: \"Retrieving configuration failed with message: {0}\",\r\n    error_retrieve_token: \"Retrieving accessing token for EWS failed.\",\r\n    error_save_email: \"The saving process did not complete successfully. {0}\",\r\n    error_validate_name: \"Validating the name failed with message: {0}\",\r\n\r\n    help_button_tooltip: \"Help\",\r\n\r\n    info_confirm_saving: 'The email will be saved to folder \"{0}\".',\r\n    info_retrieving: 'Retrieving...',\r\n    info_save_successful: \"The email has been saved successfully.\",\r\n\r\n    insert_action: \"Insert link\",\r\n\r\n    name_untitled: \"Untitled\",\r\n\r\n    noWksp_favorite: \"No favorite business workspace\",\r\n    noWksp_recent: \"No recently accessed business workspace\",\r\n    noWksp_search: \"No business workspace found\",\r\n    noWksp_suggested: \"No suggested business workspace\",\r\n\r\n    required_fields_title: \"Enter required fields\",\r\n    required_fields_switchLabel: \"Only required fields (*)\",\r\n\r\n    save_action_both: \"Save email and attachment(s)\",\r\n    save_action_attachment: \"Save attachment(s)\",\r\n    save_action_email: \"Save email\",\r\n    save_attachment_text: \"Save attachments separately\",\r\n    save_attachment_option: \"Save all attachments\",\r\n    save_button_back: \"Back\",\r\n    save_button_next: \"Next\",\r\n    save_button_close: \"Close\",\r\n    save_enterName: \"Enter a unique name to save this email.\",\r\n    save_email_info: 'Save email to folder \"{0}\".',\r\n    save_email_text: \"Save email and attachments as one file\",\r\n    save_email_text_noAttachment: \"Save email as one file\",\r\n    save_failed: \"{0} failed with message: {1}.\",\r\n    save_label: \"Save\",\r\n    save_metadate_form_invalid: \"Correct the values on the form then click Next to save.\",\r\n    save_nameNotUnique: \"Add this email with a unique name:\",\r\n    save_noSelection: \"You must select the email or the attachment(s) you want to save.\",\r\n    save_successful_all: \"The email and attachment(s) have been saved successfully.\",\r\n    save_successful_attachment: \"The attachment has been saved successfully.\",\r\n    save_successful_attachments: \"The attachments have been saved successfully.\",\r\n    save_successful_email: \"The email has been saved successfully.\",\r\n    save_selection_conflict: \"Conflict\",\r\n    save_selection_conflict_msg: \"File(s) with the same name already exists. Please rename the file(s) then click Next to continue.\",\r\n\r\n    search_all_wksp: \"Search all workspaces\",\r\n    search_button_tooltip: \"Search\",\r\n    search_clear_button_tooltip: \"Clear search\",\r\n    search_custom_button_label: \"Custom search\",\r\n    search_noCondition: \"Specify the search condition\",\r\n    search_result_title: \"Search results\",\r\n    search_select_form: \"Select a Search Form\",\r\n    search_select_wksp_type: \"Select a workspace type\",\r\n    search_selected_wksp_type: \"Workspace type\",\r\n    search_wksp_typeName: \"Workspace Type and Name\",\r\n    search_wkspName_placeholder: \"Search for Business Workspaces\",\r\n\r\n    sectionTitle_customSearch: \"Custom search\",\r\n    sectionTitle_favorite: \"Favorite workspaces\",\r\n    sectionTitle_recent: \"Recent workspaces\",\r\n    sectionTitle_search: \"Search workspaces\",\r\n    sectionTitle_suggested: \"Suggested workspaces\",\r\n\r\n    showMore_link: \"Show more...\",\r\n    showMore_folders: \"Show more folders\",\r\n    showMore_wksp: \"Show more workspaces\",\r\n\r\n    signIn_button_Title: \"Sign in\",\r\n    signIn_required: \"Enter the user name and password.\",\r\n    signIn_message: \"Sign in to continue to {0}\",\r\n    signIn_passkey: \"Password\",\r\n    signIn_title: \"Sign in Content Server\",\r\n    signIn_username: \"User name\",\r\n\r\n    ssoTimeout: \"Single sign-on timeout.\",\r\n\r\n    title_cancel: \"Cancel\",\r\n    title_ok: \"OK\",\r\n    title_save_email: \"Save email\",\r\n    title_save_email_to: \"Save email to \",\r\n    title_save_error: \"Error\",\r\n    title_save_rootFolder: \"workspace root folder\",\r\n    title_save_success: \"Success\",\r\n\r\n    validation_name_conflict: 'An email item \"{0}\" already exists in the folder \"{1}\".',\r\n    validation_no_subject: \"The email does not contain a subject.\",\r\n\r\n    warning_no_outlook_context: \"Cannot retrieve email information. Make sure the add-in is running within Outlook context.\",\r\n    warning_session_expired: \"Session expired\",\r\n\r\n    wksp_open_link: \"Open in browser\"\r\n});\r\n\n","\r\ncsui.define('conws/widgets/outlook/impl/wksp/impl/wksp.model',[\r\n    'csui/lib/backbone',\r\n    'csui/lib/jquery', \r\n    'csui/utils/url',\r\n    'conws/widgets/outlook/impl/utils/utility',\r\n    'i18n!conws/widgets/outlook/impl/nls/lang'\r\n], function (Backbone, $, Url, WkspUtil, lang) {\r\n\r\n    var wkspModel = Backbone.Model.extend({\r\n        defaults: {\r\n            name: 'Unnamed'\r\n        },\r\n\r\n        constructor: function wkspModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n            }\r\n            this.id = attributes.id;\r\n        },\r\n\r\n        url: function () {\r\n            return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), \"businessworkspaces\", this.id);\r\n        },\r\n\r\n        getPreConfigFolder: function() {\r\n            var self = this,\r\n                deferred = $.Deferred(),\r\n                promise = deferred.promise();\r\n            if (!WkspUtil.emailSavingConfig.preConfigFolderToSave.enabled) {\r\n                deferred.resolve({ hasPreConfigFolder: false });\r\n            } else if (WkspUtil.emailSavingConfig.preConfigFolderToSave.saveToRootFolder){\r\n                setTimeout(function () { \r\n                    deferred.resolve({ \r\n                        hasPreConfigFolder: true,\r\n                        folderId: self.id,\r\n                        folderName: lang.title_save_rootFolder\r\n                    });}, 300);\r\n            } else {\r\n                var query, specificFolderName;\r\n                if (WkspUtil.emailSavingConfig.preConfigFolderToSave.saveToFirstEmailFolder) {\r\n                    query = \"?where_type=751&sort=asc_name&limit=1\";\r\n                } else if (WkspUtil.emailSavingConfig.preConfigFolderToSave.specificFolderName) {\r\n                    specificFolderName = WkspUtil.emailSavingConfig.preConfigFolderToSave.specificFolderName;\r\n                    query = \"?where_type=0&where_type=751&where_name=\" + specificFolderName;\r\n                } \r\n\r\n                if (query) {\r\n                    var connector = WkspUtil.getConnector(),\r\n                        url = Url.combine(WkspUtil.v1ToV2(connector.connection.url), 'nodes', self.id, 'nodes', query);\r\n                    var retrievePromise = $.ajax({\r\n                        type: \"GET\",\r\n                        headers: {\r\n                            'OTCSTicket': connector.connection.session.ticket\r\n                        },\r\n                        url: url\r\n                    });\r\n                    retrievePromise.done(function(data) {\r\n                        var results = data.results,\r\n                            foundFolder = false;\r\n\r\n                        if (results.length === 0) {\r\n                            foundFolder = false;\r\n                        } else if (specificFolderName) {\r\n                            for (var i = 0; i < results.length; i++) {\r\n                                if (results[i].data.properties.name === specificFolderName) {\r\n                                    deferred.resolve({\r\n                                            hasPreConfigFolder: true,\r\n                                            folderId: results[i].data.properties.id,\r\n                                            folderName: results[i].data.properties.name\r\n                                        }\r\n                                    );\r\n                                    foundFolder = true;\r\n                                }\r\n                            }\r\n                        } else if (results.length === 1) {\r\n                            deferred.resolve({\r\n                                    hasPreConfigFolder: true,\r\n                                    folderId: results[0].data.properties.id,\r\n                                    folderName: results[0].data.properties.name\r\n                                }\r\n                            );\r\n                            foundFolder = true;\r\n                        } \r\n\r\n                        if (!foundFolder){\r\n                            deferred.resolve({ hasPreConfigFolder: false });\r\n                        }\r\n                    });\r\n                    retrievePromise.fail(function(error, errorText) {\r\n                        deferred.resolve({ hasPreConfigFolder: false });\r\n                    });\r\n                } else {\r\n                    setTimeout(function () { deferred.resolve({ hasPreConfigFolder: false });}, 300);\r\n                }\r\n            }\r\n            return promise;\r\n        }\r\n\r\n    });\r\n\r\n    return wkspModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model',[\r\n    'csui/lib/jquery',\r\n    'csui/lib/backbone',   \r\n    'csui/utils/url',\r\n    'conws/widgets/outlook/impl/wksp/impl/wksp.model',\r\n    'conws/widgets/outlook/impl/utils/utility'\r\n], function ($, Backbone, Url, WkspModel, WkspUtil) {\r\n\r\n    var favoritewkspsModel = Backbone.Model.extend({\r\n        defaults: {\r\n            name: 'favoriteWksps'\r\n        },\r\n\r\n        constructor: function favoritewkspsModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            this.options = options;\r\n            this.isEdit = (typeof options.context !== 'undefined' && typeof options.context.isEdit !== 'undefined')? \r\n                          options.context.isEdit : false;\r\n\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n            }\r\n        },\r\n\r\n        url: function () {\r\n            return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), \"members/favorites\");\r\n        },\r\n\r\n        parse: function (response) {\r\n            if (response && response.results && response.results.length > 0) {\r\n                for (var i = response.results.length-1; i >= 0; i--) {\r\n                    if (response.results[i].data.properties.type !== 848) {\r\n                        response.results.splice(i, 1);\r\n                        continue;\r\n                    }\r\n\r\n                    response.results[i].data.properties.isEdit = this.isEdit;\r\n                    response.results[i].data.properties.icon = \"impl/images/mime_workspace.svg\";\r\n                }\r\n            }\r\n            return response;\r\n        }\r\n\r\n    });\r\n\r\n    function updateIconUrl(wksp, options) {\r\n\r\n        // this is not working. revisit later. the async called are executed after return method..... \r\n\r\n        var wkspModel = new WkspModel({ id: wksp.data.properties.id }, options);\r\n\r\n        $.when(wkspModel.fetch()).then(function(data, status, jqXhr) {\r\n            wksp.data.properties.icon = data.results.data.properties.icon;\r\n        });\r\n    }\r\n\r\n    function getIcon(wksp, options) {\r\n        var deferred = $.Deferred();\r\n        var wkspModel = new WkspModel({ id: wksp.data.properties.id }, options);\r\n        wkspModel.fetch({\r\n            success: (function(result) {\r\n                var iconUrl = result.get('results').data.properties.icon;\r\n                wksp.data.properties.icon = iconUrl;\r\n            })\r\n        });\r\n        return deferred.promise();\r\n    }\r\n\r\n    return favoritewkspsModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model.factory',[\r\n    'module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',   \r\n    'conws/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model'    \r\n], function (module, _, Backbone, ModelFactory, FavoriteWkspsModel) {\r\n\r\n  var favoritewkspsModelFactory = ModelFactory.extend({\r\n\r\n    propertyPrefix: 'favoritewksps',\r\n\r\n    constructor: function favoritewkspsModelFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n     \r\n      this.property = new FavoriteWkspsModel(undefined, {\r\n          connector: context.connector,\r\n          context: context\r\n      });\r\n    },\r\n\r\n    fetch: function (options) {\r\n        options.context = this.property.options.context;\r\n        return this.property.fetch(options);\r\n    }\r\n\r\n  });\r\n\r\n  return favoritewkspsModelFactory;\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/searchwksps/impl/searchwksps.model',[\r\n    'csui/lib/backbone', \r\n    'csui/utils/url',\r\n    'conws/widgets/outlook/impl/utils/utility',\r\n    'i18n!conws/widgets/outlook/impl/nls/lang'\r\n], function (Backbone, Url, WkspUtil, lang) {\r\n\r\n    var searchwkspsModel = Backbone.Model.extend({\r\n\r\n        defaults: { name: 'Unnamed' }, \r\n\r\n        constructor: function searchwkspsModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n            }\r\n        },\r\n\r\n        url: function () {\r\n            return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), 'businessworkspacetypes');\r\n        },\r\n\r\n        parse: function (response) {\r\n            response.results.unshift({ data: { properties: { wksp_type_id: -100, wksp_type_name: lang.search_select_wksp_type} } });\r\n            return response;\r\n        }\r\n\r\n    });\r\n\r\n    return searchwkspsModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/searchwksps/impl/searchwksps.model.factory',[\r\n    'module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',   // Factory base to inherit from\r\n    'conws/widgets/outlook/impl/searchwksps/impl/searchwksps.model'     // Model to create the factory for\r\n], function (module, _, Backbone, ModelFactory, SearchWkspsModel) {\r\n\r\n  var searchwkspsModelFactory = ModelFactory.extend({\r\n\r\n    propertyPrefix: 'searchwksps',\r\n\r\n    constructor: function searchwkspsModelFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      this.property = new SearchWkspsModel(undefined, {\r\n          connector: context.connector\r\n      });\r\n    },\r\n\r\n    fetch: function (options) {\r\n        // Just fetch the model exposed y this factory\r\n        return this.property.fetch(options);\r\n    }\r\n\r\n  });\r\n\r\n  return searchwkspsModelFactory;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/searchwksps/impl/searchresult.model',[\r\n    'csui/lib/backbone',   \r\n    'csui/utils/url',      \r\n    'conws/widgets/outlook/impl/utils/utility'\r\n], function (Backbone, Url, WkspUtil) {\r\n\r\n    var searchresultModel = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n            name: 'Unnamed'\r\n        },\r\n\r\n        constructor: function searchresultModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            // Enable this model for communication with the CS REST API\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n\r\n                this.wkspName = options.wkspName;\r\n                this.wkspTypeId = options.wkspTypeId;\r\n                this.typeAhead = options.typeAhead;\r\n                this.pageSize = options.pageSize;\r\n                this.pageNo = options.pageNo;\r\n                this.isEdit = options.isEdit;\r\n\r\n                this.nextPageUrl = \"\";\r\n            }\r\n        },\r\n\r\n        url: function () {\r\n            if (this.nextPageUrl) {\r\n                return this.connector.getConnectionUrl().getCgiScript() + this.nextPageUrl;\r\n            } else {\r\n                var typeString = this.wkspTypeId && this.wkspTypeId > 0 ? 'where_workspace_type_id=' + this.wkspTypeId : '',\r\n                    nameString = \"\",\r\n                    pagingString = \"\",\r\n                    queryString = \"\",\r\n                    apiString = \"\";\r\n\r\n                if (typeString !== \"\") {\r\n                    nameString = this.wkspName ? 'where_name=contains_' + encodeURIComponent(this.wkspName) : '';\r\n                    // Combining \"sort by name\" and \"expanded_view=true\" together requires to index the workspace name column, \r\n                    // otherwise will see 404 error. \r\n                    pagingString = 'sort=asc_name&page=' + this.pageNo + '&limit=' + this.pageSize;\r\n                    queryString = typeString + '&' + (nameString ? nameString + '&' : '') + pagingString;\r\n                    apiString = 'businessworkspaces?expanded_view=true&' + queryString;\r\n                } else {\r\n                    nameString = this.wkspName ? ' and OTName:' + encodeURIComponent(this.wkspName) + '*' : '';\r\n                    pagingString = 'page=' + this.pageNo + '&limit=' + this.pageSize;\r\n                    apiString = 'search?where=OTSubType:848' + nameString + '&' + pagingString;\r\n                }\r\n\r\n                return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), apiString);\r\n            }\r\n        }, \r\n\r\n        parse: function (response) {\r\n            if (this.isEdit){\r\n                if (response && response.results && response.results.length > 0) {\r\n                    for (var i = response.results.length-1; i >= 0; i--) {\r\n                        response.results[i].data.properties.isEdit = true;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            return response;\r\n        }\r\n\r\n    });\r\n\r\n    return searchresultModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/searchwksps/impl/wksptypes.model',[\r\n    'csui/lib/backbone',\r\n    'csui/utils/url',\r\n    'conws/widgets/outlook/impl/utils/utility',\r\n    'i18n!conws/widgets/outlook/impl/nls/lang'\r\n], function (Backbone, Url, WkspUtil, lang) {\r\n\r\n    var wksptypesModel = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n            name: 'Unnamed'\r\n        },\r\n\r\n        constructor: function wksptypesModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n            }\r\n        },\r\n\r\n        url: function () {\r\n            return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), 'businessworkspacetypes');\r\n        },\r\n\r\n        parse: function (response) {\r\n            var types = [];\r\n            types.push({ value: 0, name: lang.search_all_wksp });\r\n\r\n            return types;\r\n        }\r\n\r\n    });\r\n\r\n    return wksptypesModel;\r\n\r\n});\r\n\n","csui.define('conws/models/configurationvolume/configurationvolume.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/models/mixins/fetchable/fetchable.mixin'\r\n], function (_, $, Backbone, Url, FetchableMixin) {\r\n  'use strict';\r\n\r\n  var VolumesModel = Backbone.Model.extend({\r\n\r\n    constructor: function VolumesModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      // Enable this model for communication with the CS REST API\r\n      if (options && options.connector) {\r\n        options.connector.assignTo(this);\r\n      }\r\n      this.makeFetchable(options);\r\n    },\r\n\r\n    url: function () {\r\n      var baseUrl = this.connector.getConnectionUrl().getApiBase('v2'),\r\n          getUrl  = Url.combine(baseUrl, 'configurationvolumes');\r\n      return getUrl;\r\n\r\n    },\r\n\r\n    parse: function (response) {\r\n      this.fetched = true;\r\n      return {shortcutItems: response.results};\r\n    },\r\n\r\n    isFetchable: function () {\r\n      return true;\r\n    }\r\n  });\r\n\r\n  FetchableMixin.mixin(VolumesModel.prototype);\r\n  \r\n  return VolumesModel;\r\n}); \r\n\n","csui.define('conws/models/configurationvolume/configurationvolume.factory',[\r\n  'module', 'csui/lib/jquery', 'csui/lib/backbone',\r\n  'csui/utils/contexts/factories/factory', 'csui/utils/contexts/factories/connector',\r\n  'conws/models/configurationvolume/configurationvolume.model', 'csui/utils/commands'\r\n], function (module, $, Backbone, ModelFactory, ConnectorFactory,\r\n    volumesModel, commands) {\r\n  'use strict';\r\n\r\n  var ConfigurationVolumeFactory = ModelFactory.extend({\r\n    propertyPrefix: 'configurationvolume',\r\n\r\n    constructor: function ConfigurationVolumeFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      // Obtain the server connector from the application context to share\r\n      // the server connection with the rest of the application; include\r\n      // the options, which can contain settings for dependent factories\r\n      var connector = context.getObject(ConnectorFactory, options);\r\n      this.context = context;\r\n      // Expose the model instance in the `property` key on this factory\r\n      // instance to be used by the context\r\n      this.property = new volumesModel(options, {\r\n        connector: connector\r\n      });\r\n    },\r\n\r\n    isFetchable: function () {\r\n      return this.property.isFetchable();\r\n    },\r\n\r\n    fetch: function (options) {\r\n      return this.property.ensureFetched(options);\r\n    }\r\n  });\r\n\r\n  return ConfigurationVolumeFactory;\r\n});\r\n\n","csui.define('conws/utils/toolitem.masks/conws.children.toolitems.mask',[\r\n  'conws/utils/navigate/navigate.util'\r\n],function (NavigateUtil) {\r\n\r\n  function isPerspectiveWithHeader(context) {\r\n    if (context.perspective) {\r\n      var options = context.perspective.get(\"options\");\r\n      if (options && options.header) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return function ConwsChildrenToolitemsMask (options) {\r\n    // If there is a perspective with a header and the navigation node is in or below a\r\n    // workspace, we assume, that favorite and comment icon for the workspace is shown\r\n    // in the header. When ConwsChildrenToolitemsMask is called, a nodes table is about\r\n    // to display the toolbar. To avoid duplicate icons, we disable comment and favorite\r\n    // icons there, if navigation node itself is a workspace.\r\n    if (isPerspectiveWithHeader(options.context)) {\r\n      if (NavigateUtil.checkWorkspaceHierarchy(options.node).level===0) {\r\n        return {\r\n          blacklist: ['Favorite2', 'Comment']\r\n        };\r\n      }\r\n    }\r\n  };\r\n});\n","// The model for fetching the workspace templates from the server\r\ncsui.define('conws/models/addbwsfromsidepanel/addbwsfromsidepanel.model',['csui/lib/jquery', 'csui/lib/underscore', 'csui/utils/url',\r\n  'csui/models/nodes',\r\n\r\n], function ( $, _, Url, NodeCollection) {\r\n\r\n\r\n  var AddbwsfromsidepanelCollection = NodeCollection.extend({\r\n\r\n      constructor: function AddbwsfromsidepanelCollection(options) {\r\n\r\n        options || (options = {});\r\n\r\n        NodeCollection.prototype.constructor.apply(this, arguments);\r\n\r\n        if (options && options.connector) {\r\n          options.connector.assignTo(this);\r\n        }\r\n\r\n      }\r\n  });\r\n\r\n  _.extend(AddbwsfromsidepanelCollection.prototype, {\r\n\r\n      url: function () {\r\n\r\n        var url =  this.connector.getConnectionUrl().getApiBase('v2'),\r\n            params = {\r\n                where_manual_creation: true,\r\n                where_fixed_creation_location: true,\r\n                expand_templates: true,\r\n                expand_wksp_info: true\r\n            },\r\n            resource = 'businessworkspacetypes' + '?' + $.param(_.omit(params,function (value) {\r\n                return value === null || value === undefined || value === '';\r\n            })),\r\n            getWsTypesUrl = Url.combine(url, resource);\r\n\r\n        return getWsTypesUrl;\r\n      }\r\n    }\r\n  );\r\n\r\n  return AddbwsfromsidepanelCollection;\r\n\r\n});\n","csui.define('conws/models/addbwsfromsidepanel/addbwsfromsidepanel.model.factory',[\r\n    'csui/utils/contexts/factories/factory',\r\n    'conws/models/addbwsfromsidepanel/addbwsfromsidepanel.model'\r\n], function (CollectionFactory,\r\n             AddbwsfromsidepanelCollection) {\r\n\r\n    var AddbwsfromsidepanelCollectionFactory = CollectionFactory.extend({\r\n\r\n        propertyPrefix: 'addbwsfromsiedpanel',\r\n\r\n        constructor: function AddbwsfromsidepanelCollectionFactory(options) {\r\n            CollectionFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var connector = this.options.connector || {};\r\n\r\n            this.property = new AddbwsfromsidepanelCollection({connector:connector});\r\n        }\r\n\r\n    });\r\n\r\n    return AddbwsfromsidepanelCollectionFactory;\r\n\r\n});\r\n\n","csui.define('bundles/conws-models',[\r\n  'conws/models/workspacecreateforms',\r\n  'conws/models/metadata.controller',\r\n  'conws/models/favorite.model',\r\n  'conws/perspectives/tabbed/tab.index/conws.tab.index.preferences.extension',\r\n  'conws/models/workspacecontext/impl/workspace.perspective.context.plugin',\r\n  'conws/models/workspacecontext/workspacecontext.model',\r\n  'conws/models/workspacecontext/workspacecontext.node.model',\r\n  'conws/models/workspacecontext/workspacecontext.node.factory',\r\n  'conws/models/workspacecontext/workspacecontext.factory',\r\n  'conws/utils/previewpane/impl/previewheader.model',\r\n  'conws/utils/previewpane/impl/attributes.model',\r\n  'conws/utils/previewpane/impl/role.model',\r\n  'conws/widgets/team/impl/team.model',\r\n  'conws/widgets/team/impl/team.model.factory',\r\n  'conws/widgets/team/impl/participants.columns',\r\n  'conws/widgets/team/impl/roles.columns',\r\n  'conws/widgets/team/impl/participant.model',\r\n  'conws/widgets/team/impl/participants.model',\r\n  'conws/widgets/team/impl/participants.model.factory',\r\n  'conws/widgets/team/impl/roles.model',\r\n  'conws/widgets/team/impl/roles.model.expanded',\r\n  'conws/widgets/team/impl/roles.model.factory',\r\n  'conws/widgets/team/impl/controls/filter/impl/filter.model',\r\n  'conws/models/categoryforms/categoryforms.model',\r\n  'conws/models/selectedmetadataform/selectedmetadataform.model',\r\n  'conws/models/selectedmetadataform/selectedmetadataform.factory',\r\n  'conws/utils/commands/goto.location',\r\n  'conws/utils/commands/back.to.previous.location',\r\n  'conws/utils/commands/navigate/navigable',\r\n  'conws/utils/navigate/navigate.util',\r\n  'conws/utils/workspaces/impl/workspaceutil',\r\n  'conws/utils/workspaces/workspace.model',\r\n  'conws/utils/contexts/perspective/plugins/node/impl/conws.main.node.extra.data',\r\n  'conws/widgets/relatedworkspaces/impl/relatedworkspaces.model',\r\n  'conws/widgets/relatedworkspaces/impl/relatedworkspaces.factory',\r\n  'conws/widgets/header/impl/headertoolbaritems',\r\n  'conws/widgets/header/impl/header.model',\r\n  'conws/widgets/header/impl/header.model.factory',\r\n  'conws/widgets/header/impl/header.icon.model',\r\n  'conws/widgets/myworkspaces/impl/myworkspaces.model',\r\n  'conws/widgets/myworkspaces/impl/myworkspaces.model.factory',\r\n  'conws/widgets/outlook/impl/recentwksps/impl/recentwksps.model',\r\n  'conws/widgets/outlook/impl/recentwksps/impl/recentwksps.model.factory',\r\n  'conws/widgets/outlook/impl/folder/impl/folders.model',\r\n  'conws/widgets/outlook/impl/wksp/impl/wksp.model',\r\n  'conws/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model',\r\n  'conws/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model.factory',\r\n  'conws/widgets/outlook/impl/searchwksps/impl/searchwksps.model',\r\n  'conws/widgets/outlook/impl/searchwksps/impl/searchwksps.model.factory',\r\n  'conws/widgets/outlook/impl/searchwksps/impl/searchresult.model',\r\n  'conws/widgets/outlook/impl/searchwksps/impl/wksptypes.model',\r\n  'conws/models/configurationvolume/configurationvolume.factory',\r\n  'conws/models/configurationvolume/configurationvolume.model',\r\n  'conws/utils/toolitem.masks/conws.children.toolitems.mask',\r\n  'conws/models/addbwsfromsidepanel/addbwsfromsidepanel.model',\r\n  'conws/models/addbwsfromsidepanel/addbwsfromsidepanel.model.factory'\r\n], {});\n"]}